--- Page 1 ---

 
  
  
Speaker 1
 
 Foreign number seven and today we will continue study of our server side of creation and we will continue to do our 
development. And let me show you where we finished at during our last yesterday's example. So we worked with our 
Freedom UI package. We made business process to make some calculations and we tried to. So we used a 
combination of no code items and coded stuff. So we used C code. We already compiled it successfully, we even 
started it. So today I will show you how we can debug such code. Generally you can manage processes not only 
from configuration section, you can also do the same from Application Hub or from process Library. Process Library 
at settings page is at the top position. So possibly it can tell you that it's something that Creatio thinks is really 
important.  
  
  
Speaker 1
 
 Process Library on the top position here. This is a special section also available in Studio Workplace. Process 
Library we have a lot of existing designed processes for base product and also we can create our own processes. 
Process library has some advantages in comparison with just opening diagram from configuration section. So here I 
can see in process library we can go to process properties and that's how we will enable additional features that will 
be really helpful for us to run our processes and to get additional information. So let me show you what they are. 
First of all I wanted to tell you about tracing. By default this option is off and if you enable it shows so it collects 
additional data related to process execution. And we will be able to look at this data for process steps after they are 
executed.  
  
  
Speaker 1
 
 And this tracing will help us to keep parameters values. We will be able to check how parameters are changed 
through process steps. And in general this is really helpful in case if you investigate why your process is not working 
as expected. So you'll be able to see parameter values their changes and it will explain you process behavior much 
better. Also we have some options like display in run process button list this one, this is a run process button and 
when you start it you see some message that quick process run is not configured and we will not be able to get any 
arguments if we start process from here. So that's why we usually design processes to be started from sections in 
order to get some input parameters input data. So if you want you can run process from here.  
  
  
Speaker 1
 
 Our process is active and it's also possible to deactivate it. So if you don't like some process, for example you have 
some base product functionality that you really don't like, you want to stop it, you can deactivate any process you 
have in your system. This process will not be able to start regardless of the way how you expect it to start with a 
start signal or with the Start simple event. So for manual start and so on, deactivated processes cannot work at all. 
And also you will see versions of processes can be useful in case if you develop, test and run in production of your 
processes at the same environment. For example, you have version one which is actual and your customers end 
users are working with it. Then you start to develop version two of your process.  
  
  
Speaker 1
 
 But while you are developing it will be not ready for end users and you still want to save some intermediate progress. 
Once you start to develop version two, you still keep version one as actual. Version two, for example will be under 
construction. And once you realize that version two is okay, it's ready. Then when you save a process you can make, 
you can run an action set. Here you will have an action set as actual and it means that any other process version 
could be manually set as actual version. That's how you will switch your users from working with previous versions 
to new versions. And older started processes will still keep going with previous diagram and new starter processors 
will go with a new diagram. But what I wanted to tell you about this.  
 

--- Page 2 ---

 
  
Speaker 1
 
 So managing of processes versions is good if you develop directly on production, but if you have a separate 
developer environment, if you have separate test environment and so on, it probably will additional difficulties for 
you. And that's why I prefer not to enable this versioning or processes. And each time when system asks me to save 
a new version for process, I usually reject and overwrite existing version. Because when you have many versions of 
your processes, you also will have many items in your configuration. You have more items like this for your business 
processes and eventually all the items will be expired, so they will be not necessary, but they will present in your 
package. And if you attempt to delete them manually, you will finally delete the whole process including all of its 
versions. So it's risky.  
  
  
Speaker 1
 
 You should take care and save some items as exported metadata here, then recover it. So it's something that looks 
like unnecessary difficulty. And it's better to avoid if you have a standard transition of your solution from developer to 
test and to production. So I recommend you to keep your version only one single version. It will be easier for you to 
have to control all your situations with your business processes, but it's up to you. So at least the platform offers you 
possibility to handle process versions. Okay, so what I want. Oh, sorry, this is setting which I planned to save also as 
you can see there is a red warning message that tells us about performance impact. So if we enable trace process 
will work a bit slower, but it's not so critical. Probably 5% slower. This is not a big deal.  
  
  
Speaker 1
 
 And compared to what functions and what features it shows us. So usually we sacrifice a bit of performance here 
and enable this trace in case. So it really happens. Helps in case if we need to debug our process and to see how 
each step was executed. And to see process parameter values at each step. So this is significant in important 
information, especially when you develop and debug your process. Okay, so how we start our process? We went to 
reality section. We can select some data or we can use its page. But now let's say house for rental. Calculate 
average price Calculation was successful, but we did not see anything. We only can see some history of execution. 
And now we will be able to see trace data. Trace data became available because we turned on this option.  
  
  
Speaker 1
 
 Trace data can be extremely helpful because it helps us to see our input parameter data which we had at the 
beginning of the process. Then we have parameter values of selected item. And finally, when we will move on. 
Unfortunately, not all of the items keep such trace and allow us to see it a bit later. I will show you how to see final 
trace data. You will understand how we can display it. So we can use some items later in our process. Then select 
on it and it will show us trace data with process parameters. And I want to. I wanted to show you one more 
additional feature which is important for processes. It's performance counters. Let me show you. So we can try to 
make a columns setup shrink a bit. And we can display execution time. Execution time is duration.  
  
  
Speaker 1
 
 So let's display duration in milliseconds. This works good for system actions. And milliseconds are perfect for this. 
And also we can display the same duration, but in minutes. It will be useful in case of debugging, in case of some 
user actions used and some display messages shown. So users are usually not so fast as system. So we will see 
this performance. Now you see our process element performance for last response recent start. And you see that 
reading data took 21 millisecond. Then we have some more calculations. Also it takes some time. And in general 
you see that in total, not so much. But we can also enable duration display in process log. Let me select fields to 
display and close unnecessary columns in order to display duration in milliseconds for process in general.  
   
Speaker 1

--- Page 3 ---

  
 And also we can set duration in minutes just to see some processes which were executed. Quite slow. So. So now 
you can see that we have total 130 and we have some items and you should be ready that it will never match. So 
total duration of items will not be matching the total duration of the process. Because it looks like business process 
engine has additional spending of resources for process start, maintaining it and then correct finish and such 
process elements duration is only part of overall resource spending and time spending of process engine. But 
process elements duration will show you relative speed. So it will make it clear that read realty takes longer than 
calculations in our C sharp code. And also you can see that formulas are almost lightning fast in comparison with 
any database related operations.  
  
  
Speaker 1
 
 So you can see what items are fast and what items are slow in this list. Even in case of such numbers will be not 
really representative. And our total process execution is a bit more than 130 milliseconds. So it looks like 100 
milliseconds were spent on process start and finish. But this is in general which will give you general understanding 
if the process is fast or not. For example, you see some other processes they take sometimes they take much more 
time for calculator. And we have a lot of system processes here. Everything is shown in this log. And you can try to 
improve your processes. You can try to implement some changes and then check its overall duration and the 
duration of items. Let me show you one more example. Let's go to houses for sale and run calculation. Then go to 
process logs.  
  
  
Speaker 1
 
 Now you see second execution in even though it processed more records, but it was faster because of so called 
warm up effect. First time when you start process system takes a lot of resources to deploy process engine service 
in memory to organize and allocate all necessary class instances. So prepare everything to work with processes 
next time when you start a process system uses a lot of allocated classes and a lot of allocated objects in memory. 
So it takes much less time. And obviously your next start of the same process, the same data may work much 
faster. Next consequent starts will also be quite fast. And it will be I think not longer than the first one. And you can 
see items inside, you can see that still read data is lower than calculation.  
  
  
Speaker 1
 
 And you still see that formulas are quite fast and takes almost no time. So that's how you can analyze performance 
of your processes. And you may think that it looks like everything is very good. So like 10 milliseconds, 15 
milliseconds, even overall hundreds of milliseconds is very good time. Yes, I agree for this. But in real life processes 
and real Life environments, working in high load conditions, your situation will be different. You will work with much 
more loaded entities. And currently I'm running on my single PC as a single user, so I have almost no simultaneous 
access, no any concurrent activities. And that's why my website is working fast. And in real life conditions it may be 
different. So analyzing such performance, analyzing duration of items will help you to find bottlenecks in your 
process automation.  
  
  
Speaker 1
 
 You will exactly and easily and clearly see what items take the most of system resources and you may think of how 
to improve it. Okay, so that's how you can in general check your process execution and analyze its speed. But now 
we will come back to our code. So we are interested in real debugging of this code. So we need to see how the C 
Sharp code is executed line by line and happily so we will be able to do this. And fortunately system offers us 
possibilities to do this. And first of all I need to show you that this code finally turns into automatically generated 
code that we discussed recently in our terrasoft web app. Terrasoft configuration pkg Then we go to our package 
folder and then we go to auto generated sources. Here you see automatically generated class.  
   

--- Page 4 ---

 Speaker 1
 
 It is generated by creatio and then used by compilation. So this class is saved on disk. You probably think of oh, we 
have C file. Possibly we can edit it. Unfortunately not here. And if this class is in so if you have a file in auto 
generated folder, you will not be able to modify this because each time you compile again it will be overwritten by 
creation. But you can use this file for debugging. I will show you how we can do this. For debugging we need some 
powerful tool. I will use Visual Studio, I'm using Community Edition. I will have to do some trick with administrator 
privilege. Just a second. Remember, in my administrator credentials I have to use a separate environment, separate 
Windows credentials for this. Okay, so I'm starting my Microsoft Visual Studio. Not now, sorry.  
  
  
Speaker 1
 
 Here, this is Microsoft Visual Studio. I installed it recently. It's a community edition and 2022. So this is community 
2022 version. You can install it almost for free from Microsoft website and download. So currently I use it for my 
personal developer needs and it works well. So Community Edition I only installed C Sharp Tools here, not so much. 
And it works for simple development and for debugging I have to run Microsoft Visual Studio as administrator, 
otherwise I will fail with the bargain. And debugging is important because we have code which we are not sure how 
it runs and we Want to run it line by line and check it out so to see if it works fully as expected. So I will show you the 
easiest possible way to debug our website and just please be very attentive here.  
  
  
Speaker 1
 
 After you install Microsoft Visual Studio Community Edition, you need to perform some settings into it. If you do not 
perform such settings, if you skip this step, you will not be able to debug. Your breakpoints will not work. Let me 
show you Tools options here. Visual Studio usually hangs for some time. I have to click now it works more or less. 
Okay, so let's go to Debugging General. You see it's hanging. Okay, click back and forth. Now you see it shows more 
or less correct settings and we need to go tools Options Debugging General. And then we need to find the most 
important setting here, which is called Suppress Git Optimization on module board. This setting was off by default 
and we must turn it on. Otherwise our breakpoints will not work. So this is critically important setting. Don't forget 
about this.  
  
  
Speaker 1
 
 This is important. Just my code was originally on. It's recommended to keep it on. But unfortunately Edit and 
Continue is not supported. So we can shut it off and so we can turn it off. It's not supported because compilation 
will be not done by Visual Studio. We will use libraries created by Creation and it's not good idea. Ask Visual Studio, 
try to recompile them. So Edit and Continue is not supported. Edit and Continue is a feature which helps us to 
modify code, recompile on the fly and to see how it works after recompilation. But in case of creation, compilation is 
done by Creation System, not Visual Studio. So this feature is not supported so far. Other items could be just out of 
the box. It's hard to remember all such settings. So I will show you where you can find the technical details.  
  
  
Speaker 1
 
 This is about development tools external IDE basics. Scroll down till we find Visual Studio screenshots here and 
copy links. So now you see Suppress Git Optimization module Wallet must be on the most critical setting that you 
must do if you want to debug with Visual Studio. Okay, the corresponding link is in your chat. Okay, looks like we did 
everything that we need. We have to save our changes and then we have to perform our debugging steps. File Open 
and here you will be. You will see some surprise. File Open file so it's possible and it's enough for debugging to open. 
Just file that we plan to debug. Let me show you. No solution, no project. We just go to Terrasoft configuration pkg 
Then we go to our package folder. Then we go to auto generated and find corresponding C Sharp source.  
   
Speaker 1

--- Page 5 ---

  
 Of course we will not modify it, we only open it. Visual Studio will create automatically generated solution for this. 
It's okay, we can go to its inner code and put breakpoint in order to stop execution of our code at this point, at this 
part, when we will finally run to this line. But now it's very tricky ways because as you can see, we only made it 
breakpoint. But we need to attach to our worker process. Let me show you how we can do this. Debug attach to 
process. And here it will be really important to run your Visual Studio as administrator as we did it. So we need to 
find the worker process. It's named W3WP and you can see its title and you can see username in case if you have 
many creation instances, you'll see the proper one.  
  
  
Speaker 1
 
 So this is the way how you can select the proper worker process. W3WP . This is your worker process from IIS and of 
course we have to select it. And if you don't see it, you may try to show processes from all users. Here you will see 
much more processes. W3WP . Attach mode is automatic. And then we click just attach. Okay. System tells us that 
we are probably doing something suspicious, but we will agree attach anyway. Now you see that our breakpoint is 
not fully ready. Studio says us that it will be not currently hit some problem with symbols. So how to fix this? And I 
think that the easiest possible way to get started normally is to restart our app. You already know that restarting of 
the app is possible with the help of maintenance tools made by Neo Technologies from Switzerland.  
  
  
Speaker 1
 
 So let's go to restart application button. This button appears as a result of installation of maintenance tools from 
Marketplace. Okay, we'll be restarting. Great, let's continue. It takes just 10 seconds to restart. But now you'll see 
what happens inside of Visual Studio. Visual Studio starts to show us this big red debugging line and. And also we 
will see some blinking messages. And finally our breakpoint became fully available. So this means that our restart 
made Studio able to correctly load symbol files necessary for debugging. So now we are fully ready, we can do 
debugging. And now Studio just waits for this line of code to be executed. So let's go. Let's try to. Now you see, 
restart of the app is finishing. Go to Real T section. So now our studio is attached to our process and it will stop its 
execution.  
  
  
Speaker 1
 
 If we will run corresponding business process. Okay, let's calculate average for apartments for sale. We have two 
different departments here. Calculate price and what. Let me check process log. It looks like something is going not 
as expected, but it just took a bit longer time. And yes, we got our debugging. No exceptions. Everything looks good. 
We have just breakpoint and execution stopped at the moment where we have script task in our business process. 
So you remember the process structure. Now we are somewhere here and we can run this code line by line. I 
understand that this part is probably boring for those who do not plan to do a lot of development in creatio. But this 
is something that will let you understand how your code is actually started. And this is only possible if you run your 
creation locally.  
  
  
Speaker 1
 
 Because you need access to file system, you need Visual Studio to attach to your worker process. So this type of 
debugging can only be performed in local environment conditions. Unfortunately when you work in cloud conditions, 
you will not be able to do this kind of debugging. Okay, so let's start. We can run lines one after another with the 
command F10 step over. You probably remember some debugging sessions in Google Chrome development 
console. So here we have something similar and even hotkeys are very similar. So F10 is very popular. We will use it 
and pressing F10 several times. Now you see 1, 2. We can also handle locals or watch variables. Let's try to look 
locals type. You see it was changed. Offer type was changed. Great. Filter was created and collection changed. 
Another filter, another add in. Then SQL text.  
   
Speaker 1

--- Page 6 ---

  
 Now you see SQL text changed. We can view it. Here is our actual SQL text which will be running in the database. So 
this is important possibility for you. If you make some more complicated scripts, more complex filters, maybe some 
parameters that you don't know how to work with. So this is something that will let you understand much better how 
data selection is working in creation. Currently we got this SQL script out from entity schema query instance. We 
used get select query method. Then we used get sqltext method in certification questions. One of the questions will 
ask you about entity schema query available methods. So this will be one of the answers how to get SQL text out 
from esq. The answer is get select query and then get SQL text. Okay, we can save obtained result into parameter.  
  
  
Speaker 1
 
 Then we run the most important line in this code. This is for getting collection data. You can see that we have 
collection number, collection records number two. We have two records there. So let's go to start our counters run 
cycle for our data records so we have only two apartments for sale. You see Austin and Florida apartments for sale. 
So we process such data, but we only can get their prices. Here you see price area and then we update our total 
counters, price and area and then go to the next line, another price, another area, update counters and finish the 
cycle. Finally total area, total result. Here you will see result was calculated like this. And we can save this result into 
decimal parameter and then return true. I did not tell you importance of this return true or return false.  
  
  
Speaker 1
 
 So let me spend a minute on this C Sharp script task has options to inform process engine about is it successful 
execution or not? In case if your script task finishes with return true, it means that process engine is ready to 
execute next step immediately and no errors detected. If you return false, it means you tell to the process engine 
that your execution experience serious errors. So you have to stop process execution fully and process will be 
stopped with the error state. So if you return false, it means you perform unexpected, let's say like emergency stop of 
your process. And that's how you can manage this. Also you may create one more action for this you can handle no, 
you can raise exceptions inside of your C sharp code. This will be also treated as a emergency stop.  
  
  
Speaker 1
 
 But also it will tell to the client side some exception text. And that's how you can provide some reason for stopping 
of your process. So you can throw exceptions with some error message text and user who started process step will 
see this error message. In our case everything is okay. Process executed normally. We have to continue our 
execution by pressing F5 means normal continue. In this case our process finishes its execution and now we can 
see so we have no data changes here. We can only see that calculations was done. If you go to process log the 
recent execution. You see, milliseconds have a huge value and we have more than six minutes of total execution 
time of our process. This is important for us to check how fast all execution was done.  
  
  
Speaker 1
 
 And as you can see, our read data executed more or less according to expectations. But our coded part took 
enormous time of six minutes because of our debugging session. So you can check what steps take too much and 
you can think of how to improve it. In my case, you see, debugging definitely made it longer. But it's just our, let's say 
design and development attempts in real life it will be not so slow. Okay, I think that currently you understand how it 
works. So let's try to run it once again in a bit different conditions. So let's open house for Sale as an argument, we 
will only have this ID when we start a process. This ID is transferred as argument. We will get corresponding values 
and parameters. Now we already debug only our programmed code.  
  
  
Speaker 1
 
 So you may ask about is it possible to debug no code items? Unfortunately no. And they will just execute it without 
any stops. But. But if you want to intentionally stop your process at some step in order to investigate status 
parameters, variables and so on, you can additional temporary items into your process that will display some data 

--- Page 7 ---

using any kind of show message, any kind of messaging like pre configured page or automatic auto generated page. 
So you can use it for like artificial process stop. And that's how you can get additional information about the process 
execution if you go to process log and see trace data. So in my case I plan just to run this process once again. Now I 
expect debugging debugger to be activated again. As you can see it takes significantly longer than expected time.  
  
  
Speaker 1
 
 Oh yeah, it's already finished here. So just my fault. Okay, running in, running it again now you see all the decision, all 
execution goes. We can see this SQL text conditions parameters are saved separately. Selecting data again we have 
two records but different records. Working with price and area, updating totals, another pricing area updating totals 
again and calculating final result. Then we can just press F5 for normal execution. Oh, it looks like I accidentally 
started one more time. Okay, let's run the five again. Okay, so it was just my fault. I started this process twice. Let's 
go to processor log. Now you see this was my debugging stuff. This was just maybe three or four seconds to debug 
in the next time.  
  
  
Speaker 1
 
 So you can see that all of your execution or your processes is tracked and also you can handle and check process 
parameters. Unfortunately this trace data is not shown for any item. Personally I have a question why? But possibly 
it's somehow connected with the type of executed item. And we still have good enough options to look at parameter 
data and to check it out during debugging. I mean during investigating how process executed and process was. But 
of course we cannot propose our customers to go here in order to check some result data. We need to have a fancy 
good looking way to do some kind of output. When we start a process like this, we want to provide some kind of 
good looking output for a user. And of course obviously we will do this.  
  
  
Speaker 1
 
 So now we have process which only calculates data and saves its results into page into process parameters. We can 
use some items to make a good looking display of such data and I plan to user actions for this. Meanwhile, we 
already do not need to debug. So it's better to avoid unnecessary system resources spending. As you can see, 1.3 
gigabyte of memory was allocated and for my app and visual studio can track it. So let's detach our visual Studio 
detach all. It will save a bit of our RAM for our creation. And let's check now you see that 1 gigabyte of RAM was still 
already eaten by creation process creature in general creature web worker process. Okay, so my plan is now to show 
user some output I plan to use. Oh, it looks like I lost my title here. Yes. Calculate average price.  
  
  
Speaker 1
 
 Okay. The most important is not to change the code in C sharp part. In this case, system will allow us to save our 
process without any questions and without asking to recompile only if you change code here. System will detect this 
and ask you to perform compilation again. So my plan is to use some kind of output window. I will user actions and 
the most recommended option, I think the most popular, the most let's say useful is now pre configured page item. 
Pre configured page offers you possibility of fully to show fully customized page for a user. It means you have no 
any, let's say connection with existing data as you may find in open edit page item.  
  
  
Speaker 1
 
 So open edit page can only show you pages connected with existing objects and pre configured page can show you 
any random page designed in your system. So let's use this option reconfigure a page and carefully put it on the 
diagram. Pre configured page is designed to show some pages for user according to process execution. Obviously 
this page will appear at user side. But you need to remember that in general business process is a server side 
functionality. So when we have a process, when we start it server side process engine service starts to collect 
metadata and process it step by step. It performs almost silently without showing any messages, without showing 
any UI changes. In general and only if you want to show some pages for user, we can use some special items for 
this. Pre configured page is one of such items.  

--- Page 8 ---

  
  
Speaker 1
 
 I think one of the most recommended features for this task. Pre configured page will show some page for user at 
user browser which page to open. We don't have any suitable. We have a lot of out of the box pages, but they are not 
suitable for our task. And we want to display average price decimal value. And also we want to display SQL text only 
for debugging purpose. So we can simply create new page, add the new page and then we can decide which type of 
this page is a Freedom UI or Classic ui. Of course it makes sense to work with Freedom UI right now. So let's do this 
system will open new page editor dialog. We can use different types of pages. And let's use this one tabbed page 
with area on top.  
  
  
Speaker 1
 
 Of course this is too big page for our purpose. But this is a simple example. In real life you may need a process 
which will ask user about some parameters, about some arguments. And in general business scenario it may 
happen that you will have quite a big list of some data for input. So in general you can create pages with unlimited 
complexity. As many parameters you want to input you can implement. So no limitations here. Great. And we can 
use different page parameters. They are not connected to any existing entities. So you see just set of controls. And 
in my case I need to display number. So use number control. Of course I will rename it into average price US dollars. 
The inner code will be maybe USRAVG price and format will be decimal two digits.  
  
  
Speaker 1
 
 And as this is an output value, I do not want user to modify this. So I'll make it read only. It's quite obvious. You see 
it's no code settings, so very easy to do. Next parameter that I want to use will be a text. Or maybe I can try rich text. 
But first let's try text and make it a bit multiline like this and SQL text. It's just for demo purpose and for debugging 
reasons only SQL text parameter 500 probably multi line text will be a good option here. Okay, as you can see, I don't 
even care about element code because I do not plan to modify code of the page. But physically it's possible. This will 
be a Freedom UI page where you can also make your own handlers, you can add your own buttons or other types of 
controls. So you.  
  
  
Speaker 1
 
 You see very rich possibilities to build your page. In my case, SQL text will be also read only because this is only for 
data output. So my SQL text is for data output. That's. That's it. Only two parameters here. In real life, of course you 
may use much more components and widgets and parameters. So this is just to make it simple and easy. You'll be 
able to reproduce it easily. My page will finish its work by clicking Save or close. Maybe we can hide cancel button. Is 
it possible to hide? No. Okay, we can save our page now. And also I need to check where is the page package. Let 
me check page settings. Okay, Reality, the same package as my main process is saved to the only disappointing 
Feature is a code automatically set for this page.  
  
  
Speaker 1
 
 So I will use something like average price output page and we can also use the same title just to make it good 
looking at our configuration section. So it will be named and coded properly. Save it again. So now you see our page 
is ready well named, we can save it again, saved correctly, close it and then we can use this page. As you can see it 
still shows us a bit old code, but we can probably select this one. Yes, now it's correct. So our editor remember it 
created page so it shows us its title and its code. So whatever you prefer the most. And also we can name it 
something like show results. Who will see this page? User who performs a task. It means who will see the page? 
User.  
   
Speaker 1

--- Page 9 ---

  
 There are other options like someone's manager or a role some member from a role. In my case, user is like simple 
and easy because server side will detect exact user session based on the contact value we provide here. So here we 
have to provide a contact of a user who we plan to show this page for. And current user contact is very like frequent 
typical value here. So we simply will show the page for current user. But it's possible to include several different 
persons into your business process logic. So it's possible to calculate another person or someone's manager or just 
read some specific place where you can handle another person's involved into some business activity. And you can 
provide here not only current user contact, but you can simply provide any contact of existing user that you need for 
your business logic.  
  
  
Speaker 1
 
 Okay, show page automatically means that once this item will be executed page appears immediately you can hide 
it. So do not show page automatically. In this case, this item will be still pending, so it will still wait for user to start to 
show it. And user will see this item in this notification panel in business tasks list. So user will be able to find the 
pending item. And that's how it's possible to see such item in case if we do not use show page automatically. 
Recommendations and hints were used for classic UI examples of pre configured pages. Unfortunately it's not 
supported for Freedom ui. Probably developers decided not to keep it in Freedom ui. So it's up to you. Okay, we can 
skip this part and what buttons complete the page.  
  
  
Speaker 1
 
 It's important to understand that when some page is shown for a user as a business process item, then this page 
will wait for a time user decision. So page will decide when its work is done. And in our case we can do it by buttons. 
If we do not press any button and we Just switch focus to another section and go on to work with another data. In 
this case, process will still wait for our decision and will not move on. So simply speaking, we can even stop our 
process. We can like block it at some stage without moving forward until we will specify some condition and make 
some condition in order to proceed with our process. In my case, let's make save and close buttons are enough to 
finish work with our page and move on.  
  
  
Speaker 1
 
 And such options are important to specify how we plan to continue our execution. Okay, at the end this item has 
parameters page parameters. We need to load here data from our process. We will use parameters mapping here 
and it's very easy. We will just click on this lightning button, select process parameter, select corresponding 
parameter and click select. That's how we matched process parameter with page parameter. Let me explain how it 
goes. So here somewhere we have a process parameters somewhere like a memory of business process engine and 
we use it here, here we finally transmitted such parameters to our C Sharp code. Later on we expected to get such 
data back to process parameters and then such process parameters are held at process level. We can move our 
parameters back to. Sorry, we can move our parameters back to page.  
  
  
Speaker 1
 
 So this is important for you to understand that data will go from process parameters to our page parameters. Now 
we set SQL text parameter and then average price for the page. We'll take its value from corresponding average price 
of a process. So in process parameters we have this select and this is called parameters mapping. And when this 
process item start, according to this mapping, SQL text will load data from SQL text parameter and average price 
USD will load data from corresponding average price process parameter. No need to run items next items in the 
background. No need to create a technical additional record in activities section for this. So we will not use this. We 
just set parameters and save. Each time we save, our process diagram saved in our package will be changed.  
  
  
Speaker 1
 
 So if you do not save, your progress is only in your browser and will not work until you save it. So it's obvious I think. 

--- Page 10 ---

Okay, so now we made this item to display some results. If you work in classic UI usually so it's mandatory to reload 
the page in Freedom UI sometimes it's not mandatory, but I just want to make sure that everything works well. That's 
why I just reload the page for sure. Okay, let's open some house in Seattle and start our calculation. Now you see 
that our calculation was quick. We got average price calculated. We also have debugging SQL text just for developer 
need for debugging purpose. And our process seems to stop here. But if you go to so let's imagine you went to 
another section.  
  
  
Speaker 1
 
 So you didn't finish this page, you went to another section, you started to work with different data. You almost forgot 
about your process. But if you go here into notification panel and find business process tasks list here you will see 
pending items. You will see items that are waiting for your response and they will be hanging here until you finally 
finish them. So that's how system reminds you about items that current users should do. And this list will include all 
pending items from all different processes started from our started for our user. So show results. We click here, we 
see again this page. We remember save or close button will finish work of this page. Okay, click save and process 
finishes. We can go to process log to see its execution.  
  
  
Speaker 1
 
 It took 1.4 minutes and now you see that most of the time system spent on showing page and waiting for user 
response. Such analyzing of duration may help you to understand how actually your process is used. Where there 
are some tricky steps which make users to work longer to spend more time. So it will be helpful for you to 
understand your business and your level of automation and you will finally see what can be improved here. So this 
showing page also as you can see it enables trace data. For this step. If we enable show trace data you will see final 
values of our process parameters. This is our input value.  
  
  
Speaker 1
 
 Here we have calculated offer type and so we have type and offer type input data is here and as a result we have 
average price and we have SQL text for debugging purpose. In case if you have any questions feel free to ask 
because we almost finished this step and now you see we made a process which is able to show us some data and 
also I need to explain you some side effects and the side questions. So for example user started our process but 
then okay, process can be quite long and the user had previous steps there. So it may happen that user just did not 
see this page. Something happens like something is broken and user was too quick to switch to other parts. User 
thought that something was hanging, then switched to another section and so on.  
  
  
Speaker 1
 
 User can easily go back to the process by looking at notification panel business process tasks show corresponding 
page, save it and that's how the page will be fixed. I mean the process will be correctly finished. And you see now 
user has no items to execute. It's possible to include many different users into one business process. And also you 
need to understand that process is still executed at server side. So when we have some page Displayed for client 
user. This is a mechanism which sends special messages from server side to the client side. I think it was done with 
the help of websocket. Then client side page listens to such websocket and if it gets it then it shows you the page 
and also displays business process tasks data here.  
  
  
Speaker 1
 
 So user can look at any time even if user accidentally closed the page at all. User can go anytime here and see what 
processes are waiting for the feedback. So this is quite efficient way of making your process interactive, making your 
process able to input some complex data to display some intermediate or finishing results of calculation. And all of 
this is possible thanks to user actions. We only used pre configured page. We have a lot of other options here like 
dialogues, open any page of existing section. Auto generated page is a very old item, probably 10 years old item and 
it is designed to just display different columns, different fields in one column and it also can be used for input and 

--- Page 11 ---

output.  
  
  
Speaker 1
 
 We have send email item which will show you some email text before sending it and approval tool which can be 
helpful in case if you need to automate some kind of approval logic. When one user creates something and needs 
confirmation from another user or even set of users that everything is okay. And usually it's used for something 
which makes commercial importance like contracts, invoices or some other types of documents where some other 
people must confirm that everything is okay in some documents or data. So approval is a base product mechanism 
which helps to organize such kind of confirmation by different people and make it well automated inside of creation. 
If you want to know more about different process items, I recommend you to attend our customization course. 
There are more examples there and they are fully no code.  
  
  
Speaker 1
 
 But our sessions are intended for developers. That's why we focus on coding. That's why we see how we can get 
parameter values, how we can save them and how finally we can merge this coded development approach with no 
code stuff which can be designed with no programming. In case if you have any questions feel free to ask. This 
example is over and probably it's time for us to have a 10 minutes break. So if you have any questions feel free or 
type your question during the break. So next topic for our session will be about processing events. So processing 
object events and I need to explain why you need to know about it. So this is a server side functionality and its 
possibility to handle some operations and possibility to react for system at some changes that we perform in our 
data.  
  
  
Speaker 1
 
 Let me show you three ways to handle object events. But before it makes sense to download everything to file 
system to commit it to version control. Because it's our next step that we successfully did. We will save everything 
on disk in case if you have any questions, feel free to ask. So we save all of the changes we recently did at file 
system. You see, it takes a bit time, more than expected. Okay, we have real changes. We have migration settings. 
Okay, now we can commit our changes to version control. You see, I have two big topics here. Okay, we can commit. 
Great. Sync, pull and push. Yes. Okay, so now we finished finalized our steps that we did in previous example. And I 
plan to show you and explain what is event handling and how we can handle it.  
  
  
Speaker 1
 
 We have three different ways to handle events at creation objects. Let me show you free handle handling object 
events. First one is very easy. This is no code solution. And using business process start signals, I will quickly made 
an example. I will make an example for you. You'll understand how it works to be very easy and very quick. But it has 
also disadvantages. It has only three supported events and relatively low speed. But it's really fast to develop. So I 
will show it for you. And let me show you this easy way of handling data changes. So let me explain some business 
sense. Let's imagine we create new realty. Like we press new, we fill in some data. Okay, so this is an apartment for 
sale sound test comment. So let's imagine when we save data. So physically we do insert into new realty.  
  
  
Speaker 1
 
 So we insert a new reality record into our data model. And if we do the such insert, we want to create several realty 
visits automatically. Let's imagine we want to do this task. So once insert happens, we want system to automatically 
create some visits for us. This is possible to do and even with the easiest way of doing this, with the help of start 
signal, we can do this easily and make it using business process. Let me show you. Let's go to process library. And 
you should be very careful when you create processes from process library. Because when you click new here, 
system will take into consideration current package system setting. So this is a classic UI stuff. But you should be 
careful because you can create processes even for any kind of solution.  
 

--- Page 12 ---

 
  
Speaker 1
 
 So go to settings and you see target package is dev classic. So you should change it for usr realty. Yes, modify. Also 
there is some side effect which I can't easily understand and explain here. Now you see some strange packages. Usr 
com something and combination home another something. So it looks like system dreams about some packages 
but we cannot find them in our packages structure. So we will not see it here in our packages. Also, even if you go 
directly to look at the database and we will search for packages, could choose information or maybe like this. No, it 
will be not so good. Okay, we can just select everything from this package, show a new one first and you see that we 
don't have any USR special packages here.  
  
  
Speaker 1
 
 So it looks like here we have something artificially created, possibly used for future customizations of some apps, 
but we don't have it now. Okay, so we will select only one package here and our code will be USR2 Add Reality Visits 
process. So now you see Auto add realty visits process and you see we have code and title. Great. So the main idea 
of handling object events the help of start signal. Of course it's simply to turn our start simple event clicking on this 
button, change type button enter start signal event. Why I say start signal? Because technically we have another 
types of signals. So we have wait for signal or now we have throw signal. So we also have intermediate signals, they 
have a bit different functionality. So start signals are designed to start your processes and by default it's an object 
signal.  
  
  
Speaker 1
 
 Technically you can use custom programmed signal, but object signal is the most commonly used and we have to 
specify object which we want to listen for our event handling. Of course, this is our reality hidden UI object, this one. 
And we have only three supported events so far. Developers have plans to improve this functionality to have three 
before events and three after events. Now we have only after events and we have after record added, after record 
modified and after record deleted. With delete we have some additional functionality which looks like this is actually 
before event because when we will handle record deleted and try to select record that is about to delete, it's still 
present in database. So for delete we use before delete event.  
  
  
Speaker 1
 
 But for added and modified it's definitely after add and after modification because when we do selection from the 
database, it shows that data was already added or modified. So in my case I plan to handle insert event. So record 
edit and in. So in general you can use additional conditions here and such conditions could be helpful if you want to 
run your process not for any reality insert, but for some certain data, for example only for houses or only for 
apartments or some complex condition. So now I will just skip this part. But run following elements in the 
background is really useful feature.  
  
  
Speaker 1
 
 If you run your process with no background option, it means that from user point of view, insert or update will take 
some time plus time for running of your process because it will Be started at the same scope at the same thread. So 
without background perceived speed of your solution will be not so perfect. It's if you set run following elements in 
the background physically system performs scheduling of your process according to insert event into one time 
execution with the help of background process scheduler and it will finally start in a separate thread. And from user 
point of view insert will be processed faster and corresponding event handling will be done in a separate thread 
without any visible delays for end user. So in general, running in the background is recommended to guarantee better 
user experience, better perceived speed.  
   
Speaker 1

--- Page 13 ---

  
 We can name this signal realty added which means that once the signal is triggered, it means that some new record 
was added. Okay, so we can start the process with the help of signal. But what we have at the moment of start, 
unfortunately we don't have so much. We can switch to advanced module advanced settings and we only have one 
single parameter unique identifier of record which triggered our signal. So this record triggered this signal. And the 
only value we have is ID of the record. So no price, no name, no anything. And if you really need so you have to select 
this data from the database. In our case, I should explain the business sense of it. My plan is to automatically add 
realty visits after we add the new realty record.  
  
  
Speaker 1
 
 To insert a visit we need parent realty and some additional columns. So let me use add data item which object to 
add data of course to the visit. Be able to visit one record. Okay, and we can specify columns of added visits. Of 
course it will be parent realty. This is mandatory column, we have to specify it. We probably can try to calculate 
potential date and time. And possibly we can specify comment or some other columns as ID and historical columns 
will be filled in automatically. Okay, parent reality, we can take it from start signal so we can take it from process 
parameters switching to process elements reality added and then double click on unique identifier. That's how we do 
this. Setting comment will be something like auto added visit. Physically it turns into a C sharp string here with 
double quotes.  
  
  
Speaker 1
 
 Okay, and visit date and time can be something like current date and time and then we can go to formula. So for 
example, we can add some days, add days and let it be just one day forward. So one day into future from current 
moment. This is just a simple example. We can name it add visit. This will be just one visit. You can use copy and 
paste approach if you need many. But of course it's better to organize some cycle to make it more efficient. So now 
let's Test how it works with just one visits first so we can save this process. And you should remember once you 
save the process with start signal and if your process is active so it's not disabled. Now you see it's active and this 
process will work each time you have new insert.  
  
  
Speaker 1
 
 Let me show you go to realty section, try to copy data, save it, look at it. Now you see new visit was automatically 
added. Automatically added and visit date and time is somewhere in future. So you see that it works. We can make 
many visits as one operation. I will quickly make a cycle for you. This cycle will include parameter. I will use integer n 
parameter just to make kind of a cycle variable for me. Initial value it will be for example 3 so it will be variable which 
I will decrease one by one and I will use formula to decrease my cycle parameter. So I will save value to n and 
formula value will be N minus 1. Especially use spaces here because so tiny formulas are hard to read and having 
spaces will make it better and like more visual.  
  
  
Speaker 1
 
 Monica and possibly Paddy, are you following me today? Should I make poses for you? Please confirm if everything 
is okay with speed of our solution. Thank you Monica. Okay Adrian. Okay? Yes, Adrian. Sorry, not Paddy. Adrian. 
Okay, just a formula which makes it easy and you see we can just decrease n by 1 and rahi thank you. Thank you. 
Great. So we have something like n equals n minus 1 in this formula, this very easy expression. But then we have to 
organize a cycle and we can use conditional flow going back to this stage. Now this is a sequence flow, but we can 
convert it with this change type button to conditional flow. Conditional flow will only work if a certain boolean 
condition is true. So I have to compose this condition.  
   
Speaker 1

--- Page 14 ---

  
 This condition will include double click on n parameter then comparison greater than zero. So if this boolean 
expression is true, then my conditional flow will work and will be used here otherwise. So this is another sequence 
flow. I will turn it into default flow. Default flow has a difference, you see a small dash at the beginning. Default flow 
works as a else statement for an if operator or default statement for a switch operator which probably is better 
alternative. So default flow will work in case of no one from conditional flows executed. By the way, I made here a 
condition and also I can make a title for it and I encourage you to provide enough titles to make your process self 
explanatory to make it easy to understand.  
  
  
Speaker 1
 
 So while n is greater than zero, we go back, we do one more insert and then we go back to this formula and 
decrease N Again here we have N equals to zero. This is just a title, but it will show us that it's the end. Here it will be 
like finish item. Okay? And as you can see, it's very easy process. And also we can just make it a bit more useful for 
us. So for date and time calculation, we add some number here and we can add n days. Double click. And now you 
see special macro for n parameter was added here. So first time we will add three days. Next time we will add two 
days, then one day and then we will finish the process. As you can see, we can make simple cycles in business 
processes. Save it.  
  
  
Speaker 1
 
 Once I save it, this process is already actual. So I do not need to start it with a special button. Then I will go and 
check it again. For example, we have an apartment in Florida. We have no details, okay. And we can copy it some 
new save it. When saved, we can see its detailed data. And you see we have three days ahead, two days ahead. And 
tomorrow you see all three visits were added successfully and our process executed correctly. We can go to process 
log to see our recent execution. And also it's interesting to look at the cushion execution diagram. This diagram 
shows number of items, how many times this step was actually started. So you see we had three cycles here, cycle 
bodies, then we finished our execution.  
  
  
Speaker 1
 
 So execution diagram sometimes may help you to understand how exactly your process started, how it worked. And 
this can be helpful if you go to process work details. You see we add visits, add parameter and again if we enable 
trace, then we will see all the values of the parameters at each step of our process. You can also see duration in 
milliseconds. And you can analyze and understand what is the slowest part of your process, what is the fastest part, 
where you spend the most of resources. Such things as duration can be really helpful to analyze overall 
performance. So it was very easy. Simple example of handling object event with the help of start signal. As you can 
see, it doesn't so take too much time. It's very easy and fast to develop. But we have quite simple three events and 
relatively low speed.  
  
  
Speaker 1
 
 When I say about low speed, you see point two second. It means 200 millisecond for execution. It's probably not so 
much, but if you work with multiple records. If your task is to process data with as fast as possible way. So having 
such time spent on it probably will be not the perfect, not the best idea. So we have two more options of handling 
object events. Both of them require coding. And the second is object embedded process. Let me Explain what it is 
about. We will focus on objects. Now let's open so any object. We can open any object and you can see its events 
tab. Events. Now you see 13 supported events. So it's a lot. We have 13 different options to handle events.  
  
  
Speaker 1
 
 And once you start to use it, for example before insert you see system generated some code, we can copy it. Then 
we can look at open process button. So it's important to mention that any creatio object has its own unique 
individual embedded process. This embedded process is designed only for one process purpose only to handle 

--- Page 15 ---

object events. The way how you can handle it includes using of events sub process using its start message item and 
we have to paste our code that we initially copied from this into this. Then you can use items like script tasks, 
formulas or user tasks. And the most commonly script tasks are used. And then you can connect your start 
message with this script task. In this script task you can also operate with embedded.  
  
  
Speaker 1
 
 So with your current entity with its data row, you can use entity methods for it. But there is a very strong 
disadvantage of using this approach in general, and this disadvantage is quite serious. This type of event handling 
does not work in packages compiled as separate assembly, simply speaking for all. So for any modern package 
where this option is turned on in order to make fast compilation, your event handling with embedded process will not 
work. And it only works in old styled packages where you have no compiling into separate assembly. For example 
CRT base this package, as far as I remember is not compiled as separate assembly and we can look at its objects. 
For example, we can find the contact object. It's one of the best examples. Contact. It's not here. Okay, let me find 
where it is placed properly.  
  
  
Speaker 1
 
 Crtui let's check or maybe base something. CRT core base package. Yes, CRT core base this one Contact object if 
we open it, as you remember Creature has open source for base product configuration. We can see events. We have 
some events settings here for our object and before insert, after insert, before delete, after delete and then we can 
go to open process to see examples of implementing it. So you see some examples of event sub process, start 
message then script task for execution of some useful logic and in many cases it's based on script tasks. Also you 
can see examples where we have some methods running and methods can be implemented in embedded process 
properties here and also as well as using of some additional usings. Where we have my usings it should be 
somewhere here I believe Parameters. Oh, usings are here.  
  
  
Speaker 1
 
 Sorry, quite obvious. So methods include Decoration of the class fully and including methods that you need here. 
And the using can be also typed manually if you want. But this stuff works only in this package because we have 
CRT core base package which is not compiled a separate assembly. But if you want to develop such code, if you 
want to compile it, ULIPs experience quite big delays. So in general use of packages not compiled a separate 
assembly will make it hard for you because long compilation time. And you may ask me about. Okay, so if this 
powerful tool with 13 supported event does not work, so how we can use it? How we can handle object events 
efficiently and supporting all modern package features?  
  
  
Speaker 1
 
 The answer is third answer is Object events layer the most, let's say the most modern and like the most 
recommended way to handle object events. It also still needs coding. So it means we will have a compiled code and 
it has a bit less events. Only eight supported events, but it is the most flexible and I will explain why. So now you will 
see this example. We need some documentation for this. This is about backend server side data operations and I 
need to find object events. Yes, some here somewhere here. Great. This is our article that you need to study if you 
want to understand better how this mechanism works. We have eight supported events and the definition is before 
and after insert, before and after update, date, before and after delete.  
  
  
Speaker 1
 
 And also we have very interesting and unusual event called saving before and after save. But what is save? It's 
interesting that save was used in order to make the same handler if you want to organize the same logic for adding 
data and for updating data record. So saving is triggered in case of insert and in case of update. And here we can 
see the exact order of execution. Saving, inserting, then actual add of data is performed in database, then inserted 
and saved. So that's how order of execution events is performed. Sara tells that has to leave and will be finished 

--- Page 16 ---

later. Thank you very much, Sara. Sorry for making my sessions a bit longer than expected. Possibly we had to plan it 
to run for 2.5 hours. Okay, Sara, thank you very much for your time. Have a good. Have a good Tuesday.  
  
  
Speaker 1
 
 Thank you. So here we have a set of events for creating record, set of events for updating and obviously for delete. 
Thank you, thank you. So eight supported events and I told you that it's very flexible. So why it is flexible, I will try to 
explain. In previous examples we had to create a process which starts by signals or we had to make changes in 
object if you want to add some event handling. But in this case in this third way of event handling, I call it Object 
event layer or Object events or entity events. So in this approach we can create our own class which will not require 
any changes of the object that we plan to listen. So we will just specify object code and that will be enough for our 
class to operate normally.  
  
  
Speaker 1
 
 So we can listen any existing system object, no matter how far it is developed inside of our package hierarchy. This 
approach does not care about package dependencies at all. The only condition for it to work is presence of 
corresponding object at our environment. And this is a C code that can be designed with the help of special item 
called C source code. So we will use this tool, we will use professional integration with Visual Studio and I will show 
you how we can make event handling with it. It will not take too much time. For those of you who do not really like to 
program in C Sharp, this will be a bit boring, but I will try to make it fast and you will see business results right now.  
  
  
Speaker 1
 
 And it's important to mention that this kind of event handling will be performed as well at server side. So no matter 
how technically this insert will happen. Like we add data from user interface page or we add data with the help of 
business process, or we add data with the help of API calls, processing it at server side will trigger this event 
handling. So this event handling is inevitable for server side and there is no way how you can suppress such event 
processing. So it's quite reliable and that's why it is suitable to perform server side validation. Let me explain some 
business sense of it. Let's imagine our task is to make some limitation on data input. For example, we will have a 
very big price for our realty and we will put some very immense number here.  
  
  
Speaker 1
 
 So okay, it's not correct too much. Yeah, you see we have some limitation here. Okay, what about this? Okay, looks 
good. So here you see our commission, our huge price with 9000 of three dawns. So okay, very big price and system 
still allows us to save it. So we want to limit this value. We want to make some server side limitation and we don't 
want to save such big prices in our system because it's obvious mistake. So I will show you how to make server side 
validation with the help of entity events. Let's go. So according to the manual, by the way, I did not share the link with 
you object business process. Oh, already shared. Okay, so according to the manual we have to make a C Sharp 
source code and implement the this kind of text there.  
  
  
Speaker 1
 
 So let's do this, select our package add source code. This is a special type of item which is designed to provide a 
pure source of a C Sharp which we can develop inside of creature. Or we can create it separately using powerful 
external editors. But creating of C source should be done from this editor. Adrian is asking when do we use the 
server side validation instead of client side? This is a great question, Adrian. Server side validation is much more 
reliable because client side validation is only working when you operate with the page. You remember our client side 
validation does not allow us to put negative prices like this. So it will not allow us to save it. But it can be easily 
bypassed. So for example, you can make a business process which will do this.  
   
Speaker 1

--- Page 17 ---

  
 Or we can make a hack now trying to edit data in our list utilizing our editable list features. And when you see that if 
we have no any event handling and we did not care about the handle, by the way, we don't have any no code options 
so far to make a custom handling of list edit events. So now you see we easily bypassed this. So I just wanted to say 
that client side validation is good, but it's not perfect. You can use bypass with list edit. You can use a bit more 
complicated approach with business process that you can run and it will not follow client validation. Or even more, 
you can use API call to insert new data and it will also do not use client side validation. So client side is not reliable.  
  
  
Speaker 1
 
 This is only for page and it's limited on the page. So if data comes some other way not from your page. So your 
validation will not work if you do it in client side. Server side is much more reliable. It will work anytime when entity 
data model is used. No matter if it's used from ui, from API call from a business process. So it will work anytime 
when you use data model. So let's go back to our C sources. We have to create it. I selected a package add C sharp 
source code and that's how I get this tab. It makes sense to provide better friendly name here. Let's say it will be 
named USR realty events. So my code for this configurable item will be realty events.  
  
  
Speaker 1
 
 I'm too lazy to compose a different title, so I will make the same title because it's technical thing. No one will be 
selecting it from any list. So let it be my package no description because I'm lazy again. And we have this example 
now you see all we have here is list. So just small set of properties and no localizable string and here we will have C 
Sharp code here. Of course we can type it in this editor, but it's not so powerful, not so quick and it will not display 
highlight some errors, syntax and other stuff. So I will show you powerful integration with Visual Studio if you work 
on local on site environment. Of course, if you work in cloud conditions, you will have to type your code here. And 
Rakhi is asking, oh, have to leave. Okay, thank you, Rakhi.  
  
  
Speaker 1
 
 We will finish probably in 10 minutes, so it's not so hard. Thank you for your time. You will watch videos. So I will 
show you how to integrate it with Visual Studio because it's much more efficient than typing your code manually 
here. So we can save our new created source code schema source code item into our package. Physically it saves it 
on disk, so we can see it on disk. And of course we can also see it in our configuration in our package. This is our 
new item. This is a fully server side view feature. So it includes C sharp code and it's necessary to compile if you 
want to see how it works. Let's go to file system and check it out. So let's go to our package, then go to schemas and 
then we have to find realty events.  
  
  
Speaker 1
 
 That's why having a friendly name is important because it will be good looking at our disk and also at our version 
control. So here we see some bit of metadata. We do not care about it too much, but a real T events CS file. It's a 
pure C Sharp code that we can develop into and we can develop with Visual Studio. So let me show you how to use 
Visual Studio for this. We still have to run it as administrator if you want to debug. We can close previously opened 
files. Probably we can close automatically generated solution, close solution. So no solutions at all. Then I will show 
you how we can use Visual Studio for efficient development. I also need to show you some file system settings that 
we have thanks to Creature.  
  
  
Speaker 1
 
 So inside of a package folder we have files and we have csproj file. This project file was generated by creatio. It has 
several sections of libraries with references which makes it possible to add the custom libraries if you want to 
include them into this project. But the most important is that this csproj file is used to get your compiled library of 

--- Page 18 ---

your package. So what you need to know that all necessary for your Visual Studio to run and to work with your code 
is already created by creation by its own. So I will use Visual Studio file open project. Then I have to carefully select 
corresponding folder. As you can see, my previously opened projects were in D5. I go to D1 Webep, there's of 
configuration pkg. Then I will find my realty folder for my package files.  
  
  
Speaker 1
 
 And then I have to open this C Sharp project file CSProj open it. Studio will think for a couple of seconds, but it will be 
still very quick. And if you want to do the same with a package which is not compiled as separate assembly, you 
have to look at special part in terms of configuration. SLN solution. This is a very big solution, includes more than 
several thousands of C files. So it will take couple of minutes for Visual Studio to digest all of its sources to 
understand everything all the references. And it will be possible for you to use it for development of C Sharp sources 
in case if you operate with the package that is not compiled a separate assembly. But in our case, luckily we use this 
option. And that's why opening this project is quite easy and quick thing.  
  
  
Speaker 1
 
 So if we can find this C sharp file C sharp code of course, I already created an example, it will not take too much 
time. Entity event listener so my code is ready. I only have to copy it for you into chat. You'll be able to download chat 
messages along with video files. And I will use the same code into my own. I need to tell you that here we have full 
features traditionally supported by visual studio like IntelliSense using for example, like this Terrasoft. Sorry, you see 
in Auto IntelliSense you see autocomplete, you see system highlights text and you see that when I type something 
with mistakes, it will immediately show error messages. It will show that we have something wrong in our text. It will 
highlight this text and tell us that we have something missing.  
  
  
Speaker 1
 
 So this is quite powerful editor with intellisense and Autocomplete we have to perform a class with couple of usings 
and inside of some namespace. There is a tradition to keep your configuration code into terrasoft configuration 
namespace. But in general you can decide yourself and you can create and support your own namespaces if you 
want. So here we have terracelot configuration just because of tradition using some system namespaces. And what 
is the most important here is how we decode declare our class. This class for listening of object events must be 
inherited from base entity event listener and also this class must be decorated with entity event listener C sharp 
attribute special part of C sharp code which sets additional properties to our class. And this property includes 
schema name parameter. That's how system will understand what Exact object you plan to listen.  
  
  
Speaker 1
 
 So this line number seven is very important because it shows what object we plan to listen. Very important. We can 
easily make a mistake here. If we do, then nothing will happen and we will have no listening at all. You have to 
specify name of existing object here. Okay, then we have from one to eight supported methods that are virtual 
overridden methods over base class. So we have to make public override void and then provide corresponding 
method name. We have article explaining all supported methods here you can see and in my case I plan to make it a 
bit more interesting and useful. So I plan to use on saving event which will work in case of insert and in case of 
update. As this is an ing event, saving it will happen before insert and before update of record.  
  
  
Speaker 1
 
 According to our documentation we have some arguments here and for before events we have reference to our data 
record which is an instance of an entity class and also we have some before arguments. Such arguments are quite 
interesting and important. We can check out what are the values there and you will see that inside of traditional 
properties we have is validation enabled boolean property key value which is ID of selected record which is currently 
being processed and also we have is cancelled property we which helps to organize graceful reject of execution of 
our event. And if you want to make it gracefully without any notes for end user you can just enable is cancel true and 

--- Page 19 ---

your event will not happen. But this approach has a disadvantage and this silence which user will notice probably is 
not self explanatory for the caller side.  
  
  
Speaker 1
 
 So for example, if user tries to add new data and provides too big price then system says okay, no error messages. 
But when user will start to check it will turn out that corresponding record was not inserted or updated. So this 
silence sometimes is not so desired and we can make our operation like with some noise and it will be quite rude 
loud noise with throwing exception. So we can compose message text and put some data there and then throw an 
exception to make our message code dependent from language. We can use localizable strings. So let's save our 
code and we need to use localizable strings here. This will be also example for you and then we can go back to C 
sharp source code.  
  
  
Speaker 1
 
 We already saved our code, open it from embedded editor and we can create localizable strings and our code is 
values too big. We use this localizable code and our localizable text message is here. Prices more than certain limit 
are not allowed. This text helps us to get localizable string from properties of this schema. Then we use String 
format to replace some pattern with a certain number with a certain string and then we show this message for user. 
As result, this throwing exception will finally make an error 500 at server side. So it will be internal server error. That's 
why I say it's quite loud and rude behavior. But it works. So it's very practical for our case. User tries to do something, 
gets error message, gets error text and everything is quite clear.  
  
  
Speaker 1
 
 And user will see that operation was not done and there is a reason why it failed. So we will see this error message. 
Okay, sorry, not ready. Just a second. It okay, so we can save our C sharp source code. We did not change any line 
here with embedded editor and as you can see it works well. So we can use the same item with internal editor or you 
can use the same item with external editor. It asks us to reload. Okay, no problem. So we can reload it, we can save 
it, no problem. As you can see, it's up to you how you can, how you prefer to work with it. So finally we must make 
sure that everything was saved and then we go back to our application and start to compile code.  
  
  
Speaker 1
 
 We can compile our package the first time we have to manually to do this our package and compile action 
compilation takes some time and first time probably it will take maybe 30 or 40 seconds. Next time for the same 
package it may take just 10 or 20 seconds. So it's quite good performance and it will be way faster than compile all 
of your system. So now you can see it probably took 30 or 40 seconds to compile and it finished with no mistakes, 
no errors. And you see that this compilation finished with no errors and we can check how it works. Once we created 
and successfully compiled such C Sharp source code, it automatically becomes active and will work with any kind of 
insert. Let's try to copy this big price as one more time data. Let's say two.  
  
  
Speaker 1
 
 So we have definitely greater than 1 billion. So our logic, our comparison condition here checks. I did not explain how 
it works actually. So sender is an argument object. We can run some parent implementation of the same handler if 
necessary. If present, then we can turn our sender into entity. This is important to make possible running of entity 
methods for our data argument. Then we try to get price value. Our column is named USR price USD. Let me check 
to make sure that it's correct. Realty columns price USD yes, it's correct, no problem. So it's correct operation to read 
price. Then if price is greater than 1 billion we do throw in messages. If not greater, then it's okay, we do nothing. So 
it works like server side validation for us. And now I expect that system will not show me.  
   
Speaker 1

--- Page 20 ---

  
 So it will show me some error message now because can also enable browser developer console control shift I in 
order to make so and go to network tab in order to see all text or requests that will happen here. So this value is 
definitely greater than 1 billion. So let's try to create new record. Now you see that insert failed prices more than 1 
billion are not allowed. And you see that insert query finally finished with error 500 internal server error. Quite rude 
mistake from a server side when you perform your business logic. So it's like a crash, but it's okay, it's effective crash 
for us. We see some response, we see error message. It's quite obvious. And client side also was capable to handle 
such error. And when we try to do this, as you can see, we see error message.  
  
  
Speaker 1
 
 Everything is quite obvious that something is wrong. So we can fix our data. Let's make it not so big like this. When 
we save it's okay. And you see that insert query now executed successfully. We have no troubles. We have data at 
our database and everything looks quite well for us. Existing data will be not. Will be not. So we can try to update it. 
Okay, let's try to update it with an edit page. So like slightly less clear save. We still have troubles. Prices cannot be 
allowed. Okay, cancel close. Now let's make trick make an update using list like this Clear. Try to save. As you can 
see, still favor because it's server side. Server side is efficient. And you see we still have error message. We have 
error description, prices are not allowed.  
  
  
Speaker 1
 
 So you see we cancel such attempt only if we will edit it in a value that is below our limit. Then we can save it and 
update will work normally. Data is processed normally and it works efficiently. The same business logic will work in 
case if insert is performed from business process or if insert is performed with the help of API calls. We will study 
API calls and integration techniques. A bit later you will see possibilities for it and we will check again that this 
validation is quite reliable and works for any kind of insert or update attempts. Okay, that was the third option for our 
event handling. So we already finished with the creating examples of handling events. And if you have any questions 
for today, please ask me. I will finalize my today's session.  
  
  
Speaker 1
 
 Save everything to file system because we had changes at our localizable strings business processes. So save 
everything and then committed to version control. Thank you very much for your time. Our session is over. In case if 
you have any questions, feel free to ask. You will receive video recording as usual. So our session is over. Thank you 
very much. See you tomorrow and goodbye.