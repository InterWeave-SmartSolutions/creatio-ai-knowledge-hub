--- Page 1 ---

 
  
  
Speaker 1
 
 Today is session number six of our development on Creature Platform Guided Learning. Today I want you to see 
some additional materials related to Classic UI and Freedom UI and migration. And then we will fully switch to work 
with server side. So recently we managed to create a fully separate Classic UI solution. And this was a Classic UI 
section and list inside of this is called also it's called a section list. So we have a set of data records here. When you 
open edit page, you see Classic UI edit page with columns components. And we decided not to focus too much on 
Classic UI because this platform will be like deprecated probably somewhere in future. Currently it's supported, 
currently it's working.  
  
  
Speaker 1
 
 But in future so it will be not developed, it will be not improved, you will not see new tools or components for the 
Classic ui. And most development is focused on Freedom ui. And you also remember some interesting feature, 
some feature for voice recognition, you remember we still missed it in Freedom ui. And you also can do details, you 
can program buttons or actions. Everything is explained at Academy. So if you ever need it, you can look at it. Also if 
you go to client module part for Classic UI you will see that code in Classic UI in general is I think a bit more simple 
than in Freedom ui. Because in Classic UI you can also make your items in diff array for example like a button. We 
will do it later.  
  
  
Speaker 1
 
 Then you can create a handler as a function add methods section. And in general I think it's easier because more 
transparent work with object model, more transparent operation with view model data. I will show you more 
examples later. And this is just a quick brief introduction for you. If you will work with some Freedom Classic UI 
pages in this case, this possibly can help you. So what I want to show today, this will be a very typical task for future 
I think. And this typical task is your customer who already runs some Classic UI section successfully. And customer 
understands the future is in Freedom ui. Customer wants to use some Freedom UI features, tools, components and 
pretty look and user interface. So customer asks you to migrate some existing solutions from Classic UI to Freedom 
ui.  
  
  
Speaker 1
 
 Unfortunately we don't have any automated procedures for this. And especially this becomes additionally complex if 
you have some programmed code in Classic ui. So I will show you the most practical way how you can switch from 
Classic UI to Freedom ui. I will also show you some settings and system settings for this which impact on how you 
see your system. So you'll be like more expert in it how to make this migration. So as my example I have realty 
Classic section implemented as Classic UI and I will show you how we can switch it in Freedom UI and what we have 
to do for this. So Freedom UI or Classic ui, the only difference is at client side. So we have different types of client 
modules.  
  
  
Speaker 1
 
 Such items which have section in their name or page in their name, they usually designed as Classic ui. If you look at 
the pages and you see form page or list page, it's a Freedom ui. Of course, physically they are totally different. When 
you go to list page, you will see Page editor like this, it's a Freedom UI page. And when you will go for example to a 
section page, you will see only code because it's Classic UI and you can configure Classic UI sections only when you 
go to corresponding section and run Section wizard in it. That's how you can get to Page Editor in Classic ui. But 
now our task is to make an example of migration.  
   
Speaker 1

--- Page 2 ---

  
 At the source part we have Classic section, this one and as expected result, we would like to make one more section, 
but showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some 
server side logic, maybe we have some business processes. So server side part will remain the same. Data, items, 
lookup contents, everything will be the same. The only change we expect to do will be our user interface area. So set 
of client modules and related code that is behind such items. So I will show you how to migrate from Quest CQI 
section to a Freedom UI section. Please note that it will not it will be not necessary to forever forget about Quest ui. 
It's still possible and different users may define themselves which type of user interface they want to run.  
  
  
Speaker 1
 
 So it will be possible to switch. First of all, I need to tell you about some important settings related to such view. And 
I would like you to see this background like frame. You see this name which shows you some funny, some fancy 
background image, some kind of item which is called desktop and you can select and edit it. At the left part you see 
set of sections workplaces, you see for different workplaces, different contents and you also can see some image 
background and the top line here also use set of buttons items which are designed in angular and they are items of 
Freedom ui. So this left and top area is managed by Freedom UI and we can switch this background frame setting to 
Classic UI if we want to.  
  
  
Speaker 1
 
 So let me show you system settings and this system setting is called like Freedom use Freedom UI interface. This 
setting generally turns on or off this background frame stuff. And if we just for test purpose want to turn it off so use 
Freedom UI interface was originally on we turned it off and it's cached. So in order to apply this we will need to log 
out and log in again. Now you will see how system will look like with the Classic UI set of section and the top search 
bar. Now you see system how it looked when we had no Freedom ui. You see a bit difference. Here you see that we 
still have different works workplaces. It looks like we totally miss Workplace which is based on Freedom UI. We miss 
workplace with customer360 from here as you can see.  
  
  
Speaker 1
 
 And we can also go to Workplace Management System Designer. This page go to Workplace System Setup. Let's 
check our customer 360 workplace and you see use only in shell in like in usual words. If we want to translate it into 
something that you can easily understand, it means that use only in Freedom UI background settings. Now it's not 
Freedom ui, it's Classic ui. That's why this workplace disappeared. Okay, so you can manage how you would like to 
see background which is a Classic or Freedom ui. Okay, so we can go back because we're interested in migration 
now.  
  
  
Speaker 1
 
 So we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's 
log out and log in again to see back our background Freedom UI setting, which is default setting now and which is 
recommended to work with Freedom UI sections and also with some Classic sections. It's still supported. You see, 
we have Freedom UI background, but we have Classic UI stuff inside of it. What I wanted you to know next is Special 
section designed to simplify such transition between Classic UI and Freedom UI sections and user interface. Now 
you see special section special setting for page which is called UI Management. And we can specify setting for 
Freedom UI for different roles or users, which makes possible to do it quite flexibly.  
  
  
Speaker 1
 
 For example, some users are really stick to some Classic UI solutions. They are not ready to switch to Freedom ui. 
They work with some basic UI sections and it's critically important for them. So you can manage this stuff for 

--- Page 3 ---

different users. And also we have Form Page Preferences which is also designed to simplify the selection between 
Freedom UI and Classic UI and only in case if both options are enabled for a section. So in this case you see by 
default Freedom UI uses Freedom Pages, Classic UI uses Classic Pages by default and we have some exceptions for 
this. But personally I consider this stuff as over complicated. And once you started to migrate from Classic UI to 
Freedom ui, I think that it's better to finish this Migration and then do not use Classic UI and only invest into Freedom 
ui.  
  
  
Speaker 1
 
 So this is a page which will be temporary important for you, so it will be not forever for you. And finally you will 
switch to Freedom UI all your necessary business sections and then you will feel quite okay with it. So you will not 
really need to switch back to Classic ui And that's how I recommend you to follow this personally. In our Inner 
Academy department in Croatia company, we still use some Classic UI solutions, but our plan is to migrate to 
Freedom UI and then to use only Freedom UI sections. So and this stuff like page for settings will be temporary 
useful for you I think. Okay, let's go back. So finally we have currently for Classic section, we only have classic user 
interface, so we have no option to display Freedom UI pages.  
  
  
Speaker 1
 
 So how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way. 
So let's go to Settings, then go to Application Hub so we can create new app. As you remember, application is like a 
new top level setting or like application entity which may include one or several packages inside. We already have 
Freedom UI reality section, but we don't have any classical representation for it. So when we create new application, 
system will create new package to create. If we ask, it will create new section for us. So now I will show you how we 
can create new application. We can call it, we can make it based on records and business processes, but we will 
name it Realty Migration. So it means that we migrate from Classic UI to Freedom ui.  
  
  
Speaker 1
 
 We can compose kind of icon for it. And we will use this very important feature link to an existing object. This is very 
important. So this is a key feature of all this migration idea. We will use existing realty Classic UI main realty classic 
entity. This one will be main and it will mean that system will not create new object for us. It will use existing object, 
it will create a new package, it will save all our application information into a new package. It will make dependency 
from real to classic existing dev classic package. And finally we'll have new app but based on existing object. And 
let's try, let's create it. Icon color is okay for me. So let's move it. This will be not so hard because system didn't 
create new objects for us.  
  
  
Speaker 1
 
 It only uses existing object and then creates several client module. So I don't expect it to last longer than 20 
seconds. So let's see how it works for us. And then you will see the main idea of migration. So Generally it's pretty 
simple. You will have a new app, you will have template for list and or edit page. And then we will have to manually 
set it up according to our expectations. So you can see there is almost no automation such migration unfortunately 
and a lot of hand work is expected here. So let me show you how we can do this. So we have data models. Our data 
model has no new objects, but it definitely has an existing object because it's based on this reality. Okay, let's go to 
easy part. List page I think is easy part and it shows some columns.  
  
  
Speaker 1
 
 We can hide unnecessary columns. We can add the columns that we need you. Now you see all our classic object 
columns are here. So we can specify say okay, we want to see name, price, type, offer type and comment and then 
date of creation. Order of selection is important here. And we can hide this column. We can also hide this, we can 
shrink, we can move something if necessary. We can swap columns positions if you want. So now this is easy part. 
We only made our list settings for freedom UI page. Physically this page is saved. Let me show you this page. Page. 

--- Page 4 ---

Page here is saved into new package and its parent page is somewhere in template code and title is quite good. So 
we can save it, no problem.  
  
  
Speaker 1
 
 I prefer to control what's going on at configuration section because probably I'm too stick to development and I don't 
really trust only no code tools. So I always want to check what is going on there. And that's why we go to 
corresponding new created package. You see this package must have dependency from dev Classic. Yes, has it. And 
this package now includes no owner objects. So it uses existing object from parent package from dev Classic. And 
you see no created objects here. So we did not customize our object model so far. So we use 100% of all existing 
columns from classic object. So data model is the same. User interface part is the only change here and we have list 
page changes. Now I will work with form page. So list change is okay. Now let's work with form page.  
  
  
Speaker 1
 
 Form page is Freedom UI edit page for a section for an object. And as you can see it has its own properties in our 
package code title. Great. And we can specify columns as we wish. We already have all the classic UI columns, so 
we only can just drag them at its place where we expect it to work with. So let's go and display types. This is list of 
existing columns. So such columns were already added at this stage where we created in classic UI we have 
comment, we don't have any Other columns that could be useful. Also, it's interesting to mention that you see such 
notes here representing that colon was already added to the page.  
  
  
Speaker 1
 
 So you will see such node if colon was already shown somewhere and you will not see it if colon is present in your 
object model but was not shown on the page here notes for example, the colon which is designed to work with 
attachments and that's why it was not shown as a separate component here and I do not plan to show it. Okay, so in 
general it looks like this. We can also try to specify drop down for types. Drop down for offer types. Okay, great. We 
did not create manager for this object and when we finished we can just click save. As you can see, even if we had 
some business logic in Classic ui, this business logic is not automatically migrated into Freedom ui.  
  
  
Speaker 1
 
 There is so big difference between such platforms and code that now developers did not implement any kind of 
automation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom 
ui. So if such logic exists, you will have to reprogram it Working at code source code part of the client module. So I 
already saved it. You can close it. Now you see some changes. We can control what's going on at our package and 
that's how we can test how it works. So I expect to see new section somewhere here Migration section. Now you see 
the data which previously was shown in Classic UI also available in Freedom UI user interface. You can try to add the 
new data record. But now you see still you see Classic UI page.  
  
  
Speaker 1
 
 This is a result of some browser cache issues. Okay, let's cancel this log out, log in, go to Freedom UI section. Also I 
would like it to be present in my. Let me show you in my studio Workplace. So let's go to Workplace Studio. I'd like to 
add my migration migrated section. We will find it Realty Migration Only sections which were not present here are 
shown. That's why only realty migration is shown, because Realty and Realty Classic are already done. Okay, 
migrations is somewhere at the end. So let's rearrange this as usual and move it upper just below the classic. We 
can also bind this workplace and save it to the same package where we originally saved it. And system creates 
corresponding three different data items for us. Okay, we trust that everything saved correctly. So we have three 
sections.  
   
Speaker 1

--- Page 5 ---

  
 Now let's go to Studio Realty Classic and Migration is somewhere at the Antifa world. I expect to see my sections on 
their places. Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff. And migration 
is our Classic UI data shown in Freedom UI user interface. Trying to open the edit page shows us Freedom UI page 
for migrated stuff. So now we made our example with migration and we successfully implemented it's in user 
interface. So you see that this is a simple and quite straightforward way of how you can do this migration. You will 
have more difficulties with transferring of business logic making your own filters. Again if you made some filters for 
dropdowns. For example, in Classic UI it's possible to use programming or to use business rules. And business rules 
are not migrated automatically.  
  
  
Speaker 1
 
 So you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages. 
But having the data stuff the same. It's so doesn't take too much time because your data is data model is ready. And 
what is interesting, we have special parts of section like folders like tags and notes. So nodes will be taken correctly 
from Classic UI part. You will see attachments here. And notes is a special component which is missing here and 
that's why you do not see it. But files will be shown here. So in Classic UI special component to show your files is 
code. So this detail. Oh, now it's failed. Yeah, because we probably. So as you can see, it's quite hard to make it work 
at the same time where you work with Classic UI and Freedom ui.  
  
  
Speaker 1
 
 So it's really hard to. Now we switched to Freedom UI and that's why Classic UI edit page is not working normally. 
But for different users it's possible to set up. So Classic UI open the page. As you can see in Classic UI I open the 
page and I see Freedom UI edit page. Because my current setting is to show Freedom UI page and because of 
Freedom UI shell is activated. So you see this background, top panel and left panel are in Freedom ui. And because 
we see some background here and because it's made on Angular. So Edit page was chosen to be shown in Freedom 
UI even though we opened it from a section which is in Classic ui. So I understand this is kind of messing with 
different types of ui.  
  
  
Speaker 1
 
 So finally when you do migration, you will use this help of Application Hub. You will get new package for your 
migrated stuff. From Classic to Freedom we will have set of client modules and all logic that you miss. You can 
implement with the help of business rules, with the help of components that are available as no code tools at 
Freedom UI and not available as no code tools in Classic ui. And also you Will be able to write your code for migrated 
pages to implement the same functionality that you needed and that you previously used in classic sections. So if 
you have any questions about this migration, please tell me. Server side part like business processes, like web 
services, like some C Sharp code, it's the same, so it operates with data model, it doesn't really depend on the type of 
user interface.  
  
  
Speaker 1
 
 So server side part of your migrated stuff will be the same and you just need to check that it still works as expected. 
In case of any questions, I would be happy to hear. As usual, video recording is performed. So if you missed some 
part or if you so just watch this later, all the videos will be available. Peggy? Yes. Questions please.  
  
 
  
Speaker 2
 

--- Page 6 ---

 Yeah, I have a question. Is realty. Sorry, not realty. Is Classic UI ever. Would it still be deployed to new customers or is 
it just mainly targeted towards legacy customers?  
  
  
Speaker 1
 
 Currently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it. So 
it's like you have an old PC and new PC and you think about installing some program. Of course it makes sense to 
install it on UPC unless you have very serious reasons to use Classic UI for it. For example, you already have some 
marketplace add on which is very useful for your business, but implemented in Classic UI and is expected to be used 
in some Classic UI sections. So if you have some strong reasons like you stuck with some quasiQL solutions, then it 
makes sense to continue its development, to improve it, to advertise to your customers. But if you have equal 
chances and new customer and new project, of course it makes sense to look at Freedom UI first.  
  
  
Speaker 1
 
 Because in Freedom UI you have in like in several times more available. No code, controls, components and 
Freedom UI will be developed in future and it supports or is going on. Classic UI is now supported only for existing 
components. No new components are created for Classic ui. We still have thousands of customers with running 
Classic UI solutions and it is quite good. So customers are happy with running what they have. But it's about future, 
it's about development and improvements in future. So if you have choice, of course it's better to select Freedom ui. 
If you don't have choice because of existing circumstances, then you can decide yourself and choose Classic UI if 
you do some customizations. That's brilliant.  
  
 
  
Speaker 2
 
 Thanks Amelia.  
  
  
Speaker 1
 
 Thank you Paddy. Thank you for your question. Okay, so now you know how to do first steps. Actually we also face 
the same stuff in our inside like team work and automation. Inside of Creatio we have several big creature based 
solutions inside of Creature company and it's also so we also like face as most of our customers we face such 
upgrade needs because Freedom UI is now like primary user interface and we still have a lot of Classic UI legacy. So 
we do some planned work on improvements from Classic UI to Freedom UI and we still work with some sections in 
Classic UI because of too many systems, too many changes to be performed. And one day we plan to switch from 
Classic UI to Freedom UI in most of our currently used sections.  
  
  
Speaker 1
 
 And we have some tools as I showed you that intended to help you with it. But personally I think that once you 
started to switch, it's better to make it quick and then to continue improvements already in Freedom ui. So not to be 
too long in this intermediate stage where some users are working in Classic, others are working in Freedom. You will 
have double time for support of this intermediate stage. So it's better to try to make it shorter and to implement 
something like minimum value product in your Freedom ui, move your users there and then improve quickly, improve 
all necessary remaining things that will make your users fully happy. So not to stay long in this intermediate step.  
  
  
Speaker 1
 
 Okay, so if you have some real life examples, some kind of like practical interest and practical experience with the 
migration also tell me, it's interesting what you think of it, what unexpected outcome you have. Probably so anyone I 

--- Page 7 ---

think may have something unusual and expected and even in creation we sometimes can't implement all possible 
scenarios. So if you will have something unusual, just tell me, I will try to help with it. So we have to switch from our 
client side, probably already get tired of it to some server side features. I will try to explain and to make this 
transition coordinate quite smooth. And now we will talk about more developer oriented things and more related to 
programming at Creature server side in C Sharp, using dotnet framework and talking about compilation libraries, file 
system and so on.  
  
  
Speaker 1
 
 So probably I have to start that in any package. Now we see we have some set of items of different types. So we 
have items with different types. If you try to add an item manually, you now will see we have objects and we also 
studied what is replacing object. We have pages, so client modules of different types. And also we have replacing if 
model which means replacing client module specially designed to extend and modify existing pages. And we already 
studied this one, we did not study source code, we will do it a bit later. And we slightly touched the question of 
making business processes. So I need to show you some items and explain where they are actually stored and how 
they actually work. So when you operate with objects, we already know that it doesn't.  
  
  
Speaker 1
 
 So object is a server side item, but its changes are applied easily without need to compile. So generally C code is not 
so let's say heavily used for objects and replacing objects. Of course, C Sharp source codes, if you design it 
separately in source code item will definitely require some configuration. So it means that when you develop 
something inside of item name source code, you will not be able to immediately start it. You need to run a special 
procedure called compilation and physically it means that creation handles some C Sharp sources at server side and 
when you want to apply them and when you want to implement and apply changes. So you will need to compile and 
creature is capable to collect C Sharp sources of its compilable part.  
  
  
Speaker 1
 
 Finally to compile and get executable DLL libraries and then use such libraries at its website. So C Sharp sources 
definitely require compilation. All JavaScript part this all this JavaScript part obviously does not require compilation 
because it's a set of JavaScript files. They are executed as interpreted code at browser side. So when you save and 
apply any change in JavaScript part in client module part, it also does not require any compilation. So this is 
interpreted part fully. Business processes in general, such items as business process it's designed as interpreted 
setting. But for some processes you can add the C Sharp code and make it compilable. So in some processes, let's 
say we have plus minus. It means that some processes can include compilable code and we can run it and we can 
use such advantage of compilation and very fast execution, but it's not mandatory.  
  
  
Speaker 1
 
 In general, it's recommended to have as less as possible for code in your processes. Because processes are 
originally designed to be a no code tool and possibility to code into it. It's not its primary purpose. The primary 
purpose of a process is to make your business logic a set of steps that you can easily construct with using of your 
mouse and which will not require programming and then you can get your business work done. But you can also use 
C Sharp code inside of it. And that's why we can call business processes as partly compilable. So I will show you 
example rest and swap services. They do not require compilation because mainly they are metadata used inside of 
business processes and user task is a C Sharp programmed item that requires compilation. So now SQL scripts 
obviously are not compiled items.  
  
  
Speaker 1
 
 Data is also metadata, not compiled and import. We can import dll items if they are written in.net and add them to 
our packages and use them in Our compile bot stuff. So if in general such DLLs if we import them are included into 
compilation, so we can consider this stuff as involved in compilation. Now you see only four types of items that 

--- Page 8 ---

somehow touch the compilation and in general that's how we can say that creation has compilable server set. Also 
probably also need to tell you that objects can potentially include its compilable part. But now it's not recommended 
to be used. And in general this is feature that's still supported but probably will not use it. We will talk about object 
programming and possibility to use C Sharp compatible code there when we will talk about event handling at object 
level.  
  
  
Speaker 1
 
 So in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they 
are turned into. Let me show you what they are turned into DLLs that you can find in Bin folder here. Or you can also 
find DLLs as a result of compilation in many packages. For example, we made dev classic package files bin and here 
is our DLO of a package compiled as separate assembly. So why you need to understand such files, DLLs and so on. 
Because now we will talk about server side functionality and you need to know how it turns into something that 
system can execute where you have to search for some sources and you need to like understand it in very general 
things so you will know where to find some parts of execution executable stuff of creation.  
  
  
Speaker 1
 
 We will make an example now and I think that the easiest possible way to demonstrate how you can write and run C 
Sharp code at creation platform is to make a business process which will execute C Sharp script task into it. I 
intentionally avoid making our own C Sharp sources at the beginning. So first I plan to show you how we can make 
process with some piece of programming inside of it. We need some package for this. I prefer to do it in my realty 
package. This is Freedom UI solution. So one of our main packages here in total. Now you see we have three 
packages in our solution and it's not the end. So possibly we may have more if you want. You can also minimize 
number of packages if you play with you remember we studied it with the search rack setting.  
  
  
Speaker 1
 
 Or maybe it's better to say lookup package installed application. It's possible to minimize number of existing 
packages for you if you connect all your editable applications with some packages that you already have. And we 
already did it avoiding creating one more package for Customer360 customization. So this is something that we 
already studied. You know how to find it just to find and register an object named package installed application as a 
lookup at lookup section. Then you will be able to handle all your applications, all your packages included there. And 
you can replace current package for some apps making system saving your application customization into a certain 
package. Okay, so what I plan to do now select my Freedom UI USR realty package, add the business process.  
  
  
Speaker 1
 
 I need to explain that what business process is because some of you probably already have experience with 
customizations and some of you probably already know that business process is a server side functionality which is 
designed to automate some business steps that you expect to be performed by system. And in general business 
processes are interpreted. It means you construct such kind of diagram and then ask system to run it. System will 
read your diagram structure step by step and it will execute your diagram step by step. So in general business 
process is saved as set of metadata settings. Technically it's a text with all necessary information about its 
structure.  
  
  
Speaker 1
 
 And we have a special process engine, so it's a backend server side item quite important and very big which is 
capable to get such metadata and execute it step by step according to the diagram items. Okay, let's start. So I need 
to provide a code usr and I need to explain the business sense of my future process. My business sense will include 
some calculations and also I will work with database. So I also plan to connect and to use one example for different 
purpose. And this example will be used not only to demonstrate how you can run C sharp code in creatio but also to 
demonstrate how you can write some a code that operates with the creature database and which operates with the 

--- Page 9 ---

creature data model using its own native tools. For this I will explain it later.  
  
  
Speaker 1
 
 So my business sense is to make a process which will do some calculation at server side. And my calculation will 
include selecting some data and calculating average price for realty record. So my process name will be something 
like Coke Average Realty Price process and the title of the process will be Calculate Average Realty price. Please 
confirm do any of you follow me directly at the session or you just watch it as video and then you plan to do your 
own steps? It's important for me to know how long delays I should provide for you and how I should say make poses 
or not. So if you follow me just live during the session, please click Please type plus in our chat it will let me 
understand that I have to make poses for you to do the same during the session.  
  
  
Speaker 1
 
 If not just type Minus which means you are only watching and I can do it faster. Okay, thank you. Thank you. Monica, 
Adrian, Eddie. Thank you to share. Okay, it looks like someone from you also following me. So I will not go too fast. 
Now I made a process with a title and the code. No any other changes and plan to save it in my USR realty package 
which is used for Freedom UI example. It also makes sense to name my beginning of the process. I call it like start. 
And here we will have successful finish. So normal end of the process. Okay, save it. As you can see, first time it 
takes a while to save it. But in general, now our process represents a diagram which has a starting point. Generally 
process will start from all items which have no incoming flows.  
  
  
Speaker 1
 
 So if your process has no incoming flow, it means it's the start of your process. So take care. If you accidentally drop 
items on your diagram without incoming flows, it will be treated as a beginning. So please be careful. Okay? So my 
plan is to show you not all the process engine tools, but only developer part of it. So part where it makes sense to 
write code and include some, let's say developer skills into your product. Because also Business Process Engine and 
General Process Editor has a lot of no code tools which we will also use but without explaining all the possible 
functions. So I will show you only major things that we will need for our example. So my main focus today is to show 
you items that are included in development.  
  
  
Speaker 1
 
 In general, you know that Business Process Editor has two types of items that you can add. System actions which 
are executed quite quick, they do not require user feedback and they are executed automatically at server side. And 
we have items called user actions. User actions are designed to show some page for a user, usually waiting for 
some feedback after it. And user actions are designed to stop your process execution for some time till user will 
respond something till user will provide some input or will confirm that user gets some output. So user actions will 
make your process much more interactive. Okay, we have some other types of items like starting events, 
intermediate events, finishing event and logical gateways. So I will show you on the developer part of it which you 
need to know if you're really interested in like becoming a process expert.  
  
  
Speaker 1
 
 You can also consider going to our customization course where my colleagues teach how to manage processes. So 
what my plan is I user. I use system action script task, the only item in all business process which requires coding in 
this diagram. So this item should be carefully put on the diagram. I can intentionally show you how you can do it 
incorrectly. Like this. Then you move it like this and then it looks like you added this item to the diagram. But in 
reality this is not correct. I will show you that this item does not say connect to this flow. And if you do it like this 
item has no incoming flow. So it will be started at the process beginning, not as you plan. And that's why you should 
take care of it and put it properly.  
   

--- Page 10 ---

 Speaker 1
 
 Now you see when you slightly move it then you correctly put it on the flow. So you should practice a bit with placing 
items on the diagram and making sure that you do it correctly. Now this item has incoming flow, it has its own C 
sharp body. And we have some notes here, but it's only for long lasting operation. And then we have finish item. So 
what we can do here, this is a C script that physically will turn into a method of automatically generated class. 
Creature is capable to generate such some C sharp sources for it and then it's capable to compile them.  
  
  
Speaker 1
 
 So now you will see that we can write some C sharp code here and then save apply changes for our process and it 
will turn into automatically generated class and our code here in this C sharp script will turn into a method. It will not 
take too much time for us because I already have some pre developed examples for you and it will be server side 
NDPTS schema query for calculation. So I already have some example which will work for us. Probably I should 
paste it into our chat and paste it for you because it's quite big. I will put it into parts because Zoom has some 
limitations on chat messages size so we can take chat messages. Probably we will slightly need to replace names 
here like this, but you will see it.  
  
  
Speaker 1
 
 Okay, so I copy and paste this code to the editor. We can also expand this editor to see like in more comfortable 
ways. And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code 
to type code like this. Unfortunately for business processes it's not intended to be used so it's not supported. And for 
business processes writing a short code here in this editor in general it's okay. So you will not suffer too much by 
writing just 10 or 20 lines of such code. But if your plan includes to run very complex calculations, including different 
classes, including a lot of other things, libraries and tools, it makes sense to implement complicated logic 
separately. You can use C sharp source code for it and then just to create corresponding instances of your classes.  
  
  
Speaker 1
 
 Probably also using a tool called class Factory and you may create instances of classes that will Work as helpers for 
you. Then you can just make corresponding setting and run corresponding methods. That's how you may keep this 
code quite small sized and do not need to create very complicated logic just here. So it was not intended to be used 
for complicated logic. It was created with ideas of using of existing classes and making this code not so big. So if 
you need big logic, please implement it separately as normal classes with source codes where you will be able to 
use Visual Studio to develop so you will have comfortable conditions for it. And here it's not so comfortable. I agree 
this editor is not so powerful, but you can bypass this disadvantage because of not writing too much code here.  
  
  
Speaker 1
 
 Okay, so I will save my code example. It's not finished yet. I will just show you what happens if you try to save. So if 
you have a changes in your script task and you save, your process system asks you to compile here publish means 
start compilation and I do not plan to do it right now because my code needs some improvement and I need to 
explain what is going on and explain you step by step what is happening here. So in general I need to explain you like 
common idea of what we are doing. The common idea is to run a business process which will accept some 
arguments at the beginning and then we will do calculation of average realty price based on our existing data. But as 
you may guess working with realty data, we have different types of data records.  
  
  
Speaker 1
 
 Let me show you a bit more examples like apartment in will be an apartment for sale. Okay. And yeah, it should be 
reloaded probably. I just feel okay, it's apartment and this also is an apartment for sale. So what I wanted to show 
you we have different types of realty like houses and apartment. They have different pricing values, they have 

--- Page 11 ---

different pricing models. So it's not good in general to mix apartments and houses. Also we have different offer 
types like sale and rental which are totally different. So it's totally incorrect to mix values for rental, monthly 
payments and full cost of some realty records. So it's not correct to mix them and try to calculate some average 
price because between it. So we have to do quite smart filtering.  
  
  
Speaker 1
 
 We need to take into consideration only records with a certain type in order to split apartments from houses. And 
definitely we have to filter data according to offer type splitting sales from rentals. So when we do this average price 
calculation we will need to have filters or offer type to include only rentals or only sales and general realty type to 
include only apartments or only houses. And then we will calculate total Amount of all selected records, total price. 
Then we will divide by total area of them in order to include and consider different areas for different objects. So 
we'll count, in general, we will count like average price of a real to per square foot of the area. And that's how we will 
finally get our result. So the real sense is just counting similar objects and getting average price per area.  
  
  
Speaker 1
 
 And physically how we do this is the C Sharp code written in this editor. And yes, I agree that if you don't know C 
Sharp, it could be quite hard for you to write it without mistakes. So if you type some code here, if it has mistakes, 
system will not show it immediately for you. For example, if you write something like this with a missing name of 
your method, so if you do some mistake with spelling, then you will note about it. So you will know about this 
mistake only when you start to compile. So unfortunately there is no background syntax check that will show you 
with a red color that you have some mistakes here in this text. But it's designed to be quite small and it should be 
quite obvious. So we do not think that it's a real issue.  
  
  
Speaker 1
 
 Okay, so let me explain in general what is happening here. I plan to operate with creation database. We have two 
different ways to operate with the database. And now I'm using the approach which supports entity data model. 
Simply speaking, IT supports items like objects and respects object structure, object columns and references and 
everything that we design at creature orm Object relational model ORM of creation is based on objects and we can 
design them when we save and publish. Object structure is applied to the real database tables and columns. So 
that's how it works and working with this class entity schema query Class means making selections of data records 
from creation data model, respecting objects, respecting all their column structures. So using this information.  
  
  
Speaker 1
 
 Another approach which we will study a bit later is based on direct database selection from its tables without use of 
object model. So we will be able to write down our own selects some columns from some tables where some 
conditions without taking care of support of object model. But now this approach shows you this possibility with 
support of object model. And this is one of two major approaches to get data. There are some advantages of using 
such approach and it supports access rights restrictions. So if this code is running under single user credentials, it's 
possible that user will have no enough access rights to operate with data. So if you run your data selection with 
entity level with support of object model, so it will restrictions, it will read no data if such Data is not available 
according to access rights.  
  
  
Speaker 1
 
 Also Entity schema query supports caching at server side. If the same data is obtained too many times at the server 
side, it's possible to organize your code in the way that this data was first obtained from the database and all second 
times it maybe will update will be taken from the server side application cache and that's how you may do your 
selections more efficient. So entity schema query supports caching. Also it supports paging when you need to 
process a very big set of data records and you prefer to do it by parts working with portions of data pages and entity 
schema query also supports complex query structures including hierarchical queries. That makes sense when you 

--- Page 12 ---

operate some data which can be displayed in tree view. Okay, let's not go too hard and too deep. So currently simple 
answer.  
  
  
Speaker 1
 
 Entity schema query is a class which supports object model and it has only one single purpose select list of records 
from the database. It has some arguments when we run its constructor. We have several overloaded constructors 
for this class and it has arguments. One of them is quite standard so you will always use it. And second argument is 
a text representing our object code. As you remember our code is USR realty so we have to correspondingly modify 
this one. So you should do this at your own. I will also note it in chat and this is how we can create an instance of our 
class which will be used for data selection of our entity schema query. We have to specify its settings, we have to 
make it work properly for us. So we need first to select columns.  
  
  
Speaker 1
 
 Also you may ask me if we type this code like this how we know about present functions, methods properties and so 
on. We have some Academy server side documentation. Let me show you backend development.net classes 
Reference Go here and we have set of cluster libraries for creation. Server side you can search for entity schema 
query class. Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four 
different overloaded constructors. I'm using this 1/3 one and we have a lot of public properties. A bit below you will 
see public methods and so on. So if interested you may find this SDK information at Academy website and we'll go 
back to our code. I agree. Currently it looks like a bit boring stuff so I try to go through it quite quickly.  
  
  
Speaker 1
 
 We only make sure that we have the same columns as we plan to work with and we don't have any obvious rude 
mistakes here. So let's look at our reality Object just to match our columns we need to select price and area. Here we 
have USR price USD column and USR area. Okay, so it looks like the same. We can add columns to our query. You 
may also face a method named addall schema columns. But I strongly warn you from using this method because 
when you add all schema columns may happen that you are working with a quite big entity with hundreds of 
columns and without thinking you can add a lot of columns which you will never use later in your code. So it's better 
to save system resources and do not add all the columns until you really need it.  
  
  
Speaker 1
 
 So it's better to always add only columns into your selection which you really need to analyze later. In my case I need 
two columns, price and area and making such methods to our entity schema query will result into adding couple of 
columns. So the part of our selection statement that we will finally start at the database overcrowc select then set of 
columns that we do from our realty table. From this table is called root entity which is the first one which will be 
used for construction of our query. It's possible to use joins and add other columns to our selection. But in my case I 
need just very simple example. I will use the only one table. In general it's possible to make joins with other entities 
and in my case it's just not necessary.  
  
  
Speaker 1
 
 But it's possible you can use this argument as a special column path expression. Column path may include joins if 
you use lookup columns of your main entity. In this case it's called direct join or if you use lookup columns of join the 
entity. In this case construction will be a bit more complicated and it's called reverse joins. If interested I can show 
you where I can get more information about this ORM programming. So let me show you database tools. No, no, no. 
It's about architecture probably second no, it's about architecture, Object events, data operations, Direct access, 
ORM overview. Yes, somewhere here.  
   
Speaker 1

--- Page 13 ---

  
 So we have root schema which is the main from table of our select statement and it's possible to add connections 
to other entities and using direct connections when you select city, you can join to the sanctuary countries to get its 
name or you can use reverse connections when you have account and you would like to. Or in this case it looks like 
you select cities and you would like to join all accounts from this city. And this article will let you know more about it. 
Something like theoretical stuff. In my case it's pretty simple so I will select only one Table one Couple of columns 
from this table, no joins at all. And here is how I do this. But then I will need filters because my plan is to select only 
data for a certain realty type and certain offer type.  
  
  
Speaker 1
 
 I plan to get corresponding values for my filters with the help of no code tools. So I expect to get such values. I will 
show you how to operators process parameters a bit later. Now we consider we getting it with a special get 
commands from process parameters. So we get couple of guids type and offer type and then we make filters. Such 
filters are made with the create filter with parameters method, which is I think the most popular method for building 
filters for entity schema query. And this filter condition is pretty simple. Column equals value and finally our where 
statement will look like this column equals one value and another column equals another vote. By default, a logical 
condition to join all the filters we have in filters collection is logical and that's why we do not modify it.  
  
  
Speaker 1
 
 Because we know for sure that by default our ESQ filters has end logical connection logical conjunction operator. 
That's why we have it without any special setting. So if you want only for debugging purpose, you can get SQL text 
from your query, so it's possible it's supported. You can get SQL text and we can save it and then to use it for some 
display, but only for debugging purpose, especially in like especially highlight this for you because for real execution 
you do not actually need this SQL text. It will work even without your asking of SQL. And this is just for your better 
understanding of how selection is performed. So this will be necessary only for debugging for us.  
  
  
Speaker 1
 
 So when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's 
done and we can run the main function for selecting data. This is getentity collection method, which finally returns 
as some collection. Also you may notice that we use special arguments here and here. And this argument is called 
user connection. This is very important instance of a class which represents current user connection context. So 
user connection is unique for each user session. Even if you have supervisor user and you started your system 
twice, for example in two different browsers, you will have two different user connection instances for this. So user 
connection has a lot of useful properties like current username, current user id, current user contact and some 
system stuff like information about database connection, some security stuff which is also important to know.  
  
  
Speaker 1
 
 So generally when we user connection in our code it represents current user context and this is mandatory to 
operate with creature database. So each time when you will run any kind of query that you want to be finally 
operating with your database, you will have to provide user connection because this one is like in general what you 
plan to select. But user connection is an important argument which tells the system who exactly is running this 
query. System will include access rights permissions if necessary if this user is not an administrator. So user 
connection is a very important context information for system and it's mandatory for any database related 
operation. Okay, we finally got our collection as a result, this result is set of records. Each one represents an entity 
class entity represents one single data row of a certain object.  
   
Speaker 1

--- Page 14 ---

  
 And as we get this collection, we have to process it line by line. So we can use for each statement or there are other 
ways to process collection. In my case I prefer to use for each and we use it for each row or as many rows we have 
in collection. We will have as many runs of our cycle body inside of our cycle. We can have this entity reference 
which implements just one data row of the collection and we can run. So this entity record is actually a supports an 
interface called Entity I entity and that's why it has methods. So we can run methods like get typed column value. 
Get typed column value lets us to get certain value of a certain column from our data row.  
  
  
Speaker 1
 
 So simply speaking, this is the line how we get exact decimal price from our data. And next line is getting the same 
approach for getting decimal area. We have some counters here which we use to collect all the prices and all the 
areas. This example is pretty simple and so I'm just going into so many details only for those of you who probably 
have not so much experience of C Sharp. So you will understand in general how it works and you'll be able to 
reproduce it and fix it if something goes wrong. Finally, when we finished we'll have counter for prices and for areas 
and then total result will be a result of division of all the prices by all the areas and we will have a final result and we 
will save it into a certain parameter.  
  
  
Speaker 1
 
 Currently it looks like our code is ready. We don't have corresponding parameters so far, so possibly we have to 
implement it and then save and publish. But it looks like we need some like say five or ten minutes or break. So let's 
make it break and then we will continue this stuff and you will see that finally it's not so boring. And I will also show 
you how to debug such code today. So let's make a break. If you have any questions in the break also please note 
please Type them or just ask. I will come back in less than 10 minutes. Thank you for waiting. Let's move on. And 
now we have to think of how to actually use this code into our process. So we have this part and we fixed all the 
items here. Now we have to think of parameters.  
  
  
Speaker 1
 
 C Sharp sources inside of business processes can get some data from process interpreted part and then return 
some data into processes interpreted part. The best way to do this is to use parameters. So parameters can be 
considered as a variable for the process and process. Items also may have their own parameters. So in general we 
can think of parameters as global variables for the process or for certain values of process items. I plan to work with 
global process parameters and we need some of them like reality type id. So we plan to register such parameter as 
unique identifier. Code is used inside of programming title can be used for user interface settings in process 
diagram. That's why use popular so title and code. I copied it from the code. So here I used this one.  
  
  
Speaker 1
 
 And when we use get generic expression on getting grid value and this parameter as an argument we ask system to 
read corresponding parameter value from the process and also we will do with the offer type. So I copy its name 
show it for you Go to process parameters. Also I need to explain if you click on some process item it will show you 
selected item properties. If you click on the blank or if you click on this green button you will see process from 
properties. I prefer to click on the blank because it's easier and parameters add unique identifier offer type id we 
need it as arguments for our code. Okay, couple of arguments are ready. Then I plan to return back debug sqltext 
parameter so it will be text 500.  
  
  
Speaker 1
 
 So creating parameters you like declare variables for your process and the final result will be my average price 
parameter and it will be decimal. So add decimal parameter and I will do it like this. Okay, I hope you are quite good 
in doing it. So my question is for Monica and Paddy. Please confirm when you finish this part. We create couple of 
Guids unique identifier, 1 text 501 decimal. Monica and Paddy, please confirm when you're ready with this. Thank 

--- Page 15 ---

you Monica. Thanks Paddy. Okay, great. So we can move on. So we plan to use such parameters, but also I will tell 
you that unfortunately we have so fortunately we have possibility to run process as a no code tool with no 
programming from section list or section page in Freedom UI and unfortunately we can only pass one single value 
as an argument.  
  
  
Speaker 1
 
 So my plan is to use as much as possible of no code here. And for example we can select a source certain record or 
we can open certain page. Then I plan to make a button which will run the process, but unfortunately we can only 
pass one single data value as argument when running no code parameter processes. So in no code mode we can 
only pass ID of the currently selected record argument. And I plan to use it in my process. So my plan is to get this id 
then to use no code tools to select corresponding data values from the database and then to provide corresponding 
parameter set. So as example in my case in my parameters I plan to get an input process parameter and we can 
name it reality id.  
  
  
Speaker 1
 
 It will be also unique identifier so we can call it realty ID parameter and here its title will be reality id. Title is 
important for user display and code is important for programming. Okay, and we can set this parameter as input 
parameter. Input parameter will be designed as read only. So process expects this data to be set at the beginning of 
the process when process is called and it's not expected to be changed it. So input parameters will be treated as 
read only. You will not be able to save its changes. We have no initial value, so we expect this data to be provided 
from input. You can see that input parameters only one single green colored arrow and the directional parameters 
are used with two sides arrows and green and red. Okay, so we expect to get this reality id.  
  
  
Speaker 1
 
 What we will do with this id, I will use a bit of no code tools. Read read data item carefully placing it on my diagram. 
You see, there is a special display when you put it properly. Okay, my read data item will be used to get ID of type and 
offer type. So read first record of separate selection. Okay, what object? Reality object which is a Freedom UI 
example. In reading one single record, it makes sense to make filtering. Otherwise we will randomly get some data 
record and we want to get a corresponding proper one. So I will make a filter click here, add condition type ID for 
comparison equals with parameter and I will select my process parameter realty id. This is and then click select or 
double click here. That's how I will make this filter.  
  
  
Speaker 1
 
 This filter will be enough to make read data to select just single record from my database and we can name it read 
reality. Read reality will be its title and it will be also shown here. In general, it's good idea to provide corresponding 
titles for all of your items and no need to sort if you have just one record and reading all columns. I do not 
recommend you to use this option. So reading all columns Means you don't care how many columns will be there. 
And in some cases it can happen that you will have too many columns. So it will mean that you unnecessarily load 
your system with querying of all the data you have. So it's much better to set read data only for selected columns 
only. And we can specify what columns we are interested at.  
  
  
Speaker 1
 
 We are interested in type and offer type. So originally we expect to get only ID of the certain reality record. Then we 
will look into database to get its type and offer type and then we will use read data item to get such type and offer 
type. Once we obtain it when process is started, results of such data records will be saved somewhere inside of this 
read data item. It turned out to be not very easy to get it outside from it with programming. So I decided to have a 
separate two parameters at process level. So I have specially designed parameters for type and author type and 
when the parameters are at the process level makes it not so hard to get and from the C sharp code.  
 

--- Page 16 ---

 
  
Speaker 1
 
 So we will use getting data from read data into process level parameters and we can do it easily with formula. 
Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal 
value to. This is for example type ID and right part is formula expression value which will be used now just to get 
some data out from deeps of read realty parameter and offer and type. When I click double click here you see a 
special macro which displays formula expression and this expression will be interpreted in runtime and replaced by 
corresponding value in runtime. Formula is an interpreter tool so it will be started and run according to its settings.  
  
  
Speaker 1
 
 My process will be started Set type it this is our formula title the same approach another formula drag and drop it 
carefully will be used to set offer type id. So parameter target parameter is offer type ID and form of value takes data 
from process elements. Read data offer type double click and then we have this macro save it. That's how we save 
this offer type ID here this item. We can call it calculate average price or calculate AVG price. This is our calculation 
part. Now it looks like we prepared with the set of no code tools parameters that we use for filtering. And now it's 
time for us to save our process. But first of all I want you. I want Monica and Padik to confirm that you are good at 
this stage.  
  
  
Speaker 1
 
 So if anything should be shown or explained, tell me please. If it's not clear what we are doing also please ask. 
Thanks Betty. Thanks Monica. If you have any questions, don't. Don't be shy, don't hesitate to ask. I'm here to help 
you understand that listening and doing examples at the same time, it's really harder than just listening. So if any 
questions or some misunderstanding, tell me please. I will be happy to assist. So our recent steps included taking ID 
that we expect to get at the beginning of the process reading corresponding ID of reality. I read only two columns, 
type and offer type. Then I used two formulas to get it out from results of read realty and then that's how we get 
such parameters and then pass this data at our script task part.  
  
  
Speaker 1
 
 So Monica, if any assistance needed, just tell me that we know now. You see, I saved my process and I did not 
explain what is happening here. So when I saved it system. Oh, thank you, Monica. Thank you. So system told me 
that oh, you changed your C sharp part so it requires compilation. And now it saved my metadata and then started to 
do publishing, which physically means compilation. We can check what's going on at our application server side. We 
can see who exactly consumes most of our system resources. Now we can also look at memory consumption and 
possibly I looked here too late because I already do not see any traces of compilation. But CPU high volt CPU is quite 
loaded, so possibly we will see. Oh yeah, we see it here. We saw dotnet Exe at the top of consumption of cpu.  
  
  
Speaker 1
 
 You saw dotnet Xeno you see. So here we have parts of. NET Core framework which is used for creation and it's 
compiling our assembly in a dot net library. As a result, we extract expect to get set of DLLs and our package is set 
to be compiled as a separate assembly. Let me explain now, probably I will be not happy. No, I will not be able to look 
at it the property of my package. So when we designed our package, it was automatically set compile as separate 
assembly while compilation is going on. Unfortunately, our system will be not response it will not display some data. 
So we will see forever hanging requests. And this will happen until our compilation finishes. When it's successfully 
finished, then we will see unfreeze of all pending queries.  
  
  
Speaker 1
 
 So now you see our realty package has initial setting compiled into a separate smart. This option means that our 

--- Page 17 ---

contents that we design in our. Oh, Monica, you have to leave. Thank you. Thank you. Thank you very much for this. 
Well, soon we will finish very soon. Thank you. Okay, so our package is compiled to separate assembly. So it means 
special mode when package compilable part is Saved separately and compiled separately into a library that will be 
saved somewhere on disk nearby to our package stuff. So here we have USR realty. Here we have auto generated 
code. This code was generated by creatio according to the process structure. You see class definition. Class name 
is designed as name of our process plus process methods wrapper suffix. So we have class name as combined 
stuff from process name and some suffix.  
  
  
Speaker 1
 
 Then we have method inside of it and you can see oh, this method is a constructor. Okay, not so interesting. This 
method is implementation of our script task. As we did not name our script task into something useful, then this 
script task has named Script Task 1. Let me show you our process. This script task has parameters and this is just 
name Script Task 1. That's why inside of our code we saw Script Task 1 execute. The text for 8 is exactly the same 
as we typed and saved. And finally this class will be used into compilation to get final result of compilation which is 
saved into files bin. And this is our DLL which includes results of our logic. Probably if we look here we may find 
some code.  
  
  
Speaker 1
 
 But until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing 
this code. But you may just trust me that finally this code includes business logic and our class stuff here. Okay, so 
finally we compiled our solution. It turned out into a DLL saved on disk. This DLL is used as part of our application 
website. We have approximately 200 of similar DLLs and if our package for example was not compiled a separate 
assembly. So if you disable this option for a package, then it will turn to much longer compilation. Because a lot of 
base product packages, they have no such option. Compile a separate assembly. So they all compile into one big 
DLL which is saved here in terms of configuration auto generated folder.  
  
  
Speaker 1
 
 So we have this set of C files and bin folder here turns into this DLL. So now you see 11 megabytes of executable 
code, which is quite a lot. And this is result of compilation of big number of base product packages that finally form 
this dll. So recompilation of such DLL takes much longer, probably three or four times longer than compiling of 
separate assembly. Adrian is asking what the difference of setting parameter value formula and by directly selecting 
the withered parameters section by process elements. Oh, Adrian, probably you are asking about this. We have a 
parameter, we have value for it. So we could provide value into this parameter and saving it directly from read data.  
  
  
Speaker 1
 
 Yes, I understand this idea, but I do not like this, because it will be not clear for me at what moment of time this 
parameter will initialize its value and at what moment of time this parameter will change its value. So possibly we 
can do this. You can try. And each time when your read data changes or it gets new results, your parameters should 
have corresponding mapped values from read data. But I prefer to make it clear and obvious according to the 
moments when we have some changes. So this is read data. As we finished with this item, it will have its own 
parameters and some results of selection will be saved somewhere here. Then we have formulas to get data from 
this and put it into parameters here. And it looks like quite exact moment when we change parameter values.  
  
  
Speaker 1
 
 With this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly 
parameter will be changed. And so I think that our example will lack obviousness and lack visibility of what is going 
on. And is it more secure to use formula? Oh, I think it's the same. So it should work when you map parameter 
directly, but mapping parameter directly. So it's something that we can do like this, we can map it to process element 
like type like this. Mapping it directly makes it harder to analyze. So personally I do not like this, but I think it's 

--- Page 18 ---

supported on the platform, so you can do this. Thank you Adrian for your very interesting question. And let's move 
on. So now our simple example is ready.  
  
 
  
Speaker 2
 
 I have a quick question about the.  
  
  
Speaker 1
 
 DLLs if that's okay. I do.  
  
 
  
Speaker 2
 
 Is it possible when we're creating them this way that we can call other DLLs maybe outside of this package?  
  
  
Speaker 1
 
 Okay, we can. Sure it's possible. Let me show you. We have also process level methods. This is kind of a method 
that is inside of script task, but we have also process level methods which can be used globally on the process level. 
For example, if you make a big logic and you finally realize that you do the same steps from different parts of your 
process, maybe you can implement it once in methods area and then call it many times with different script tasks in 
your process. So it makes it more organized and better constructed so you make it easier to support in future. Also 
we have usings and you can include additional DLLs and namespaces here. So you can include necessary DLL 
necessary namespaces from DLLs from other parts of your system and that's how new namespaces will be 
available.  
  
  
Speaker 1
 
 And this will be normally compiled and executed. So it's quite common thing how you can add Other libraries and 
namespaces with usings and these usings will form into. Let me show you pkg configuration pkg Then your 
package, then your source automatically generated source. Here you can see on this table standard set of usings. If 
you add your own, it will be added into this list. So that's how sometimes developers really need to use for example 
Newtonsoft JSON library to make it simple with serializing or deserializing values and maybe other libraries. So you 
can add it here by providing using in process methods part okay, so we successfully saved and published our 
process and you saw it was no problems with compilation.  
  
  
Speaker 1
 
 But in real life, when you do development of your own solution, of course you will get compilation issues, you will get 
error messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and 
finally you'll have to make your process work normally. Please note if your system is saved in a state, that means you 
have compilation errors. You will not be able to apply any changes in compilable area until you fully fix your issue 
with compilation. So it's better and it's like strong advice for you. It's better to keep your system always in fully 
compilable mode. I mean making your solution. If you try to compile, it always compiles successfully. Because if you 
keep your solution with compilation errors, you will never know that something is working good or not.  
   

--- Page 19 ---

 Speaker 1
 
 And you will not be able to easily apply changes in your compilable stuff because each time you try to compile you 
will get the same errors. So it's recommended to keep your system to be saved in a healthy state when any 
compilation finishes successfully. So we already have some part of our process which finally performs some 
calculation. We can register our process at our section. I will show you how we can do this. So we can run a process 
as a action in our list, or we can run a process by action or a button in edit page. From edit page it looks a bit easier. 
So let's start from this opening our Freedom UI edit page, then go to its editor. We will finish soon today's session, so 
don't worry.  
  
  
Speaker 1
 
 I understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more. So 
this is our page design. My plan is to run my process by a button, but I predict that I will have a bit more different 
actions, so possibly I can use a button with sub menu. Let me show you how we can do this. For example, we can 
put a Button somewhere here modify its size, style and title like actions. And we can also provide some kind of 
typical icon used for actions. Something like this. This is very typical for creation no its own action. But we will have 
menu items. Let's make a subordinate menu items like calculate average price.  
  
  
Speaker 1
 
 This will be our action title Action value will be run business profile process this one run process which process to 
run calculate average reality price. And we have different modes to start our process regardless of the page means 
with no parameters for selected page means for edit page data and it means we can only pass record ID as 
argument. This is good for us. And also we have new mode which appeared recently the selected records in list it 
will get list argument. It's not for our case here, but this is feature which appeared just recently in 8.1.2. I guess so 
just very recently. Okay, select the page and we have process where the record ID is passed. We have only three 
suitable parameters. Thanks developers for filtering this.  
  
  
Speaker 1
 
 In previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good 
because all parameters included integers included decimals so not suitable for grid and we only now see some 
filtered stuff. So realty will be recipient of our ID of currently edited record. And as you can see this is a no code 
setting so it doesn't require any special coding for us. So we can do it with no code tools by passing this data. Okay, 
great. We can also use this icon for this stuff. We can do some calculation icon that will demonstrate make it a bit 
more attractive menu item.  
  
  
Speaker 1
 
 We can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view 
config diff so as you can see this action is quite easy to do. Let's go back to actions list and we can check how it 
works. So action will be always available. We can just save this page. Also in recent version we had an unique option 
to run processes by for list for selected records in the list. Let's do this. Let's go back to list page. We can also make 
customization here. Now we can make an action it will be started for list. We have a special settings here Filter 
element bulk actions Such bulk actions is called by so we can call it. We can find it here when we start to select 
data.  
  
  
Speaker 1
 
 So let's make one more bulk action like cultivate average price. Our action will be again run process where. Oh, it's 
my fault, I do it incorrectly. Sorry for this. Not. Not this way. Okay, let's go back. So it was not correct approach. I 
need to make a. But instead. Okay, let's make a button. Let's put it somewhere here. Size. Okay. Action run process. 

--- Page 20 ---

Which process to run? Calculate average realty price for selected records in list. And we have the unrestrictable list 
here Data table this one. Okay. No subordinate items. So it will be just an example for you how you can run process 
in lists. This feature supports is supported only starting from version 8.1.2. So quite recently only for recent months. 
I think if you have a bit older version, you will not be able to implement this easily. Okay, save it.  
  
  
Speaker 1
 
 Let's just start to test it. So we can close the editor. You can also close this one. Maybe let's reload just to fight with 
any possible occasion of browser cache. So let's calculate something for houses for sale. For example, for this 
record calculate average price. Something was started with name undefined. Not found Something is not good here. 
Okay, we can also check process log. Did we have any start of the process day? No, means that we faced something 
wrong. I did not start. Okay, and let's go to reality edit page. Okay. Apartments for sale. Opening it. So as an 
argument we have this ID actions calculate average price successfully started. Now we have no visual output. So we 
only know that process started. We can go to process log. We can see that process successfully completed. We can 
open history execution of this item.  
  
  
Speaker 1
 
 Sort by date of start, read set formulas, calculation finish. It looks like everything went correctly here. We do not 
know exact values, exact numbers. We will study debugging of it tomorrow. Now we just make sure that the process 
starts and normally finishes. Okay, now let's fix our stuff with the list. Looks like I missed something very simple. So 
let's go to customize list again. Here is our button that runs process this process. How to run the process? Oh yeah, I 
just missed very important parameter where the record is passed. Real TID parameter. So it was my fault. I 
overlooked it. Okay, save it. Save this stuff and then we see how it goes. Okay, close probably to work. No, we have 
to reward it Houses for sale. No, no. We wanted to run it in list.  
  
  
Speaker 1
 
 Okay, so this one is our list Selected data Calculate average price successfully started. I expect to run only one 
instance of a process here. Yes, it was correctly started seconds ago. We can see all the steps were done. We can 
also see execution diagram which will show us these steps executed. And tomorrow when Monica returns and you 
will be not so tired. So we will move on with. We will move on with Debugging this code and also making it visible 
visual. So today we made only part of the work. Today we implement the main calculation part of the process. We 
got some result data, but we do not know how to actually see it. So tomorrow I will show you. Today we only 
focused on C sharp part.  
  
  
Speaker 1
 
 But in order to make this example fully working, we need some more items and we need debugging to make sure 
that our code works accordingly our expectations. I just wanted you to see how we can run this calculation for 
multiple scenarios. For example, houses for sale, houses for rental and apartments for sale. We have three selected 
records. We can run this process and I expect to run three instances of processes. Let's check out. Yes. Now you 
see the last minute we have three instances of processes started and each one with its own input arguments. So 
how many records you run? The same number of records you will see here in calculate average price. Process log 
record Process log shows you history of all started processes in your system. And for each process started you see 
its elements.  
  
  
Speaker 1
 
 You see start and end date is status. We will see how you can how we can debug this especially C sharp part and 
also how to check its performance. So today's session is over. The most interesting part will be tomorrow when we 
will run this process and display some data and also how we will debug this process. Thank you very much for your 
today attention and education case. In case of any questions, please ask and we'll see each other tomorrow. Thank 
you very much. Adrian Peddy, Francisco Rakhi and others. Thank you.  

--- Page 21 ---

  
 
  
Speaker 2
 
 I have a quick question, if that's okay.  
  
  
Speaker 1
 
 Yes, yes, please.  
  
 
  
Speaker 2
 
 It's just about business processes. So at the moment we're tying them to. We're binding them to buttons. But like, 
what can we bind them to? Like how robust is this? Can we bind them to like objects or can we bind them to 
whenever a data is changed on a certain object or something like that?  
  
  
Speaker 1
 
 It's possible, sure. But I try to keep it simple and use it as possible of no code. That's perfect.  
  
 
  
Speaker 2
 
 I understand.  
  
  
Speaker 1
 
 I'm just curious manually. But yes, Later I will show you how we can trust trigger some business logic that will start 
according to data change. So we will do data change and for example insert of new reality. And then we can run 
some business process that will start only in certain conditions. And for example, only if house or apartment for 
reality was added. I will show traitor. It's not so difficult. So we are looking only at small part of available tools that 
we have on board. On business process platform. So I'm trying to show it simply. But in general it could be much 
more complicated. And also processes can be more complicated. We have a sub process item which makes it 
possible to develop big processes that contain smaller processes inside.  
  
  
Speaker 1
 
 So you can do it in much more complicated way and trying to keep it simple. Because we are studying. We need to 
see some simple examples, understand how it works, understand how you can control it, and then go further with 
more complicated scenarios and topics. Thank you. Brilliant.  
  
  
Speaker 2
 

--- Page 22 ---

 
 Thanks a million.  
  
  
Speaker 1
 
 Thank you. See you soon. See you tomorrow. As usual, you will receive video recording very soon. Thank you. 
Goodbye.