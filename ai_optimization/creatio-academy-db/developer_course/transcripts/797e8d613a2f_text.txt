--- Page 1 ---

 
  
  
Speaker 1
 
 Today is session number eight of our development on Creature Platform Guided Learning and we will continue to 
work with server side features and functionality. So today we will focus on the web services, making our own 
classes at creation server side and make it work at the web service, write C Sharp code and practice with calling of 
web services from Creature client side and from third party applications. So today is quite big plan. I hope we will 
have enough time for this. So possibly we will spend a bit more than two hours. I will try to squeeze it into our 
today's session. So what about web services and why we need it? In general, web services are server side items that 
we can easily call from client side with the help of HTTP queries.  
  
  
Speaker 1
 
 So when you look at your network tab, for example, when you open any record page, you see plenty of different web 
service requests, different HTTP calls that were executed from server side. So from client side to the server side 
with different request body with different responses and in general all our website operation is set of different 
queries, different HTTP requests and then getting some responses at client side. Creature has a lot of embedded out 
of the box web services. Some of them are system web services, some of them are developed at configuration. And 
we can create our own web services if necessary. So we can do some certain functionality. And it will be much more 
efficient than to do the same functionality at client side. Because client side is less safe, it's less powerful. Not so 
fast as server side.  
  
  
Speaker 1
 
 So client side definitely is not the place where you would like to perform some sensitive data operations or 
calculations. So server side is a very natural place to do some complicated business logic like doing some 
calculations, data processing, file processing and so on. So web services can be created in configuration and if 
you're interested you can look at existing examples. If you search for C Sharp sources that contain the word service 
in their name or title condition is contains. Okay, you will see a lot of examples. You can randomly select any item 
and you will see some C code inside. So the reason why we have so many web services is need to have and to run 
different functionality at server side.  
  
  
Speaker 1
 
 Usually it's written in C Sharp and today I plan to explain how you can create your own web service, how you can 
make it run and how it can be useful for you. So we have a lot of existing examples, but the most important you need 
to remember that web service is a special piece of functionality that was specially designed to be called from client 
side. And this piece of functionality usually has no own user interface. It can only be called with the help Of HTTP 
queries like this, you can see examples of HTTP query. Here you can see request URL request method type, you can 
see some payload which means data parameters, you can see some response and so on.  
  
  
Speaker 1
 
 So in general web service is something that we can call from client side which works at server side, usually gets 
some argument data, usually returns some result data and also makes some useful work etc. Side and that's why we 
need it. So it's a very common functionality to use to run different business logic. We have a lot of standard based 
platform web services like web services to get data like this one. This web service is called data service. We have a 
lot of other web services like file API services, like system setting services and a lot of other services. So probably 
hundreds of them. And also creation configuration offers us possibility to build our own web service to provide our 
own server side functionality that can be called from client side. And it doesn't matter which kind of client side you 
are using.  
   

--- Page 2 ---

 Speaker 1
 
 Is it a freedom user interface or if it's a classic UI so you can use web services? Absolutely the same because server 
side is on the single item and requests and payload and response data will be parsed and will be processed 
absolutely the same way. So we will study how to make our own web services. I also want to mention that web 
service can be used with a third party applications. So this is a tool of other system may call some functionality at 
creation ask and may probably transfer some arguments and then get some results. So we will study how to do this 
and before we continue I recommend you a couple of very useful examples. As you can see, we have plenty of 
examples here in base configuration.  
  
  
Speaker 1
 
 If you randomly select then you probably will face unnecessary complex examples which will be hard to use it for 
training purpose for your study. So that's why I recommend you to use couple of very useful and simple examples. 
First one is a cryptographic service located in CRT base package. So it's a base platform item and it will be found in 
any creatio system. So you can find it at any environment, you can open it to see its code. So physically this is a C 
sharp source code item piece of code written in C and then to be compiled inside of a package or inside of an 
application. By the way, it's interesting, CRT base seems to be a package that is not compiled as separate assembly. 
Yes.  
  
  
Speaker 1
 
 So it means that contents of this package will be compiled in all terasoft configuration sln and you will have terse of 
configuration DLL as A result. Okay, so this is a simple C Sharp code as I told you at the beginning, just expected but 
that creation developer has some experience in C, in JavaScript and also in SQL scripting. So here your C Sharp 
knowledge will be requested to be important. So physically what we have here we have a class which is declared in 
the C sharp module. We have set of usings and also namespace decoration. There is a tradition to put your custom 
classes into terrasoft configuration namespace but you can also make your own namespace and put your logic 
there. So it will work absolutely the same.  
  
  
Speaker 1
 
 We use set of standard base platform and system namespaces that are necessary to declare our class to use some 
of functions that we need inside of it. And mainly all these stuff is made possible thanks to system service model 
namespace and I need to say that creatio uses. NET framework backed tools to create web services based on WCF 
Windows Communication foundation web services. So there are several conditions how we can make such a WCF 
web service. We have to declare a class. In our case it's recommended, strongly recommended to inherit it from 
base service. I will explain it a bit later why this is so recommended. But generally you have to create a class and 
decorate it with a special C sharp attribute, service contract attribute and ASP NET compatibility requirements 
attribute.  
  
  
Speaker 1
 
 And then inside of this class you should make at least one method to turn it into endpoint something that we can 
call and this endpoint must be decorated method. This method must be decorated with operation contract attribute 
and some additional web invoke attribute. All such rules how to make it were delivered from WCF so it was not 
invented by creative developers. We just used WCF based approach for making creation web services. So when we 
have such class decorated with attributes, when you have at least one method decorated with corresponding 
attributes, when we compile our package or when we compile our full creation solution system will make DLL based 
on it and also it will host so it will register endpoints and it will host our web service at our website.  
   
Speaker 1

--- Page 3 ---

  
 So after compilation this web service will be fully operational and it will be ready for calls that will be done from 
client side. It could be done from creation client side or even from third party applications client side. We will 
demonstrate how you can use it. So I will show you so the main reason why we need web services is to make some 
functionality that can be easily called from client side of creature page or from client side of third party application. 
So we can also use it for integration purpose. Okay, let's look Closer how in general it works, we can create at least 
one method decorated with attributes, and it makes sense to organize some kind of attributes that will be passed 
into this method and get some results back.  
  
  
Speaker 1
 
 Also we will have some business logic functionality that also can include access to database, operating with some 
files, running other web services and so on. So we can use some useful method body. But in general you should 
expect that web service method can get some optional parameters, can return some results. If your data type of 
arguments and results if display the type is simple and standard like string, decimal, integer, guid or boolean or 
something like this, which is very easy for creation, to decode, to parse, then you need no additional settings and the 
system will be capable to run such a service and you will be able to transfer such relatively simple parameters as 
arguments or get result data.  
  
  
Speaker 1
 
 But it can happen that you will need more complicated arguments like structures like instance of classes, objects 
and so on, and you may need to return some complex responses and complex result data. As example, you can see 
when we run some query at our creation list page, you see some request and response which usually includes a lot 
of properties, a lot of different values. Definitely for such complicated request body, we need some classes and we 
need to organize it in more or less structured way. And also response usually includes a lot of additional subordinate 
properties, values and so on. So it's also important to have a corresponding data types. So in case if you transport 
as arguments or get as results complex data arguments, you need some additional classes to let WCF know how to 
de serialize of arguments and serialize of results.  
  
  
Speaker 1
 
 Why I'm saying about serializing because server side will be a dll, a library with a runtime code which will be capable 
to operate with some data with a certain data type. When client side calls a web service, it usually packs so parses, 
maybe encodes your arguments into a string. Here you can see an example of a big JSON string. So when server 
side receives such string, it must know how to convert the string into an instance of a class. And this procedure is 
called deserialization or deserializing, which means getting a string and then convert it into a class instance. This 
deserializing should be done according to some class information, and that's why we need definition of the class 
which was used to transfer this data.  
  
  
Speaker 1
 
 The same task will happen when server side already finished execution of a method and needs to return some data. 
So server side returned data also represents some class with some properties, and then it's necessary to serialize it 
back into a string because originally HTTP query will transport some string for you as result. So serializing and 
deserializing is important part of any web service call. And in case if your data is complex so system will fail to 
deserialize it without additional information, you should use special classes such as data classes. Let me show you 
another example. So let's remember first one is cryptographic service which I recommend you to look at as a very 
simple and very useful template for your own services. And one more, a bit more complicated data. No, no, no. Visa 
data service, we need to look at all packages.  
  
  
Speaker 1
 
 Visa data service web service is a good example of a web service which is designed to get some arguments and 

--- Page 4 ---

return some results using complex data type. In this example, Request options is a complex argument that is 
provided as an argument for your method. So we need to find corresponding class somewhere here. This class is 
called request options and you can see that in case if you need to transfer complex data arguments, you must create 
such a data type such class for your data transfer and you must decorate it with data contract C sharp attribute for a 
class and data member C sharp attribute for all fields or properties that you plan to serialize that you plan actually to 
transport. So this is example of much more complicated arguments for your data transfer.  
  
  
Speaker 1
 
 And if you need it, so you have a lot of examples how to do this. You have samples in Creature, you can easily open it 
and find it. So don't forget about this Visa data service a bit more complicated example, so it will really work well for 
you. Why you need such examples? Because it's really hard to remember all necessary settings and implement it just 
by your memory in next example. So decorating a class with such attributes, decorating methods with such 
attributes, it's quite hard to remember. So I prefer when I need to create my own new web service, I prefer just to 
copy and paste some pieces from this example. It works well and it saves your time. So I think it's one of the most 
efficient ways to create your own web services.  
  
  
Speaker 1
 
 Now I will show you how to make our own web service. How to use Visual Studio for its development, to make it 
more efficient and to make possible development of complicated functionality with a powerful editor. So let's do our 
own example and also later I will show you how to run it from Creature side, from Freedom ui, from Classic UI and 
also from third party application like post one. Let's go to our Freedom UI package and our creation of a web service 
starts with making of a new C source code item. We can create it only from embedded editor. So we select our 
package add source code. When doing it makes sense to provide some good looking friendly name because this 
name will also appear at file system, it will travel to version control.  
  
  
Speaker 1
 
 So having this name well spelled is a good idea in general. So let's call it realty service and we can make the same 
title for this source code item saving our package no description and just apply. So as you already remember from 
yesterday example with handling object events, C source code item is just a big set. So it's just a code part of a C 
module and possibly you can also add some localizable strings into it. So we can put our code here if you work in 
cloud conditions or I just put some sample code if I work in my local environment. I have to save this item because 
we need to properly organize and make this item saved before running of Visual Studio to make our development. 
And now I need to explain you some business sense of it.  
  
  
Speaker 1
 
 So my plan is to create a web service that will work at server side and will be capable to calculate maximum price of 
reality objects filtering them by type and offering type. This is important because it's not good idea to mix 
apartments, houses, parkings and so on. And also it's a good idea to filter by offer type because it's definitely not 
correct to mix rentals and sales. So the business sense of my web service will be to do some database calculations 
to do some operation with database. And also it will work as a good example for you how you can use alternative 
ways to operate with data without use of object model. So let's move on. Here is our C item. Some dummy code is 
here. No localizable string so far. Okay, great.  
  
  
Speaker 1
 
 We can as you can see we have a star here which means not all the items were fully saved on disk. So let's do this. 
Download packages to file system. This usually is a safe action. It helps us to get all things right at the database. 
Now you still see this star. So sometimes you will get this star. But it's it doesn't show that something is really 
missing on your disk. So sometimes we have scenarios where this star doesn't disappear. But in general everything 
is okay with our data and all the stuff was saved on disk. Let me show you what you can see on disk now. So we go 

--- Page 5 ---

to our app folder test of the web test of configuration pkg. Then we go to realty package folder schemas realty 
service. Now you will see some metadata files.  
  
  
Speaker 1
 
 I strongly recommend you not to modify Anything manually here and C sharp file which we will fill in now with the 
right good looking code. As usual I prefer to use local environment advantage and one of them is use of file system 
and use of external editors. So we can use Microsoft Visual Studio. I'm using Community Edition to operate with this 
code using external powerful editor. And previously we worked with realty events. Now we have one more item here, 
so possibly it will be updated quite soon. Now you see some realty service code and it's just not set properly. Okay, 
so let's do something here. As you remember from yesterday's session, here we have full support of intellisense 
autocomplete and you can put using system service model and so on.  
  
  
Speaker 1
 
 I already have an example which implements all this logic and that's why probably it makes sense to do it faster. So 
let me show you. Here is my example of code. It's too big to fit into one zoom message in chat. So we try to fix it in 
two messages. Okay, this one and another is this. Okay, good. So now if you want you can get it from chat message. 
So I will put it into my C sharp code when I develop using Visual Studio. Finally I must save my changes otherwise 
creation will not see it and will not include it into our compilation. What is inside here? This example was originally 
made based on cryptographic service example. So I copied this part from it. And of course we have our own name 
for the class. My class is named realty service.  
  
  
Speaker 1
 
 There is a tradition of creature developers to name classes which represent web services with the help of service 
suffix. So if you do something when you develop C sharp class for the service of it will be do something service. And 
it's quite common tradition. You may find a lot of examples in base product logic. So we made a class realty service 
and inherit it from special base service class. I need to tell you a couple of boring sentences about why we need to 
inherit from base service and generally the most important reason. So let's go and use Visual Studio tools to help us 
to understand what web service is. So we can click here you can see decompiled sources of base service class 
because its namespace is telesoft web common provided as a dll. So actually we don't have original services of this 
cloud.  
  
  
Speaker 1
 
 But thanks to decompilation features of Visual Studio we can see some code from it at least interface part of it. And 
it has a lot of useful things. And the most important I think is property that is named user connection. Let me show 
You a lot of libraries abstract class service. Yes, this one the most important property, user connection. So user 
connection is a reference to a class that keeps context of our current user session and current user connection to 
the database. As you remember, user connection is used always when you operate with the database and it's used in 
many other places where you have to provide some current user credentials data and the current user session 
information. So if you make your own web service without inheritance of base service, you have to get this user 
connection, for example from HTTP context yourself.  
  
  
Speaker 1
 
 Let me show you here you can see examples. So we have HTTP context usually like this, and this works only for. 
NET framework version. But also this code and this application may run in. NET core conditions in for example Linux 
operating system. So for Linux there is another way of getting user connection. And this base service class helps us 
to hide all this complexity of getting user connection reference and we just use it as a property. So you can see 
examples here. This property User connection is inherited from base service and you feel no troubles. So use of 
base service is strongly recommended, especially if you plan to make your solution that will be portable, so it will be 
transportable and compatible with. NET core version on Linux. So inheriting from base service is strongly 

--- Page 6 ---

recommended. We have also other useful properties.  
  
  
Speaker 1
 
 But now you should remember that inheriting from base service helps to get user connection and helps to get it 
initialized properly. When your method started, your user connection property of your class will be already initialized. 
This is important also. Next, what you can see here is a strange interface named iReadonly session state. This 
makes sense only for Windows and doesn't makes any difference for Linux. And this is a marker interface, which 
means it has no methods, but it tells to the IIS that your web service has no code inside that changes session state 
variables. And if your code does not change such session state variables, it means that IIS can afford running your 
methods simultaneously utilizing multi thread support, utilizing multi core CPU and generally making your web 
service calls processed much faster.  
  
  
Speaker 1
 
 So in general, declaring of support of this interface costs you nothing because you have no methods to implement 
for it. But it tells IIS that it can process your web service calls with the fastest possible way. So in general it is a good 
result for high load conditions and for situations when you have performance issues at IIS because of multiple calls 
or the same service and not so fast processing inside of these calls and just for better performance. Okay, so I 
recommend you to use it. And if you are curious, you can also find how many times let's go and make some 
research. We look at all terrace of configuration folder and for the beginning we can search to find any not any all 
files that include service contract attributes.  
  
  
Speaker 1
 
 So now I'm searching through C files which include service contract attribute and I will find approximately 200 web 
services created out of the box in creatio based studio product. Okay, 157 files and possibly a bit more web services 
inside because one file may include more than one web service, but in general. Okay, so 157. Now let's search for I 
read only session state interface usage. So now we find only 54 places where this interface was used. In general it is 
recommended to be used for any windows based creation web service. And you see that each time when developers 
modify some code, when they improve existing web services, when they rewrite such code, reorganize it, refactor it, 
they usually add such interface declaring declaration into code and that why from time to time the number of such 
items is increasing from release to release.  
  
  
Speaker 1
 
 Okay, so this is only for better performance. What we have inside we have some method, but probably I have to start 
with this. This is a simple method which is just gets no argument, returns some string and is organized as a web 
service method because of operation contract attribute. So it tells to WCF that we have to turn this method into 
endpoint and register it at our website. And we have setting get HTTP method the easiest possible way to call a web 
service. So we will be able to run this web service from an browser address bar. The reason why we do this is to 
make sure that our service is normally hosted, is normally operational. So our compilation was successful and no 
troubles with server side. So this method is only to check availability of our class and our web service in general.  
  
  
Speaker 1
 
 You can create a lot of other methods in your class and some of them maybe will be decorated with operation 
contract. If method is decorated with operation contract it will turn into endpoint. If it's if you have just a single 
method which has no decoration, it means that it will be just a regular method that can be called by other methods, 
but not by HTTP query, not an endpoint which is registered at our web server. So as you can see, creating of web 
services in WCF is not so technically complex, especially if you understand how to write C sharp code. So in my 
example I have two methods.  
   

--- Page 7 ---

 Speaker 1
 
 One of them is very easy get example so this is just an example of a method which will return us okay string and if it, 
if we get it means that our web service is present Normally compiled and fully operational, this method get max 
price by type id. So I decided to name this method like this will go to the database and search for realty records with 
corresponding type offer type and also I plan to make it more universal and to call my service from different 
sections. That's why I need to transfer my source table which I plan to use for my calculations. So for Freedom UI 
section my source table will be USR Realty and for classic UI example I will have USR realty Classic. So different 
source tables, but very similar columns, similar conditions and filters.  
  
  
Speaker 1
 
 And that's why I will use the same selection statement to work with different tables inside of my code. At the 
beginning it makes sense to make a very simple check of our arguments and if any of them is empty then we will 
return minus one. So we will do nothing. By the way, we return decimal result and we get three string arguments. So 
we use only standard data types, which means we will have no problems with serializing and deserializing and we do 
not need any additional data contract class in case if you have more complicated scenario, of course it makes sense 
to use data contract and so you may pass much more parameters properties and you can easily extend such 
structures.  
  
  
Speaker 1
 
 Okay, we have several arguments, we check it out if they are empty or not and then I will show you another approach 
to get data. Previously you probably remember we used entity schema query approach to get data. Let me show you 
business processes and calculate an average realty price. It was couple of days before and we used this code and 
we used entity schema query class to make data selection and then we processed it with for each statement and we 
used entity data model here because as a result we get collection of entity class instances where we have special 
columns with data values and we can get such values from each data row. So this approach with support of data 
model worked for us and it respected column names, it respected columns lookups and joins and access rights 
restrictions and so on.  
  
  
Speaker 1
 
 Now I will show you another approach to operate with data which will not use data model at all. So this is alternative 
approach to operate with data, but of course we need to know source table name. Here entity name is used as table 
name at the database. Of course we need to know exact column names and also for lookups you need to remember 
that at database Corresponding columns have id suffix, but @ your object level such columns have no ID suffix. Let 
me explain what I'm talking about. Let's go to objects, find our reality freedom UI object and let's Take a look at type 
column. Now all the columns will be loaded here. USR type this is a lookup column named USR type based on the 
reality type lookup. And we have a dropdown list here.  
  
  
Speaker 1
 
 And as you can see, no ID suffix at column code. But when you go to the database. Let's go and check our database 
D1 you can make filter for tables contains USR. Now we'll have just a little set of tables USR realty columns. Now you 
will see the type column as suffix id and you may also notice such suffix ID for offer type, for city, for country and 
even for created by ID and modified by id. So for any lookup column in your object here system creates 
corresponding GUID column at the database table. But let me show you. You see that at the database table it always 
adds ID to column name. So it's kind of creature architecture. It's not likely that it will be changed in future. So you 
may rely on it.  
   
Speaker 1

--- Page 8 ---

  
 And you should expect exactly the same data columns of your tables. And in general, when you operate with 
database like this, you must go to the database physically to see corresponding table, corresponding columns, just 
to make sure that all your columns that you work with are present and so they represent what you expect from them. 
Okay, my case I'm using direct database operation with select statement. It's also possible to use insert, update, 
delete and even stored procedure classes which will operate with the database directly without use of object model. 
And the best way how you can study how to use such classes is I think searching for existing examples. Let me 
show you how you can do this. You need to use some tool that will help you to find out files at file system. You can 
use Visual Studio code.  
  
  
Speaker 1
 
 You can use Visual Studio or Total Commander. Or in my case I'm using far manager tool inside of JSoft Web folder, 
maybe even inside of JSOP configuration. We can use search for all C files where we have for example new select 
class usage. We will find more than 200 of examples, maybe even 300 examples, almost 300 examples. And there 
are a lot of different so randomly selecting them a lot of different examples. How you can create such class 
instance, how you can set it up, how you can use it and finally get result data from it. Let's look at another random 
example, maybe not so perfect. Here you see creating of a select example from where it's possible to use hints. It's 
possible to use different operators like group by like having.  
  
  
Speaker 1
 
 And sometimes you will notice that use of direct database approach gives you More flexibility and more powerful 
tools than using just entity support and using entity schema clearer method. So depending on your task you can 
choose proper tool. And this select class works a bit faster because it doesn't include entity data model, it doesn't 
create corresponding instances for working with entities, and in general it consumes less memory. And I think it will 
work a bit faster than entity schema query. So we have a lot of examples of select class usage. I'd like you to see 
one of the best examples. I think this one it's I canonic iconic examples. So here you can create class instance. Then 
you already finish with settings and filters.  
  
  
Speaker 1
 
 And also it's important to mention you create class instance and then in order to set it up you use different methods 
like top method, column method, maybe many times from method makes to run it one time where method is equal 
method and a lot of others. So finally running such methods will configure your class to read corresponding columns 
from corresponding tables. You can use joins, you can use different conditions and types of filters. And finally you 
will have select class. You also have to turn it back to select type and then you can use it for data selection. Data 
selection must be performed in two steps. First you need to ensure DB connection physically.  
  
  
Speaker 1
 
 It means get one of the three database connection threads from thread pool from connection pool because 
connection to database is pooled and you have like set of available threads for it. Then you take it and this is DB 
executor reference and then you run your select statement with the chosen DB executor and finally you will get data 
reader. This data reader holds your data and offers you possibility to process it row by row. And you can run its read 
method to get next line of data. And you can use get column value method to collect corresponding result values 
from your result data collection row. In case if you have many rows you can use while or if statement or something 
else which will organize your cycle.  
  
  
Speaker 1
 
 So while read returns you true, you can try to get some data and you can put it somewhere in order to analyze in 
future. So this tool is helpful to get data selection with many columns, as many data rows. And also you may notice 
some strange things here and here. Normally C code correctly operates with data allocates and releases memory 

--- Page 9 ---

with the help of garbage collector. But here as you can see, developers do not trust into garbage collection. The 
reason is when you run ensuredb connection or when you run execute reader, some subordinate functions are 
executed which are implemented in visual C and they implemented as a non managed code. Simply speaking 
Attempt to get some data from the database, runs some code that is part of Microsoft SQL Server client software 
written in non managed way.  
  
  
Speaker 1
 
 And that's how that's why you need to handle memory yourself. So when this method was executed, some memory 
was allocated and in order to properly release it you need to dispose created class instance, you need to dispose the 
STB executor or you need to use special using operator which will do this dispose automatically when this code 
finishes its work. So you need to correctly dispose memory from ensuredb connection and also connect dispose 
memory after executing reader. If you will not follow such recommendations, your code will be compiled and 
working almost normally, but in high load conditions. Especially in high load conditions when there are many calls of 
the same logic in short period of time, you will notice so called memory leakage. This leakage will look like 
enormous memory consumption in your system resources.  
  
  
Speaker 1
 
 So now you see 1 gigabyte, so 900 megabyte it's more or less okay, but you may see much more memory up to all of 
your available virtual memory and one it will come to a certain limit. IIS will suddenly restart your website and you 
will not know why this happens. So it will be very unusual for you. And the reason is that non allocated so not 
disposed memory will be leaked and so you have no way how to fix it until you will make this using operator 
protection. So you may find a lot of examples where creature developers do exec ensure the connection and 
supporting it with using operators. This is mandatory. If you do not follow this you will have memory leakage. And 
this works well for selections of some number of columns and number of rows.  
  
  
Speaker 1
 
 But in my example you may notice that we don't have using protection, we just use execute scalar method which is a 
generic method and it accepts expected data type of our result. And execute scalar is useful in case if you plan to 
read only one data row and you expect to read only one column value there. So execute scalar returns you first row 
and first value of the first column that you select. In my case, running this aggregate function guarantees that I will 
have just one data row having only one column in my columns selection list is obvious and I will get only one column 
as a result. And that's why execute scalar is perfect for such scenarios. All necessary protection to using to use 
using for two methods for data selection is already performed inside of execute scour.  
  
  
Speaker 1
 
 You can try to see it would possible to decode scalar async probably no, but let's see, you see decompiled stuff DB 
executor you see using yes so first using is already used here ensure special DB executor then internal execute 
scanner sync probably here failover execute and somewhere so you probably may find another using here in this 
decompiled code. But you can just trust me that execute scalar performs all code correct operation with memory so 
you do not need to handle and to care here with additional protection. Finally it returns your expected data type 
value. In my case this is decimal and this is our maximum price from some records where type equals certain 
argument and offer type also equals to another certain argument. So this is quite simple data selection procedure 
which makes one single SQL query and runs our data selection.  
  
  
Speaker 1
 
 So my example here is not only how to organize your web service, but it's also how to operate with the database and 
how to use alternative data selection approach with some data that we expect to get and return. I try to make it 
simple without need to collect many data records with many data columns inside of it. If you want you can find more 
examples in these variation sources and make more complex calculations. This example just shows you general 

--- Page 10 ---

approach and you can see we have user connection as argument thanks to base service class.  
  
  
Speaker 1
 
 We get this user connection as a property and this property is ready for use when at the moment when our method 
is called so WCF and our base service class makes all that is necessary to initialize user connection at the moment 
when our customer runs this HTTP post method. By the way, we used post because it's very common for creation. 
You may find that for example we can search for all sources where we have just get method information. We will find 
probably 50, 15 or 16 places including ours. So 15 base product places where a get method is used like this so you 
can see not so many. We have 150 plus examples and only 15 base product examples. And when we will search for 
the post example, you'll find more than 150 examples.  
  
  
Speaker 1
 
 Because this is very traditional, very typical, difficult to create for creation to use post. It offers us quite comfortable 
way to handle data. You can serialize almost anything as a post request body. So post request data, that's why it is 
so comfortable and also it's well protected. It's better protected with security settings. Again if we compare it with 
get, I will explain and you will see it later. So post is very typical and okay, when we finished we can just save it. All 
the code samples are available for you so we can save this code. As you remember, configuration must be 
performed inside of creation so our code is Ready we can just check that column are the same as we expect to get 
it. And let's go back to our app and select our package.  
  
  
Speaker 1
 
 We can also see our recent reality service item. It has all this code already, so it was loaded from the file system and 
we can compile it. Compiling package makes collection of all of its sources including automatically generated items 
and like process code. If process includes C sharp tasks and then it performs compilation of our CS proj C sharp 
project. So this one, this C sharp project will be compiled. We have several compilable stuff here. We have set of 
assemblies used in this project and that's why we can compile it normally without any error messages. And in 
general this compilation was quite fast. But in your case probably you will face some additional difficulties mainly 
caused by lack of assemblies, lack of some references or just incorrect code which operates with classes which 
were not mentioned in usings.  
  
  
Speaker 1
 
 So in my case compilation was successful. And in case if you have compilation error, you will see a big error page 
with information about lines of code, type of the error and you will be able to look at it. Even after you close this 
page, you will have a special button in this list compilation error. So developers tried their best to support you. And if 
you have some troubles, you will be able to look at the list of your troubles in order to fix it. So once our web service 
was successfully compiled, it is already hosted at our application server and we can easily check it out. So we can 
check with get example method that our service is present. Let me show you how we can do this. We can use our 
browser to run get HTTP queries easily.  
  
  
Speaker 1
 
 We need to get our browser URL copy go to separate tab paste. So this is my web server address including zero 
application alias. This zero is very important. Let me remind when we registered our application our website at 
creation at iis. So I have a structure of default website which uses port number 80. Then I register at my D1 Studio 
app this one. This is part of URL. And then we have zero application alias for main application part which is 
physically saved in chiras or the web folio. So this zero is very important. You will face it almost everywhere when 
you combine when you compose your URLs for creation. So this zero is pointing to main application part of creation 
platform. If you run creation on Linux, you will not see this 0 on Linux.  
   

--- Page 11 ---

 Speaker 1
 
 In net core we have all the stuff placed in one root folder. So it's a bit different, but all creature configuration will work 
absolutely the same. So we have functions that Return main application URL and for Linux it also returns everything 
correctly. So don't worry if you write something and run it on Windows there is a very high chance but it will also 
normally work on Linux. Okay, so let's move on. We have this main web server part of URL including zero application 
alias. What's next? We have to use special word that is used for automatic registering of all our configuration 
endpoints. So this word is rest. Okay, rest. Then we have some standard how creatio registers all our endpoints and 
it uses class name. Let's go to studio find our class name copy paste so we use 0rest/reality service/method name.  
  
  
Speaker 1
 
 If you use URI template your method name may be different. I mean your code URI will be different. But in my case 
it's very simple. I will just use this get example method name. I'm lucky to have no arguments here so my query will 
be not so hard to do. I will copy this URL for you so you can also practice and check it out how it works and let's 
move on. Let's check also enabling browser developer console going to network tab clearing all the console. So let's 
see how it works. I press enter now you see that my get example was successful. 200 means successful execution. 
Here is my full request URL I have some request headers, I have some response parameters and here is you see my 
response JSON string returned some data. It looks like everything is okay.  
  
  
Speaker 1
 
 So this is a very easy and quite practical way to check availability of your web service. For example, if you have 
compilation issue your web service will not be hosted at creation web server and your query like this will return you 
404not found. So it will show you that there is no registered web service with this address. So in my case it looks 
good and it was get query which is very easy to get from your browser. But our main working query is a post query 
and we have to make a special steps to do this from our creation page let's make a five or seven minutes break. So 
just a quick. I hope to make it quick. I understand some of you have other plans after the finishing of the session.  
  
  
Speaker 1
 
 So let's make a 7 minutes coffee break and then we will move on with calls of our web service. We will make call of 
web service from creature page and also I will show you to make how to make it from Freedom UI page, from classic 
UI page and from third party applications. In case if you have questions please type in your chat and we'll answer so 
let's make a quick break right now. So today, now our task will be to call creature service from our client side page. 
How we can do this? You already probably guessed that we will have to write some code. Unfortunately we still don't 
have no code options to call a web service. Like we start a process for example. So possibly we will have something 
like this in future.  
  
  
Speaker 1
 
 And now we have to write some code at our creature client side in our browser JavaScript in our browser page 
JavaScript part. So let me show you. I already had all of the examples. It will not take too much time today. So I will 
show you how we can call the web service from creation client side. Of course we need to go to our page code. Let's 
go to edit page and then we can open its code. Also I can show you faster way to open source code and save and 
open it. Or you can go to client module. In my case it's a real T form page. You go to this right part, this actions three 
dot button. And then we have open source code action. I think it's more practical and faster than to do like this.  
  
  
Speaker 1
 
 But okay, I will recover closed page. This one go to front page. Okay, this one. Let me show you what we need first. 
So we need first some button that will start our code and then we will implement it. So that's why I recovered this 
page first. Let's go to our actions menu. We already have one item here, so we can create another one. Another 

--- Page 12 ---

menu item. This menu item will include calculate max price and the action could be just some random action that 
we need temporary here because we will replace it with our own programmed method. Programmed handler. Let's 
use data, let's use icon. Let's do some. Some we can use some kind of things. Okay, let's take this one. So we will 
use it for calculations and element code. Okay, let's call it max price menu item and confirm.  
  
  
Speaker 1
 
 So and then we have to save this. Our menu item will appear in actions menu and then we go to its code part. So 
let's go to open source code. You can close this editor so not to accidentally resave anything. Let's search for our 
max price item. And as you can see, this is somewhere like number 116. So here we have our menu item in view 
config div area. And we will just remember this line 116 because we need it a bit later. So let's collapse view config 
div, your model configuration. Collapse everything. Now we will make one More handler in our code, so please be 
careful. I put comma and I plan to paste here an example of handler for my calculation Example of a web service call 
work from Freedom ui. Example run web service in Freedom ui.  
  
  
Speaker 1
 
 So this code will be quite big. I will copy it into parts for you. But first of all let's pay attention on the definition of our 
module. I copied it for you, so you'll be able to reproduce the same in this line where we define our module, we 
started to request one more additional module named Creature Dev Kit command. This module is kind of utility set 
of tools which includes a lot of useful things including HTTP service. So we requested this module to be created in 
our dependency modules list. So our require GS framework will first look at this array, find this array item, create its 
instance, return it as an argument when our factory function will be called. So we can call it SDK as we did it here, so 
we call it SDK here.  
  
  
Speaker 1
 
 And if you forget about line number one here, your next code samples will not work because you have no these utility 
modules. Okay, we have this SDK now and it's time to implement our handler for our menu item. I will copy and paste 
it in parts for you because Zoom has limitations on size of code that is possible. So size of chat messages. Okay, 
three parts. And then of course I will copy it fully into my handlers area here. Taking care about commas, taking care 
about syntax. If you do some kind of syntax mistakes like this, you will immediately see this parsing error. So please 
be careful, avoid such errors and provide correct indentation. Don't forget about any brace here. And now I have to 
explain how it will work. So this is one more handler in my handlers array.  
  
  
Speaker 1
 
 And this handler has its own request property. So it's like handler name. And you see, there is a tradition to name 
your own custom handlers with usr Prefix and base product handlers are usually provided with crt. Okay, we can 
name it as we wish. Then we have a handler implementation asynchronous function. So this function finally makes 
some useful code for us. And first of all we do some console output just to make sure that our button so our menu 
item normally worked. Then we have to compose some arguments to call our web service. And the main idea is we 
select a page which already has type value and offer type. So if we selected for example, apartments for sale, we 
have this type value and offer type. That's what we need to run our web service.  
  
  
Speaker 1
 
 So we plan to get type from our page, but when we operate with it, we will get an object in JavaScript. This object 
will include several properties and if we need ID of selected data record we will look at value property. If you need to 
look at display text of a lookup value like this apartment, you have to operate with display value property of this 
object obtained from a lookup column. I also need to make sure that I'm using correct names here. Let's go to view 
model config search for type and now we see this attribute name. I will collapse unnecessary parts so you will easily 
see what we have here. So we need to look here.  
 

--- Page 13 ---

 
  
Speaker 1
 
 Type represents this attribute name so I have to copy it, find my handler and paste it this one so PDS usr type and 
there is a unique name for this attribute. So that's how we will get with await operator we will get our type lookup 
value which represents an object and if this object is not empty so it includes something then we will try to get value 
property in case if it's empty we will keep it clear so we will not use it. The same with offer type. Let's go and find 
offer type attribute copy paste and we get offer type. If it's not empty we get its value. This is important to get 
corresponding arguments for type and for offer type that is required for our webshop.  
  
  
Speaker 1
 
 Now we will use our dev kit library in order to get HTTP client service out of it so we can ask SDK to create one and 
that's how we get this JavaScript class instance in our code. We have to combine and collect correct viewers URL 
for our web service. I'm using Terasoft base product client side JavaScript framework. It's a core framework, you 
cannot change it easily and it has some functions to provide web service. Base URL so we have this base URL then 
we combine path in order to get rest then class name then method name. By the way my method name is called 
where is my visual studio here My method main is called get max price by type id I have to fix it.  
  
  
Speaker 1
 
 I have to fix it in my code here get max price by type id so it was mistake because I renamed this method recently 
and finally my endpoint URL will be combination of the base URL/method name slash this rest like template part 
then class name then method name. Okay great, my endpoint is ready and here you can see some example of brick 
of my endpoint. I will name it better here something like this. Okay, now we have to prepare parameters and perform 
sending of an HTTP post query we have params. This is a JavaScript object with several properties and it's very 
important. Property names must match your web service method parameter names. Reality type ID here must 
match this offer type ID here must match this and entity name here matches with this.  
  
  
Speaker 1
 
 And also I have to fix my code because this one already changed its name so my object is named usr reality. Okay, 
this is important part and parameters will be passed as a part of our request HTTP request body. So parameters will 
be encoded into a stream and thanks to this SDK library it will be done by this method post method, not by us. So we 
just wait for getresponse running post method. If you need to run get method you will have a get instead of post 
here. Endpoint is a URL and params is a JavaScript object with parameters. Now you can see we have an 
asynchronous call here. It actually includes two parts. Sending a request, then waiting for some time and then 
getting response. So physically it may take some time, like 30 or 50 or hundreds of milliseconds.  
  
  
Speaker 1
 
 So you should understand that even if it looks like easy thing and line by line execution, physically it is asynchronous 
call which means we send request, then browser waits, then we get some response. Okay, we got response object 
which is a JavaScript object instance. We can look at its properties. This object will have a body property and then 
we'll have property name the same as our method name + result suffix get max price by type id result so this is our 
max price response and when we finish we just continue normal execution of potential other handlers with this 
typical return. So I had to make fixes in my video and such fixes were not down in the code in our chat. So please 
take care and modify this code accordingly to the video.  
  
  
Speaker 1
 
 If you plan to perform your own examples of the same then we have to save this carefully because if you have 
mistakes of course you will see it doesn't work. And also let's remember about our your request name and return 

--- Page 14 ---

back to line number 115 or something like this. Let's go. Here we have our menu item, our action item and we have 
clicked event with the request name. Originally we set it to some random save request, but of course we will replace 
it with our own code. So I will highlight it in our chat. So don't forget about this. We need to organize running of our 
handler by manual changes in our diff view config diff array. This is responsible part, so please be careful. Please 
don't accidentally Remove any breakage, any comma or something like this. So please be careful.  
  
  
Speaker 1
 
 And then we can save it. Great. Everything saved correctly. We can close this editor. Probably can just close and 
open the page. So now we have apartment for sale. That will be argument and let's try to find our action calculating 
max price. Go to network and clear all previous history. So now let's check how it will work for us. It looks like status 
200 means it was collected correctly. Web service runs and returns our maximum price for apartments for sale. 
Okay, let's see network tab details. This is our request properties. This is full URL was created correctly. We have 
some request headers, response headers. Our request payload physically was a string, but we can parse it into look 
at it a bit more comfortably. So here we have all the parameters that were sent as arguments.  
  
  
Speaker 1
 
 Then we have response with some number correctly calculated by our server side and returned and some timing 
information. Now you see it's quite fast execution. So it took only 31 milliseconds to run. It's very good speed. Okay, 
let's look at another example. We have a lot of apartments for maybe houses for sale. Let's search for random house 
and calculate max price. Now you see it's calculated correctly. We return the data. This is our max price returned by 
our system. And let's check out what was the paywall, what is the response? So here we have our response date. We 
can check it out if we go to our main list and sort by price. Yes, it looks like 99999 millions. Yes, it's okay. This is our 
max price according to current data. So it looks like correct calculation.  
  
  
Speaker 1
 
 So our Freedom UI page calculation worked well. In case if you have any questions, please ask. I'll be happy to 
answer. Now I want you to see the same call how it can be done in Classic ui. Some of you probably will do some 
Classic UI customizations. So you may need to know how to do some simple programming steps. In classic 
programming page, let's go to our edit page in Classic ui. But it turns because of our migration into Freedom UI page. 
So okay, we can try to temporary switch all our user interface into Classic ui. So use Freedom UI interface. Open it, 
turn off, save, close, log out, log in. Now we see background in Classic UI we go to classic section. We open edit 
page and it's also classic. Great.  
  
  
Speaker 1
 
 So now I will show you how to program some buttons in Classic ui. Go to view and open section wizard. So this is an 
alternative of what you get used to work with edit page in Freedom ui. So open Section wizard from this edit page 
will open as an editor for a button. Unfortunately you can't easily add a button using this page. So in Classic UI we 
have a lot of limitations according to controls used on the page and we will have to use code part for it. Okay, we can 
go to code part. Here we have Classic UI code. We need to look at default array and add one more button there. 
Adrian, question possibility of web service returns Is it possible to call a third party app that returns base 64 and how 
to handle? Yes.  
  
  
Speaker 1
 
 So in case if you want to call third party application from Creature. So Creature will initialize this call and do it. It's 
even possible to make it no code solution for this. We will study it a bit later. Probably tomorrow I will show you how 
to make integration with third party apps and how to call third party web services. This is a bit separate from our 
today topic because today we create our own web services and call it from client side. Third party web services is 
better to call from creature server side. So you will see it's quite comfortable. Okay, I'm trying to make a button in my 
Classic ui. So here you see diff array which represents set of items and each item looks like definition of one control 

--- Page 15 ---

on the page. In my case I have name price area. Price area.  
  
  
Speaker 1
 
 You see this is area and somewhere here just nearby I plan to put some code for a button I need to steal some 
button definition from Academy. So so I will show you how you can find it. Go to guides. By the way, our training 
ladies will write next. So current 813 release highlights with a video that will be released in a week. So you will see 
some news and it will be so probably interesting for those who keep an eye on evolution of Creature tools 
capabilities. So now we go to development front. Oh no. Platform customization Classic UI page button examples 
So I will find some simple button to the page and I need to copy piece of code which represents button properties 
because it's really hard to remember them. So I just copy this part paste it into my code.  
  
  
Speaker 1
 
 Of course I will have to fix it. I will have to make it look correct. So comma is missing here. Here's my button 
definition and I. Oh, I have to exclude unnecessary stuff here. And yeah it looks like I have a lot of extra things 
copied. So this one is proper piece of code that I need to copy insert current name. So I will do it quite fast because 
probably you should not focus so Much on quisecure this will be just an example. So my parent name will be the 
same as for nearby fields because I want to put it nearby to area and values will include location and size settings in 
layout and here layout means position and size columns. So this is 012 column two for area. Here you see row two.  
  
  
Speaker 1
 
 Then I will have row three because I want to put it a bit below Parent name is the same button. We can call it Run 
web service button. It will be our button name button title button caption should be localizable string. This editor 
does not allow me to do this. Okay, red color always enabled so I will do it always enable it. I will have to rename this 
on run web service button click I will have to make a method for it and the localizable strings should be managed in 
its editor. Okay, so I will do it a bit later. This is our button. It will have a red color. It will have some caption item type 
name. Okay, I hope I have no. Now you will see this button representation here. Go back to section wizard and save.  
  
  
Speaker 1
 
 Probably it was not the best idea because I need to implement method for the button. I also need to make my in my 
classic package. I also need to make localizable string for the page. So let's make localizable string. I called my 
button action could be run service okay and try to save. Do we have any troubles with localizable strings? In previous 
versions we had okay, my button caption is okay, go to div in order to search for my new button here. I expect it to be 
present somewhere here and caption should be like this My button caption okay, great Method or click Run service 
button click. We have to implement in methods collection so usually you do it like this function and then we have 
some function body. Now I plan to get examples of running web service in client side.  
  
  
Speaker 1
 
 So here is my own run web service button click. Okay, and also I need to have a callback function here. So we have 
two methods and that will fix it. Okay, so when I need to do this is my method name. I use it for a button and method 
is in classic UI it's easier way to call some functionality because it just implements some function in your JavaScript 
object. We will get type column and get its value. If it's not empty, we'll get offer type and get its value. We'll 
compose parameters. Let's check our entity name. It's called reality Classic. Yes, looks good. And we can run our 
web service run our method name let's check this method name. Get Max Price by type ID. Okay, great.  
  
  
Speaker 1
 
 And we need to provide callback method to accept our result because in Classic UI we don't have so fancy stuff like 

--- Page 16 ---

await. And so it's because of the tools used here. So your JavaScript of course will run Await normally. But the tool 
that we use to call service expects to get this callback function and parameters should be executed. By the way, this 
tool is called Service Helper and we must ask for this module Service Helper and get its reference here. So this is 
also an important part in Classic ui. This is my set of methods for you in Classic ui. And this is a divide or a button. 
Oh, probably I should care about index, but okay, so it was already saved Item type originally was button but when 
Section wizard saved it replaced with just a number.  
  
  
Speaker 1
 
 So it's a value of that enumeration item that we found in our article. So item type. This one turned to be a constant, 
which means five by the way, you can also study your client side framework. So you can just do terasoft. Then you 
see a lot of properties like item. Let's see how it looks like View item type. Sorry View item type. Then you see a list 
of approximately 30 different options here. So it means items available for Classic UI pages. In my case I used 
button. So looks like everything is ready. And this is how we use special utility module. It helps us with calling of web 
services. We have two steps, call service which means send request and provide response callback function. And 
when response will come, this callback function will be called.  
  
  
Speaker 1
 
 That's how we will do some console output and show us returned data. Okay, finally we can save it. In Classic UI we 
have to constantly think of browser cache. So we have to reload the page in order to fight with cache. Now we have 
houses for sale. Okay, let's make a copy cheaper one. So we have two houses for sale in our database in Classic ui. 
Let's open. Now you see a button. Okay. Okay, let's check how it works. And the web service is the same, but we have 
different tables to calculate. So let's try. Our call was successful. You see maximum price was calculated. And also 
you can see history. You see request URL 200 it was a post query. We have payload. This is our request body. And 
we have response. And also it's timing. Timing is quite fast. 21 milliseconds.  
  
  
Speaker 1
 
 So perfect time. Very good speed. Okay, great. We're almost done. And now we already practiced with Sending of 
queries from client side. But you may notice so we only worked with Creature client side. It's also possible to call 
same queries from third party apps. Let's go back to Freedom ui. We have better data there. System settings, put it 
on your interface, enable it, save, log out, log in. So I plan to show you how we can use third party app to perform 
such web service calls. As example, I will use Postman app. I already installed Postman app on my own and maybe 
you'll be interested also in some alternatives. Postman is a very helpful and useful and very like handy software. I 
have a collection of different tools which also work for the same purpose.  
  
  
Speaker 1
 
 Postman is on first position but we have Thunder client. You may use Advanced Rest client, Rest, Wet Insomnia and 
a lot of other names. The recent one was Mako Kuhn and Talent API Tester. Or you can use hard code old tools like 
Fiddler Swap UI or Wireshark. So it's up to you what to use. Postman is one of the best from them. And no, no, don't 
upgrade now. So I need to show you. Let's close all existing. Don't say close all tabs. Okay. Don't save. Okay. Here is 
Postman app which is designed to test. To test queries, to test web service requests. We can try to run it so we can 
create new post query and we can take all the parameters we need it. For example, let's make calculation of the 
most expensive apartment for sale. So we go there network.  
  
  
Speaker 1
 
 Try to run this button here. We can steal all necessary parameters. So this is our request URL. Okay, copy it, go to 
Postman, paste it here carefully. So this is our request URL. Great. This is a post query. Great. Body should be row 
JSON. Okay. And we will provide request body value, payload, view source so we can copy all of this and paste it into 
our Postman beautify a bit just to make it good looking view of what we're trying to do. And then we have originally 
no cookies and let's try to run this query. We will see what happens. Obviously creation server side will reject such 

--- Page 17 ---

executions because it means that we are trying to run some business functionality without any credentials. So trying 
to run it anonymously of course. Course rejected and unauthorized error 401.  
  
  
Speaker 1
 
 Now you need to know that if you want to call Creature Services from third party apps, you have to pass 
authentication. Creature has different ways of authentication. Now let's go to our documentation about integration 
topics. We have authentication articles, basics and overview. So we have different authentication types. The most 
practical are forms authentication based on cookies or OAuth version 2 authentication based on application name 
or client name and client secret. I will show you forms authentication because it's out of the box and it doesn't 
require any other secret special settings. Any other preparation for my system? If interested how to make OAuth 
version 2 authentication, you can read corresponding articles. So here you will see all necessary data and I will show 
you forms authentication forms. Authentication is based on running a special web service. Let me show you 
examples and this one.  
  
  
Speaker 1
 
 No, no, no. I need to reference for our service. So we need to run special web service providing request body with our 
name and password. As a result, we will have set of authentication cookies. And such cookies will include necessary 
data that will work like a temporary ticket. So for us to operate with creature. So in order to run this business logic 
query, we must provide special cookies. Originally we don't have such cookies and we will get it with the help of 
authentication query. So let me show you how we get how we make authentication query. This should be a post 
query. According to the article, we must use our web server address, service model or service login. Okay, Copy this 
part here and then take our address without 0als because we work with root folder.  
  
  
Speaker 1
 
 So what we have here, this is our web server address. This is our root folder pass to our web service. Let me show 
you this. My is my web server folder service model O service. You see some definition of this web service class and 
some technical information from it. So this is in root part of our application. We have to provide body row JSON and 
we have to make this body with two properties. Okay, we can copy it from here. Username should be our name. We 
want to use and password like this. Okay. No special headers. Only body is required here. So let's try to run it. First of 
all, I would try to run with incorrect password. You will See error message. SO200 here, but error message code 1 
invalid username or password. Okay.  
  
  
Speaker 1
 
 And obviously we will not get full set of cookies. So we are getting only just one temporary cookie, which is not 
enough, of course. Okay, let's provide correct value. Now you see 200, which is okay. No error messages in response. 
And four cookies obtained. Only four? It's strange. I expected five cookies here. Let me think. What is missing? Oh, it 
was missing USR name. Okay. It's not. Not so. Not so difficult. Okay, we have four cookies. Normally it's five cookies, 
but probably something changed. The most important are BPM CSRF and aspx auth. Okay, so we have some set of 
cookies which will be working as a temporary tickets. Such cookies will work not forever, it will work just within our 
user session inside of having such cookies we can run query using postman.  
  
  
Speaker 1
 
 In this query we already have set of cookies thanks to postman sharing cookies with the same sites. And then we 
can run our query. And it looks like we have one more error 403. But this time this error is not because of 
authentication. This is because of additional protection from CSRF attacks. If you have time you can find what is 
CSRF attack? It's a cross site request forgery special type of attack where a hacker may use current user session 
credentials and ask a user to run specific code which will turn into some change that was intended by hacker. So use 
of current user session in order to do some malicious functions across site request forgery. So we have special 
protection for it for this type of attacks.  

--- Page 18 ---

  
  
Speaker 1
 
 And in order to run post queries you have to make a header in post query named BPM CSRF and the value for this 
header must match the same cookie BPM csrf. So I take cookie value carefully put it to value of our BPM CSRF 
header and in this case my calculation is correct. Response is 200 and I have some response data. So now I 
successfully called creation method from third party app from my Postman application. That's how you can do this. 
And also you probably will be interested to know that this session initialized by Postman is not forever and it has 
sliding expiration. We have default timeout for user sessions. Let me show you. It's about some session data 
information. So we almost finished for today. And let's go to system settings, I can show you Timeout user session 
timeout.  
  
  
Speaker 1
 
 And you see original value was 60, which means 60 minutes 1 hour. I've already changed this timeout to 600 which 
means 10 hours. The maximum value here is 720 which means 12 hours and minimum value is 10, which means 10 
minutes. So this is user session timeout. If you run any query within this timeout, then your session will be extended. 
So creature has sliding expiration of such cookies. And simply speaking, if you run queries too often, so often 
enough like every 10 minutes or every 20 minutes, you will have everlasting session. So your session will never die in 
practice. In real practice, such sessions will be finished if you do nothing for some time.  
  
  
Speaker 1
 
 So in case if you plan to do some integration, of course first you will do authentication, then you Will do some 
integration steps and also you can check how it goes and you can check current user sessions. If you go to system 
users, find your user, go to access rules detail, then sort by start of the session. Now you see two different sessions 
initialized by our supervisor user. And one is browser based by our Chrome, another is made by Postman. Both 
sessions are active. Now you can close such sessions if you want. That's how you can track history of your users. 
And in general you can see this history also in database if you will do something like this sys user session.  
  
  
Speaker 1
 
 So if you do something like this in your database, you will see all user sessions created initialized by any user in your 
system. And you will see session end date, session start date. You can calculate how long your users were working, 
who worked and who did not work in your system. So this may be really helpful for you. And you see we have 
different session end methods. Session end means the way how system finished to your session. And we have like 
log out scenario, we have timeout scenario. And you see different stories here, different history. Okay, at the end of 
today's session, I wanted to mention that it's also possible to make your own web services which will not require 
authentication at all. Such web services are called anonymous services, but you should be very careful 
implementing them.  
  
  
Speaker 1
 
 Because anonymous web service is simply a back door or kind of place which could be utilized by anyone without 
any credentials. So potentially making it possible to do some kind of DDoS attack on your website. So generally it's 
not safe. You can read more data about anonymous web services at our documentation. So let me find it in backend 
web services examples Anonymous subservice so anonymous web service is similar to traditional one, but it has 
one difference in the code. You will have no user connection, but thanks to inheriting from base service you will have 
app connection. And also it's possible to get system user connection from it. So anyway, application has its own 
embedded system user session which is created actually by user who is specified into special system settings and 
the system operations. User System operations user system setting.  
   
Speaker 1

--- Page 19 ---

  
 By default it's supervisor, but you can change and this user will be used for this Background Started and created user 
session used only for system purpose and running anonymous services is also based on this approach. So if 
interested in running anonymous web services, here is the article. And the difference is that you have to check out 
do you have user connection or not? If not, you can take app connection system user connection instead and then 
you can do all the same operations as you planned.  
  
  
Speaker 1
 
 But in order to implement anonymous web service, you have to perform a lot of changes in file system, which is not 
a problem if you deploy your anonymous service at on site environment, where you have access to file system, but 
which will be a trouble if you deploy it in cloud conditions, because you simply cannot modify such files in cloud. You 
only can provide manual for support team and ask them, hey guys, please, I need to deploy anonymous web service 
at cloud environment. Could you help me and provide them all the necessary manuals for your web service to be 
deployed at cloud conditions. And as you can see, a lot of steps here. So it requires manual for support team, what 
exactly you plan to save, what file to modify.  
  
  
Speaker 1
 
 And you may know that we have already a lot of base product anonymous services. You can find it inner web config 
file. Let me show you Inner it means inside of terrasoftware web config search for allowed locations. And you'll be 
surprised how many anonymous web services we already have on board. More than 30 items that could be called 
without authentication. So you see, when you run anonymous web service, you should not provide any 
authentication cookies and it will work for you even without any authentication. But potentially this makes a threat 
for you, because anyone can run such queries and anyone can use such endpoints to make some kind of DOS 
attacks denial of service, running it too often. So please be careful with making your own anonymous services.  
  
  
Speaker 1
 
 And I will just show you a quick example of a web service which may work anonymously. The biggest difference is 
this. If you have user connection, you can just get it. If not, you can get it from app connection, system, user 
connection. That's how you use this user connection obtained with this code and can just copy it for you. So if you 
ever need it, you'll know what to do. And then you work with the same query, but using user connection obtained with 
this example. Okay, that's all for today. Thank you very much for your time. We already finished the questions with 
making our own web services, running it anonymously, making postman queries. And tomorrow we will continue 
with data exchange tools with integrations with coding of third party web services. So thank you for your time today.  
  
  
Speaker 1
 
 Dimitri, I have one question, if that's possible. Yes, yes, please. It is a bit off topic, but we have an opportunity where 
we can also leverage the business to business portal users. And we would actually like to apply row level security. Is 
that possible? No, sure. We already have cloud powerful security tools in creation. We just did not cover it because 
it's something that is described and discussed at Customization course. So we have roles, we have users. And you 
can see list of users here you can create your own users, you can provide different role permissions. So everything is 
just out of the box here. We do not need to program specially things for it. Is it what you asked before or something? 
And also not if they are not allowed to see each other's data or is it still?  
  
  
Speaker 1
 
 It's possible, but I would not recommend you to make such strict restrictions because your end users usually work 
as a team. And if one created a customer, someone else may need to look at it. But in general it's possible if you plan 
to implement couple of competitive teams or competitive users, so they should not see data from each other. It's 

--- Page 20 ---

possible to implement with the help of default record level permissions. You can find it here and object permissions. 
Then you can select corresponding entity like real T. You can enable record level permissions. And it's possible to 
make situation when first user creates some record. And obviously first user can see this record, but other users will 
not be able to see this record. If necessary, you can do this only in case if users have single user privilege, 
administrators will see data anyway.  
  
  
Speaker 1
 
 So they will see all the data. Okay, that's clear. Let's try that. Thank you. Yes. And also Adrian was asking about 
business processes and call web service and to put our web service inside. Oh, in case if you run call web service. 
So it was designed to run third party web services. Let me show you. We had our own examples. And when you use 
call web service item, it is designed to run third party web services. We will study how to do this tomorrow. If you 
need to run your own service, you can write some code at client side. Or technically you can use code web service 
for your own web service. But in case, in this case you have to take care about all necessary things like 
authentication, passing cookies, passing parameters.  
  
  
Speaker 1
 
 And in my practice we had successful examples where two different creation systems were communicating with 
each other using no code call web service tool. So it's possible. And what's the difference between implementing a 
button handler and launching web service from business process? There is a big difference. Because core web 
service is designed to run third party systems, third party endpoints, you can use it for your own, but you will have to 
provide too many technical parameters so the same number of settings that you will do it from client side. Also I 
need to mention, which is not obvious, that when we run our web service methods for creature web service from 
client side, we did not care about authentication. The reason Was we already have all necessary cookies in our 
browser in client side. Let me show you.  
  
  
Speaker 1
 
 So let's look at our call again. Now you see this query, but if you look at headers part you will see that we have 
cookies. So this is our cookies parameter and such cookies were provided by our browser because we are running 
our creation page in a browser that was authenticated to work with this website. Browser supports all queries made 
from client side with cookies. And that's why our queries were executed without any error messages related to 
security. So we had cookies in our client side when we call any query. So for example, when you do some simple 
step like reward data, you see select query was performed. You see also cookie was passed from browser side and 
that's why we have no any issues with running the same query from the same page.  
  
  
Speaker 1
 
 If we will steal all this data and try to make it from another browser without cookies, of course it will fail. And it was 
shown by postman, we will have 401. So Adrian, is it clear what we're talking? Okay Adrian, thank you very much. 
Thanks all of you for today. Attention. We will see each other tomorrow. Tomorrow we will talk about integrations. I 
will show you examples of onboard protocols supported by Creation, odata and data service. You will see how you 
can use it for integration with third party apps. And also we will practice with scope of web service and we will do 
some calls to third party apps without programming using no code tools.  
  
  
Speaker 1
 
 At the end of tomorrow session I'm going to show you Clio tool, explain why you need it, how you can do some 
system maintenance with it and how you can organize delivery with help of Clio. So thank you for your time today 
and see you tomorrow. Please prepare questions because we will have Thursday and Friday sessions. You have 
chance to ask your questions related to development organizing or architecture of Croatia. I'll be happy to answer. 
So tomorrow we will work with integration tools and on Friday we will prepare for the developer action. Thank you 
very much for your time. See you tomorrow.