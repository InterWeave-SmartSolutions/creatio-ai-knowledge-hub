{
  "summary_id": "99cc5ea52696",
  "content_id": "05031a09507b",
  "summary_type": "hierarchical",
  "summary_text": "Document: Speaker 1\n\nMain Sections:\n• Speaker 1\n  - # Speaker 1\n\nToday is session number one of our development on Creation Platform Guided Learning.\n  - My name is Dmytro and I'm \nfrom Creation.\n• Speaker 1\n  - # Speaker 1\n\nAt the end of the course for some of you who would like to we will perform individual development certification.\n  - So \nit's kind of exam where you can show your skills, you will make your homework, prepare for the test and finally some \nof you will become certified Creation developers.\n• Speaker 1\n  - # Speaker 1\n\nThen we will work with packages with version control and enable git integration.\n  - Next sessions will include working \nwith object model, making data items, using some bit advanced examples of working with object, connecting it with \ndatabase views and so on.\n• Speaker 1\n  - # Speaker 1\n\nAnd then when finished I will show you server side programming in C Sharp and server side includes programming \nwith data model, working with database, writing your own C scripts, making your own classes of course integrating \nwith modern powerful tools like Visual Studio or Rider and I will show you how to debug, how to process object \nevents so how to do different server side things.\n  - Then we will work with classes with web services moving towards \nintegrations.\n• Speaker 1\n  - # Speaker 1\n\nI will show you examples of working with Clio of its functions and explain how you may improve your experience and \nin general how you may do your actions more efficiently if you operate with Clio.\n  - At the end we will take some time to \nprepare for the exam.\n• Speaker 1\n  - # Speaker 1\n\nIf you have any questions, please feel free to ask at any moment of time in chat or using your microphone.\n  - Whatever \nworks better for you.\n• Speaker 1\n  - # Speaker 1\n\nSo it also allows you to program and make more, let's say complex and more efficient solutions on the same \nplatform.\n  - We will study how to install it, how it's recommended to work with it, how to make a local environment and \na lot of steps with our 10 sessions training.\n• Speaker 1\n  - # Speaker 1\n\nSo don't hesitate, don't feel shy, even if you understand that Your question is very simple and silly.\n  - Don't worry about \nthis.\n• Speaker 1\n  - # Speaker 1\n\nSo in general it's much more safer to do some development, especially if it's complex development.\n  - Separately from \nyour production environment we have Academy website which has plenty of interesting articles related to creation, \ncustomization and development.\n• Speaker 1\n  - # Speaker 1\n\nSo developers can do some experiments, they can do some tries and they finally make some changes to the system \nwhich include functionality that customer asked and explained how to so how it should work.\n  - Solutions made on \ndeveloper environment can be easily exported into files and then we will have another environment which is called \npre production or simply I call it test environment.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 3 ---\n\nFinally when we decide that our solution is good enough, then we can go to production environment and choose \nproper moment of time to load our settings like the time where minimum of our users are active and then the same \nway as we imported solutions on test environment you can easily import it on production, also taking care about \nbacking up existing settings.\n  - And in general it's recommended to have some backups of your production \nenvironment.\n• Speaker 1\n  - # Speaker 1\n\nSo you can also do this, but this is at your own risk.\n  - Sometimes you can do customization and finally you may do \nsome changes which you would like to revert.\n• Speaker 1\n  - # Speaker 1\n\nSo server side machines, their licenses, database, all connections and other things that are very technical related to \norganizing of creation working.\n  - So everything is managed by creature cloud engineers.\n• Speaker 1\n  - # Speaker 1\n\nAnd of course, as they work with a single project, they will naturally need to exchange settings between each others.\n  - So they will need to see.\n• Speaker 1\n  - # Speaker 1\n\nFirst developers should submit their changes to version control like this.\n  - Second developer will get changes from \nversion control and vice versa.\n• Speaker 1\n  - # Speaker 1\n\nSo don't worry, we will do this and I will explain and you understand how to work with it.\n  - But first of all we need to \nmake our own environment and to see how we can do first steps.\n• Speaker 2\n  - # Speaker 2\n\nCould I ask a quick question before we move on?\n• Speaker 1\n  - # Speaker 1\n\nSorry.\n  - Please, please.\n• Speaker 2\n  - # Speaker 2\n\nSo to see here on this diagram where we have they all have separate databases.\n  - Is it strongly recommended to \nfollow that structure?\n• Speaker 1\n  - # Speaker 1\n\nThink that if you have different websites you must use different databases.\n  - But in some cases, for example, you \nhave one developer and couple of analysts.\n• Speaker 1\n  - # Speaker 1\n\nEspecially when developer will start to do some compilation or some debugging or other actions that will make their \nwebsite to hang for some time.\n  - So the main reason why it is not recommended to operate as many developers with \none site is such operations like compilation, like debugging and other scenarios where a website will be, let's say, will \nlook like it's hanging and not responding if all the team is okay with it and such developer actions are not performed \ntoo often.\n• Speaker 2\n  - # Speaker 2\n\nThanks Maria.\n  - --- Page 5 ---\n• Speaker 1\n  - # Speaker 1\n\nThanks Paddy for your questions.\n  - So let's move on.\n• Speaker 1\n  - # Speaker 1\n\nSo you will see exactly the same of what you will feel at production when you install your solution.\n  - So let's move on.\n• Speaker 1\n  - # Speaker 1\n\nYou probably have necessary files and maybe you even installed your system locally.\n  - But generally this is not easy.\n• Speaker 1\n  - # Speaker 1\n\nSo I prefer to keep it easy, especially as we are beginners.\n  - So to run Creatio on Windows, I'm using Windows 10 Pro.\n• Speaker 1\n  - # Speaker 1\n\nSo WebSocket connection is used and there are some troubles on version home.\n  - So you should expect if you use \nthis type of Windows and Windows Home, then you will see problems and you will only be able to operate with one \ntab at a moment, which is definitely not so comfortable.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 6 ---\n\nSo 16 is good and 8 is like minimum that you can look at.\n  - SSD Drive of course is also very recommended because of \ngeneral speed.\n• Speaker 1\n  - # Speaker 1\n\nI do not recommend you Express because it has limitations on amount of CPU cores used by server, amount of RAM \nand the size of the database.\n  - So Developer Edition works the best.\n• Speaker 1\n  - # Speaker 1\n\nMaybe no permissions, no hardware, let's say powerful enough to run it or some other technical reasons, or no \npermissions at your machines and so on.\n  - But you still want to practice this creation, you can go to creation.com \nwebsite sorry, this one probably have to log in there and then you can request.\n• Speaker 1\n  - # Speaker 1\n\nSo you can just try it free and provide some data about you and in minutes, maybe in a minute system will create a \nfree cloud trial environment for you which will be available for you if you log in at Creature website and then follow.\n  - And so you will have URL, login and password for your trial environment.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to academic guides.\n  - Then it will be about setup and administration and we have a set of articles related \nto on site deployment.\n• Speaker 1\n  - # Speaker 1\n\nWorking with the cloud version, you will not have full set of developer tools, you will not be able to use git, you will \nnot be able to perform server side debugging, no access to File system, so quite serious limitations.\n  - And Local \nsystem has all such features for you.\n• Speaker 1\n  - # Speaker 1\n\nYou can also install Redis as an image in Docker and unfortunately this is not set so you cannot easily find it in our \nofficial documentation.\n  - You can also use Redis or Windows and Redis for Windows is recommended on Developer \nEdition or Developer Environment.\n• Speaker 1\n  - # Speaker 1\n\nAnd one of them is Redis for Windows at GitHub made by some Poland guys T Porodowski and the current version \nis a bit older, but still good enough.\n  - So what you need to do is take this MSI file, download it.\n• Speaker 1\n  - # Speaker 1\n\nSo what you need to do is to download this MSI file, I will copy link address for you can download it, then you will find \nit on your disk.\n  - Then you should make sure you're running it under local administrator privilege.\n• Speaker 1\n  - # Speaker 1\n\nSo you can go to its settings and if you want you can change some parameters like login level.\n  - Default login level is \nnotice.\n• Speaker 1\n  - # Speaker 1\n\nSo the only possible issue you may have is Redis.\n  - Once you installed it's running so you will have no troubles with it.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 8 ---\n\nLet's see, do we have anything with downloads, what else we have here?\n  - So now you can see Linux version for \nversion 7 and Windows version 5.\n• Speaker 1\n  - # Speaker 1\n\nThis file is distributed as a big zip archive file.\n  - Let me explain what does it mean?\n• Speaker 1\n  - # Speaker 1\n\nSo you see this is a zip archive with 1 gigabyte and it has several maybe thousands of files inside.\n  - So what we need \nto do, we have to take this file if you for example start some new project maybe year after we finished today's \nsession.\n• Speaker 1\n  - # Speaker 1\n\nBut in general I recommend you to focus on SQL or Postgres because they are the most popular and I think the most \nattractive for solving your customization needs.\n  - So we have this file.\n• Speaker 1\n  - # Speaker 1\n\nThe reason is quite serious because if you deploy your creature somewhere in Windows protected folders, you will \nexperience additional difficulty with access of creation app to its own files because Windows protects it especially \nwhen system needs to modify such files.\n  - That's why I created my own folders.\n• Speaker 1\n  - # Speaker 1\n\nIf you use Windows Explorer, you can also do this unzipping automatically and it will take some time, probably up to\n\n--- Page 9 ---\n\none minute thanks to fast SSD on my disk, on my PC in total creation codes more than 20,000 tiny files.\n  - That's why \nthis unpacking will take some time.\n• Speaker 1\n  - # Speaker 1\n\nYou will not be able to run this bug file for Postgres oracle if you're interested.\n  - For example, in Postgres database \nyou should take another installation file.\n• Speaker 1\n  - # Speaker 1\n\nI expect that you already installed your Microsoft SQL Server and some management tools for it.\n  - The best one is \nMicrosoft SQL Server Management Studio and also I made some preparations on my SQL Server properties.\n• Speaker 1\n  - # Speaker 1\n\nIf you want to use this SQL Server and Windows, you can switch.\n  - But also you should remember once you switch this \noption and press ok, it will work only after you restart your SQL Server.\n• Speaker 1\n  - # Speaker 1\n\nMaybe 10 years ago this product was called BPM Online and from that times this file name is still generated with \nthese words.\n  - But of course physically this is creation.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so we select this file, click OK system recognize that this is a valid backup file and we have to specify database \nname.\n  - So we have to provide database name.\n• Speaker 1\n  - # Speaker 1\n\nSo here we have to think of how creation website, how creation web app will connect to the database.\n  - We need to go \nto security logins and then we have to make a login for our connection.\n• Speaker 1\n  - # Speaker 1\n\nSo we can just click ok everything else by default.\n  - That's how I created new login for my SQL Server.\n• Speaker 1\n  - # Speaker 1\n\nAnd it's about enabling all necessary Windows components.\n  - Please note that this part is the most tricky and a lot of \nbeginners do mistakes here.\n• Speaker 1\n  - # Speaker 1\n\nWe have all links here.\n  - Now you can see that this and these are direct links.\n• Speaker 1\n  - # Speaker 1\n\nIf you forget about this, you will not successfully run your creation.\n  - So you should follow such recommendations and \nwe can do this.\n• Speaker 1\n  - # Speaker 1\n\nOkay, and this one as you can see in the manual, developers of this documentation decided just enable everything.\n  - In \nmy case I enabled only what was really necessary here.\n• Speaker 1\n  - # Speaker 1\n\nSo I think my windows is normally updated.\n  - I can skip this part and then I need to do some final preparations with \nregistering of my website in iis.\n• Speaker 1\n  - # Speaker 1\n\nIf you prefer to run connection to your database using Windows credentials, then you have to go to advanced \nsettings of the pool, find identity and change this identity to some specific Windows user account which you expect \nto use for connection between application server and database.\n  - This is necessary if your database server is set for \nWindows connections only.\n• Speaker 1\n  - # Speaker 1\n\nThey so turned out they are sensitive to the file names and path of the app and if it starts with the digit, some regular \nexpressions are failing inside of the angular and that's why you must start your application name with a digit.\n  - In my \ncase it's a D D1 studio.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we do this first we register water part and physical path should point to root folder of our app this one and \nokay I copy this path for future.\n  - So we register root part of our app, but then we need to remember about its inner \nmain application part.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 12 ---\n\nThere are some also side quests that you may need like settings of different MIME types and so on.\n  - But from my \nexperience if you enable necessary Windows components, all the items like this will be good just out of the box so \nyou should not modify it if you perform Windows component settings.\n• Speaker 1\n  - # Speaker 1\n\nI hope so.\n  - Let's look in this connection strings file.\n• Speaker 1\n  - # Speaker 1\n\nIn your case, if you have your SQL Server located somewhere in your network, you will need your SQL Server network \nname including named instance.\n  - So full name in case if you have named instances of Microsoft SQL Server \ndatabase.\n• Speaker 1\n  - # Speaker 1\n\nYou remember we did it at the database.\n  - And then password equals this is my password for the login.\n• Speaker 1\n  - # Speaker 1\n\nAnd one more thing which we must do in case so we must do for our creation installation is Redis connection.\n  - So \nthis file also keeps information about how Creature may find Redis somewhere in the network.\n• Speaker 1\n  - # Speaker 1\n\nAlso we have another important parameter DB is number of so called Redis database, but it's more closer to call it \nstorage because Redis storage is a set of key value pairs saved in the Redis memory.\n  - And by default redis has 16\n\n--- Page 13 ---\n\ndifferent so called databases named from 0 till 15.\n• Speaker 1\n  - # Speaker 1\n\nOne more thing which I recommend you to do, but it's not required, it's optional.\n  - One, it's about creation logs.\n• Speaker 1\n  - # Speaker 1\n\nFor example somewhere at C creation logs so we can create this folder system will create itself if it's missing.\n  - So \nthat's how I do my settings for env targets config, this is optional and log targets Config this is example of my \nsettings and this can help you to easily access such files if you don't like going to Windows temp or if you have \nlimited settings as me working with this folder because of Windows protection.\n• Speaker 1\n  - # Speaker 1\n\nSo Google Chrome I think is one of the best for creation because of the fast JavaScript core and you can use also a \nlot of other Chromium based products and browsers and you can use Firefox, you can use Microsoft Edge and \nplease note Microsoft Internet Explorer is not supported at all.\n  - So you can use Chromium based browsers, you can \nuse Safari, you can use Edge.\n• Speaker 1\n  - # Speaker 1\n\nFirst login in supervisor and the same password supervisor.\n  - Also you can see at this login page you can see current \nversion number of the app we are running and I can click just log in.\n• Speaker 1\n  - # Speaker 1\n\nAnd in case if you have some troubles with setting of inner app here, in this case your login page will be okay.\n  - But \nwhen you start to provide login and password and then click login button, then you also may have some error \nmessages which will lead to let's say errors during start of your app and you will not see this page.\n• Speaker 1\n  - # Speaker 1\n\nSo now let's take a break and then we will move on.\n  - So next, what I wanted to show you now is about how we can do \nsome preparation of our system.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why I will show you how to disable this telephone.\n  - I go to the user profile, then go to additional settings.\n• Speaker 1\n  - # Speaker 1\n\nSo they are generally used by creation system.\n  - We can find system setting called show widget on login page and we \ncan disable it.\n• Speaker 1\n  - # Speaker 1\n\nSo looks good and we are going quite fast today.\n  - And probably that's because of not so many questions from your \nside.\n• Speaker 2\n  - # Speaker 2\n\nSorry Dimitri, I just.\n  - When you mentioned questions, I've just been writing down questions as we go.\n• Speaker 1\n  - # Speaker 1\n\nOr I can hold them all for you, please.\n  - It will be interesting because something which is not so boring like just a \nlecture so kind of dialogue.\n• Speaker 2\n  - # Speaker 2\n\nOkay, so my understanding.\n  - Sorry, this.\n• Speaker 1\n  - # Speaker 1\n\nGenerally we have two, let's say two options to support our customers.\n  - Normally we have no.\n• Speaker 2\n  - # Speaker 2\n\nThe other question and I have you kind of already answered.\n  - It's just I was.\n• Speaker 1\n  - # Speaker 1\n\nNot use Redis cluster because it's not mandatory, this is optional thing which makes a bit higher overall reliability of \nyour system.\n  - But once I'm running just a single developer environment which probably will never experience high \nload conditions when having hundreds or even thousands of queries per second.\n• Speaker 2\n  - # Speaker 2\n\nNo, that's brilliant.\n  - Cheers.\n• Speaker 1\n  - # Speaker 1\n\nThank you.\n  - Thank you, Paddy.\n• Speaker 1\n  - # Speaker 1\n\nYes, I'm going to install the SQL Server management.\n  - But what of what version exactly I should use on premise \ndeveloper.\n• Speaker 1\n  - # Speaker 1\n\nI my windows is 11 home.\n  - It.\n• Speaker 1\n  - # Speaker 1\n\nOkay, thank you, Peso.\n  - Let's move on.\n• Speaker 1\n  - # Speaker 1\n\nCurrently Such results are DLLs loaded from the database stored somewhere else.\n  - And the application is quite fine \nrunning with such assemblies.\n• Speaker 1\n  - # Speaker 1\n\nSo you try to compile, you have two errors with no file name.\n  - It's totally unclear what is wrong here, but you will \nconstantly get this error.\n• Speaker 1\n  - # Speaker 1\n\nNow you see this log is still going on because compilation is not finished.\n  - So compilation produces some messages \ninto this log file.\n• Speaker 1\n  - # Speaker 1\n\nYou only create folders, you do not provide any access and it works nice.\n  - So your compilation will not fail anymore.\n• Speaker 1\n  - # Speaker 1\n\nThey include a lot of classes and such DLLs are necessary, so they are vital for creation normal work.\n  - And when we \nwill switch now into another mode, which I need to tell you.\n• Speaker 1\n  - # Speaker 1\n\nEven if your main app is broken, so badly broken and it's not working, then you can type this address 0dev and go to \nconfiguration and try to fix so what we need to know about modes Creature has two different development modes.\n  - One is called Creature ID mode.\n• Speaker 1\n  - # Speaker 1\n\nSo you use only UI of creation to build it and modify it.\n  - We call this mode Creature ID mode and it means we use only \nCreature user interface tools.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 18 ---\n\nIn order to use full power, we have a special mode called External IDs.\n  - The main idea is to allow system to save a lot \nof settings directly on disk into file system and then use external editors to modify such contents.\n• Speaker 1\n  - # Speaker 1\n\nIf you see gray colored it means file system development mode is not turned on and it means that simply Creation ID \nis on.\n  - Now you can change this mode according to the manual.\n• Speaker 1\n  - # Speaker 1\n\nBut please remember before you will do any changes, make sure your system can be normally compiled.\n  - This is \nimportant for two reasons.\n• Speaker 1\n  - # Speaker 1\n\nSo line number 510 I found file design mode setting.\n  - Originally it was false.\n• Speaker 1\n  - # Speaker 1\n\nWill study what package is what package contents usually includes.\n  - So this original storage is in database in set of \nsystem tables inside of our database.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 19 ---\n\nAre GUI changes saved in the same database.\n  - So say like if I just add some extra information to say a client, is that \nalso the.\n• Speaker 1\n  - # Speaker 1\n\nYes, yes, it's also stored in the database and database is primary storage for this.\n  - So when we.\n• Speaker 2\n  - # Speaker 2\n\nYeah, and then the only reason I'm interested in, I'm just asking that is how then does that work with version control?\n  - Say if you have multiple people working on the same.\n• Speaker 1\n  - # Speaker 1\n\nI wish I will now explain.\n  - You will see that.\n• Speaker 1\n  - # Speaker 1\n\nIn my case, I have only one storage code package for this editable stuff.\n  - So it performs almost nothing and it saves \nsome files on disk.\n• Speaker 1\n  - # Speaker 1\n\nAnd in order to finalize our switch, it also recommended.\n  - So according to the manual, we have a next step to compile \nit again.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 20 ---\n\nSo your homework for today will be just reproduce the same steps as I did and install your local creation system.\n  - Turn it into development in file system mode.\n• Speaker 1\n  - # Speaker 1\n\nSo it has hundreds or even thousands of changeable items and most of them are called schemas and we have \ndifferent types of such schemas.\n  - So you can when you hear schema you should understand some customizable \nchangeable item in creation, such items declare entities.\n• Speaker 1\n  - # Speaker 1\n\nSo objects are related to data model and we have plenty of different objects, but not only objects, we have a lot of \nother items.\n  - Client modules are responsible for page settings.\n• Speaker 1\n  - # Speaker 1\n\nSo it's quite difficult to manage such amount of settings in a list.\n  - So developers decided to make kind of big \ncontainers for them and they called them packages.\n• Speaker 1\n  - # Speaker 1\n\nIt's a studio app which includes only platform version and almost no business functionality except of hundreds of \nlookups.\n  - But in general we have almost no business sections.\n• Speaker 1\n  - # Speaker 1\n\nLuckily, Creature offers you possibility to look at any part of base product items.\n  - You can open any part of its\n\n--- Page 21 ---\n\nconfiguration code and you can see how exactly it was written, how exactly it was set.\n• Speaker 1\n  - # Speaker 1\n\nOf course you will have updated versions of such DLLs so they are not designed to be changed and they perform \njust low level functions of creation functioning.\n  - Also we have client side core parts in JavaScript which is also not \ndesigned to be changed and only changes when creation issues new version.\n• Speaker 1\n  - # Speaker 1\n\nSo the main sense of building packages is to make management of such configuration easier to make possible \nseparate development and let's say splitting of responsibilities, sharing responsibilities and like splitting of all \nsystem functions into separate parts.\n  - It could be developed separately and transported and delivered separately.\n• Speaker 1\n  - # Speaker 1\n\nWhy doesn't like this should be okay the name this is okay this package.\n  - Okay, let's try to run.\n• Speaker 1\n  - # Speaker 1\n\nYou can also see the same but you can see that some packages have quite big number of items like 800, like 400, \n300 and so on.\n  - And the main sense of the package is to make some separate functionality stored separately and \ncould be saved and delivered separately developed separately.\n• Speaker 1\n  - # Speaker 1\n\nThis is a special package named custom and custom package is designed for cases when you so when customer \ndoesn't think too much about storage of settings at all and when customer just don't know the architecture and they \njust want to customize system, save it, perform some no code settings and that's it.\n  - So custom is kind of default \npackage for such kind of customization, but for big projects it's not recommended because custom package is also \npresent on target environments and custom package may be not empty at target environments, for example at \nenvironment when you want to test or when your users are running in production.\n• Speaker 1\n  - # Speaker 1\n\nObviously we will create our own package or even several packages to save our customizations there and now you \nneed to remember there are two general approaches.\n  - You may manage packages yourself and it may mainly make \nsense if you develop something in Classic ui.\n• Speaker 1\n  - # Speaker 1\n\nI will click on this tiny create page button, this opens new package window and I will call it something like Dev \nClassic.\n  - So I intend to use this package for some classic UI stuff.\n• Speaker 1\n  - # Speaker 1\n\nIf you want to support this feature, you can use smart activation, but in general I think that it's not for our case, so \nnot so necessary.\n  - We don't have any version control for svn so we'll keep it empty, no version value and we will \ncreate and add dependencies.\n• Speaker 1\n  - # Speaker 1\n\nAnd when you have a dependency for a package, it means that this package will not work until parent packages \npresent into your system.\n  - So in my case calendar base requires CRT core base for some reasons and this is how \npackages are connected.\n• Speaker 1\n  - # Speaker 1\n\nThere are two common approaches how you can do this.\n  - One of the approaches which is now currently used by \nApplication Hub is to use package named CRT core.\n• Speaker 1\n  - # Speaker 1\n\nAnd in this case it makes sense to find the latest package here in this hierarchy except of custom and make your \npackage dependent on it.\n  - Thanks to parent dependencies you will have full access to parent packages including \nbase product section packages.\n• Speaker 1\n  - # Speaker 1\n\nI will make it dependent from.\n  - I can search studio and that's how I will do this.\n• Speaker 1\n  - # Speaker 1\n\nThe reason why we have so many different words for the same is incorrect translation.\n  - Originally in English it was \nmaintainer.\n• Speaker 1\n  - # Speaker 1\n\nSo in order to fully apply it, you have to log out and log in.\n  - Because cached system settings are loaded at the session \nstart only.\n• Speaker 1\n  - # Speaker 1\n\nNow you can see my dev Classic package is created after studio and thanks to this parent transitions I can get \naccess and logical visibility to any part of base product.\n  - So this is very important.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 24 ---\n\nNow our package is fully empty, so we will fill it in with some test settings tomorrow and we will continue tomorrow's \nsession with git integration.\n  - Now today our session is over.\n• Speaker 1\n  - # Speaker 1\n\nIn this case, you will need these update packages from file system action in order to tell creatio about some new \nchanges and in order to load such changes back to the database.\n  - So our session is over.\n• Speaker 2\n  - # Speaker 2\n\nThanks a million Demetri.\n  - That was very insightful.\n• Speaker 1\n  - # Speaker 1\n\nThank you Paddy.\n  - Thanks others, thank you for your time.\n• Speaker 2\n  - # Speaker 2\n\nThank you.\n• Speaker 1\n  - # Speaker 1\n\nBye.\n  - Thank you Sarah.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number two and we will continue to do our first steps on creature platform.\n  - As developers, we \nworked with our environment.\n• Speaker 1\n  - # Speaker 1\n\nSo now you are fully ready to continue.\n  - If you have any questions, feel free to ask Tushar any questions we have.\n• Speaker 1\n  - # Speaker 1\n\nMy port number is different like your.\n  - You should find your Regis service running.\n• Speaker 1\n  - # Speaker 1\n\nC program files regis usually if you installed regis for Windows, you will find it here and then you can just run regis Cli \nexec file.\n  - It will be a command line utility for redis.\n• Speaker 1\n  - # Speaker 1\n\nAnd usually creation is caring about redis itself only in some rare cases you will need something like this, like flush \nall in order to reset your redis to clear everything and that's all.\n  - But it looks like you have a connectivity issue.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 26 ---\n\nI would also type it in our chat so this may help you to normalize your redis operations.\n  - But the most common \nreason I think is about connection strings.\n• Speaker 1\n  - # Speaker 1\n\nSo it will give me a bit more entertainment because so once you have a question, I will be happy to answer.\n  - Today \nwe'll continue with git, with package management, and also with working with objects in general and using data \nitems.\n• Speaker 1\n  - # Speaker 1\n\nSo creating package manually usually means that you are planning to do some classic UI stuff.\n  - Just to remind you, \nclassic UI is a special old type of user interface which you can still find in many system sections like system users, \nlike system settings, like web services.\n• Speaker 1\n  - # Speaker 1\n\nCurrently you can see that we can select all packages.\n  - As you remember we have 141.\n• Speaker 1\n  - # Speaker 1\n\nWe can create some dummy stuff here just to demonstrate something that is not empty inside of our package.\n  - So \nlet me show you what it will be.\n• Speaker 1\n  - # Speaker 1\n\nYou can change this prefix at the beginning of your project or you can even remove it if you do not like.\n  - So \nsupporting prefixes.\n• Speaker 1\n  - # Speaker 1\n\nSo I do not really plan to make some business logic here.\n  - So my test process includes some start simple event and \nthen terminate event.\n• Speaker 1\n  - # Speaker 1\n\nIn the case if we work in this mode, this star is really important and helpful because it shows us that something was \nchanged and not fully saved on disk.\n  - But if you will turn back to creature ide, this star will be almost useless because \nit will represent that your changes are not submitted to the SVN.\n• Speaker 1\n  - # Speaker 1\n\nDownload packages to file system the reason why we have to do this is that some changes when we do them at \nconfiguration section are not initially and fully saved on disk.\n  - They are still created and saved in database first, \nbecause it was historically and originally the first storage place of creation items in database.\n• Speaker 1\n  - # Speaker 1\n\nAnd also this star nearby.\n  - The item name will disappear.\n• Speaker 1\n  - # Speaker 1\n\nMetadata is information about our configurable items stored in a special system inner format in a JSON string with \na big number of different properties and values.\n  - And luckily we should not look here constantly.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's how we will exchange settings between different developer environments within one development team \ndoing the same project.\n  - So now as you can see, we're going closer to file system and to understanding how we can \nexchange settings between developers.\n• Speaker 1\n  - # Speaker 1\n\nAnd this zip archive file can be also uploaded on some other environments.\n  - Such uploading can be done with the \nsettings.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be really hard to operate as a team where each team member can do his own, let's say contribution to the \ncommon repository.\n  - So such export and import is not designed for sharing settings between developers.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how it can be organized as a team.\n  - And now I will show you.\n• Speaker 1\n  - # Speaker 1\n\nSo first before you enable any folders, before you operate with your git, if you don't have git client, you should click on \nthis button source control in order if you so if you don't have any git client installed, you will see only one button here \nto be called something like oh we have to update.\n  - Okay, maybe later one single button will be install git client.\n• Speaker 1\n  - # Speaker 1\n\nI think you can easily fix it if you face this difficulty with new terminal window and a bit of googling will tell you how \nto make full setup of your git client.\n  - In my case, this git client was already set so I already have git client normally \nworking so I can now open folder and initialize repository in it.\n• Speaker 1\n  - # Speaker 1\n\nSo if I decide to make a repository root folder somewhere inside of my folder representing a package, then it will be \nreally hard for me to add any other packages here.\n  - So I will need to keep several repositories for several packages \nwhich is also not so good.\n• Speaker 1\n  - # Speaker 1\n\nI will do this with visual studio code and in Explorer tab I'll just click open folder.\n  - I need to find the corresponding \nfolder from my disk.\n• Speaker 1\n  - # Speaker 1\n\nContent builder is also representing a page.\n  - Okay.\n• Speaker 1\n  - # Speaker 1\n\nFor client side we have some data items, we will discuss them and they are used to keep some data records in your \nsystem, business processes and some other types of items.\n  - So in general any package may include unlimited \nnumber of different configurable items.\n• Speaker 1\n  - # Speaker 1\n\nAnd this file contents is usually having two types of files.\n  - It usually has some DLL's as a result of compilation and for\n\n--- Page 30 ---\n\nsome cases it may include some JavaScript stuff, JavaScript components.\n• Speaker 1\n  - # Speaker 1\n\nNow we only opened some folder with big number of files.\n  - We are really interested only in some part of such files, \nbut we are not interested in all the contents.\n• Speaker 1\n  - # Speaker 1\n\nSo I will run initializerepository which is the same as git init command and it will initialize my git local repository in \nPkG folder.\n  - So I just click this, it performs some steps and now we can see that at this source control tab our git \nclient detects huge number of modifications.\n• Speaker 1\n  - # Speaker 1\n\nSo this is our package that we plan to operate.\n  - We want to ignore everything else.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to GitHub.com.\n  - I need to sign in.\n• Speaker 1\n  - # Speaker 1\n\nOf course I will share it with you.\n  - Gitignore file is a file with empty name and gitignore extension.\n• Speaker 1\n  - # Speaker 1\n\nIf you will do this with your Windows Explorer, make sure you set for display of the full file names with extensions.\n  - In \nthis case you will not fail and you will not create a gitignore txt file.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see CrT omnichannel appear it here and I can add it to gitignore.\n  - Let me show you what happened and \nalso I do not need to put all of the files here, so package name is enough and CrT security so I can type it manually \nCrT security and save it.\n• Speaker 1\n  - # Speaker 1\n\nSo it will help me to understand your current level of skills and knowledge about version control.\n  - Because today \ndeveloper I think must have some say basic experiences version control tools because it's quite inevitable to operate \nas a team.\n• Speaker 1\n  - # Speaker 1\n\nAlso I wanted to show you in file system once we initialize git repository, you will see that new folder appeared on my \ndisk folder name is git and this folder is hidden.\n  - As you can see the file attributes here show us it's hidden.\n• Speaker 1\n  - # Speaker 1\n\nMy first commit ever.\n  - So it's just something fun.\n• Speaker 1\n  - # Speaker 1\n\nSo it's about some git secrets, how it saves your comments, your changes and so on my git repository is still local so \nI did not share anything with my imagined team members.\n  - I need now I need remote global git repository that will be \navailable for my team members.\n• Speaker 1\n  - # Speaker 1\n\nSo I need this common repository to organize sharing of settings with my colleagues.\n  - This is very easy.\n• Speaker 1\n  - # Speaker 1\n\nSo I will connect remote repository to my local git client and my local git repository.\n  - I can do it with a terminal \nwindow.\n• Speaker 1\n  - # Speaker 1\n\nYou see, compressing was used here.\n  - And finally my remote repository was updated by set of commits by stuff that \nI committed from my local one.\n• Speaker 1\n  - # Speaker 1\n\nAnd now we have some stuff from our package which is not empty.\n  - So we have some files and folders committed to \nlocal git repository and then to common repository.\n• Speaker 1\n  - # Speaker 1\n\nSo I can easily add more packages to my solution and it will still be located at one repository.\n  - You can also see all\n\n--- Page 33 ---\n\nthe history of my comments.\n• Speaker 1\n  - # Speaker 1\n\nBut this is something that and I will read only one column 80 okay, so this is just example read contact.\n  - An example \nof what we can do as business logic automation inside of a process.\n• Speaker 1\n  - # Speaker 1\n\nOriginally when you do customizations they are saved in database and only if you download on disk it will be \nproperly and fully saved on disk.\n  - Some items are also saved on disk while you edit them.\n• Speaker 1\n  - # Speaker 1\n\nAlso we have some new items appeared here probably because of our titles added to the process pieces.\n  - But okay \nso we have test process and so on.\n• Speaker 1\n  - # Speaker 1\n\nNow we can go to git repository loaded and you see some history of changes.\n  - So we have two commits.\n• Speaker 1\n  - # Speaker 1\n\nAnother developer originally has no own package at all.\n  - Another developer just installed new environment and they \nhave no package at all.\n• Speaker 1\n  - # Speaker 1\n\nThey can do it with git pull comments or git clone comments, whatever works better.\n  - And finally, creature is \ninterested only in PKG folder and the contents here.\n• Speaker 1\n  - # Speaker 1\n\nSo second developer will perform this operation and second developer will see results that some new files, new \nfolders appeared and even new package will appear at second developer environment.\n  - So that's how your package \nchanges may travel from one environment to another.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's how first developer will receive all changes in the package files.\n  - And then first developer must run the \nseparation update packages from file system.\n• Speaker 1\n  - # Speaker 1\n\nYou will commit only changed items, changed parts to common repositories and everyone else can do the same.\n  - So \nthat's how you can easily, let's say, modify two different items of the same package and work as a team.\n• Speaker 1\n  - # Speaker 1\n\nWhen two developers made changes to the same item, I think the best way is to sacrifice changes from one of the \nside and submit another side changes into repository and then ask first side to check out it and make changes \nagain.\n  - So merge of metadata is not designed and probably will not be successful.\n• Speaker 1\n  - # Speaker 1\n\nIf you have any questions about it, any other ideas, feel free to ask.\n  - I'll be happy to explain.\n• Speaker 1\n  - # Speaker 1\n\nYou can easily create objects in your configuration and also when you do customization using no code tools.\n  - For \nexample when you operate with application hub or with section wizard, system is capable to create number of \nobjects automatically.\n• Speaker 1\n  - # Speaker 1\n\nAnd also I need created on column just to make more comfortable sort in this list so I can sort by name.\n  - For \nexample, we can find a lookup called address types.\n• Speaker 1\n  - # Speaker 1\n\nIs any object created in creation will finally turn into a table in database.\n  - So now we talk about general objects \nwithout special chemistry, without any tricks.\n• Speaker 1\n  - # Speaker 1\n\nLet me find this one.\n  - So you can see table structure, all the columns, you can see it's key field, you can see primary \ndisplayed text field and some others.\n• Speaker 1\n  - # Speaker 1\n\nSo building more complex solutions usually starts from making your lookups and that's why we will do some.\n  - Now I \nplan to do some changes in my package and it will be necessary for my future solution in classic UI.\n• Speaker 1\n  - # Speaker 1\n\nWe can call it real to type and I will show you how to create it from scratch.\n  - So select our package add object when \nyou create new object, it means you are creating new entity in our system.\n• Speaker 1\n  - # Speaker 1\n\nAnd we will have this prefix USR and then we can provide code for our new object.\n  - It will be real t type.\n• Speaker 1\n  - # Speaker 1\n\nSo system is capable to make set of theories to the database like create table, alter table and add columns and so \non.\n  - So we only provide some necessary properties and system will take care about database storage itself.\n• Speaker 1\n  - # Speaker 1\n\nIt's interesting because previously I only remember added Japanese at the beginning of 2024 and now we have \nsome very recently added languages.\n  - Hungarian language was added recently.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 37 ---\n\nThen you can find languages part and now you can see 23 languages and you can activate language if necessary by \nopening it, setting active and then save.\n  - But please.\n• Speaker 1\n  - # Speaker 1\n\nWe have also an alternative way to support multiple languages with the translation section, but I do not recommend \nyou to work with it because when you initially go to translation section, it will take probably 15 minutes of time for \ninitial preparation, so it's not so comfortable.\n  - And I think it's much easier to provide correct translations just while \nyou develop it.\n• Speaker 1\n  - # Speaker 1\n\nWe plan to use reality type classic as a lookup so we can inherit structure for our object from some base objects.\n  - That can be helpful.\n• Speaker 1\n  - # Speaker 1\n\nI have to confirm my change, and once I do this now you see I have new inherited columns list.\n  - I have eight inherited \ncolumns.\n• Speaker 1\n  - # Speaker 1\n\nAnd you should know that creature uses Unicode strings anywhere.\n  - So every text column you will find in creation is \nbased on Unicode text.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 38 ---\n\nSo we have description name and description are business columns, all others are system columns and process \nlisteners is an integer column for a very rare cases when record level event handling is used in business processes.\n  - So what do you need to know?\n• Speaker 1\n  - # Speaker 1\n\nSo the main text column which is shown in drop down list of lookups.\n  - So name will be used for this purpose but you \ncan change if you want nor any other special properties.\n• Speaker 1\n  - # Speaker 1\n\nSo we'll go to columns list and obviously we can add our own columns to the object.\n  - We have plenty of options for \ndifferent database types, a lot of text options.\n• Speaker 1\n  - # Speaker 1\n\nSo just something like bizarre thing that possibly you will never use in your practice.\n  - So number is obviously integer \nand several types of decimals.\n• Speaker 1\n  - # Speaker 1\n\nSo when you have a lookup column system creates foreign key for you.\n  - So it keeps referential integrity which will not \nallow you to save into lookup column any value which is not faced in your lookup table.\n• Speaker 1\n  - # Speaker 1\n\nThis is auto numbering which works pretty well and it doesn't require any programming.\n  - So this is a no code tool to \nmake automatic numbering in your lines when you, when user import adds data.\n• Speaker 1\n  - # Speaker 1\n\nThis type of item is also inherited from schema, but the word scheme I think it's hard to understand.\n  - So let's say \nconfigurable item which will be closer to its meaning and I think it's easier for you.\n• Speaker 1\n  - # Speaker 1\n\nSo publish is necessary to make our object operational and useful for us.\n  - Let's do this.\n• Speaker 1\n  - # Speaker 1\n\nBut at this moment our object is already working so it can be used for us and we can try to use it in our environment.\n  - Let me show you how we can use it.\n• Speaker 1\n  - # Speaker 1\n\nSo when we click new lookup, it doesn't create new table.\n  - New lookup means register existing object as lookup.\n• Speaker 1\n  - # Speaker 1\n\nThis is so called editable list and we are not using any separate edit page for it.\n  - So we just manage data directly in \nthis list.\n• Speaker 1\n  - # Speaker 1\n\nOkay, if you create one more, you see the number goes on, you cancel.\n  - If you create one more, you see numbering is \ngoing on and it will be not rolled back.\n• Speaker 1\n  - # Speaker 1\n\nSo you see that numbering is generated using database tools.\n  - This is extremely reliable and physically sequence \ndatabase object is used for it.\n• Speaker 1\n  - # Speaker 1\n\nSo this is physical data saved in my database.\n  - It's pretty simple.\n• Speaker 1\n  - # Speaker 1\n\nSo for inherited columns, there are some limitations on what is available for you for change.\n  - So generally speaking \nyou can manage your object, you can change them, then you can save and publish.\n• Speaker 1\n  - # Speaker 1\n\nOf course we need to download packages to file system if we want to submit everything to repository.\n  - But here is \nvery frequent mistake that a lot of beginners usually do.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 41 ---\n\nThey see their environment, they fill in with data, they think that everything looks okay and then they just export their \npackage install for example in test environment and then they realize they miss lookup contents and they also miss \nlookup registering data.\n  - So we have technically only two options how we can transport such data.\n• Speaker 1\n  - # Speaker 1\n\nSo you should only use SQL script if you have enough SQL experience and I always recommend you to check your \ncode with someone else who also have experience in SQL just to make sure you will not do anything dangerous in \nyour database.\n  - SQL script can be easily used for permanent serious damage for your system, so your creation will \nnot work anymore if you do intentionally some delete of system data.\n• Speaker 1\n  - # Speaker 1\n\nIn my case, I should select for my object code which I recently used to register my lookup in lookup section.\n  - Unfortunately, you have to remember this code name by heart and this object is called lookup.\n• Speaker 1\n  - # Speaker 1\n\nThat's why we go and search for the object named lookup.\n  - We can find it by name, by code and we can also provide \nsome unique name here.\n• Speaker 1\n  - # Speaker 1\n\nBound data tabs represent exact records which will be saved into our data item so we can manually add such \nrecords.\n  - In total we have 121 records but most of them are base product contents so we do not need to transport \nbase product stuff.\n• Speaker 1\n  - # Speaker 1\n\nWe can only select this data select button and that's how we saved only one data row in this data object.\n  - Then we \njust click save and our snapshot of data which includes only one data row will be saved into our package.\n• Speaker 1\n  - # Speaker 1\n\nI prefer to use codes because they are always unique and system keeps this uniqueness and titles sometimes are a \nbit ambitious, especially if you use non english language.\n  - So you may struggle with finding some corresponding title \nand I prefer to use codes.\n• Speaker 1\n  - # Speaker 1\n\nNo need to use camera styler because it will be recorded.\n  - I will stop it.\n• Speaker 1\n  - # Speaker 1\n\nSo now our solution is full and if we export this package as Zip archive then if we import it somewhere on test \nenvironment to work and user will be able to find our new lookup in lookup section, user will be able to find its \ncontents and user will see such data.\n  - Maybe it's time to practice with git and let's make one more commitment.\n• Speaker 1\n  - # Speaker 1\n\nGreat, everything is done now common repository also felt such changes.\n  - You see three commits and you can see \ncomment history if interesting.\n• Speaker 1\n  - # Speaker 1\n\nFor example, they decided to rename office space into just office.\n  - And we can do this only at developer environment \nbecause we need to share all such changes to all other environments including test and production.\n• Speaker 1\n  - # Speaker 1\n\nSo let's imagine such data items are so such data items is being loaded at target environment.\n  - System is capable to \nprevent duplicates and it uses key columns to detect presence of the record which is being processed right now.\n• Speaker 1\n  - # Speaker 1\n\nBut if record exists system is capable to update existing record and here you will face something which is a bit tricky \nand you may fail for the first time.\n  - And you will have to look carefully at the settings of your columns because \nsystem will perform update only for columns marked with the first update option and by default as you can see no \nupdates are asked here.\n• Speaker 1\n  - # Speaker 1\n\nAlso you may check some other columns if you're not sure and you also want to update so you know the source of \ntruth is your developer environment.\n  - So if something else was changed at your target system then you have to \nupdate it anyway.\n• Speaker 1\n  - # Speaker 1\n\nThat's why we can see it here.\n  - If you want to actualize it, to make it actual and read it from your database, you can \njust click actualize data.\n• Speaker 1\n  - # Speaker 1\n\nAnd next time when you export your package and import in some target environment because of change the date of \nmodification, this item will be processed and corresponding updates will be performed.\n  - The same happens with our \nsystems shared with a git.\n• Speaker 1\n  - # Speaker 1\n\nYou may ask me about the delete scenario, what happens if in our source database we finally realize that castle will \nbe never used and should be deleted from developer environment and for test and production.\n  - Unfortunately data\n\n--- Page 44 ---\n\nitems cannot help us to delete such data.\n• Speaker 1\n  - # Speaker 1\n\nOf course in real life you probably never use this, but this is some like a training example for you so you can create \nSQL scripts for some specific needs.\n  - Installation type determines the way the moment of time when your script will \nbe executed in the scope of package loading procedure.\n• Speaker 1\n  - # Speaker 1\n\nSo I will write some script like delete from USR realty type classic.\n  - This is our name of the object and then where \nname equals something like this.\n• Speaker 1\n  - # Speaker 1\n\nSo if we run it now, you can go to actions in write part here, then install, which means run SQL script, you can do it \ncarefully and if script finishes with an error it still will have status and also you will see its properties and last error \nmessage text will show you last error which happened with running the script.\n  - In my case it was successful, so my \nscript executed with no errors.\n• Speaker 1\n  - # Speaker 1\n\nYou should be careful because if someone already started to use such data that you plan to remove, you will have \nsome cascade problems with it.\n  - So you will have referential integrity exceptions.\n• Speaker 1\n  - # Speaker 1\n\nSo now we saved everything on disk and later we will start with the building of our new applications and we will need \nsome base product parts which are very common to be used.\n  - I'm talking about contacts and accounts and also \nneed some additional tools.\n• Speaker 1\n  - # Speaker 1\n\nI think that if I keep some data here which is not present in real database, this is mistake, so I should avoid such \nmistakes.\n  - I should actualize data, not to keep any non existent records in my contents of the package.\n• Speaker 1\n  - # Speaker 1\n\nCurrently we will use this application hub only for inserts so only to add some useful items into our environment.\n  - So \nadd new application marketplace powered so we can find a lot of application there.\n• Speaker 1\n  - # Speaker 1\n\nThere is a high degree of integration and seamless connection between my local website and marketplace dot \ncreation.com.\n  - So I just click install.\n• Speaker 1\n  - # Speaker 1\n\nAnd this installation logs can be kept for some time on your disk just for future reference.\n  - Because even in case of \nsuccessful installation, sometimes you may face situations where you see something that you do not expect and \nworking with such logs can be efficient to check it out and to see some technical details about your installation.\n• Speaker 1\n  - # Speaker 1\n\nIt was only for let me show you properties here.\n  - It only for Microsoft SQL type of the database if you need a similar \nscript for postgres, you have to create another SQL script.\n• Speaker 1\n  - # Speaker 1\n\nIt could be most frequently it could be Microsoft SQL or postgres.\n  - If you expect to deploy your solution in creature \ncloud, it's highly likely that you will have PostgreSQL in the cloud condition.\n• Speaker 1\n  - # Speaker 1\n\nProbably we will need to reload main page just to suppress any kind of browser cache issues that possibly can \nappear.\n  - So now we can see a bit more workplaces.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can easily detect which type of UI you are working with.\n  - But also you can remember position of \nbuttons.\n• Speaker 1\n  - # Speaker 1\n\nYou can open edit page, you will see page reach of controls with oh no, no.\n  - This is a classic UI stuff.\n• Speaker 1\n  - # Speaker 1\n\nBut so we will study how to build such pages.\n  - You will know and if some one of you already passed our \ncustomization course, you already know how to do such things.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 47 ---\n\nIt's still a bit strange that application hub is empty here, let me reload this page because something unusual.\n  - Yes, \nnow it's better.\n• Speaker 1\n  - # Speaker 1\n\nSo data items can be automated and you can create them with several clicks.\n  - And it's easier than to make everything \nmanually.\n• Speaker 1\n  - # Speaker 1\n\nAny warnings here?\n  - Perfect.\n• Speaker 1\n  - # Speaker 1\n\nSo this app simply adds a couple of buttons into our creation user interface to make it easy to restart the app or to \nclear redis cache.\n  - I will use this restart app, we will need it, we cannot avoid it unfortunately.\n• Speaker 1\n  - # Speaker 1\n\nAnd this is important to track how long it took for creation to install something, especially if you do it in the middle of \nworking hours.\n  - So my installation was successful.\n• Speaker 1\n  - # Speaker 1\n\nThank you for your time.\n  - Today we moved forward with working with objects.\n• Speaker 1\n  - # Speaker 1\n\nNow your homework, as usual, is to watch this video to represent all the steps or produce all the steps for today's \nsession.\n  - Working with your package, creating new lookup, new object, register it as lookup and practice with data \nitems.\n• Speaker 1\n  - # Speaker 1\n\nIs changes customizations in our settings page to enable couple of buttons.\n  - Yeah.\n• Speaker 1\n  - # Speaker 1\n\nWhen I am going to advanced setting, the configuration page doesn't work, it just reload.\n  - It's because you're probably \nusing Windows home.\n• Speaker 1\n  - # Speaker 1\n\nMy question is like if we have a new lookup, like if we have two, three more lookups and we want how we can then \nupdate it and like a system designer, do we have to create the data file again?\n  - Or we can update in the existing data \nfile which you already showed.\n• Speaker 1\n  - # Speaker 1\n\nSo the minimum amount of data items in your case will be six, one for five lookup records and five others for each \nseparate data contents of your lookups.\n  - So simply speaking, any lookup should include data item for registering of \nthe lookup and data item for the contents of the lookup.\n• Speaker 1\n  - # Speaker 1\n\nSo our tomorrow session will be as usual and we will continue working with objects and we will start to work with \nuser interface programming.\n  - Thank you very much for your time.\n• Speaker 1\n  - # Speaker 1\n\nSo today session number three of our development on creation platform guided learning.\n  - So we started \ndevelopment questions.\n• Speaker 1\n  - # Speaker 1\n\nIf you experience some problems with your app and if you start to get error messages about some files are not \ncannot be written or you have some file system access issues, especially you can face it during calculation, you can \ncreate separate setting and you can find your app folder Terrasoft web folder and add special role IIs underscore I \nusers and you should provide modified permission for this role for all of your application folder Javasoft web folder \nthis will grant unlimited file system access to create your application.\n  - So you will not have troubles with saving files.\n• Speaker 1\n  - # Speaker 1\n\nSo iis I users it's a local role which includes set of automatically created users made by creature.\n  - Sorry, made by IIS.\n• Speaker 1\n  - # Speaker 1\n\nBut currently my regular user has no such privilege because of corporate restrictions which I have with my \nenvironment.\n  - So let's move on.\n• Speaker 1\n  - # Speaker 1\n\nFor example we can make our own view in database, so we can use some SQL scripting and then we can make an \nobject named the same as this view and we will have the same columns in our object the same as available in view.\n  - And finally it will show you some interesting trick, how you can use creation objects to read data from sources not \ncreated by creation system.\n• Speaker 1\n  - # Speaker 1\n\nHere we used application hub and we installed it from marketplace.\n  - So this customer 360 was installed from \ncreation marketplace.\n• Speaker 1\n  - # Speaker 1\n\nWe want to calculate it in days.\n  - So just to see how many days certain person lived and what is its current age in \ndays.\n• Speaker 1\n  - # Speaker 1\n\nSo actually it's better to say difference between get date which represents current date and birth date.\n  - And it makes \na difference in days and shows us some integer value.\n• Speaker 1\n  - # Speaker 1\n\nAnd this is example of how we can do some special selection from the database which is not normally available if \nyou want to use just only creation tools.\n  - So creation supports three types of databases.\n• Speaker 1\n  - # Speaker 1\n\nSo I will share example of a script for creating Vue for SQL version and some of you are running postgres.\n  - For \nexample you may run postgres at cloud instances like demo websites or maybe trial websites.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 52 ---\n\nThat's how we go to configuration section, find our package that we decided to use.\n  - Add SQL script I can name my \nSQL script whatever I want.\n• Speaker 1\n  - # Speaker 1\n\nJust to make clear that your object is not a simple table, you plan to make a view.\n  - So this view name should be the \nsame as our future object that we will create.\n• Speaker 1\n  - # Speaker 1\n\nYou can save this SQL script.\n  - Obviously if you work with postgres database you should use postgres version for this.\n• Speaker 1\n  - # Speaker 1\n\nSo if I select successfully.\n  - Yes, now it looks like my view is present.\n• Speaker 1\n  - # Speaker 1\n\nSo now I will show you and explain some of behavior settings we must set up.\n  - Represents structure of database \nview this is very important property which tells creature that system should not try to create corresponding table or \nfind existing table.\n• Speaker 1\n  - # Speaker 1\n\nIt will try to do it and treat it as a table with a set of columns and columns information will be provided in this object, \nso it will try to use it as a regular object, but it will not try to modify its structure the database.\n  - This helps us to make \nanything at the database level, including views or self handmade tables.\n• Speaker 1\n  - # Speaker 1\n\nAll we have to do is set of columns which matches with set of columns of a real database view.\n  - First column is \nUSRiD and the type is unique identifier.\n• Speaker 1\n  - # Speaker 1\n\nSo our key column is id column we created especially it has Usrid code and it has id title.\n  - So this is the most \nimportant part and that's all we can save and publish our object.\n• Speaker 1\n  - # Speaker 1\n\nWe can register this object as a lookup.\n  - By the way, you probably noticed we have a new button here.\n• Speaker 1\n  - # Speaker 1\n\nYou can see we have name column, we have birthday and we have age in date.\n  - So you can see this calculation \nworks.\n• Speaker 1\n  - # Speaker 1\n\nThen you can create an object representing your data structure and with the same name and same columns set.\n  - And \nif you mark this object as represent structure database view system will not modify data tables.\n• Speaker 1\n  - # Speaker 1\n\nNow I will show you how we can do this.\n  - But first of all we need to modify our SQL script.\n• Speaker 1\n  - # Speaker 1\n\nWe will name it USR contact title can be contact and there are some architectural peculiarities.\n  - When we have a \ncode something then on database system works with code plus id suffix.\n• Speaker 1\n  - # Speaker 1\n\nWe have to specify lookup property.\n  - It will be a contact obviously it looks like that's it.\n• Speaker 1\n  - # Speaker 1\n\nSo let it be just maximum value for one contact.\n  - We always have just one data row in our connected entity.\n• Speaker 1\n  - # Speaker 1\n\nSo possibly this is not very difficult for you, and if you have more questions about it, just tell me.\n  - So it was an \nexample of how you can use additional tricks with objects and to connect it using database view.\n• Speaker 1\n  - # Speaker 1\n\nIf we will search in our configuration for objects, search for something with the name base, we'll find a lot of objects\n\n--- Page 55 ---\n\nlike base address, base entity, base folder and so on.\n  - I will open base lookup as example.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we create new object inherited from base lookup, it will be a true new real object.\n  - But you will inherit a lot \nof properties and events, settings and behavior from base lookup.\n• Speaker 1\n  - # Speaker 1\n\nLet's check.\n  - I never faced it previously.\n• Speaker 1\n  - # Speaker 1\n\nAnd inside of the objects you can specify what columns will support this translation and what columns will not \nsupport translation.\n  - By default, name and description text columns are turned on with this option, localizable text.\n• Speaker 1\n  - # Speaker 1\n\nHere is probably what else, I don't know what is the language here?\n  - This seems to be italian, maybe Portugal and so \non.\n• Speaker 1\n  - # Speaker 1\n\nSo you can see translations of the same records that you get from your main table are saved into different \nlanguages and out of the box lookups.\n  - That is because name and description are supported with localizable text.\n• Speaker 1\n  - # Speaker 1\n\nYes, you see my table is empty because I did not provide any translation.\n  - But once you will support several \nlanguages and if you want to keep your lookups translated into other languages so you can start to use it.\n• Speaker 1\n  - # Speaker 1\n\nEverything should be saved on disk.\n  - Of course we will remember now about our visual studio code and git client to \nshare our settings with our imagined team members.\n• Speaker 1\n  - # Speaker 1\n\nWhat else I wanted to show you before we proceed is example of delivery because it will be important I think that \nyou are interested how we can transport our solution for test and production.\n  - You remember version control.\n• Speaker 1\n  - # Speaker 1\n\nInside of it we can find Gz archive and inside of it we can find a single file with metadata saved here and it's not so \nreadable.\n  - And this is a transportable format for creation packages.\n• Speaker 1\n  - # Speaker 1\n\nIt will take some ram, some cpu.\n  - You see my ram consumption is more than 11gb now, so I can start my second \nenvironment.\n• Speaker 1\n  - # Speaker 1\n\nSo we have to be a member of a sysadmin.\n  - Let me show you system users.\n• Speaker 1\n  - # Speaker 1\n\nLet's see what happened.\n  - So 13 seconds we started no visible errors and 31 finished.\n• Speaker 1\n  - # Speaker 1\n\nFor some reasons you can do this by unlock for hotfix temporary thing that helps you to make temporary make your \npackage temporary editable.\n  - If you forget to lock it again, system will do it according to the special timeout which \ncan be found in system settings.\n• Speaker 1\n  - # Speaker 1\n\nContact age in days as you can see according to my current data on test environment is calculated.\n  - Great.\n• Speaker 1\n  - # Speaker 1\n\nAnd today I plan to show you how to make a UI settings how to make new sections not with section wizard because \nit's classic UI, outdated stuff.\n  - I will show you how to make new sections, new bake applications made with \nautomations provided by application hub and Freedom UI.\n• Speaker 1\n  - # Speaker 1\n\nApplication appeared not so far ago, maybe just a couple of years, and packages were present for more than ten \nyears.\n  - So you see that application is generally relatively new to creation and previously we had only packages.\n• Speaker 1\n  - # Speaker 1\n\nAlso it has information about its developer.\n  - Terrasoft here means that it is a creation company.\n• Speaker 1\n  - # Speaker 1\n\nSuch items are data items created for some purpose.\n  - Data models means objects.\n• Speaker 1\n  - # Speaker 1\n\nThe system will revert and go back into its original state which was before installation of such tools.\n  - So finally, end \nuser system may include only solutions, only applications that user decides to run.\n• Speaker 1\n  - # Speaker 1\n\nSo it was not fully composable approach.\n  - And we had just simply hard coded part of the system which also was \ncustomizable, but it was not removable from the system.\n• Speaker 1\n  - # Speaker 1\n\nAnd this is pretty standard for creation.\n  - So you can use one zip file for many packages inside.\n• Speaker 1\n  - # Speaker 1\n\nSo ideally if you develop a very good app and then you remove it, you can take care for full recovery of your database \noriginal structure after your application was removed.\n  - And if really needed, you can create SQL scripts which will do \nthis.\n• Speaker 1\n  - # Speaker 1\n\nSo in real life when you remove your app, some traces may remain in the database and usually this is not critical for \napplication because logically such columns or some data leftovers will not be available to see easily unless you go \nto the SQL level, unless you start to make some special queries in order to find them.\n  - So in general, when you \nremove some app, it will be logically cleared so it will fully disappear from the system.\n• Speaker 1\n  - # Speaker 1\n\nSo in general, it was designed to make it easy to install some app and to remove some app.\n  - And ideally when app \nwas removed, no visible traces should remain.\n• Speaker 1\n  - # Speaker 1\n\nOur plan is to automate realty estate agency and we want to keep list of realty records in freedom UI application.\n  - We \nwill have a section for such list of realty records and we can use existing platform customization tools to make it as \nfast as possible, to make it quick and easy.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 60 ---\n\nIn our examples of sections are accounts or contacts and also we have set of system sections like lookups or users \nor system settings.\n  - So section in creature, it's like main big entity which usually has a lot of columns and usually has \nsome subordinate items called details.\n• Speaker 1\n  - # Speaker 1\n\nLet's change its color to something more like significant.\n  - And we can see, oh, we have some new icons here.\n• Speaker 1\n  - # Speaker 1\n\nYou will not be able to easily change it later.\n  - So it's important to provide it correctly from the first time.\n• Speaker 1\n  - # Speaker 1\n\nIt has its main name, version, default page, some description, date of creation developer.\n  - This is a string named \ncustomer.\n• Speaker 1\n  - # Speaker 1\n\nIt means such packages are read only.\n  - If you want to customize something in customer 360 app system will not be \nable to save anything into such read only packages.\n• Speaker 1\n  - # Speaker 1\n\nAnd as you can see it created seven data items representing inserts into some system tables that are necessary to \nmake our application work normally as a section.\n  - Let me show you where we can see it.\n• Speaker 1\n  - # Speaker 1\n\nSo this is just an example of a reality object that we plan to reality data that we plan to save.\n  - Such list and edit page \nwill be used to manually input data, to modify this data and to work with this data.\n• Speaker 1\n  - # Speaker 1\n\nThen you open edit page.\n  - You can also open edit page by clicking on this action, but it takes two clicks quite hard \nand we can just click on this hyperlink.\n• Speaker 1\n  - # Speaker 1\n\nSo I will do it quite fast.\n  - Please confirm.\n• Speaker 1\n  - # Speaker 1\n\nSo my plan is to extend a bit our settings and make it more useful.\n  - When I select any column we can look at its \nproperties settings.\n• Speaker 1\n  - # Speaker 1\n\nSimply drag and drop.\n  - You see several potential places to land our page.\n• Speaker 1\n  - # Speaker 1\n\nIn our case, code will be something like USR because we need prefix for our new columns and technical things, so it \nrequires prefix.\n  - USR price USD will be our code and we confirm.\n• Speaker 1\n  - # Speaker 1\n\nIt should be unique so we can name it the same as our own USR price USD and confirm.\n  - As you can see, \nconfirmation is provided for the most important properties and columns of our items.\n• Speaker 1\n  - # Speaker 1\n\nWe need type what is real t and I will use it based on drop down or lookup.\n  - Column drop down and lookup are very \nclose synonyms so it's almost the same.\n• Speaker 1\n  - # Speaker 1\n\nNo classic UI words here so it will be our freedom usage reality type, title and code are necessary because system \nwill use it to create new lookup object inherited from base lookup.\n  - It will also register it as lookup in lookups section.\n• Speaker 1\n  - # Speaker 1\n\nNo lookup for this so we can create one from scratch realty offer type I will do some poses for some of you like \nMonica or macho or rakhi who confirmed that you do it just along with me.\n  - Okay, save it.\n• Speaker 1\n  - # Speaker 1\n\nThis is just to make it more, let's say friendly when we will work with code part.\n  - Okay, so what else?\n• Speaker 1\n  - # Speaker 1\n\nGood, good option for this type of selection.\n  - And I can also make unique name here manager as a code.\n• Speaker 1\n  - # Speaker 1\n\nIt takes time because system saves client module.\n  - It saves changes to object, it publishes objects, so it takes some \nsignificant time and that's why it takes a while.\n• Speaker 1\n  - # Speaker 1\n\nSo you see that just from 20 minutes of our work we have a lot of items already created and including main entity, \nincluding some objects that are used for lookups.\n  - You can also check if you go to lookups section, you will see \nrecently registered lookups automatically.\n• Speaker 1\n  - # Speaker 1\n\nThe most commonly will be using sale offer type and another one will be rental.\n  - So we have only two offer types in \nour system and when we have data binding tool it will be extremely easy for us to save all data into our target \npackage.\n• Speaker 1\n  - # Speaker 1\n\nSo let's do one more column display id.\n  - Column.\n• Speaker 1\n  - # Speaker 1\n\nThen we go to another lookup realty tape for Freedom UI section.\n  - And just for demo purpose I will show you how we \ncan import this data from file.\n• Speaker 1\n  - # Speaker 1\n\nAnd if we import, we have to specify duplicate search rule.\n  - So what column will be used to check presence of data.\n• Speaker 1\n  - # Speaker 1\n\nNow we can do more steps with main object setting because I want to use some additional features available at \nobject model.\n  - Let's go to objects and I want to show you default values for our section.\n• Speaker 1\n  - # Speaker 1\n\nSo we can make default value for created reality records as a constant.\n  - And we can take constant from lookup to be \nhouse.\n• Speaker 1\n  - # Speaker 1\n\nSo we made our section and we can check how it works.\n  - Going to our realty section or going to my applications \nrealty and opening its page, you see previous data.\n• Speaker 1\n  - # Speaker 1\n\nHouse in Seattle was saved normally.\n  - Okay, we have some kind of basement for our future study.\n• Speaker 1\n  - # Speaker 1\n\nBut now I try to keep it simple, everything as is by default.\n  - So I only have some set of columns set by default.\n• Speaker 1\n  - # Speaker 1\n\nSo let's select our package, select only client modules and for example, let's try to open form page.\n  - If you click on the \nform page directly on its title, you will see page editor, not a program code.\n• Speaker 1\n  - # Speaker 1\n\nYou can go to write part.\n  - This is three dots button called actions.\n• Speaker 1\n  - # Speaker 1\n\nYou see a lot of divs, a lot of some layout settings, a lot of classes, and also you will see plenty of Ng names here \nstanding for angular.\n  - So in Freedom UI, its undercover framework which helps us to build and display components is \nangular.\n• Speaker 1\n  - # Speaker 1\n\nSo this is result of work of big number of JavaScript files and such.\n  - JavaScript files consume information about\n\n--- Page 66 ---\n\ncontrols, about settings, about what they have to build.\n• Speaker 1\n  - # Speaker 1\n\nHere you will see plenty of files and what is really frightening, then you will see a lot of configuration items here.\n  - So \nprobably several hundreds, maybe up to 1000.\n• Speaker 1\n  - # Speaker 1\n\nWe'll find some articles Academy AMD modules module overview yes probably this one is good article explaining \nthis, but also this concept can be found at some common sources like Wikipedia.\n  - So AMD stands for asynchronous \nmodule definition.\n• Speaker 1\n  - # Speaker 1\n\nQuite simple and very old framework require G's.\n  - You can read more about require G's, probably you can find it, \nrequiregs.org probably can find its original page, explain explanations and so on.\n• Speaker 1\n  - # Speaker 1\n\nBut when you open any page, system needs only some part from it.\n  - For example, it needs only 100 or maybe 200 \nmodules.\n• Speaker 1\n  - # Speaker 1\n\nAlso client module has its own schema properties, so properties of changeable item saved in creation configuration.\n  - --- Page 67 ---\n\nIt has its own code localizable title information about parent client module so it could be used for inheritance and \npackage where this client module is saved.\n• Speaker 1\n  - # Speaker 1\n\nThis function has a main purpose to return you some data object.\n  - As you can see it returns JavaScript object, \nincluding in our case six properties.\n• Speaker 1\n  - # Speaker 1\n\nConfig diff represents visual part of the page and physically this is an array in JavaScript and this array includes set \nof items.\n  - In each item represents one control on the page.\n• Speaker 1\n  - # Speaker 1\n\nWe have a label, we have some other properties, parent container, name and that's all.\n  - It's interesting to mention that \nhere we have some settings which represent connection between our control and physical data field connected and \nsaved in memory.\n• Speaker 1\n  - # Speaker 1\n\nFor example, if I accidentally do something like this, system will notice it and it will not show me where I have a \nmistake.\n  - So you should be very careful working with this part and 100% of such settings are now performed with the \npage editor so it's not so hard.\n• Speaker 1\n  - # Speaker 1\n\nFor page level they have special names generated by application automatically and once I tried to change them, it \nturned out to be hard coded each time you create them.\n  - So it's not a good idea to make them better.\n• Speaker 1\n  - # Speaker 1\n\nSo attributes are used to keep some data and connect with controls.\n  - Then finally we have model config which \nrepresents set of data objects used with our page.\n• Speaker 1\n  - # Speaker 1\n\nWe can do conversion between columns like recalculations, but personally I prefer to do it inside of handlers and \nvalidators are used to perform some checks at client side to ensure that values provided in the columns are correct \nand in case if they are not correct, it's possible to display error messages and prohibit saving of data.\n  - We will also do \nsuch examples later.\n• Speaker 1\n  - # Speaker 1\n\nPlease do not modify do not remove them because they are necessary for page editor it's unusual, but page editor \ndoesn't search for the name of the object here or name of the array.\n  - Page editor searches for such system \ncomments and then takes code between and analyzes it and representing page design for you.\n• Speaker 1\n  - # Speaker 1\n\nSome of you who studied somewhere at university or who studied yourself with the way how UI can be programmed \nprobably know about architectural patterns and maybe you know a pattern named MVC and here we have a pattern \nnamed Mvvm.\n  - Let me explain what it is we can study and we can find some simple articles at Wikipedia about it.\n• Speaker 1\n  - # Speaker 1\n\nAnd in MVVM pattern it's recommended to separate visual part and code view separately, store data values and call \nit model and also make a separate controller unit which is called view model.\n  - And Viewmodel has a lot of \ninformation about view.\n• Speaker 1\n  - # Speaker 1\n\nView config diff represents view structure and that's why it's called view config diff, not just diff.\n  - By the way, the word \ndiff here is probably shortage from a difference and means that it's information about only some changes.\n• Speaker 1\n  - # Speaker 1\n\nSo when client side modules will finally form final page structure, they will take base parent one, they will apply child \nitem like this setting, and finally they will analyze base diff child diff and they will make all of the components \naccording to parent and child items.\n  - Okay, so view config div represents visual part represents view in mvvm pattern \nmodel, config represents information about data entities used for our page and also view model config.\n• Speaker 1\n  - # Speaker 1\n\nIt looks like quite boring thing.\n  - So let's do some practical step for today and I will show you very simple hello world \ncomplexity level example.\n• Speaker 1\n  - # Speaker 1\n\nYou can make some kind of funny caption like push me and if you want you can translate this title into other \nsupported languages and by default, as you can see we have a lot of supported actions like open records, like saved \ndata, close page run business process and so on.\n  - Once I started to count I found 24 supported actions here.\n• Speaker 1\n  - # Speaker 1\n\nSo we have more than 60 supported icons here and okay, so and I also set some dummy action.\n  - I plan to change it \nlater.\n• Speaker 1\n  - # Speaker 1\n\nWe have caption, we have type and also we have clicked setting.\n  - Let's remember line number 52 and this is setting \nfor some tenders tender which is already programmed somewhere in parent templates, parent components and \nsystem knows how to implement this.\n• Speaker 1\n  - # Speaker 1\n\nBy the way, it looks like this editor was seriously changed because previously we had some unnecessary warnings \nrelated to new JavaScript comments and features and now it looks like in this editor there are significant \nimprovements related to the way how code is managed.\n  - So thanks developers.\n• Speaker 1\n  - # Speaker 1\n\nSo when you see Terasoft here, you should understand this is a JavaScript core framework, quite old but still \nsupported.\n  - You can use true information from it to show some pop up messages.\n• Speaker 1\n  - # Speaker 1\n\nRequest dollar context attribute name equals and then we will just take 20% of this price and save it again.\n  - We have \nto normally analyze our code inside of a synchronous function, allowing other potential handlers to be started.\n• Speaker 1\n  - # Speaker 1\n\nIn most of cases probably it makes sense to reward the page, but in most of cases browser cache doesn't really \nprevent us from working, so it will probably work normally even without revolting the page.\n  - So open it again.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 71 ---\n\nOkay, here in my button I have clicked property and I have to specify my own custom handler name here.\n  - That was \nmy mistake, I just missed it.\n• Speaker 1\n  - # Speaker 1\n\nSorry for safe I should use push me this one.\n  - Yes, you can see now price changed.\n• Speaker 1\n  - # Speaker 1\n\nIf you do not use await, you will have a bit different structure at the end and you will still have to dig into object that \nyou will get from it.\n  - So recommended option is like this, await request, doer context and then your attribute name.\n• Speaker 1\n  - # Speaker 1\n\nThis is exactly this API for this telescope framework.\n  - So you can use some search here for example, we used the \nmethod to show information.\n• Speaker 2\n  - # Speaker 2\n\nMaybe it's about my problem of performance of the application in my laptop.\n• Speaker 1\n  - # Speaker 1\n\nOh, yes, we can do this.\n  - Would you like to record this part also as part of our training or you prefer to keep it more \npersonal and private so we can start recording if you want.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 72 ---\n\nYou can.\n  - I have no problem to me, no problem.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so I will stop sharing.\n  - Our main part of the session is over.\n• Speaker 2\n  - # Speaker 2\n\nI share my screen with you?\n• Speaker 1\n  - # Speaker 1\n\nYes, yes, please.\n  - Thanks all of you, thanks for all information and your questions.\n• Speaker 2\n  - # Speaker 2\n\nYeah, sorry, I have two.\n• Speaker 1\n  - # Speaker 1\n\nYou can show only one, but I.\n  - Okay, green share screen button.\n• Speaker 2\n  - # Speaker 2\n\nIf I have two screens, so I disconnect one.\n• Speaker 1\n  - # Speaker 1\n\nYes, please select one.\n  - Okay, I can see a screen.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 73 ---\n\nYes, it's chrome.\n  - Yes.\n• Speaker 1\n  - # Speaker 1\n\nOkay, you try to run it once again.\n• Speaker 2\n  - # Speaker 2\n\nYes, I restart in many occasions and don't work.\n  - Good.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so are you using Windows Pro or Windows home?\n• Speaker 2\n  - # Speaker 2\n\nI have windows.\n• Speaker 1\n  - # Speaker 1\n\nYou can find system information?\n• Speaker 2\n  - # Speaker 2\n\nYes, Windows homes.\n• Speaker 1\n  - # Speaker 1\n\nYou will have significant issues.\n  - Let me show you how you can fix this.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 74 ---\n\nI can see how you do that.\n  - You can repeat that, please just close.\n• Speaker 1\n  - # Speaker 1\n\nOther pages, that's the solution.\n  - So when you go to configuration section, you should close other main page.\n• Speaker 1\n  - # Speaker 1\n\nBut when you need to go back to your main configuration section, you will have to use tabs and you will have to \nclose other tabs.\n  - This is not comfortable.\n• Speaker 1\n  - # Speaker 1\n\nSo I recommend you to upgrade your windows to pro.\n  - In this case it will be.\n• Speaker 2\n  - # Speaker 2\n\nAndrea is my colleague, he takes the code the course too.\n  - So he asked me, okay, so I save, socially save, I cancel \nand I.\n• Speaker 1\n  - # Speaker 1\n\nYou can, you can just open another tab with your, you can recover previous page.\n  - Yes.\n• Speaker 2\n  - # Speaker 2\n\nSo it's work.\n  - Oh, it is so simple.\n• Speaker 1\n  - # Speaker 1\n\nYes.\n  - And it's.\n• Speaker 2\n  - # Speaker 2\n\nOkay, thank you.\n  - Thank you very much, Dmitry.\n• Speaker 1\n  - # Speaker 1\n\nThank you Karim.\n• Speaker 2\n  - # Speaker 2\n\nYou saved me.\n  - My boss is over me all day and it's difficult forwarding to the course.\n• Speaker 1\n  - # Speaker 1\n\nNo problem.\n  - Thank you, thank you.\n• Speaker 2\n  - # Speaker 2\n\nSee you tomorrow.\n• Speaker 1\n  - # Speaker 1\n\nYes, so our session is over.\n  - If any other questions?\n• Speaker 1\n  - # Speaker 1\n\nSo maybe you have just a bit older version than I do because I recently switched to the latest one and your version \nmaybe not the same latest, but this is not critical.\n  - So you can just see this compilation result.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 76 ---\n\nI believe it should only change some files on your windows and it will not be like clean environment.\n  - So you should \nhave the same IIs website, you should have the same stuff.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number four of our.\n• Speaker 2\n  - # Speaker 2\n\nDevelopment on creation Platform guided learning set of practical sessions that we do for.\n• Speaker 1\n  - # Speaker 1\n\nDeveloping different features and functionality that.\n• Speaker 2\n  - # Speaker 2\n\nRequires some programming on Creature platform.\n  - And previously we finished with building our.\n• Speaker 1\n  - # Speaker 1\n\nOwn section named Realty and we managed.\n• Speaker 2\n  - # Speaker 2\n\nTo set up List View, we managed to make a form page for it.\n• Speaker 1\n  - # Speaker 1\n\nWe also added some default values and.\n• Speaker 2\n  - # Speaker 2\n\nWe made some required fields and it.\n• Speaker 1\n  - # Speaker 1\n\nWas pretty much easy and we used.\n  - --- Page 78 ---\n• Speaker 2\n  - # Speaker 2\n\nOnly no code customization tools for this.\n• Speaker 1\n  - # Speaker 1\n\nAlso we managed to make a button.\n• Speaker 2\n  - # Speaker 2\n\nWhich had a custom handler.\n  - So we made a button push me button and this custom handler shows some console \noutput.\n• Speaker 1\n  - # Speaker 1\n\nKind of JavaScript code behind this button.\n  - Today I will show you a bit.\n• Speaker 2\n  - # Speaker 2\n\nMore complicated examples of how you can.\n• Speaker 1\n  - # Speaker 1\n\nDo some programming and coding and also we will discuss debugging.\n• Speaker 2\n  - # Speaker 2\n\nSo you will see how it's possible.\n• Speaker 1\n  - # Speaker 1\n\nTo stop execution of your code and.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 79 ---\n\nMake it executed line by line.\n• Speaker 1\n  - # Speaker 1\n\nBy line and to see all the.\n• Speaker 2\n  - # Speaker 2\n\nVariables and to see all the conditions.\n• Speaker 1\n  - # Speaker 1\n\nSo so to make something that you probably get used to do when you operate with any like modern version, modern.\n• Speaker 2\n  - # Speaker 2\n\nDevelopment environment like Visual Studio or other so today question today's session I would.\n• Speaker 1\n  - # Speaker 1\n\nLike to warm up with Simple Question.\n• Speaker 2\n  - # Speaker 2\n\nWhich is about organizing of your sections.\n  - It's probably not so obvious so I will tell you all apps it's like.\n• Speaker 1\n  - # Speaker 1\n\nSynthetic Workplace which includes all registered sections in one list.\n• Speaker 2\n  - # Speaker 2\n\nWe have Studio out of the box workplace, we have customer360 because it's a.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 80 ---\n\nResult of loaded contacts and accounts.\n• Speaker 2\n  - # Speaker 2\n\nSo our loaded customer360 app also caused creation of new workplace.\n  - Such workplaces also can be created, you \ncan manage them and you can put your sections into it.\n• Speaker 1\n  - # Speaker 1\n\nThat will be very easy, but I.\n• Speaker 2\n  - # Speaker 2\n\nNeed to demonstrate it.\n• Speaker 1\n  - # Speaker 1\n\nTo show how you can do this.\n• Speaker 2\n  - # Speaker 2\n\nGo to Settings then find Workplace Setup.\n  - Workplace Setup helps us to create new workplace or to manage existing \nworkplaces.\n• Speaker 1\n  - # Speaker 1\n\nRun system under administrator privilege.\n• Speaker 2\n  - # Speaker 2\n\nSo now you can see I see only four workplaces.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 81 ---\n\nBut in total it looks like we.\n• Speaker 2\n  - # Speaker 2\n\nHave at least 5.\n  - And productivity workplace seems to not showing anything and not having any permission settings.\n• Speaker 1\n  - # Speaker 1\n\nSo that's probably why we are not seeing it.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's go to studio workplace.\n  - We have set of sections for a workplace.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you columns set up for sections list.\n  - We can arrange and add the position column.\n• Speaker 2\n  - # Speaker 2\n\nNow you will understand why I display this position.\n  - Any section in a workplace has its position and position \norganizes order.\n• Speaker 1\n  - # Speaker 1\n\nSometimes this order is not so consistent.\n• Speaker 2\n  - # Speaker 2\n\nYou see UI management and message templates, they have the same position.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 82 ---\n\nAnd sometimes UI management will be on top.\n• Speaker 2\n  - # Speaker 2\n\nSometimes message templates will be on top depending on how data will be loaded at a certain time.\n• Speaker 1\n  - # Speaker 1\n\nBecause sorting by this position it makes some ambitious result.\n  - Okay, so what I plan to do.\n• Speaker 2\n  - # Speaker 2\n\nI plan to add one more section in the list system will show me only sections that are not listed here.\n  - And it's \ninteresting to see here that we have couple of accounts section.\n• Speaker 1\n  - # Speaker 1\n\nIt's very unusual.\n• Speaker 2\n  - # Speaker 2\n\nCouple of calls and couple of contacts.\n  - One of the possible explanation why we.\n• Speaker 1\n  - # Speaker 1\n\nHave two different account section is that.\n• Speaker 2\n  - # Speaker 2\n\nOne of them is section for Classic.\n• Speaker 1\n  - # Speaker 1\n\nUi, another is Freedom UI section.\n  - We can also display columns here which.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 83 ---\n\nWill let you understand what we are looking at.\n• Speaker 1\n  - # Speaker 1\n\nSo we can just squeeze a bit title display e.g.\n• Speaker 2\n  - # Speaker 2\n\nCreated on column save column settings.\n• Speaker 1\n  - # Speaker 1\n\nNow when we try to add you.\n• Speaker 2\n  - # Speaker 2\n\nWill see title, you will see created on and one of them is 19, another is 24.\n  - And it looks like first one is.\n• Speaker 1\n  - # Speaker 1\n\nClassic UI, second one which is younger.\n• Speaker 2\n  - # Speaker 2\n\nThis is freedom UI.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can detect which one is necessary for you to add.\n• Speaker 2\n  - # Speaker 2\n\nIn my case, I plan to find realty section created recently and we can see it at the end of this list.\n  - You see, its position \nis also not so consistent.\n• Speaker 1\n  - # Speaker 1\n\nBut it guarantees that it will be at the end.\n• Speaker 2\n  - # Speaker 2\n\nBut it's not so comfortable to see this item at the very end of this list.\n  - So possibly we would like to move it upper.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to do this.\n• Speaker 2\n  - # Speaker 2\n\nYou can move it even on the first top position.\n  - Unfortunately we cannot move it upper than home.\n• Speaker 1\n  - # Speaker 1\n\nIt if you want and realty will be position zero.\n  - So when we save it we can.\n• Speaker 2\n  - # Speaker 2\n\nAlso reward this page.\n  - Probably we will see our reality section directly at Studio Workplace at zero position.\n• Speaker 1\n  - # Speaker 1\n\nTheir position because reality shifted them.\n• Speaker 2\n  - # Speaker 2\n\nSo if we want to transport such change, we must make a corresponding data item.\n  - Or we can use help of data \nbinding tool.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 85 ---\n\nWe can just click Bind Workplace, specify.\n• Speaker 2\n  - # Speaker 2\n\nTarget package and click save.\n  - Then we can see what was created.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we for example try to.\n• Speaker 2\n  - # Speaker 2\n\nActualize data and save it, we will see warning and this warning will tell.\n• Speaker 1\n  - # Speaker 1\n\nUs that such Studio Workplace was already.\n• Speaker 2\n  - # Speaker 2\n\nRegistered somewhere in parent package.\n• Speaker 1\n  - # Speaker 1\n\nAnd even more it was registered one more time in another parent package.\n• Speaker 2\n  - # Speaker 2\n\nBut it's not a big mistake.\n  - So it's not a mistake at all.\n• Speaker 1\n  - # Speaker 1\n\nSuch data is already present somewhere in parent packages data items.\n  - So maybe we are doing it.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 86 ---\n\nIt'S not a mistake.\n  - Another one is sys module in Workplace.\n• Speaker 1\n  - # Speaker 1\n\nSo you can see data and you can see all the sections in Workplace.\n• Speaker 2\n  - # Speaker 2\n\nStudio were listed here.\n  - And also it's important to mention that forced update option must be applied for.\n• Speaker 1\n  - # Speaker 1\n\nPosition column because otherwise update or position.\n• Speaker 2\n  - # Speaker 2\n\nWill be not performed.\n• Speaker 1\n  - # Speaker 1\n\nYou probably remember from our Tuesday session that when you create data items, it's.\n• Speaker 3\n  - # Speaker 3\n\nPossible that you will make data item that will perform update, not an insert.\n• Speaker 1\n  - # Speaker 1\n\nIn case of update in case of.\n• Speaker 3\n  - # Speaker 3\n\nTarget record was found.\n  - --- Page 87 ---\n• Speaker 1\n  - # Speaker 1\n\nBy the way, I prefer to make.\n• Speaker 2\n  - # Speaker 2\n\nIt not by this key.\n  - I prefer to make it by this.\n• Speaker 1\n  - # Speaker 1\n\nKey and found by id.\n• Speaker 3\n  - # Speaker 3\n\nSo if record was found by ID.\n• Speaker 1\n  - # Speaker 1\n\nAnd then it will update target database according to loaded data and in our case only position will be updated.\n  - Okay, \nwe can save it.\n• Speaker 2\n  - # Speaker 2\n\nNow you can see that save was.\n• Speaker 1\n  - # Speaker 1\n\nSuccessful, but we have a lot of warnings related to parent data that was already registered in base product.\n• Speaker 2\n  - # Speaker 2\n\nAnd this is valid set of warnings.\n• Speaker 1\n  - # Speaker 1\n\nBecause our change caused the change of.\n  - --- Page 88 ---\n• Speaker 2\n  - # Speaker 2\n\nPosition of all previously registered sections in Studio Workplace.\n• Speaker 1\n  - # Speaker 1\n\nSo simply all of the registered sections had different position because we moved our reality to the top and we.\n• Speaker 2\n  - # Speaker 2\n\nHad a warning that tells us that you're trying to Change the data which was originally declared somewhere else.\n• Speaker 1\n  - # Speaker 1\n\nSo maybe you're doing it wrong.\n• Speaker 2\n  - # Speaker 2\n\nSo please take care.\n  - Here is your warning.\n• Speaker 1\n  - # Speaker 1\n\nBut this warning is still so we can ignore this.\n  - And last one is admin unit in workplace.\n• Speaker 2\n  - # Speaker 2\n\nThis is about access permissions.\n  - System administrators have full access to Studio.\n• Speaker 1\n  - # Speaker 1\n\nWorkplace and probably this data is also.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 89 ---\n\nPresent in our database.\n• Speaker 1\n  - # Speaker 1\n\nYes, so maybe not so necessary to save it.\n• Speaker 2\n  - # Speaker 2\n\nSo it's warning, not an error in case if you have an error.\n  - For example, you save the same data twice in the same \npackage.\n• Speaker 1\n  - # Speaker 1\n\nIn this case, save button will show you error message and save button will not disappear.\n  - If save button was \ndisappeared, means your.\n• Speaker 2\n  - # Speaker 2\n\nData item was normally saved.\n• Speaker 1\n  - # Speaker 1\n\nIf save button did not disappear, it means an error.\n  - It's like serious mistake and the system.\n• Speaker 2\n  - # Speaker 2\n\nWill not allow you to save such data.\n  - It happens only when you save the.\n• Speaker 1\n  - # Speaker 1\n\nSame data twice in the same package.\n  - Okay, so it was set of client modules of sorry, set of data items.\n• Speaker 2\n  - # Speaker 2\n\nAutomatically created by help of data binding tool.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 90 ---\n\nWhen we registered our reality section in a studio workplace, now we have comfort.\n  - Here is our new created section.\n• Speaker 2\n  - # Speaker 2\n\nHere is set of processes we will manage very soon.\n  - Here we have lookups which we also often look at.\n• Speaker 1\n  - # Speaker 1\n\nAnd we'll use it and some other.\n• Speaker 2\n  - # Speaker 2\n\nSystem sections that we may need.\n  - So we now have very comfortable conditions.\n• Speaker 1\n  - # Speaker 1\n\nAnd easy transitions between different sections.\n  - So it was just a simple example how you can organize your \nworkplaces in.\n• Speaker 2\n  - # Speaker 2\n\nMore complicated based products like sales, service and marketing.\n  - You will see more workplaces, more sections \ninside.\n• Speaker 1\n  - # Speaker 1\n\nUsers with particular roles.\n• Speaker 2\n  - # Speaker 2\n\nAnd you can provide permissions for such.\n• Speaker 1\n  - # Speaker 1\n\nSections and for such workplaces.\n  - --- Page 91 ---\n• Speaker 2\n  - # Speaker 2\n\nAnd what is important for you to understand that you can create many different.\n• Speaker 1\n  - # Speaker 1\n\nWorkplaces and include the same section many times.\n  - So if you added some section to.\n• Speaker 2\n  - # Speaker 2\n\nSome workplace, it doesn't mean that you can't do it with another workplace.\n• Speaker 1\n  - # Speaker 1\n\nSo one context section can be added.\n• Speaker 2\n  - # Speaker 2\n\nIn different places with no limitations.\n• Speaker 1\n  - # Speaker 1\n\nIn my case, I have my applications.\n• Speaker 2\n  - # Speaker 2\n\nWorkplace with real T section and I also have.\n• Speaker 1\n  - # Speaker 1\n\nJust a second.\n  - So what I wanted to show you.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 92 ---\n\nWe can use the same section in.\n• Speaker 1\n  - # Speaker 1\n\nDifferent workplaces and it's not a problem.\n• Speaker 2\n  - # Speaker 2\n\nIf we specify the same section in different workplaces many times.\n  - So physically this is the same section.\n• Speaker 1\n  - # Speaker 1\n\nThe same data shown in different places.\n  - Just a second.\n• Speaker 2\n  - # Speaker 2\n\nI think will be interesting for you to know.\n  - So let's do something more serious.\n• Speaker 1\n  - # Speaker 1\n\nYou can do some more serious programming.\n• Speaker 2\n  - # Speaker 2\n\nInside of Creature client side page using.\n• Speaker 1\n  - # Speaker 1\n\nSome JavaScript and using creature tools and let's say data platform.\n  - First of all I will explain you some business \nideas.\n• Speaker 2\n  - # Speaker 2\n\nSo what we plan to do, my plan is to show you some recalculations and it could be a good example.\n  - --- Page 93 ---\n• Speaker 1\n  - # Speaker 1\n\nIf we for example create one more column, call it commission.\n  - So it will be our future profit from the deal.\n• Speaker 2\n  - # Speaker 2\n\nAnd also we have to take care.\n• Speaker 1\n  - # Speaker 1\n\nAbout the type offer.\n• Speaker 2\n  - # Speaker 2\n\nSo for sale we have one formula.\n• Speaker 1\n  - # Speaker 1\n\nAnd for rental we will have another formula.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's do it step by step.\n  - So first of all we need new column.\n• Speaker 1\n  - # Speaker 1\n\nNew column can be added to this very easily.\n  - We can just go to modify our page.\n• Speaker 2\n  - # Speaker 2\n\nCarefully dropping it here it will be named Commission.\n  - And as we have a price in.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 94 ---\n\nUS dollars, so let it be a commission.\n  - Also in the same currency, the inner.\n• Speaker 2\n  - # Speaker 2\n\nColumn name will be USR Commission.\n• Speaker 1\n  - # Speaker 1\n\nAnd we confirm such code for this column.\n  - The data format will be decimal with two digits.\n• Speaker 2\n  - # Speaker 2\n\nOkay, great.\n• Speaker 1\n  - # Speaker 1\n\nDecimal with two digits.\n  - And we want to make this commission calculated automatically so we don't allow users.\n• Speaker 2\n  - # Speaker 2\n\nTo manually change it.\n  - That's why I will set read only.\n• Speaker 1\n  - # Speaker 1\n\nOption on I temporary hide place attachments tab.\n  - So my commission will be read only.\n• Speaker 3\n  - # Speaker 3\n\nAnd also just to make it easier.\n• Speaker 1\n  - # Speaker 1\n\nTo find in div array, I will name its element code so we can type it as we wish Commission USD.\n  - Let it be our element \ncode.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 95 ---\n\nThis element code will be used in view config, div and also physically it.\n• Speaker 1\n  - # Speaker 1\n\nWill be used for building real page.\n• Speaker 3\n  - # Speaker 3\n\nHTML markup with set of divs inside.\n• Speaker 1\n  - # Speaker 1\n\nAnd this code will be used to name set of items and div.\n• Speaker 3\n  - # Speaker 3\n\nHTML tags inside of our page.\n• Speaker 1\n  - # Speaker 1\n\nSo element code, it's about physical component.\n• Speaker 2\n  - # Speaker 2\n\nRepresentation on the page.\n• Speaker 1\n  - # Speaker 1\n\nOkay, you already know this and that's all I can just save System will.\n• Speaker 2\n  - # Speaker 2\n\nAutomatically modify our object.\n  - --- Page 96 ---\n• Speaker 1\n  - # Speaker 1\n\nIt will save changes to our page code which we can find here if.\n• Speaker 2\n  - # Speaker 2\n\nWe click open source code.\n  - So now let's just click save and.\n• Speaker 1\n  - # Speaker 1\n\nThat'S probably will be enough for the beginning.\n  - So this change will be made in objects and in our client module.\n• Speaker 2\n  - # Speaker 2\n\nOkay, we can move on.\n• Speaker 1\n  - # Speaker 1\n\nAnd now we can close this page editor.\n• Speaker 2\n  - # Speaker 2\n\nGo to main page.\n  - As you can see, I did not even reload it.\n• Speaker 1\n  - # Speaker 1\n\nWe can just open it again and.\n• Speaker 2\n  - # Speaker 2\n\nProbably we will immediately see our new column and it's read only.\n• Speaker 1\n  - # Speaker 1\n\nSo you see this lock sign which.\n  - --- Page 97 ---\n• Speaker 2\n  - # Speaker 2\n\nTells us that column is read only.\n  - So now we need to think of.\n• Speaker 1\n  - # Speaker 1\n\nImplementing read calculation and it will be.\n• Speaker 3\n  - # Speaker 3\n\nTriggered by change of price.\n• Speaker 1\n  - # Speaker 1\n\nAnd also we want to make it dependent on offer type.\n  - So for the sales offer type it will be more or less okay if we \nmake commission like 2% from list price from our price of realty shown here.\n• Speaker 3\n  - # Speaker 3\n\nI'm not sure that can we find.\n• Speaker 1\n  - # Speaker 1\n\nSo cheap houses in Miami for maybe it's not like not in a high season and some area.\n  - And as you can see, \ncommission will be recalculated.\n• Speaker 3\n  - # Speaker 3\n\nSo for rentals probably it will be.\n• Speaker 1\n  - # Speaker 1\n\nQuite enough if we will ask for 50% from monthly payment price if this is a rental.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 98 ---\n\nSo for rentals we will have another percentage.\n  - So for sales it will be 1% or 2% value.\n• Speaker 1\n  - # Speaker 1\n\nAnd for rental it will be 50% from price value.\n  - So when we will do some calculation we have to take care about it.\n• Speaker 3\n  - # Speaker 3\n\nBut also you should be mentally ready.\n• Speaker 1\n  - # Speaker 1\n\nThat in real life business it really often happens that such ratios, such formulas can be changed from time to time.\n  - And once we introduce hard coded value like 2% a month later our customer may call us and say, you know.\n• Speaker 3\n  - # Speaker 3\n\nNow conditions were changed so we need to modify this percent and now it will be 2.5.\n• Speaker 1\n  - # Speaker 1\n\nCould you please change it?\n• Speaker 3\n  - # Speaker 3\n\nAnd if we hard code it, of course it's not so good idea to.\n• Speaker 1\n  - # Speaker 1\n\nGo into code and change it.\n  - Then deliver changes to production.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 99 ---\n\nTo make such changes.\n• Speaker 1\n  - # Speaker 1\n\nAnd our customer will be not ready will be not really happy if we ask for example for half, maybe for a couple of \nhours of work to be paid.\n  - If we want to change just one number.\n• Speaker 3\n  - # Speaker 3\n\nWe have several options to do this.\n  - For example, we can make a separate.\n• Speaker 1\n  - # Speaker 1\n\nTable which will keep necessary percents.\n• Speaker 3\n  - # Speaker 3\n\nOr we can use some system settings for this.\n• Speaker 1\n  - # Speaker 1\n\nOr as you can see, our ratio is really stick to offer type.\n  - So probably we can add new column to offer type lookup in \norder to save one value in percent for sales.\n• Speaker 3\n  - # Speaker 3\n\nAnd another value in percent for rentals.\n  - I will show you how we can do this.\n• Speaker 1\n  - # Speaker 1\n\nLet's focus on objects Again, now we.\n• Speaker 3\n  - # Speaker 3\n\nHave offer type object, we can open it for edit.\n  - I prefer to work from configuration section.\n• Speaker 1\n  - # Speaker 1\n\nIn this case you can do the same if you.\n  - Oh, I did not save it.\n• Speaker 3\n  - # Speaker 3\n\nGreat.\n  - So if you prefer to focus on.\n• Speaker 1\n  - # Speaker 1\n\nApplication, you can go to Application hub.\n• Speaker 3\n  - # Speaker 3\n\nYou may find your realty app, you.\n• Speaker 1\n  - # Speaker 1\n\nMight check your data models and that's.\n• Speaker 3\n  - # Speaker 3\n\nHow you can find corresponding object.\n  - Or you can switch to advanced settings.\n• Speaker 1\n  - # Speaker 1\n\nTo see all the contents of your solution.\n• Speaker 3\n  - # Speaker 3\n\nSo you may practically do almost the.\n• Speaker 1\n  - # Speaker 1\n\nSame as you can do it here.\n  - So I just get used to work.\n• Speaker 3\n  - # Speaker 3\n\nWith this configuration section.\n  - Also it has some useful actions like.\n• Speaker 1\n  - # Speaker 1\n\nSave packages to file system.\n  - So that's why I stick to this.\n• Speaker 3\n  - # Speaker 3\n\nApproach and I feel more confident when.\n• Speaker 1\n  - # Speaker 1\n\nWork here because I have full available.\n• Speaker 3\n  - # Speaker 3\n\nSet of tools to manage my system set my system configuration setup.\n• Speaker 1\n  - # Speaker 1\n\nSo we opened corresponding object, we have.\n• Speaker 3\n  - # Speaker 3\n\nInheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far.\n  - So for each reality offer type for rental or sale, we can add one.\n• Speaker 1\n  - # Speaker 1\n\nMore column to be number.\n  - Maybe we can do it with quite high precision.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 102 ---\n\nHere just to make it clear for.\n• Speaker 1\n  - # Speaker 1\n\nAny user what type of value should be put here.\n  - So if we specify from 0 to 100 it means from 0 to 100% and it will be \nclear how to.\n• Speaker 2\n  - # Speaker 2\n\nPut some value here if you want.\n• Speaker 3\n  - # Speaker 3\n\nTo save for example 2%.\n• Speaker 1\n  - # Speaker 1\n\nOne more column is not a big deal, so we can easily add it save and publish.\n  - But after we do this we may start to get \nsome additional unexpected difficulties.\n• Speaker 3\n  - # Speaker 3\n\nNow I will show it.\n• Speaker 1\n  - # Speaker 1\n\nProbably sometimes I get it, sometimes not.\n  - But anyway I have to tell you about this.\n• Speaker 3\n  - # Speaker 3\n\nSo we added new column to some.\n• Speaker 1\n  - # Speaker 1\n\nObject that was already present for today morning.\n  - --- Page 103 ---\n• Speaker 3\n  - # Speaker 3\n\nSo it was already created recently.\n  - That's why we can face some unexpected behavior.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you what I'm talking about.\n  - Now you can see it's very close and easy to switch between our section and \nfor example lookups.\n• Speaker 3\n  - # Speaker 3\n\nNow we have name and description.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's try to set up columns to display.\n• Speaker 3\n  - # Speaker 3\n\nName is okay here description is also.\n• Speaker 1\n  - # Speaker 1\n\nOkay and we can try to display one more column.\n  - Commission percent looks good and we can save it.\n• Speaker 3\n  - # Speaker 3\n\nAnd we agreed that for a sale it will be enough for us to specify 2%.\n• Speaker 1\n  - # Speaker 1\n\nAccording to this helpful message, 2% will look like this 2.00, so it means just 2.\n  - And for rentals we expect to earn \n50% but from monthly payment.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 104 ---\n\nWe added some data.\n• Speaker 1\n  - # Speaker 1\n\nSo possibly we have to look at data part and find corresponding object reality offer type object so not object data \nitem for this.\n  - Let me find it.\n• Speaker 3\n  - # Speaker 3\n\nIt looks like it was created by data binding tool, so we could also.\n• Speaker 1\n  - # Speaker 1\n\nNo, no.\n  - This is lookup registering.\n• Speaker 3\n  - # Speaker 3\n\nSo now we have one more column here.\n  - We can update this data item with.\n• Speaker 1\n  - # Speaker 1\n\nThe help of data binding tool.\n• Speaker 3\n  - # Speaker 3\n\nOr we can manually modify it by adding one more column.\n  - As you can see, originally this column was not present \nhere because we created.\n• Speaker 1\n  - # Speaker 1\n\nData item before adding new columns to the object.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 105 ---\n\nSo now we have one more column.\n• Speaker 1\n  - # Speaker 1\n\nHere we have new data.\n• Speaker 3\n  - # Speaker 3\n\n2% for sale, 50% for rental.\n• Speaker 1\n  - # Speaker 1\n\nWe have to save it.\n  - Everything is okay.\n• Speaker 3\n  - # Speaker 3\n\nGreat.\n• Speaker 1\n  - # Speaker 1\n\nIt looks like we still did not need to do any additional steps related to adding new column into existing object.\n  - But \nsome of you may start to feel some difficulties and such difficulties are.\n• Speaker 3\n  - # Speaker 3\n\nConnected with the way how server side system remembers information about objects.\n  - And unfortunately it may \nhappen that your.\n• Speaker 1\n  - # Speaker 1\n\nKind of difficulty which you will finally face will be inability to display data here or inability to use new column a bit \nlater.\n  - In order to fix this, you may need maintenance tools for creation so which we already installed.\n• Speaker 3\n  - # Speaker 3\n\nI will do this restart but a bit later.\n  - --- Page 106 ---\n• Speaker 1\n  - # Speaker 1\n\nNow I will try to avoid this to show you what will happen if you did not perform a restart.\n• Speaker 3\n  - # Speaker 3\n\nSo let's check will we be able.\n• Speaker 1\n  - # Speaker 1\n\nTo make all the way all the settings as I plan to do this and will we need restart or not?\n  - So let's go.\n• Speaker 3\n  - # Speaker 3\n\nData and for rental value we also.\n• Speaker 1\n  - # Speaker 1\n\nHave another additional data.\n• Speaker 3\n  - # Speaker 3\n\nAnd it's really lucky for us.\n• Speaker 1\n  - # Speaker 1\n\nThat it's possible to get such additional data out from this lookup somewhere at the top where we can easily use \nsuch data columns.\n  - Now I plan to show you how to get data out from a lookup.\n• Speaker 3\n  - # Speaker 3\n\nWe will use again page editor.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 107 ---\n\nOur task is to get decimal value from this offer type lookup and display it somewhere.\n• Speaker 3\n  - # Speaker 3\n\nThe reason why we need to display.\n• Speaker 1\n  - # Speaker 1\n\nIs to make it visual and also to make it fully no code.\n  - So now you will see this trick how we can make data out from \nexisting lookup.\n• Speaker 3\n  - # Speaker 3\n\nCall data fields and data fields represents.\n• Speaker 1\n  - # Speaker 1\n\nConnection between controls and real life data column of your main object that this page works with.\n  - But if you \nscroll down you will.\n• Speaker 3\n  - # Speaker 3\n\nFind interesting set of components called inputs.\n• Speaker 1\n  - # Speaker 1\n\nInputs are designed to organize input only without direct connection with your main data object and without direct \nsave of any data that you input into this call.\n  - Simply speaking, inputs are controls that you use for inputs but not \nintended to save data from them or at least.\n• Speaker 3\n  - # Speaker 3\n\nNot save into main primary object with the standard tools.\n  - So maybe you will save it somewhere somehow else.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you how I can use this for our task.\n  - I need number control.\n• Speaker 3\n  - # Speaker 3\n\nCan take out from existing lookups or.\n• Speaker 1\n  - # Speaker 1\n\nExisting from existing fields.\n• Speaker 3\n  - # Speaker 3\n\nLet me show you how we can do this.\n• Speaker 1\n  - # Speaker 1\n\nWe go to data source, click on this lookup button and then we will search.\n• Speaker 3\n  - # Speaker 3\n\nSo select some data field that we will use to fill this control.\n• Speaker 1\n  - # Speaker 1\n\nRealty related objects.\n• Speaker 3\n  - # Speaker 3\n\nIt will show us all existing lookup.\n• Speaker 1\n  - # Speaker 1\n\nColumns in our realty object and then we will find offer type extended and system will show us only suitable on the \ncompatible field which will be you can be used within decimal number control.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 109 ---\n\nThis is our commission percent so we.\n• Speaker 1\n  - # Speaker 1\n\nWill select it and here now you will see some changes.\n• Speaker 3\n  - # Speaker 3\n\nTitle appeared the same as title of your column inside of your offer type.\n• Speaker 1\n  - # Speaker 1\n\nLookup Code appeared and cannot be edited.\n• Speaker 3\n  - # Speaker 3\n\nThis is read only and also you can unlock it.\n• Speaker 1\n  - # Speaker 1\n\nSo this column will be constantly read only.\n  - Title position okay title on the page.\n• Speaker 3\n  - # Speaker 3\n\nAnd element code number input.\n  - So we can call it something like.\n• Speaker 1\n  - # Speaker 1\n\nCommission percent okay and save change of our element code.\n  - So simply speaking we made read only column \nthat will be automatically loaded each.\n• Speaker 3\n  - # Speaker 3\n\nTime offer type is set and each.\n  - --- Page 110 ---\n• Speaker 1\n  - # Speaker 1\n\nTime offer type changed or cleared.\n• Speaker 3\n  - # Speaker 3\n\nLet's save our changes and we will.\n• Speaker 1\n  - # Speaker 1\n\nSee how it works.\n• Speaker 3\n  - # Speaker 3\n\nBy the way, please confirm with plus in our chat if you follow me.\n• Speaker 1\n  - # Speaker 1\n\nDirectly during the session.\n  - So I need to know, should I.\n• Speaker 3\n  - # Speaker 3\n\nAllow you some pause to do some steps after I demonstrate it?\n• Speaker 1\n  - # Speaker 1\n\nMarcel, thank you, Andre.\n  - Thank you.\n• Speaker 3\n  - # Speaker 3\n\nIf something is not good and you.\n• Speaker 1\n  - # Speaker 1\n\nWould like me to stop for a while, tell me please.\n  - Okay, Monica, thank you again.\n• Speaker 3\n  - # Speaker 3\n\nGreat.\n  - So we saved our page.\n• Speaker 1\n  - # Speaker 1\n\nThen we can go to our page.\n• Speaker 3\n  - # Speaker 3\n\nClose, open it again.\n  - Now you see this commission percentage shown.\n• Speaker 1\n  - # Speaker 1\n\nJust to suppress any possible issue with the browser cache.\n  - So let's open again.\n• Speaker 3\n  - # Speaker 3\n\nBut you see this commission percent is not shown.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's try to select another one.\n  - Rental or I chose sale again.\n• Speaker 3\n  - # Speaker 3\n\nClose.\n  - Such data will be not possible to see in list.\n• Speaker 1\n  - # Speaker 1\n\nSo we have no reality column which will represent our commission percent.\n  - We can read it from the database.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 112 ---\n\nIf we use related objects, if we.\n• Speaker 1\n  - # Speaker 1\n\nUse offer type and if we display.\n• Speaker 3\n  - # Speaker 3\n\nCommission percent and this commission percent will.\n• Speaker 1\n  - # Speaker 1\n\nBe obtained from corresponding record from our offer type.\n  - But you see, now we have some troubles.\n• Speaker 3\n  - # Speaker 3\n\nWe have some troubles and system does.\n• Speaker 1\n  - # Speaker 1\n\nNot recognize commission percent column fully.\n• Speaker 3\n  - # Speaker 3\n\nProbably it also shows us some error messages, I believe.\n  - Let's try to reload it and see what happens.\n• Speaker 1\n  - # Speaker 1\n\nNo, no error message.\n  - It just doesn't show us corresponding values.\n• Speaker 3\n  - # Speaker 3\n\nWe can find columns there.\n  - So our commission percent is here.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 113 ---\n\nSo what is happening and why we have such a trouble?\n• Speaker 3\n  - # Speaker 3\n\nAnd if you open the page, you.\n• Speaker 1\n  - # Speaker 1\n\nSee no initial value here.\n  - But if you click there and back.\n• Speaker 3\n  - # Speaker 3\n\nTo sale now you see this value.\n• Speaker 1\n  - # Speaker 1\n\nIs okay, save, close, open and still it doesn't work.\n  - So we still have some problem with this additional column.\n• Speaker 2\n  - # Speaker 2\n\nBy logging out and logging in.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you.\n  - I try to log out.\n• Speaker 2\n  - # Speaker 2\n\nMaybe thinking.\n• Speaker 1\n  - # Speaker 1\n\nThere is something like a user session cache issue.\n  - Then I try to log in.\n• Speaker 2\n  - # Speaker 2\n\nWhen you work with client side, it's.\n• Speaker 1\n  - # Speaker 1\n\nBetter to keep your browser console on.\n• Speaker 2\n  - # Speaker 2\n\nProbably you will see some interesting messages.\n• Speaker 1\n  - # Speaker 1\n\nThere or a lot of red messages.\n• Speaker 2\n  - # Speaker 2\n\nIn case of errors.\n• Speaker 1\n  - # Speaker 1\n\nSo it's important to see it quick.\n• Speaker 2\n  - # Speaker 2\n\nOkay, opening our realty section, ignoring all.\n• Speaker 1\n  - # Speaker 1\n\nWarnings here, open it once again and you see no, it did not help us.\n  - So unfortunately logging out and logging in.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 115 ---\n\nDoesn'T help you and the only solution.\n• Speaker 1\n  - # Speaker 1\n\nWhich we can do is restart our app or shut it down and start it again for example with the help of IIS Manager.\n• Speaker 3\n  - # Speaker 3\n\nBut it will take more than minute.\n• Speaker 1\n  - # Speaker 1\n\nFor us to normally shut down and start.\n  - So we have a quick solution.\n• Speaker 2\n  - # Speaker 2\n\nErrors in browser console, but it looks.\n• Speaker 1\n  - # Speaker 1\n\nLike not very critical.\n  - So now restart is being performed.\n• Speaker 3\n  - # Speaker 3\n\nProcess, but it has a comment to.\n• Speaker 1\n  - # Speaker 1\n\nRestart so possibly to rewards some of its assemblies.\n• Speaker 2\n  - # Speaker 2\n\nOkay, so we restarted our app.\n  - --- Page 116 ---\n• Speaker 1\n  - # Speaker 1\n\nWe go to reality section.\n• Speaker 2\n  - # Speaker 2\n\nNow we already will see the difference.\n• Speaker 1\n  - # Speaker 1\n\nNow you see that commission percent here.\n• Speaker 2\n  - # Speaker 2\n\nWas normally displayed in this list previously it was not normal.\n  - And if we open any record now, commission percent \nwill be fully normally loaded.\n• Speaker 1\n  - # Speaker 1\n\nWhen we just open the page.\n  - So you see commission percent loaded correctly if you take any other value.\n• Speaker 2\n  - # Speaker 2\n\nSo now we fixed it.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why I had to use this add on called maintenance tools for creature.\n• Speaker 2\n  - # Speaker 2\n\nSuch add on helps me easily restart.\n• Speaker 1\n  - # Speaker 1\n\nThe app with just waiting approximately 10 seconds.\n  - And it's much easier than restarting my.\n• Speaker 2\n  - # Speaker 2\n\nApp by shutting down and starting again my worker process or recycling worker process.\n• Speaker 1\n  - # Speaker 1\n\nIt's possible, so it will take significantly longer.\n• Speaker 2\n  - # Speaker 2\n\nOkay, so we fixed this question with.\n• Speaker 1\n  - # Speaker 1\n\nThe commission percent and now our task.\n• Speaker 2\n  - # Speaker 2\n\nIs.\n• Speaker 1\n  - # Speaker 1\n\nTo make actual calculation.\n• Speaker 2\n  - # Speaker 2\n\nSo now we can think of how.\n• Speaker 1\n  - # Speaker 1\n\nTo trace changes of price or commission percent.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 118 ---\n\nLuckily commission percent will be available for.\n• Speaker 1\n  - # Speaker 1\n\nUs the same as any attribute for a real column.\n• Speaker 2\n  - # Speaker 2\n\nSo commission percent will be also an attribute for us.\n• Speaker 1\n  - # Speaker 1\n\nSo if this value changes or if.\n• Speaker 2\n  - # Speaker 2\n\nThis value changes, as you can see, it will be changed in case if.\n• Speaker 1\n  - # Speaker 1\n\nYou clear in case if you set.\n• Speaker 3\n  - # Speaker 3\n\nSome offer type or if you change.\n• Speaker 2\n  - # Speaker 2\n\nTo another offer type, commission percent is changed.\n• Speaker 1\n  - # Speaker 1\n\nSo price or commission percent should trigger recalculation of commission.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 119 ---\n\nI will show you how we can do this.\n  - Let's go to our configuration section.\n• Speaker 1\n  - # Speaker 1\n\nFind client modules.\n  - We are working with form page.\n• Speaker 2\n  - # Speaker 2\n\nSo you can also open the code.\n• Speaker 1\n  - # Speaker 1\n\nFrom page editor if you want.\n  - I just feel it's more comfortable to work here.\n• Speaker 2\n  - # Speaker 2\n\nSo form page open source code.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we can go directly to the JavaScript part of it and See what's happening.\n• Speaker 2\n  - # Speaker 2\n\nAndrean is asking is it possible to use this add on in a cloud environment?\n• Speaker 1\n  - # Speaker 1\n\nYes, all creation apps from Marketplace can.\n• Speaker 2\n  - # Speaker 2\n\nBe installed on cloud systems.\n  - Absolutely the same as you can install it locally.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you.\n  - So you go to Settings, you go.\n• Speaker 2\n  - # Speaker 2\n\nTo Application management, Application Hub and then.\n• Speaker 1\n  - # Speaker 1\n\nYou click Install or Add new application and you can select something from this list or you can select Marketplace \nPowered.\n• Speaker 2\n  - # Speaker 2\n\nAnd it will work absolutely the same.\n• Speaker 1\n  - # Speaker 1\n\nIf you run it in cloud.\n  - Thank you Adrian for your interesting question.\n• Speaker 2\n  - # Speaker 2\n\nWe decided to open directly its source code.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we open this tab.\n• Speaker 2\n  - # Speaker 2\n\nWe can try to find our commission diff part.\n• Speaker 1\n  - # Speaker 1\n\nYou can see this our commission column.\n  - It was added by help of page editor.\n• Speaker 3\n  - # Speaker 3\n\nSo practically we should not modify this.\n• Speaker 2\n  - # Speaker 2\n\nBut it will be interesting to see how it will be connected with the.\n• Speaker 1\n  - # Speaker 1\n\nData attribute PDS USR commission USR so.\n• Speaker 2\n  - # Speaker 2\n\nThis is our attribute name.\n• Speaker 1\n  - # Speaker 1\n\nOkay, we can collapse temporary all such things.\n• Speaker 2\n  - # Speaker 2\n\nI will only show you.\n• Speaker 1\n  - # Speaker 1\n\nSo price.\n  - Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config.\n• Speaker 2\n  - # Speaker 2\n\nSet of variables that can be saved.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 122 ---\n\nOn the page level.\n• Speaker 2\n  - # Speaker 2\n\nAnd we already started to work with.\n• Speaker 1\n  - # Speaker 1\n\nIt yesterday I just tried to explain you such attributes and now we will work with them.\n  - So for the price column we \nsee this attribute name.\n• Speaker 2\n  - # Speaker 2\n\nAnd for the percent here we have this attribute name and finally we will save our data into commission attribute \nwhich has this name.\n  - This is important.\n• Speaker 1\n  - # Speaker 1\n\nOkay, I will collapse anything else to make it clear and quite compact for you.\n  - So we are interested in price attribute.\n• Speaker 2\n  - # Speaker 2\n\nPercent attribute and commission attribute.\n• Speaker 1\n  - # Speaker 1\n\nOkay?\n  - Nothing else.\n• Speaker 2\n  - # Speaker 2\n\nModel config is not interesting.\n  - And then we will do something with handlers.\n• Speaker 1\n  - # Speaker 1\n\nI already have an example which will make it possible for us to do it quickly.\n  - So let me show you this example of the \ncode examples reading UI and then we need calculated field example.\n• Speaker 3\n  - # Speaker 3\n\nProbably we need to look at Academy.\n• Speaker 1\n  - # Speaker 1\n\nTo explain all possible handler names.\n  - So let's go to Academy, let's go to guides development front end Freedom UI \nand somewhere we will see some client schema references handlers.\n• Speaker 3\n  - # Speaker 3\n\nNames for handlers and they represent some.\n• Speaker 1\n  - # Speaker 1\n\nImportant steps of page life cycle.\n  - In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed.\n• Speaker 3\n  - # Speaker 3\n\nAt our page changes the attribute.\n• Speaker 1\n  - # Speaker 1\n\nSo this handler is called handle view model attribute change request.\n  - Let me show you my example.\n• Speaker 3\n  - # Speaker 3\n\nHandle view model attribute change request.\n• Speaker 1\n  - # Speaker 1\n\nSo simply speaking, this handler will be called each time when any column value changes at our user at our client \nside page in our browser.\n  - So this handler will be triggered quite often.\n• Speaker 3\n  - # Speaker 3\n\nCopy it and put it to our.\n• Speaker 1\n  - # Speaker 1\n\nExamples in our handlers area.\n  - So this is an array, we have.\n• Speaker 3\n  - # Speaker 3\n\nTo keep syntax well.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why I try to paste it like this, keeping commas, brackets and so on.\n• Speaker 3\n  - # Speaker 3\n\nSo now you see, this piece of.\n• Speaker 1\n  - # Speaker 1\n\nCode was just simply added.\n• Speaker 2\n  - # Speaker 2\n\nThis piece of code was added and.\n• Speaker 1\n  - # Speaker 1\n\nLet'S check what we can do with it.\n  - Of course we have to take care about attribute names because they are always \nunique.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 125 ---\n\nSo how we can check it?\n• Speaker 1\n  - # Speaker 1\n\nThis handler will be called quite often for each column change.\n  - And in order to make it efficient, we need to check if \nsome column.\n• Speaker 2\n  - # Speaker 2\n\nThat we are interested had changed or not.\n  - If yes, then we do our recalculation.\n• Speaker 1\n  - # Speaker 1\n\nIf not, we should do nothing in.\n• Speaker 2\n  - # Speaker 2\n\nOrder to save system resources.\n  - So we check request property here and.\n• Speaker 1\n  - # Speaker 1\n\nWe have attribute name.\n• Speaker 2\n  - # Speaker 2\n\nAnd if this attribute name is our.\n• Speaker 1\n  - # Speaker 1\n\nPrice, then this is logical or attribute name is our commission percent.\n• Speaker 2\n  - # Speaker 2\n\nThen we do some calculation, but we.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 126 ---\n\nHave to actualize our names so you.\n• Speaker 2\n  - # Speaker 2\n\nCan see our list of attributes for the price.\n• Speaker 1\n  - # Speaker 1\n\nHere is our attribute name.\n  - Let's copy it and carefully paste here.\n• Speaker 2\n  - # Speaker 2\n\nTo read it, then the same for commission percent.\n  - Let's make sure this is our attribute name.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you.\n  - Yes, it looks like it is already.\n• Speaker 2\n  - # Speaker 2\n\nThe same because generated by system and.\n• Speaker 1\n  - # Speaker 1\n\nI usually do same examples.\n  - That's a bit strange shifts.\n• Speaker 2\n  - # Speaker 2\n\nSo how we do this?\n  - I already showed you yesterday.\n• Speaker 1\n  - # Speaker 1\n\nWe have to use operator await.\n  - Then request is our argument dollar context and then we have access to our certain \nattribute.\n• Speaker 2\n  - # Speaker 2\n\nSo we have just a variable in.\n• Speaker 1\n  - # Speaker 1\n\nOur JavaScript code for price for percent.\n  - Then we do calculation of commission as result of multiplication and don't \nForget to.\n• Speaker 2\n  - # Speaker 2\n\nDivide by 100 because commission percent represents.\n• Speaker 1\n  - # Speaker 1\n\nPercent, not just a decimal value.\n  - Okay, and then we will save our commission percent.\n• Speaker 2\n  - # Speaker 2\n\nIf we do it incorrectly, we will fail.\n• Speaker 1\n  - # Speaker 1\n\nSo this is important.\n  - Our commission value will be finally saved into this.\n• Speaker 2\n  - # Speaker 2\n\nProbably it's because of cache.\n• Speaker 1\n  - # Speaker 1\n\nSo let's reload the page.\n  - Reloading helps to fight with browser cache effect.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 128 ---\n\nNow you can see that recalculation works well.\n• Speaker 1\n  - # Speaker 1\n\nSo we have our price for rental of our apartment.\n• Speaker 2\n  - # Speaker 2\n\nAnd you see our commission is correctly.\n• Speaker 1\n  - # Speaker 1\n\nRecalculated and we can save our data.\n• Speaker 2\n  - # Speaker 2\n\nCommission will be also saved.\n• Speaker 1\n  - # Speaker 1\n\nWe can see it here.\n  - Commission is our legal valid column, so it will be saved.\n• Speaker 2\n  - # Speaker 2\n\nLet's open some sale example.\n• Speaker 1\n  - # Speaker 1\n\nNow you can see.\n• Speaker 2\n  - # Speaker 2\n\nOkay, price was not changed.\n  - --- Page 129 ---\n• Speaker 1\n  - # Speaker 1\n\nCommission is already calculated.\n  - Let's check if we switch from sale to rental.\n• Speaker 2\n  - # Speaker 2\n\nYou see, commission was recalculated.\n• Speaker 1\n  - # Speaker 1\n\nIf we switch back to sale, it's.\n• Speaker 2\n  - # Speaker 2\n\nAlso quite well calculated.\n• Speaker 1\n  - # Speaker 1\n\nSo now you see that our commission is quite fair for this amount of price for the house.\n• Speaker 2\n  - # Speaker 2\n\nSo our recalculation also works well and it shows even when page is opened.\n• Speaker 1\n  - # Speaker 1\n\nIt looks like when page is opened our data filled in client side.\n  - So it triggers recalculation even if we.\n• Speaker 2\n  - # Speaker 2\n\nDo not change anything.\n• Speaker 1\n  - # Speaker 1\n\nBut just open the page.\n  - Yes, we'll see.\n• Speaker 2\n  - # Speaker 2\n\nSo it looks like our calculation is.\n• Speaker 1\n  - # Speaker 1\n\nAlready done and works quite well.\n• Speaker 2\n  - # Speaker 2\n\nAnd of course everything works quite smoothly.\n• Speaker 1\n  - # Speaker 1\n\nWhen we have a pre programmed examples where everything is correct.\n• Speaker 2\n  - # Speaker 2\n\nBut in real life you will do.\n• Speaker 1\n  - # Speaker 1\n\nYour own examples where some errors or mistakes could happen.\n  - So you will need to know how to debug this code.\n• Speaker 2\n  - # Speaker 2\n\nI will show you how to make.\n• Speaker 1\n  - # Speaker 1\n\nSuch debug and you will see that's not so difficult.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 131 ---\n\nOne of the easiest ways to debug is to put a special debugger breakpoint into your code.\n• Speaker 1\n  - # Speaker 1\n\nLike this, the word debugger.\n  - If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code.\n• Speaker 2\n  - # Speaker 2\n\nThen your debugging will work for you.\n• Speaker 1\n  - # Speaker 1\n\nBut this approach has also disadvantage.\n• Speaker 3\n  - # Speaker 3\n\nAnd when you finished your debugging, you.\n• Speaker 1\n  - # Speaker 1\n\nShould not forget to remove all your debugger lines.\n• Speaker 2\n  - # Speaker 2\n\nSave your changes again.\n• Speaker 1\n  - # Speaker 1\n\nAnd ideally you have to run your.\n• Speaker 2\n  - # Speaker 2\n\nLogic again just to make sure you did not accidentally damage anything.\n  - Because when you save, you have chance.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 132 ---\n\nThat something will be incorrectly saved.\n  - Something will go not so well.\n• Speaker 2\n  - # Speaker 2\n\nI need to explain and I need to show you.\n• Speaker 1\n  - # Speaker 1\n\nWe can go to this is easy.\n• Speaker 2\n  - # Speaker 2\n\nWay to put debugger word.\n  - I will show you a bit more professional way to debug.\n• Speaker 1\n  - # Speaker 1\n\nThen we enable browser developer console.\n• Speaker 2\n  - # Speaker 2\n\nYou can do it by F12 or control shift I.\n• Speaker 1\n  - # Speaker 1\n\nAnd when you do this, you then.\n• Speaker 2\n  - # Speaker 2\n\nGo to Sources tab.\n  - You see, we already opened some set of scripts here.\n• Speaker 1\n  - # Speaker 1\n\nLet's close everything and then we can.\n  - --- Page 133 ---\n• Speaker 2\n  - # Speaker 2\n\nJust search and you see we have.\n• Speaker 1\n  - # Speaker 1\n\nA USR reality form page.\n• Speaker 2\n  - # Speaker 2\n\nPage part of the URL.\n  - So it's a page, it's a name of client module and we can try to find it.\n• Speaker 1\n  - # Speaker 1\n\nLet's try Control p open file.\n  - Which one?\n• Speaker 2\n  - # Speaker 2\n\nOkay, if you do not want to.\n• Speaker 1\n  - # Speaker 1\n\nGuess which one is correct, we can go back reload the page.\n• Speaker 2\n  - # Speaker 2\n\nSo we will suppress any kind of.\n• Speaker 1\n  - # Speaker 1\n\nCache and then we will open it again.\n  - And we have just one option, single option to select corresponding file Control \nP .\n• Speaker 2\n  - # Speaker 2\n\n--- Page 134 ---\n\nAnd you see only one form page here.\n• Speaker 1\n  - # Speaker 1\n\nSo no any cached, no any duplicates that will make you confused.\n  - And you probably may select Incorrect 1.\n• Speaker 2\n  - # Speaker 2\n\nSee set of equalizable strings here.\n  - But the most important of course is our code.\n• Speaker 1\n  - # Speaker 1\n\nBig part with view config div some.\n• Speaker 2\n  - # Speaker 2\n\nPart view model config.\n  - And finally you will have your header handlers.\n• Speaker 1\n  - # Speaker 1\n\nFor example, we can click on this.\n• Speaker 2\n  - # Speaker 2\n\nLine number which will make a breakpoint for us.\n• Speaker 1\n  - # Speaker 1\n\nSo it's the same as debugger, but.\n• Speaker 2\n  - # Speaker 2\n\nIt doesn't change the source of our client module.\n  - --- Page 135 ---\n• Speaker 1\n  - # Speaker 1\n\nSo we can use browser debugging tools for this.\n• Speaker 2\n  - # Speaker 2\n\nClick on the line number.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we activate breakpoint.\n  - So here we have one breakpoint that we just clicked here.\n• Speaker 2\n  - # Speaker 2\n\nOn and execution comes to this line, execution will be stopped.\n• Speaker 3\n  - # Speaker 3\n\nLet me show you.\n• Speaker 1\n  - # Speaker 1\n\nIf you change for example offer type from rental to sale, you see these.\n• Speaker 2\n  - # Speaker 2\n\nLines are executed and now code stops and we can go line by line.\n• Speaker 1\n  - # Speaker 1\n\nNow we have to use tools that.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 136 ---\n\nWill help us to proceed with this piece.\n  - The most popular, I think the Most.\n• Speaker 1\n  - # Speaker 1\n\nEfficient is F10 which is a step over running of a line without going into sub functions for it.\n  - So I will press F10.\n• Speaker 2\n  - # Speaker 2\n\nThen you can see commission was recalculated.\n  - Now you will see commission will be set here.\n• Speaker 1\n  - # Speaker 1\n\nSo my commission is now 26, so.\n• Speaker 2\n  - # Speaker 2\n\nI expect it to be saved here.\n  - Yes, 26 and then we move on.\n• Speaker 1\n  - # Speaker 1\n\nSo here we can use resume F8 hotkey to normally continue execution.\n• Speaker 2\n  - # Speaker 2\n\nThat's how we can check this code.\n  - If we change the price.\n• Speaker 1\n  - # Speaker 1\n\nYou will see the Same I press F10 I.\n• Speaker 2\n  - # Speaker 2\n\nHave another commission F8.\n  - Okay, we can make more serious price.\n• Speaker 1\n  - # Speaker 1\n\nFor an apartment.\n• Speaker 2\n  - # Speaker 2\n\nAnd obviously we'll have more serious commission.\n  - So that's how you can debug your code.\n• Speaker 1\n  - # Speaker 1\n\nAlso, if your code has something has some obvious mistakes and causes runtime errors.\n• Speaker 3\n  - # Speaker 3\n\nYou will also see such runtime errors in your sources tab.\n• Speaker 1\n  - # Speaker 1\n\nYou will also see your console which.\n• Speaker 3\n  - # Speaker 3\n\nWill be full of red messages.\n  - So in case if your code fails.\n• Speaker 1\n  - # Speaker 1\n\nIn runtime of course you should take care about it and look at your console tab and check if everything works well or \nnot.\n• Speaker 3\n  - # Speaker 3\n\nWhen you finished your debugging you should.\n• Speaker 1\n  - # Speaker 1\n\nClick on wine number again removing your breakpoint and then your code will run without stops.\n  - --- Page 138 ---\n• Speaker 3\n  - # Speaker 3\n\nIt's interesting to see what value we will see in case if we will clear overtype.\n• Speaker 1\n  - # Speaker 1\n\nNow let's check.\n  - You see that percent is empty so percent is null.\n• Speaker 2\n  - # Speaker 2\n\nSo that's how we will clear.\n• Speaker 1\n  - # Speaker 1\n\nOkay, when we have some valid percent, we can move on with F8 and you see setting is done.\n• Speaker 3\n  - # Speaker 3\n\nIf you have any questions related to.\n• Speaker 1\n  - # Speaker 1\n\nThis debugging, please tell me.\n  - As you can see, debugging can be.\n• Speaker 2\n  - # Speaker 2\n\nReally effective if your code is more.\n• Speaker 1\n  - # Speaker 1\n\nComplex, if you have sub functions, if.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 139 ---\n\nYou are not sure what values you.\n• Speaker 1\n  - # Speaker 1\n\nFinally get from your code so you can check it out with the help of browser developer tools.\n  - Okay, probably we got an \nhour of.\n• Speaker 3\n  - # Speaker 3\n\nOur session, so let's make a few.\n• Speaker 1\n  - # Speaker 1\n\nFive minutes break and then move on.\n• Speaker 3\n  - # Speaker 3\n\nWith next topics related to programming.\n  - I also plan to show you some.\n• Speaker 1\n  - # Speaker 1\n\nExamples of programming of validation.\n  - So I plan to show you validation and.\n• Speaker 3\n  - # Speaker 3\n\nDifferent validators.\n  - So different clones will be used for universal validation.\n• Speaker 1\n  - # Speaker 1\n\nAnd also I plan to show you some examples of so we already displayed.\n• Speaker 3\n  - # Speaker 3\n\nDebugging but also you need to know a bit more about logging.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 140 ---\n\nOkay, so let's make a five minutes break foreign.\n• Speaker 2\n  - # Speaker 2\n\nSo today I want you to see.\n• Speaker 1\n  - # Speaker 1\n\nSome more technical things about how client.\n• Speaker 2\n  - # Speaker 2\n\nSide works and how we can do.\n• Speaker 3\n  - # Speaker 3\n\nSome technical steps with it.\n  - So we already know how to debug our code.\n• Speaker 1\n  - # Speaker 1\n\nI would also like to you to see that we have quite developed logging.\n  - So I will show you login mechanisms.\n• Speaker 3\n  - # Speaker 3\n\nThat are available on Creature Platform.\n• Speaker 1\n  - # Speaker 1\n\nHere is our installed app and this is our folder with installed application.\n• Speaker 3\n  - # Speaker 3\n\nWe go to terrasoftware web and you.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 141 ---\n\nAlready know that Creature uses analog libraries to provide the different logs and save them in Creature web server.\n• Speaker 3\n  - # Speaker 3\n\nThe most important log file for us.\n• Speaker 1\n  - # Speaker 1\n\nIs invoke targets config because here we can change default file to save our all default folder to save all our logs.\n• Speaker 3\n  - # Speaker 3\n\nYou may be interested in the way.\n• Speaker 1\n  - # Speaker 1\n\nHow we can do some logging.\n  - So we have so called appenders and.\n• Speaker 3\n  - # Speaker 3\n\nTargets and probably have to start from appender first.\n• Speaker 1\n  - # Speaker 1\n\nSo analog config I should use analog config first.\n• Speaker 3\n  - # Speaker 3\n\nAnd we have a lot of loggers.\n• Speaker 1\n  - # Speaker 1\n\nAs well appender so they are synonym.\n  - Logger or appender they are synonyms.\n• Speaker 3\n  - # Speaker 3\n\nSo you can see a lot of.\n• Speaker 1\n  - # Speaker 1\n\nDifferent loggers registered and appenders are settings that will collect log messages.\n• Speaker 3\n  - # Speaker 3\n\nAnd finally appenders will be connected with physical files.\n  - So you see we have more than.\n• Speaker 1\n  - # Speaker 1\n\n100 different loggers and logger is a logical thing that you can use in your program code.\n  - Appender is a place that is \nused to collect your data and save it.\n• Speaker 3\n  - # Speaker 3\n\nOf different logs that are saved here.\n  - And you can see different messages, different settings.\n• Speaker 1\n  - # Speaker 1\n\nSo Croatia has a lot of default.\n• Speaker 3\n  - # Speaker 3\n\nTypes of logs and all of them will be saved in a folder which.\n• Speaker 1\n  - # Speaker 1\n\nWe specify when we install our application.\n  - So in Analog Targets config line number three we have setting to save \nour logs to.\n• Speaker 3\n  - # Speaker 3\n\nAnd log folder which.\n  - Which.\n• Speaker 1\n  - # Speaker 1\n\nIt has no customizable items that will.\n• Speaker 3\n  - # Speaker 3\n\nBe interested for us to.\n  - Interesting for us to see.\n• Speaker 1\n  - # Speaker 1\n\nSo Loader is very technical and we have just several log files here, nothing very spectacular.\n  - And zero folder is what \nwe really need because it's a log set of.\n• Speaker 3\n  - # Speaker 3\n\nLogs for our main application.\n  - And then we go inside, we see.\n• Speaker 1\n  - # Speaker 1\n\nLogs for each separate date.\n  - So you see for different days you.\n• Speaker 3\n  - # Speaker 3\n\nHave logs in different folder which makes it easy to find.\n  - And then you see different logs here.\n• Speaker 1\n  - # Speaker 1\n\nDifferent files with logs saved here.\n  - So a lot of different logs, a lot of different files.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 144 ---\n\nAnd what is the most important for.\n• Speaker 1\n  - # Speaker 1\n\nYou from the maintenance point of view?\n  - I think the most important is error log.\n• Speaker 3\n  - # Speaker 3\n\nOf course you should take care about.\n• Speaker 1\n  - # Speaker 1\n\nIt because usually it is important and sometimes you may find some errors which are not related to your changes.\n  - So you may simply speaking find some errors from base product like this one.\n• Speaker 3\n  - # Speaker 3\n\nError parent schema is now parent ID.\n• Speaker 1\n  - # Speaker 1\n\nSets to empty and so on.\n• Speaker 3\n  - # Speaker 3\n\nBut it looks like nothing very critical for our application.\n  - You see the same error many times.\n• Speaker 1\n  - # Speaker 1\n\nAnd it looks like not very important.\n• Speaker 3\n  - # Speaker 3\n\nBut if you will get some error messages here related to your functionality and your users will start to complain about.\n  - --- Page 145 ---\n• Speaker 1\n  - # Speaker 1\n\nSomething is not working.\n  - Of course you cannot ignore this.\n• Speaker 3\n  - # Speaker 3\n\nYou may ask me why we have.\n• Speaker 1\n  - # Speaker 1\n\nSome errors in a wait production release software.\n  - The answer is that Croatia is quite big and we have more than \n200 libraries.\n• Speaker 3\n  - # Speaker 3\n\nCould be checked and used.\n• Speaker 1\n  - # Speaker 1\n\nSo it's really hard to test everything and to polish any line of code, so it should show it so it could not fail in any way.\n  - So in real life, in any big system, some errors usually happen.\n• Speaker 3\n  - # Speaker 3\n\nCritical so you can simply ignore.\n• Speaker 1\n  - # Speaker 1\n\nBut if you will find another errors with some user complaints, of course you should take care of it.\n  - So from \nmaintenance point of view, I think looking at such error log is quite important.\n• Speaker 3\n  - # Speaker 3\n\nDo regularly if you support some big creation implementation by your own.\n  - In cloud conditions, looking at such logs.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 146 ---\n\nIs complicated because you will not be.\n• Speaker 3\n  - # Speaker 3\n\nAble to directly go to cloud based file system to get it.\n• Speaker 1\n  - # Speaker 1\n\nSo you only can ask for help at support team.\n  - By the way, you should know Support team lives here support \ncreation.com so they work 24, 7.\n• Speaker 3\n  - # Speaker 3\n\nAnd if you ask for example for a yesterday logs for a searching website.\n• Speaker 1\n  - # Speaker 1\n\nThey can give it for you.\n  - But it will be more efficient for.\n• Speaker 3\n  - # Speaker 3\n\nYou if you can collect Logs by yourself.\n  - And that's why I plan to show.\n• Speaker 1\n  - # Speaker 1\n\nYou some special tool which makes it.\n• Speaker 3\n  - # Speaker 3\n\nEasier if you need to collect logs.\n• Speaker 1\n  - # Speaker 1\n\nFrom cloud based environment.\n  - So I will show you Now I'm.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 147 ---\n\nTalking about telemetry log for creation.\n  - This is a special add on which.\n• Speaker 1\n  - # Speaker 1\n\nWe can get from Application Hub New application Marketplace powered.\n• Speaker 3\n  - # Speaker 3\n\nThen we can just search for the.\n• Speaker 1\n  - # Speaker 1\n\nWord log and we will easily find this Hokku app or telemetry log for creation.\n  - So Hoku is a company physically this \ncompany is like founded by our creation employees.\n• Speaker 3\n  - # Speaker 3\n\nYou can install this telemetry log.\n• Speaker 1\n  - # Speaker 1\n\nThis is for free.\n  - Agree.\n• Speaker 3\n  - # Speaker 3\n\nConfirm.\n• Speaker 1\n  - # Speaker 1\n\nYou see it was just updated 2023 November.\n• Speaker 3\n  - # Speaker 3\n\nOkay.\n  - And install it.\n• Speaker 1\n  - # Speaker 1\n\nIt takes just almost no time, maybe 20 seconds.\n  - And you will see that new app.\n• Speaker 3\n  - # Speaker 3\n\nIs installed to our system.\n• Speaker 1\n  - # Speaker 1\n\nSo you'll be able to collect vlogs, but you'll be able to collect only runtime created logs.\n• Speaker 3\n  - # Speaker 3\n\nSo it's like listener for logs.\n• Speaker 1\n  - # Speaker 1\n\nYou will not be able to collect.\n• Speaker 3\n  - # Speaker 3\n\nYesterday logs, but if you do some.\n• Speaker 1\n  - # Speaker 1\n\nExperiments and you need to see how logs look like when you do your experiments in cloud.\n  - So this app will be \nextremely helpful for you because it shows you all the messages all the log messages that.\n• Speaker 3\n  - # Speaker 3\n\nAre saved on disk.\n• Speaker 1\n  - # Speaker 1\n\nSo you can listen to any logs saved on disk.\n  - --- Page 149 ---\n• Speaker 3\n  - # Speaker 3\n\nLet's patiently wait for its installation.\n• Speaker 1\n  - # Speaker 1\n\nSurprisingly it takes a bit longer than I expected.\n  - But it's okay now it's not so critical.\n• Speaker 3\n  - # Speaker 3\n\nMaybe we can look at browser developer.\n• Speaker 1\n  - # Speaker 1\n\nConsole here, but usually no trouble should be present.\n  - Okay, wait for a minute.\n• Speaker 3\n  - # Speaker 3\n\nOh, dotnet exe was running so it looks like compilation was done.\n• Speaker 1\n  - # Speaker 1\n\nSo system decided it needs to compile and that's why it was so slow.\n  - Okay, finally our compilation finished.\n• Speaker 3\n  - # Speaker 3\n\nOperation took so long to install.\n• Speaker 1\n  - # Speaker 1\n\nSo now you will see results.\n  - Okay, great.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 150 ---\n\nHere's our installation logs.\n• Speaker 1\n  - # Speaker 1\n\nStarted 26:58, so almost 27, finished 29.\n• Speaker 3\n  - # Speaker 3\n\nIt looks like 2 minutes and 3.\n• Speaker 1\n  - # Speaker 1\n\nSeconds and yeah, it's a bit longer than usual.\n• Speaker 3\n  - # Speaker 3\n\nAnd 27:15, 28:56 so it looks like.\n• Speaker 1\n  - # Speaker 1\n\nFull configuration compilation was performed.\n  - That's why it took so long and okay, no problem, we can live with it.\n• Speaker 3\n  - # Speaker 3\n\nSo now you will see one more app here in this list.\n• Speaker 1\n  - # Speaker 1\n\nTelemetry and you can reload this tab.\n• Speaker 3\n  - # Speaker 3\n\nNow you will see one more item at our settings page.\n  - --- Page 151 ---\n• Speaker 1\n  - # Speaker 1\n\nPreviously called System Designer.\n  - Currently it's called Settings.\n• Speaker 3\n  - # Speaker 3\n\nSo I will show you how you.\n• Speaker 1\n  - # Speaker 1\n\nCan use this telemetry log here?\n  - Yes.\n• Speaker 3\n  - # Speaker 3\n\nLogs in order to get some error.\n• Speaker 1\n  - # Speaker 1\n\nMessages for the certain, let's say subject or certain area of functionality.\n  - And you can also listen everything like \nthis, which will mean that you look and get every message.\n• Speaker 3\n  - # Speaker 3\n\nSQL.\n• Speaker 1\n  - # Speaker 1\n\nOh, so it's called JSoft Core DB executor SQL log appender.\n  - Okay, will it be DB executor?\n• Speaker 3\n  - # Speaker 3\n\nAnd we're only interested in for example errors.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 152 ---\n\nSo I plan to make example of listening of DB execution errors.\n• Speaker 3\n  - # Speaker 3\n\nAnd I especially will do some example which makes such an error.\n  - Let's go to customer360, find accounts and.\n• Speaker 1\n  - # Speaker 1\n\nLet'S try to remove some account.\n  - Obviously we will not be able to do this because it has some connections with \nexisting contacts.\n• Speaker 3\n  - # Speaker 3\n\nNow you see no messages here.\n  - Try to do this.\n• Speaker 1\n  - # Speaker 1\n\nHere I expect to get.\n• Speaker 3\n  - # Speaker 3\n\nI expect to get error messages.\n  - Oh, I should subscribe.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's try to delete once again.\n  - Yes, error message appears logger pattern.\n• Speaker 3\n  - # Speaker 3\n\nIt was not an error, it was just a warning.\n• Speaker 1\n  - # Speaker 1\n\nSo like yellow color, which means this.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 153 ---\n\nIs not an error, just a warning.\n• Speaker 1\n  - # Speaker 1\n\nAnd okay, so I got some text message from our DB executor and you.\n• Speaker 3\n  - # Speaker 3\n\nSee that my message has an error.\n  - So exception occurred, statement terminated.\n• Speaker 1\n  - # Speaker 1\n\nAnd you see that we get some.\n• Speaker 3\n  - # Speaker 3\n\nText messages and logs.\n  - You can also get the same logs.\n• Speaker 1\n  - # Speaker 1\n\nIf you go to your files, you.\n• Speaker 3\n  - # Speaker 3\n\nWill find SQL JSON.\n  - Here we will have similar information.\n• Speaker 1\n  - # Speaker 1\n\nSo you see my delete statement failed, so it conflicted with foreign reference constraint.\n• Speaker 3\n  - # Speaker 3\n\nAnd it's interesting that for the SQL.\n  - --- Page 154 ---\n• Speaker 1\n  - # Speaker 1\n\nErrors, system logs only queries that were failed.\n  - So only queries that failed to be.\n• Speaker 3\n  - # Speaker 3\n\nExecuted at the database.\n  - In my case, I intentionally made an.\n• Speaker 1\n  - # Speaker 1\n\nError for the database level and showed you how you can handle it and how you can track it.\n  - You can also use all \nexisting loggers for all messages subscribe.\n• Speaker 3\n  - # Speaker 3\n\nJust when you go to any part.\n• Speaker 1\n  - # Speaker 1\n\nOf your system, when you open any.\n• Speaker 3\n  - # Speaker 3\n\nSection, you will start to get more and more logs.\n• Speaker 1\n  - # Speaker 1\n\nBecause system usually writes something to logs and it has quite verbose logging.\n  - So you will have more and more \ndata.\n• Speaker 3\n  - # Speaker 3\n\nYou have to play a bit with it.\n  - But finally you will be able to.\n• Speaker 1\n  - # Speaker 1\n\nDo the same as you can do with log files.\n  - --- Page 155 ---\n• Speaker 3\n  - # Speaker 3\n\nSo this telemetry log for creation will.\n• Speaker 1\n  - # Speaker 1\n\nBe extremely helpful in case if you.\n• Speaker 3\n  - # Speaker 3\n\nNeed to make some experiments and get.\n• Speaker 1\n  - # Speaker 1\n\nLogs directly in online mode from your cloud environments, including even production systems.\n  - So this can be really \nhelpful for you.\n• Speaker 3\n  - # Speaker 3\n\nAs you can see we have some help message explaining how to use this.\n• Speaker 1\n  - # Speaker 1\n\nSome button which shows or it runs and stops a listening of logs.\n  - So green means run, red means stopped and \nthat's how you can also use it.\n• Speaker 3\n  - # Speaker 3\n\nSo listening all of the logs will.\n• Speaker 1\n  - # Speaker 1\n\nProvide you a lot of verbose noisy messages.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 156 ---\n\nIt's up to you.\n• Speaker 1\n  - # Speaker 1\n\nSo maybe this will be interesting for you.\n  - So just remember the name of the tool is Telemetry for Creatio.\n• Speaker 3\n  - # Speaker 3\n\nBefore we doing this I need to explain you how to do validation.\n  - As you can see my previous program.\n• Speaker 1\n  - # Speaker 1\n\nWas a bit more oriented on classic ui.\n  - So sometimes I jump from topics topics and that's why we are not following \ndirectly from this schedule.\n• Speaker 3\n  - # Speaker 3\n\nSo let's move on validation.\n  - What it is about and this is.\n• Speaker 1\n  - # Speaker 1\n\nCheck of data before it will be.\n• Speaker 3\n  - # Speaker 3\n\nSaved at server side.\n  - Let's return back to our reality section and let's look at our data value.\n• Speaker 1\n  - # Speaker 1\n\nSo when we add new values it may happen that user may save some very incorrect values.\n  - For example, we can try \nto save negative price.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 157 ---\n\nIt's also possible to save negative area and also system does not prevent us from doing such things.\n• Speaker 1\n  - # Speaker 1\n\nSo we can save it.\n• Speaker 3\n  - # Speaker 3\n\nAnd as you can see from system.\n• Speaker 1\n  - # Speaker 1\n\nPoint of view there is no troubles, no errors.\n• Speaker 3\n  - # Speaker 3\n\nBut of course we have trouble from.\n• Speaker 1\n  - # Speaker 1\n\nBusiness point of view because we can't.\n• Speaker 3\n  - # Speaker 3\n\nNormally summarize values, we can't normally calculate commission.\n• Speaker 1\n  - # Speaker 1\n\nSo we have to make some kind of protection for our data input.\n  - And luckily we have this on the platform level as \nexisting validation tools.\n• Speaker 3\n  - # Speaker 3\n\nWe also need to Program this.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 158 ---\n\nUnfortunately validation is only available when you do programming, so it's not a no code setting.\n• Speaker 3\n  - # Speaker 3\n\nBut we are not afraid of this.\n• Speaker 1\n  - # Speaker 1\n\nLet's go to our configuration section, find our form page again, open its source code again.\n• Speaker 3\n  - # Speaker 3\n\nAnd I need to show.\n• Speaker 1\n  - # Speaker 1\n\nYou some examples at our Academy documentation.\n• Speaker 3\n  - # Speaker 3\n\nWhich will really help you.\n• Speaker 1\n  - # Speaker 1\n\nSo we have some architectural SDK things.\n• Speaker 3\n  - # Speaker 3\n\nAt front end documentation, but we have.\n• Speaker 1\n  - # Speaker 1\n\nA lot of useful examples in platform customization area of our academy.\n  - And we have examples for Freedom UI for \nfields examples and we have examples of population of fields.\n• Speaker 3\n  - # Speaker 3\n\nAnd we have example of validation of.\n• Speaker 2\n  - # Speaker 2\n\nField which we are interested right now.\n• Speaker 1\n  - # Speaker 1\n\nSo I will share useful links for such articles.\n  - I recommend you to read it or just maybe look at it.\n• Speaker 3\n  - # Speaker 3\n\nSo let me explain how we plan to move on.\n• Speaker 1\n  - # Speaker 1\n\nWe have special area in our code named validators.\n  - Let me show you.\n• Speaker 3\n  - # Speaker 3\n\nSo we have handlers and we have validators.\n• Speaker 1\n  - # Speaker 1\n\nSo it's a special designed place for.\n• Speaker 2\n  - # Speaker 2\n\nUs to program special functions that will.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 160 ---\n\nBe used for checks of data during input.\n  - And luckily we have examples at Academy.\n• Speaker 2\n  - # Speaker 2\n\nWhich will help us to make it.\n• Speaker 1\n  - # Speaker 1\n\nSmoothly without spending too much time.\n  - So validators is a collection, this is not an array.\n• Speaker 2\n  - # Speaker 2\n\nNow you see, this is a collection.\n• Speaker 3\n  - # Speaker 3\n\nEach collection item should include its name.\n• Speaker 1\n  - # Speaker 1\n\nAnd implementation and validation.\n• Speaker 2\n  - # Speaker 2\n\nImplementation includes validator property which is a.\n• Speaker 1\n  - # Speaker 1\n\nFunction that finally should return something set of parameters and async property.\n  - Then when we finish with this \npart, we will connect our created validator with set of columns.\n• Speaker 2\n  - # Speaker 2\n\nCan do this and I already have.\n  - --- Page 161 ---\n• Speaker 1\n  - # Speaker 1\n\nAn example, we will not spend too.\n• Speaker 2\n  - # Speaker 2\n\nMuch time on it.\n• Speaker 1\n  - # Speaker 1\n\nSo now you will see how we can do this validation.\n• Speaker 2\n  - # Speaker 2\n\nFirst of all we go to validators area and we will provide some code here.\n• Speaker 1\n  - # Speaker 1\n\nI already have example, no difficulties.\n  - So Freedom UI validation example and I need to provide this example of code.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let me copy and paste for you.\n• Speaker 1\n  - # Speaker 1\n\nThis is example of our validation.\n  - Okay, no need to use cameras to show.\n• Speaker 2\n  - # Speaker 2\n\nAnd I will also implement it.\n• Speaker 1\n  - # Speaker 1\n\nIt's my own validators area.\n  - So copy and paste.\n• Speaker 2\n  - # Speaker 2\n\nWhat do you see here?\n  - So we register my validator with a specific name.\n• Speaker 1\n  - # Speaker 1\n\nSo this is a kind of type or maybe validator type, let's call it so.\n  - And we can declare different numbers or unlimited \nnumber of different validators.\n• Speaker 2\n  - # Speaker 2\n\nSo probably we have to start with parameters first, because parameters are values that we can provide for each \nvalidated column.\n• Speaker 1\n  - # Speaker 1\n\nAnd for different columns, we can provide different parameter values.\n• Speaker 2\n  - # Speaker 2\n\nHere we have to declare what parameters we will have.\n• Speaker 3\n  - # Speaker 3\n\nIn my case there are two parameters.\n• Speaker 1\n  - # Speaker 1\n\nMin value and message parameter.\n• Speaker 2\n  - # Speaker 2\n\nValidator function has a bit complex structure.\n  - This is one function, it returns another.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 163 ---\n\nFunction and first function requests config, Another function requests control inside of control.\n  - Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page.\n• Speaker 2\n  - # Speaker 2\n\nBut it makes it universal.\n• Speaker 1\n  - # Speaker 1\n\nIf we have value, we don't know exact column.\n  - So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us.\n• Speaker 2\n  - # Speaker 2\n\nThe config we know what parameters to expect.\n  - So we have min value parameter and we have message parameter.\n• Speaker 1\n  - # Speaker 1\n\nOur check is quite simple.\n• Speaker 2\n  - # Speaker 2\n\nWe get value and then compare with min value.\n  - And in case if our value is.\n• Speaker 1\n  - # Speaker 1\n\nGreater or equal than min value then.\n• Speaker 2\n  - # Speaker 2\n\nWe think that data is correct and.\n• Speaker 1\n  - # Speaker 1\n\nOur returned result will be null which.\n  - --- Page 164 ---\n• Speaker 2\n  - # Speaker 2\n\nMeans no warnings, no messages, everything is okay.\n  - But in case that value is not.\n• Speaker 1\n  - # Speaker 1\n\nCorrect we have to return special type.\n• Speaker 2\n  - # Speaker 2\n\nOf result which is a JavaScript object with a specific name, the property inside and with the message property inside \nof this property.\n• Speaker 1\n  - # Speaker 1\n\nSo it's kind of nested JavaScript object.\n• Speaker 2\n  - # Speaker 2\n\nAnd our message here will be text.\n• Speaker 1\n  - # Speaker 1\n\nIt should be displayed nearby problem control.\n• Speaker 3\n  - # Speaker 3\n\nAnd also this message will be explained.\n• Speaker 1\n  - # Speaker 1\n\nDisplayed when we will try to save our page.\n  - So we will say try to save data system will check all the validators and it \nwill find that some columns.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 165 ---\n\nAre not correct and it will not.\n• Speaker 1\n  - # Speaker 1\n\nAllow to save it.\n• Speaker 2\n  - # Speaker 2\n\nSo this is our example of a.\n• Speaker 3\n  - # Speaker 3\n\nValidation, but it's not applied yet.\n  - So we have to set up some.\n• Speaker 1\n  - # Speaker 1\n\nColumns which will work with this validator.\n• Speaker 3\n  - # Speaker 3\n\nOtherwise our validator is useless because no.\n• Speaker 1\n  - # Speaker 1\n\nColumn expect checks with it.\n• Speaker 2\n  - # Speaker 2\n\nSo I do not need to change anything here.\n  - This code is universal as you can see.\n• Speaker 1\n  - # Speaker 1\n\nOnly one hard coded thing is a validator type name.\n  - Next step is connection of validator with.\n• Speaker 2\n  - # Speaker 2\n\nCertain columns or it's better to say with attributes.\n• Speaker 1\n  - # Speaker 1\n\nSo I will show you examples.\n• Speaker 2\n  - # Speaker 2\n\nHow we can connect.\n• Speaker 1\n  - # Speaker 1\n\nMaybe I should do it here.\n  - How we can connect validators to columns.\n• Speaker 2\n  - # Speaker 2\n\nAfter module config I have to provide.\n• Speaker 1\n  - # Speaker 1\n\nValidators setting so I should carefully copy.\n• Speaker 2\n  - # Speaker 2\n\nThis.\n• Speaker 1\n  - # Speaker 1\n\nAnd paste it here.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 167 ---\n\nAnd that's.\n• Speaker 1\n  - # Speaker 1\n\nHow I will put it.\n• Speaker 2\n  - # Speaker 2\n\nSo here's my price attribute.\n• Speaker 1\n  - # Speaker 1\n\nHere is my validator.\n  - The type of validator should be matched.\n• Speaker 2\n  - # Speaker 2\n\nWith what we created and parameter.\n• Speaker 1\n  - # Speaker 1\n\nSo the minimum value for the price.\n• Speaker 2\n  - # Speaker 2\n\nI think it will be 50.\n• Speaker 3\n  - # Speaker 3\n\nSo we will not allow to save.\n• Speaker 2\n  - # Speaker 2\n\nAny reality object with the price less than 50 bucks.\n  - --- Page 168 ---\n• Speaker 1\n  - # Speaker 1\n\nOkay, and also we can use message, not just a plain string constant which.\n• Speaker 2\n  - # Speaker 2\n\nIs also supported, but also we can use localizable string.\n  - Here is an example of a macro that you can use for \nlocalizable strings.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you what localizable strings I plan to use.\n  - I will put it for you.\n• Speaker 2\n  - # Speaker 2\n\nI go to localizable strings.\n  - Probably we can save it before modifications.\n• Speaker 1\n  - # Speaker 1\n\nBut now I will modify non localizable.\n• Speaker 2\n  - # Speaker 2\n\nStrings.\n• Speaker 1\n  - # Speaker 1\n\nTake significantly longer than usual.\n  - As you can see, my worker process consumed quite a lot of ram.\n• Speaker 2\n  - # Speaker 2\n\nOkay, we can try to create localizable.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 169 ---\n\nString with the code price can't be less and the value is price cannot be less than something.\n  - Okay, try to add and \nthen I expect some troubles here.\n• Speaker 2\n  - # Speaker 2\n\nThat's why I will try to save now.\n• Speaker 1\n  - # Speaker 1\n\nIf it saves correctly, okay, no problem.\n• Speaker 2\n  - # Speaker 2\n\nBut in previous versions I experienced some.\n• Speaker 1\n  - # Speaker 1\n\nTroubles with localizable strings here and it turned out to save it.\n  - So when I added once, it physically.\n• Speaker 2\n  - # Speaker 2\n\nAdded it twice and then denied to.\n• Speaker 1\n  - # Speaker 1\n\nSave because it tells that such localizable string already exists.\n  - In case, if you face this kind.\n• Speaker 2\n  - # Speaker 2\n\nOf issue when you add localizable string.\n• Speaker 1\n  - # Speaker 1\n\nTry to save and then get error message about duplicated localizable strings.\n  - You can just remove that visible one \nthat you created.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 170 ---\n\nAnother one which is invisible will be still saved.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can bypass this bug.\n• Speaker 2\n  - # Speaker 2\n\nAs you can see, Creature also as.\n• Speaker 1\n  - # Speaker 1\n\nAny software, it has its own bugs.\n  - Sometimes bugs are detected, fixed new bugs appeared.\n• Speaker 2\n  - # Speaker 2\n\nSo it's normal, more or less normal for any software.\n  - Another localizable string that we will need is about area.\n• Speaker 1\n  - # Speaker 1\n\nValue here, save it.\n• Speaker 2\n  - # Speaker 2\n\nArea can't be less.\n  - Let's try to save.\n• Speaker 1\n  - # Speaker 1\n\nAnd my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring.\n• Speaker 2\n  - # Speaker 2\n\nIt looks like in this version this bug was finally fixed.\n  - --- Page 171 ---\n• Speaker 1\n  - # Speaker 1\n\nThat's nice.\n  - So for the price we already set.\n• Speaker 2\n  - # Speaker 2\n\nSettings, now we do the same for area.\n  - So let me show you what we.\n• Speaker 1\n  - # Speaker 1\n\nDo for area we will set validators setting for one column.\n  - We can use multiple validators so it's possible to make \nchecks with different criterias.\n• Speaker 2\n  - # Speaker 2\n\nAnd in my case for the area.\n• Speaker 1\n  - # Speaker 1\n\nI will use the same validator but.\n• Speaker 2\n  - # Speaker 2\n\nMinimum value will be 100 square feet.\n• Speaker 1\n  - # Speaker 1\n\nSo it's close to 10 square meters.\n• Speaker 3\n  - # Speaker 3\n\nWe think that we will not input.\n• Speaker 1\n  - # Speaker 1\n\nAny kind of realty less than 10.\n  - --- Page 172 ---\n• Speaker 3\n  - # Speaker 3\n\nSquare meters or 100 square feet.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's our limitation here.\n• Speaker 2\n  - # Speaker 2\n\nAnd we will use localizable string that.\n• Speaker 1\n  - # Speaker 1\n\nWe already successfully saved.\n  - Okay, now we have this example, save.\n• Speaker 2\n  - # Speaker 2\n\nIt and then it's our turn to.\n• Speaker 1\n  - # Speaker 1\n\nTest and check out how our data were saved.\n  - How well it looks, we can close.\n• Speaker 2\n  - # Speaker 2\n\nOur editor, go to main app probably.\n• Speaker 3\n  - # Speaker 3\n\nLet'S reward it just to fight with.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 173 ---\n\nAny potential impact of browser cache issue.\n  - Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here.\n• Speaker 2\n  - # Speaker 2\n\nNow you see that once we finished.\n• Speaker 1\n  - # Speaker 1\n\nAnd moved focus out of control, you see we have some checks and this checks displays error message.\n• Speaker 3\n  - # Speaker 3\n\nPrice can't be less than 50 bucks.\n• Speaker 1\n  - # Speaker 1\n\nArea can't be less than 100 square feet.\n  - If we try to save such data, system will reject it tells us we.\n• Speaker 3\n  - # Speaker 3\n\nHave problems and we have to fix them.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's fix only price try to save.\n• Speaker 3\n  - # Speaker 3\n\nWe still have trouble with area.\n• Speaker 1\n  - # Speaker 1\n\nWhen we fix area then our troubles are over and system saves it normally.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 174 ---\n\nPlease note that if you do something.\n• Speaker 1\n  - # Speaker 1\n\nLike this and try to save your.\n• Speaker 3\n  - # Speaker 3\n\nData Validation works at client side so it doesn't send any messages to server side.\n• Speaker 1\n  - # Speaker 1\n\nNow you see nothing appeared in network tab until we will fully fix our rental price.\n  - In this case you see update query \nexecuted.\n• Speaker 3\n  - # Speaker 3\n\nSide only in case of successful client validation.\n• Speaker 1\n  - # Speaker 1\n\nSo this validation may help you to improve your logic to make it more protected to get rid of like silly.\n• Speaker 3\n  - # Speaker 3\n\nMistakes made by end users.\n• Speaker 1\n  - # Speaker 1\n\nAnd I think that this is something that will be quite important in your future projects and implementation.\n• Speaker 2\n  - # Speaker 2\n\nNow I plan to show you some.\n  - --- Page 175 ---\n• Speaker 1\n  - # Speaker 1\n\nSimple topic and it's simple but it's very important because such topic will be.\n• Speaker 2\n  - # Speaker 2\n\nQuite often faced in your projects.\n  - It will be not really directly connected with programming, but it's something that \nyou definitely should know about.\n• Speaker 1\n  - # Speaker 1\n\nI'm talking about typical settings of columns.\n• Speaker 2\n  - # Speaker 2\n\nThat you need according to some conditions.\n• Speaker 1\n  - # Speaker 1\n\nFor example, some column must be visible.\n• Speaker 2\n  - # Speaker 2\n\nOnly in case of a certain condition and otherwise should be hidden or another.\n• Speaker 1\n  - # Speaker 1\n\nColumn must be required according to some conditions and otherwise should be optional.\n  - And also you may need \nsome like talk about visibility, about required settings, or about read only columns.\n• Speaker 2\n  - # Speaker 2\n\nSo such typical Settings for columns are.\n• Speaker 1\n  - # Speaker 1\n\nFrequently faced in requirements from business owners.\n  - --- Page 176 ---\n• Speaker 3\n  - # Speaker 3\n\nAnd that's why such functionality was decided to implement as a no code Tools.\n• Speaker 1\n  - # Speaker 1\n\nAnd developers code such functionality.\n  - Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples.\n• Speaker 2\n  - # Speaker 2\n\nPage business rules mainly used for controls.\n• Speaker 1\n  - # Speaker 1\n\nVisibility, maybe required property, read only property and also we have object business rules.\n  - Here it's called realty \nbusiness rules but.\n• Speaker 2\n  - # Speaker 2\n\nYou should understand this is about object.\n  - Object business rules also offer us possibility.\n• Speaker 1\n  - # Speaker 1\n\nTo make some filtering and depending on the type of business row, it will be physically saved into metadata of a.\n• Speaker 2\n  - # Speaker 2\n\nPage or into metadata of an object.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 177 ---\n\nLet's imagine our task is quite simple.\n• Speaker 1\n  - # Speaker 1\n\nTo show comment only in case of type is not empty.\n• Speaker 2\n  - # Speaker 2\n\nSo when we add new data, type.\n• Speaker 1\n  - # Speaker 1\n\nCould be not specified.\n  - In this case, comment should be hidden.\n• Speaker 2\n  - # Speaker 2\n\nWe can use page level business rules.\n• Speaker 1\n  - # Speaker 1\n\nBecause it's about column visibility add new rule.\n• Speaker 2\n  - # Speaker 2\n\nThis rule will have automatically generated title.\n• Speaker 1\n  - # Speaker 1\n\nTo be applied to the page and it has triggering condition, page is open or some condition changed.\n• Speaker 2\n  - # Speaker 2\n\nSo we have if scenario and then action.\n  - Okay, let's start with if and now we will think of something like.\n• Speaker 1\n  - # Speaker 1\n\nI should do it a bit better with initial status.\n  - Okay, so if our type is not empty, then comment should be visible.\n• Speaker 2\n  - # Speaker 2\n\nLet's try to do this attribute or.\n• Speaker 1\n  - # Speaker 1\n\nData field realty and our type okay, if type is not empty so we can use condition is filled in.\n  - If this condition is true, \nthen we will use action show elements on the.\n• Speaker 2\n  - # Speaker 2\n\nPage and we can decide what element.\n• Speaker 1\n  - # Speaker 1\n\nWill be shown to be.\n  - Input column of a comment Text comment Okay, so if type is filled in comment will be visible.\n• Speaker 3\n  - # Speaker 3\n\nSave our page.\n• Speaker 1\n  - # Speaker 1\n\nNow and let's check how it will be physically working for us.\n• Speaker 2\n  - # Speaker 2\n\nAs you can see, each time you.\n• Speaker 1\n  - # Speaker 1\n\nDevelop something, this is very important to immediately test it when it's ready and.\n  - --- Page 179 ---\n• Speaker 2\n  - # Speaker 2\n\nWhen you make many different changes you.\n• Speaker 1\n  - # Speaker 1\n\nMay think of okay, I will do many changes, then I will test them in total.\n• Speaker 2\n  - # Speaker 2\n\nI do not recommend you to follow this approach, so it's much better and more safer.\n  - If you will do some small step, \nthen you go to your system and.\n• Speaker 1\n  - # Speaker 1\n\nStart to test it.\n• Speaker 2\n  - # Speaker 2\n\nThen you do another small step, then you do another test.\n• Speaker 1\n  - # Speaker 1\n\nThe reason is that creature client side sometimes could bring you Surprises and it will be not so clear according to.\n• Speaker 2\n  - # Speaker 2\n\nThe error message text in your browser console to understand what exact part is gave you such a surprise.\n• Speaker 1\n  - # Speaker 1\n\nSo it's better to make small steps and to test it frequently.\n  - So once you get and start to.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 180 ---\n\nGet some error messages and you will.\n• Speaker 1\n  - # Speaker 1\n\nEasily understand that it was caused probably the most latest recent changes and you.\n• Speaker 2\n  - # Speaker 2\n\nShould take care about it and maybe.\n• Speaker 1\n  - # Speaker 1\n\nRevert them maybe to look carefully and.\n• Speaker 2\n  - # Speaker 2\n\nYou will find some errors.\n  - So small steps and frequent testing.\n• Speaker 1\n  - # Speaker 1\n\nSo let's open any record type is set, Comment is visible.\n  - It's clear the type.\n• Speaker 2\n  - # Speaker 2\n\nNow you see it's a bit uncertain.\n• Speaker 1\n  - # Speaker 1\n\nSo it's not cleared and let's set it again.\n  - Okay, if you clear it doesn't work.\n• Speaker 2\n  - # Speaker 2\n\nI think that we have a problem because of initial state of the square column.\n  - Let me show you how we can fix it.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 181 ---\n\nInitial state should be aligned with our business rule and in case if we check some condition and turn this column \non.\n  - So make it visible.\n• Speaker 3\n  - # Speaker 3\n\nAnd according to the business rule, it.\n• Speaker 1\n  - # Speaker 1\n\nWill be enabled if type changed and became not empty.\n  - Let's check it out.\n• Speaker 3\n  - # Speaker 3\n\nWe need to reload.\n• Speaker 1\n  - # Speaker 1\n\nFighting with browser cache Clear.\n  - Now you see our comment disappeared.\n• Speaker 3\n  - # Speaker 3\n\nIf we change type, it appears again.\n• Speaker 1\n  - # Speaker 1\n\nIf you clear, it hides.\n  - Hides?\n• Speaker 3\n  - # Speaker 3\n\nSo that's how you can manage visibility and such setting.\n  - As you can see, it's a no code setting.\n• Speaker 1\n  - # Speaker 1\n\nSo you can make all the settings with your mouse.\n  - It doesn't require any programming.\n• Speaker 3\n  - # Speaker 3\n\nI would like you to see another example.\n• Speaker 1\n  - # Speaker 1\n\nSo you can also see visibility, editability and required property.\n• Speaker 3\n  - # Speaker 3\n\nAnd one more thing which is interesting.\n• Speaker 1\n  - # Speaker 1\n\nI think is about selecting values in lookups.\n• Speaker 3\n  - # Speaker 3\n\nNow we have selection of manager from contact.\n  - We can display additional columns here.\n• Speaker 1\n  - # Speaker 1\n\nFor example, contact type.\n  - Okay, I'm too lazy to scroll.\n• Speaker 3\n  - # Speaker 3\n\nNow you see some contexts have customer type, some contexts have employee type, and so on.\n• Speaker 1\n  - # Speaker 1\n\nFinally, my contacts list will include many.\n• Speaker 3\n  - # Speaker 3\n\nDifferent persons and only some of them.\n  - --- Page 183 ---\n• Speaker 1\n  - # Speaker 1\n\nWill represent my company employees.\n• Speaker 3\n  - # Speaker 3\n\nWhen I want to specify manager here, I definitely want to specify someone who.\n• Speaker 1\n  - # Speaker 1\n\nIs company employee and not just a random contact.\n• Speaker 3\n  - # Speaker 3\n\nSo I want to make some simple.\n• Speaker 1\n  - # Speaker 1\n\nFilter here which will help me to select only context with a certain type.\n  - And we can do such filtering with.\n• Speaker 3\n  - # Speaker 3\n\nThe help of business rules.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go back to our page, go to business rules Now I plan to use object level business rules.\n  - So here you see real \nto business rules which means realty object business rules.\n• Speaker 3\n  - # Speaker 3\n\nHere was page.\n  - Now here is object level.\n• Speaker 1\n  - # Speaker 1\n\nOkay and first of all I will check available action here.\n  - --- Page 184 ---\n• Speaker 3\n  - # Speaker 3\n\nAnd in comparison with page level we.\n• Speaker 1\n  - # Speaker 1\n\nHave more options here and I plan to use simple static filter Business rule Static filter will not require any as you can \nsee, static filter will not.\n• Speaker 3\n  - # Speaker 3\n\nRequire any special conditions I mean for.\n• Speaker 1\n  - # Speaker 1\n\nTriggering so it will be applied always.\n  - That's why it's called static.\n• Speaker 3\n  - # Speaker 3\n\nAnd I will have a column which.\n• Speaker 1\n  - # Speaker 1\n\nColumn I plan to use for filtering.\n  - This will be manager column and what.\n• Speaker 3\n  - # Speaker 3\n\nFilter I plan to use I have.\n• Speaker 1\n  - # Speaker 1\n\nTo specify it with additional condition.\n  - Please note here those of you who use Windows Home probably you may \nexperience difficulties because it was found that users with Windows Home experienced troubles opening this tab \nand it was simply not possible if you use Home Edition.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 185 ---\n\nI can make condition here.\n  - Contact.\n• Speaker 1\n  - # Speaker 1\n\nType equals to a constant employee.\n  - So if this filter will be constantly applied on my lookup, save it and then save it \nagain.\n• Speaker 3\n  - # Speaker 3\n\nNow let's try to select values.\n• Speaker 1\n  - # Speaker 1\n\nHere you select data.\n  - Now you see only context with employee type.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's make more examples, better examples.\n• Speaker 1\n  - # Speaker 1\n\nAnd let's go to customer 360 add more contacts to make it representative and let's make a contact name something \nlike James Bond and type will be customer.\n  - Okay, one more Bruce Lee will be our employee.\n• Speaker 2\n  - # Speaker 2\n\nAnd Bruce Willis will be also our employee.\n  - So you will see we have some.\n• Speaker 1\n  - # Speaker 1\n\nDifferent contexts, different types and let's go back to our realty, try to select manager system only shows us only \ncontext with a certain type.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 186 ---\n\nThis is very simple filtering tool.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see we just used only mouse to set up this type of customization.\n• Speaker 2\n  - # Speaker 2\n\nBut it's very efficient and that's why I think it's important for you to know about it.\n  - Because even if it doesn't require \nprogramming, but if you did not attend our.\n• Speaker 1\n  - # Speaker 1\n\nCustomization course, you still need to know.\n• Speaker 2\n  - # Speaker 2\n\nThat such type of filtering is supported.\n  - Also I can quickly show you another filtering of connected fields like filtering \ncities by countries.\n• Speaker 1\n  - # Speaker 1\n\nSo or maybe if we focus on us only.\n  - For example we can filter cities by States.\n• Speaker 2\n  - # Speaker 2\n\nSo let's go again to our page.\n  - In order to filter something by something.\n• Speaker 1\n  - # Speaker 1\n\nOf course we need to have connected lookups.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 187 ---\n\nLuckily in base product cities and countries are already connected.\n• Speaker 1\n  - # Speaker 1\n\nEach city has corresponding country reference.\n  - Let me show you cities lookup already has connections with country.\n• Speaker 2\n  - # Speaker 2\n\nProbably we have to start from country.\n• Speaker 1\n  - # Speaker 1\n\nBecause we plan to input data starting from country providing country value and then USR country copy and lookup.\n  - We will use standard lookup.\n• Speaker 3\n  - # Speaker 3\n\nThat will be based on.\n• Speaker 1\n  - # Speaker 1\n\nIt's also CT drop down list.\n• Speaker 2\n  - # Speaker 2\n\nAnd here we can name something like city.\n• Speaker 1\n  - # Speaker 1\n\nIt will be enough.\n  - The most important is uniqueness of this column.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 188 ---\n\nGood unique value for us.\n• Speaker 1\n  - # Speaker 1\n\nOkay.\n  - Is it okay?\n• Speaker 2\n  - # Speaker 2\n\nSave it first in order to apply.\n• Speaker 3\n  - # Speaker 3\n\nChanges to the object level.\n• Speaker 1\n  - # Speaker 1\n\nAnd so to fully modify our data model properly to take maybe less than a minute our time it okay, saved.\n  - Well, now \nwe go to business rules.\n• Speaker 3\n  - # Speaker 3\n\nThis is a special type of filter.\n• Speaker 1\n  - # Speaker 1\n\nWhich is I think originally designed for connected lookups.\n• Speaker 2\n  - # Speaker 2\n\nAnd we can specify what column to filter.\n• Speaker 1\n  - # Speaker 1\n\nObviously we will filter cities by what another column by country.\n  - --- Page 189 ---\n• Speaker 2\n  - # Speaker 2\n\nAnd this editor will automatically detect connections between cities and countries.\n  - So it will show us where city.\n• Speaker 1\n  - # Speaker 1\n\nCountry which means country value inside of city Lookup equals to value of country.\n• Speaker 2\n  - # Speaker 2\n\nProvided in our realty page and also automatic settings for clearing when country changed.\n• Speaker 1\n  - # Speaker 1\n\nClearing cities when country changed or automatically.\n• Speaker 2\n  - # Speaker 2\n\nSet country if city was set and.\n• Speaker 1\n  - # Speaker 1\n\nFor example country was empty.\n  - So you can do this also then.\n• Speaker 2\n  - # Speaker 2\n\nCountry will be automatically populated.\n  - So this rule will work good for us.\n• Speaker 1\n  - # Speaker 1\n\nBut what I need to add here is triggering condition.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 190 ---\n\nWe need to Change such filter each time.\n• Speaker 1\n  - # Speaker 1\n\nWhen country changes so page is opened or some changes and when country.\n  - Okay, we can select here is filled in.\n• Speaker 2\n  - # Speaker 2\n\nWorking with this filter.\n• Speaker 1\n  - # Speaker 1\n\nSometimes it will work, sometimes not.\n• Speaker 2\n  - # Speaker 2\n\nSo you should not forget about this condition.\n  - Let's save it.\n• Speaker 1\n  - # Speaker 1\n\nSave page and then we will test it.\n  - You will see how it works.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's test.\n  - We need to reward it.\n• Speaker 1\n  - # Speaker 1\n\nSo let's say Miami and you see.\n• Speaker 2\n  - # Speaker 2\n\nCountry, you see city.\n  - --- Page 191 ---\n• Speaker 1\n  - # Speaker 1\n\nOkay, Country, States, United States.\n• Speaker 2\n  - # Speaker 2\n\nCities.\n  - As you may see, cities are filtered by country.\n• Speaker 1\n  - # Speaker 1\n\nOh, Hartford, Frankfort.\n• Speaker 2\n  - # Speaker 2\n\nLooks like only.\n• Speaker 1\n  - # Speaker 1\n\nUS Cities I think.\n  - Okay, so now you see it looks.\n• Speaker 3\n  - # Speaker 3\n\nLooks like.\n• Speaker 2\n  - # Speaker 2\n\nWell, okay, let's take another example.\n• Speaker 1\n  - # Speaker 1\n\nNo country, you see all cities from different country.\n  - Ararat Astrakhan, Baghdad, you see Bishkek, you see Bratislava.\n• Speaker 2\n  - # Speaker 2\n\nSo from different countries from.\n  - --- Page 192 ---\n• Speaker 1\n  - # Speaker 1\n\nOkay, so if you set some city.\n• Speaker 2\n  - # Speaker 2\n\nCountry will be populated automatically in this case.\n• Speaker 1\n  - # Speaker 1\n\nBut if you clear country, city was cleared automatically.\n  - So if we provide some country like Bangladesh, you will see \nonly filtered cities.\n• Speaker 2\n  - # Speaker 2\n\nLet's go to our states.\n• Speaker 1\n  - # Speaker 1\n\nNow we have to search for Seattle.\n• Speaker 2\n  - # Speaker 2\n\nYes, you see it finds and filter works well.\n  - So this type of filtering can be.\n• Speaker 1\n  - # Speaker 1\n\nDone not only for citizen countries.\n  - For example, you can make two connected hookups.\n• Speaker 3\n  - # Speaker 3\n\nAnd subtype should have a lookup column.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 193 ---\n\nReferencing to corresponding type.\n• Speaker 3\n  - # Speaker 3\n\nAnd in this case when user specifies.\n• Speaker 1\n  - # Speaker 1\n\nType, it will be technically possible to filter subtypes according to selected type.\n  - But this canonic example with \ncountries and cities, I think it's the easiest to.\n• Speaker 2\n  - # Speaker 2\n\nUnderstand examples so you can also use it.\n• Speaker 1\n  - # Speaker 1\n\nDon't forget about business rules triggering by changing country.\n  - So save it.\n• Speaker 2\n  - # Speaker 2\n\nHave one more session tomorrow that will be dedicated to our client side.\n  - I plan to show you how to make details \nand also probably answer your questions if appear.\n• Speaker 1\n  - # Speaker 1\n\nIf you ask something about some cases with programming inside of our pages in.\n• Speaker 2\n  - # Speaker 2\n\nFreedom UI later we probably will also.\n• Speaker 1\n  - # Speaker 1\n\nInvest a bit of time into classic.\n  - --- Page 194 ---\n• Speaker 2\n  - # Speaker 2\n\nUI examples and I think you'll be.\n• Speaker 1\n  - # Speaker 1\n\nInterested in migration from Classic UI to Freedom ui.\n  - It will be only client side, so objects will be the same.\n• Speaker 2\n  - # Speaker 2\n\nToday, our session is over.\n  - In case.\n• Speaker 1\n  - # Speaker 1\n\nEnvironments, with your homework, tell me please.\n• Speaker 2\n  - # Speaker 2\n\nIt's important for me to know.\n• Speaker 1\n  - # Speaker 1\n\nDo you have any troubles or other notes, any questions?\n• Speaker 4\n  - # Speaker 4\n\nI have one.\n  - Did we go over.\n• Speaker 1\n  - # Speaker 1\n\nYou probably asked about something that you.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 195 ---\n\nAlready saw in Classic UI with overriding of methods or this is something else.\n  - So can you explain the business \nexample?\n• Speaker 4\n  - # Speaker 4\n\nNo, sorry, I just saw it on the list on.\n  - So you know you have the list of the breakdown of each day.\n• Speaker 1\n  - # Speaker 1\n\nOh, you mean this one?\n• Speaker 2\n  - # Speaker 2\n\nThis is.\n• Speaker 1\n  - # Speaker 1\n\nYeah, yeah.\n• Speaker 2\n  - # Speaker 2\n\nSo this schedule is a bit outdated unfortunately.\n• Speaker 1\n  - # Speaker 1\n\nOkay, try to find some time and yes, there are some topics that are not so applicable to Freedom UI and.\n• Speaker 2\n  - # Speaker 2\n\nYou may find something like.\n  - Like alternative JavaScript editors.\n• Speaker 1\n  - # Speaker 1\n\nOkay, I can explain you something and overriding of methods.\n  - --- Page 196 ---\n• Speaker 4\n  - # Speaker 4\n\nThat's it.\n• Speaker 1\n  - # Speaker 1\n\nIt was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui.\n  - In Classic UI you \ncould rewrite or.\n• Speaker 2\n  - # Speaker 2\n\nInterfere into some life cycle stages of.\n• Speaker 1\n  - # Speaker 1\n\nPage by replacing its like critically important methods.\n  - In Freedom UI you can write your.\n• Speaker 2\n  - # Speaker 2\n\nOwn methods, but system does not allow.\n• Speaker 1\n  - # Speaker 1\n\nYou to significantly change this life cycle.\n  - So it looks like I tried and.\n• Speaker 2\n  - # Speaker 2\n\nIt looks like when you have for.\n• Speaker 1\n  - # Speaker 1\n\nExample some handler and you already know that there is a base product handler which is declared somewhere in \nparent.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 197 ---\n\nTemplates, you cannot replace it with your own rejecting execution of all parent implementation.\n  - So in Freedom UI \nyou can write.\n• Speaker 1\n  - # Speaker 1\n\nYour own part and it will be.\n• Speaker 2\n  - # Speaker 2\n\nJust part of all the steps executed.\n• Speaker 1\n  - # Speaker 1\n\nIn total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol I think so in Freedom UI we have different conditions for programming.\n  - I plan to update this program for.\n• Speaker 2\n  - # Speaker 2\n\nOur sessions and it's a bit outdated.\n• Speaker 1\n  - # Speaker 1\n\nHere, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural.\n  - So \nwhen you do simple settings then.\n• Speaker 2\n  - # Speaker 2\n\nYou do a bit more.\n• Speaker 1\n  - # Speaker 1\n\nMore complex and so our flow of real topics that we study, I think it's quite optimal for current version.\n• Speaker 4\n  - # Speaker 4\n\nThanks Mario.\n  - --- Page 198 ---\n• Speaker 1\n  - # Speaker 1\n\nThank you Paddy for questions and any.\n• Speaker 2\n  - # Speaker 2\n\nAny, any difficulties with your homework, when you do examples, when you make.\n• Speaker 1\n  - # Speaker 1\n\nYour sections, maybe you have something to say.\n  - It happens that most of our participants watch videos like you now \nand then.\n• Speaker 3\n  - # Speaker 3\n\nThey decided to process video files much.\n• Speaker 1\n  - # Speaker 1\n\nLater than finishing of the sessions.\n• Speaker 3\n  - # Speaker 3\n\nSo I recommend you to invest some time between the sessions to watch videos and practice.\n• Speaker 1\n  - # Speaker 1\n\nBecause in this case you will easier.\n• Speaker 3\n  - # Speaker 3\n\nUnderstand our next topics.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 199 ---\n\nYou will get more experience at that topics and think it will be in.\n• Speaker 3\n  - # Speaker 3\n\nGeneral faster for you.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be faster boarding faster, let's say getting necessary expertise for you as developers.\n  - So at the end of the \nsessions.\n• Speaker 3\n  - # Speaker 3\n\nYou'Ll be able to pass an exam.\n• Speaker 1\n  - # Speaker 1\n\nWe call it Fast Track certification, which.\n• Speaker 3\n  - # Speaker 3\n\nIncludes homework very similar to what we do here and test.\n  - This test will require some time for you to prepare.\n• Speaker 1\n  - # Speaker 1\n\nDetails how we will prepare for the exam, how it will be organized and.\n• Speaker 3\n  - # Speaker 3\n\nThis is optional thing.\n• Speaker 1\n  - # Speaker 1\n\nSo if you feel confident, you may apply for it.\n  - If not, you may use Academy website and apply for certification much \nlater.\n• Speaker 3\n  - # Speaker 3\n\nSo if interested in preparation for the.\n• Speaker 1\n  - # Speaker 1\n\nExam, also keep it in your mind.\n• Speaker 3\n  - # Speaker 3\n\nAnd if you have some questions, feel free to ask.\n  - Also maybe you will want to write me some messages.\n• Speaker 1\n  - # Speaker 1\n\nHere is my email.\n  - I will be happy to answer you and support you during your practicing with.\n• Speaker 3\n  - # Speaker 3\n\nExamples in our sessions.\n• Speaker 1\n  - # Speaker 1\n\nThank you for your time today.\n• Speaker 3\n  - # Speaker 3\n\nSee you tomorrow as usual.\n• Speaker 1\n  - # Speaker 1\n\nAnd as usual, you will receive videos of today's session very soon, maybe 40 or 50 minutes to get this video.\n• Speaker 3\n  - # Speaker 3\n\nThank you and goodbye.\n  - --- Page 201 ---\n• Speaker 1\n  - # Speaker 1\n\nSee you tomorrow.\n  - Bye.\n• Speaker 2\n  - # Speaker 2\n\nIt.\n  - --- Page 202 ---\n• Speaker 1\n  - # Speaker 1\n\nSo today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items.\n  - And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nAnd you can see that for one main account record we can save unlimited number of addresses.\n  - So we can put \nunlimited number of addresses here and they will be usually displayed in a list.\n• Speaker 1\n  - # Speaker 1\n\nSo one account connected to as many detail records.\n  - And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records.\n• Speaker 1\n  - # Speaker 1\n\nWe have contacts list, we have also emails or sorry, we have probably it's better to say communications.\n  - If you go to \ncontacts open any record, you will see communications detail.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's how we can select a company and to see all its connected contacts.\n  - So usually connection is one too \nmany.\n• Speaker 1\n  - # Speaker 1\n\nAnd some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details.\n  - So this is nothing special for you.\n• Speaker 1\n  - # Speaker 1\n\nIn our realty business, we definitely need to speak with potential customers.\n  - We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object.\n  - So new object requires new good working friendly code.\n• Speaker 1\n  - # Speaker 1\n\nWe can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required.\n  - We have no default values here, but we have a special lookup behavior.\n• Speaker 1\n  - # Speaker 1\n\nBut in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted.\n  - So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 204 ---\n\nSo here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically.\n  - This is performed by help of foreign key at the database and with option cascade on delete.\n• Speaker 1\n  - # Speaker 1\n\nSo we can call this colon visit date time.\n  - We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord.\n• Speaker 1\n  - # Speaker 1\n\nSo potential customer is a person who probably will buy a house or will rent an apartment.\n  - So potential customer, we \ndon't know who it is.\n• Speaker 1\n  - # Speaker 1\n\nSo we have an option do not control integrity which means please do not create foreign keys by default.\n  - When you \ncreate a lookup column foreign key is created automatically.\n• Speaker 1\n  - # Speaker 1\n\nSo such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal.\n  - But it's very rare case when you remove contact who \npreviously was a user of your system.\n• Speaker 1\n  - # Speaker 1\n\nSo for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity.\n  - So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why they decided to make it with no foreign keys.\n  - For created by and for modified by and such behavior \nwas inherited from base lookup.\n• Speaker 1\n  - # Speaker 1\n\nIn this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source.\n  - So here we have just standard situation \npotential customer based on contact.\n• Speaker 1\n  - # Speaker 1\n\nSo comment after a visit could be really helpful if you want to proceed with this realty.\n  - So we can have a comment \nas a text field, very simple, not required and just text value.\n• Speaker 1\n  - # Speaker 1\n\nSo now you can see pages tab and we have to specify edit page for our reality visit.\n  - Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page.\n• Speaker 1\n  - # Speaker 1\n\nSo reality visit form page Its parent packages realty template is mini page.\n  - Great, now we have to use existing \ncolumns.\n• Speaker 1\n  - # Speaker 1\n\nThe answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user.\n  - So we can hide this column so we cannot show it on the page.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be just hidden, it will be not shown on the page and our reality visit page will look like this.\n  - We can see why \nis there a red asterisk beside visit date and time and parent realty.\n• Speaker 1\n  - # Speaker 1\n\nThis is very common for details and creature to hide parent column from the page at all.\n  - So we can save our page \nnow.\n• Speaker 1\n  - # Speaker 1\n\nWhen you edit, you want to specify totally another set of columns.\n  - It could be used.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why we have this Option multiple pages based on specific field value.\n  - So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting.\n• Speaker 1\n  - # Speaker 1\n\nOkay, finally we finished and we can publish our object again.\n  - As you can see, we have to do it twice.\n• Speaker 1\n  - # Speaker 1\n\nBut in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not.\n  - In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object.\n• Speaker 1\n  - # Speaker 1\n\nWe have another options like finding your corresponding form page and open it from configuration section to be the \nsame result.\n  - Or you can achieve the same result if you go to settings page physically system designer.\n• Speaker 1\n  - # Speaker 1\n\nI prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it.\n  - That's why it's called expanded.\n• Speaker 1\n  - # Speaker 1\n\nOf course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail.\n  - It immediately shows us set of columns.\n• Speaker 1\n  - # Speaker 1\n\nAnd there is no horizontal scrolls in classic UI and only 24 available columns to be displayed.\n  - So freedom UI is more \nflexible here.\n• Speaker 1\n  - # Speaker 1\n\nAnd if it has some data, they will also see corresponding data and they will see what they expect.\n  - So here is our list.\n• Speaker 1\n  - # Speaker 1\n\nIn reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this.\n  - So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty.\n• Speaker 1\n  - # Speaker 1\n\nWe can also program bulk actions for list.\n  - So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions.\n• Speaker 1\n  - # Speaker 1\n\nOf course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically.\n  - But here we have important setting which column values to set.\n• Speaker 1\n  - # Speaker 1\n\nSo please remember this is filling of a column that is used for connection between visits and our realty.\n  - Okay, great.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 209 ---\n\nIf other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails.\n  - So let's make a quick test of how our detail works.\n• Speaker 1\n  - # Speaker 1\n\nWe can copy this data, save it, check it out.\n  - You see the parent reality is copyable.\n• Speaker 1\n  - # Speaker 1\n\nMaybe it will help our system to work more correctly.\n  - Something unusual happens with my browser with my app.\n• Speaker 1\n  - # Speaker 1\n\nWe have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid.\n  - Without being afraid of something can be lost in the middle.\n• Speaker 1\n  - # Speaker 1\n\nAnd we will sync changes which means pull and push to common repository.\n  - And now it's okay, it's done.\n• Speaker 1\n  - # Speaker 1\n\nAnd also you can use business rules if you want to do some kind of filtering or simple fields hiding or showing you \ncan use all the features.\n  - So you should remember that our page for detail is based on a separate client module that \nwas created today.\n• Speaker 1\n  - # Speaker 1\n\nSo inline edit should be disabled.\n  - So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user.\n• Speaker 1\n  - # Speaker 1\n\nAnd possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications.\n  - So let me explain what I plan to do right now.\n• Speaker 1\n  - # Speaker 1\n\nFor example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it.\n  - So we need one more extra column at our accounts section.\n• Speaker 1\n  - # Speaker 1\n\nYou may now see some very strange package automatically created.\n  - And system does not allow us to change it.\n• Speaker 1\n  - # Speaker 1\n\nBut you need to know how technically this is done and where it will be finally saved.\n  - And how to for example, turn \nyour system back to its previous step, previous stage.\n• Speaker 1\n  - # Speaker 1\n\nNow I should pay your so I attract your attention that we will finally receive new package.\n  - Our customization will be \nsaved as a special type of item into this new package.\n• Speaker 1\n  - # Speaker 1\n\nYes, it's saved correctly.\n  - So everything's good.\n• Speaker 1\n  - # Speaker 1\n\nAnd once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it.\n  - And such items are not so easy.\n• Speaker 1\n  - # Speaker 1\n\nLet's open it.\n  - Maybe we'll understand it better when we open it.\n• Speaker 1\n  - # Speaker 1\n\nParent object is account and replacing object code is absolutely the same.\n  - This is important rule of creature \narchitecture.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes.\n  - So I think that this editor should not \nallow you to modify code in case if you work with replace an object.\n• Speaker 1\n  - # Speaker 1\n\nAnd in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range.\n  - For example, if original type was text 200, then potentially you can extend it to text 500.\n• Speaker 1\n  - # Speaker 1\n\nSo we cannot rename inherited columns.\n  - We can only change its title.\n• Speaker 1\n  - # Speaker 1\n\nIn total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases.\n  - You can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only.\n• Speaker 1\n  - # Speaker 1\n\nThis can be done.\n  - You can see it clearly if you go to configuration section.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 213 ---\n\nBut then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently.\n  - So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it.\n• Speaker 1\n  - # Speaker 1\n\nSo if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles.\n  - Final structure of account is formed by its origin plus all the replacements.\n• Speaker 1\n  - # Speaker 1\n\nReplacing object uses existing table and adds new columns there.\n  - If you will remove replacing object from your \nsystem logically your new column will disappear physically.\n• Speaker 1\n  - # Speaker 1\n\nAnd Adrian is asking very interesting question which I plan to move on here.\n  - So you work with some account page \nand you would like to keep your settings saved in a proper place.\n• Speaker 1\n  - # Speaker 1\n\nBy default system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app.\n  - But obviously you may not want to work with such many packages.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 214 ---\n\nSo your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system?\n  - And the answer is yes, we can manage this.\n• Speaker 1\n  - # Speaker 1\n\nSo you will enable it of course, package installed application and we will provide the same name for our lookup and \ntry to save it.\n  - Okay.\n• Speaker 1\n  - # Speaker 1\n\nWe don't really want this, so we want probably to remove this package at all.\n  - And maybe we would like to use our \nexisting new package which is a dev package.\n• Speaker 1\n  - # Speaker 1\n\nAnd now you see our dev Classic package is connected to this app and we can see properties of this package.\n  - Let's \ncheck.\n• Speaker 1\n  - # Speaker 1\n\nAnd we will continue customization of Customer360 in our classic package.\n  - Andreen, is it what you were asking for?\n• Speaker 1\n  - # Speaker 1\n\nAs you can see, this transfer takes significant time because it looks like system performance performs a lot of\n\n--- Page 215 ---\n\nchecks of items that we process and it makes sure that we have no other connections to this item.\n  - So it does \nsomething like probably some excessive work.\n• Speaker 1\n  - # Speaker 1\n\nNow it's empty.\n  - It should not take a lot of time.\n• Speaker 1\n  - # Speaker 1\n\nOf course, you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool.\n  - If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor.\n• Speaker 1\n  - # Speaker 1\n\nOkay, thank you for all of your active questions.\n  - Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics.\n• Speaker 2\n  - # Speaker 2\n\nHi.\n• Speaker 1\n  - # Speaker 1\n\nYes, hello.\n• Speaker 2\n  - # Speaker 2\n\nI have a. I have a small question I have.\n  - Yeah, so I said we use the two lookups.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 216 ---\n\nOkay.\n• Speaker 2\n  - # Speaker 2\n\nFirst one is for country and second one is for city.\n  - Right?\n• Speaker 1\n  - # Speaker 1\n\nSo what about which lookup you're interested?\n  - Is it the main realty or.\n• Speaker 2\n  - # Speaker 2\n\nYeah, main reality.\n  - We have country and city.\n• Speaker 1\n  - # Speaker 1\n\nDrop down type.\n• Speaker 2\n  - # Speaker 2\n\nNo country and city.\n• Speaker 1\n  - # Speaker 1\n\nThis one.\n  - So I can't hear.\n• Speaker 2\n  - # Speaker 2\n\nYeah, yeah.\n  - So we have a plus icon over there, right?\n• Speaker 1\n  - # Speaker 1\n\nSo you ask about if it's possible to manually create new city for this.\n  - --- Page 217 ---\n• Speaker 2\n  - # Speaker 2\n\nOkay, Can I, can we hide that button?\n  - Disable that button if possible.\n• Speaker 1\n  - # Speaker 1\n\nThis.\n  - Yes, sure you can.\n• Speaker 1\n  - # Speaker 1\n\nAnd you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects.\n  - So you need to get some basic understanding of how classic UI can be managed.\n• Speaker 1\n  - # Speaker 1\n\nOh, I'm not sure because it looks like this is hard coded thing.\n  - So possibly you may find somewhere in CSS value for \nthis color, but it looks like this is an image designed somewhere in the app.\n• Speaker 1\n  - # Speaker 1\n\nYou see the current source, so you may try to replace actual storage of this image and you may design your own and \nthat's how you will finally make corresponding change.\n  - Rakhi, is it clear?\n• Speaker 1\n  - # Speaker 1\n\nSo this is part for core which is not designed to Be changeable by configuration changes.\n  - But if you really want, you \ncan replace files on disk with another ones and that's how you can do this.\n• Speaker 1\n  - # Speaker 1\n\nAnd if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session.\n  - In the current example, current package is not cached, so we may change it without logging out.\n• Speaker 1\n  - # Speaker 1\n\nIf you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache.\n  - So we need to do this restart.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have to be very careful with the code because code will not be able to change if we finish its input.\n  - And that's \nwhy we have to type it correctly from the first attempt.\n• Speaker 1\n  - # Speaker 1\n\nSo I will only change something like a name column.\n  - I will provide some minor change copyable setting, no any other \nsettings.\n• Speaker 1\n  - # Speaker 1\n\nNow we can edit it.\n  - And editing a section is much safer than creating it.\n• Speaker 1\n  - # Speaker 1\n\nToday's Friday and probably tired a bit.\n  - So copyable value type based on existing lookup realty type or Classic UI \nDrop down list block behavior, no redundantly, no hiding titles.\n• Speaker 1\n  - # Speaker 1\n\nBy the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui.\n  - Comment here in their name is comment.\n• Speaker 1\n  - # Speaker 1\n\nWe have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary.\n  - And \nlet's go back keep it simple and save the changes.\n• Speaker 1\n  - # Speaker 1\n\nSo we have much more objects for Classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects.\n  - And we have more tables for this for the database.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's go to another page.\n  - Go to reality Classic page.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 220 ---\n\nSo okay, let it be Paris Ren.\n  - The type is apartment.\n• Speaker 1\n  - # Speaker 1\n\nThis one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package.\n  - So this is important step because such data also should travel to our test and \nproduction.\n• Speaker 1\n  - # Speaker 1\n\nThis one will be about position of a module in Workplace.\n  - Let's check Reality Realty Classic.\n• Speaker 1\n  - # Speaker 1\n\nSo it's also browser dependent and you should check and test it before you advertise this for your customers \nbecause it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this.\n  - So \nsome browsers does not.\n• Speaker 1\n  - # Speaker 1\n\nSo finally we had an example of Classic UI section.\n  - We can set columns for our section list set fields to display in \nClassic UI we have different approach for setting up columns.\n• Speaker 1\n  - # Speaker 1\n\nSo you should save for all users and such default profile will be saved as data item to our package.\n  - You can find it \nhere reload and that's how we can change and transport Classic UI columns setup to test and production.\n• Speaker 1\n  - # Speaker 1\n\nBut we should do the same code here and here.\n  - We should do it very carefully.\n• Speaker 1\n  - # Speaker 1\n\nThat's why we have to do it once again.\n  - Okay, Price type, offer type, maybe comment.\n• Speaker 1\n  - # Speaker 1\n\nIt doesn't represent any useful data for us.\n  - This one is correct data with new client module.\n• Speaker 1\n  - # Speaker 1\n\nThat's why we have a lot of common functionality and no need to implement this functionality each time in each \nseparate section.\n  - So our functionality is now in parent one and all the buttons for classic UI section, like new actions, \nview buttons, grid folders, feature tag, everything is inherited.\n• Speaker 1\n  - # Speaker 1\n\nSo if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually.\n  - And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it.\n• Speaker 1\n  - # Speaker 1\n\nI can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you.\n  - Okay, that's all for today.\n• Speaker 1\n  - # Speaker 1\n\nAs a final step for today, it looks like I unnecessary caused it.\n  - I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number six of our development on Creature Platform Guided Learning.\n  - Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration.\n• Speaker 1\n  - # Speaker 1\n\nBut in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui.\n  - And most development is focused on Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nThen you can create a handler as a function add methods section.\n  - And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data.\n• Speaker 1\n  - # Speaker 1\n\nUnfortunately we don't have any automated procedures for this.\n  - And especially this becomes additionally complex if \nyou have some programmed code in Classic ui.\n• Speaker 1\n  - # Speaker 1\n\nSuch items which have section in their name or page in their name, they usually designed as Classic ui.\n  - If you look at \nthe pages and you see form page or list page, it's a Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 224 ---\n\nAt the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes.\n  - So server side part will remain the same.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be possible to switch.\n  - First of all, I need to tell you about some important settings related to such view.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you system settings and this system setting is called like Freedom use Freedom UI interface.\n  - This \nsetting generally turns on or off this background frame stuff.\n• Speaker 1\n  - # Speaker 1\n\nAnd we can also go to Workplace Management System Designer.\n  - This page go to Workplace System Setup.\n• Speaker 1\n  - # Speaker 1\n\nSo we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections.\n  - It's still supported.\n• Speaker 1\n  - # Speaker 1\n\nFor example, some users are really stick to some Classic UI solutions.\n  - They are not ready to switch to Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nSo this is a page which will be temporary important for you, so it will be not forever for you.\n  - And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it.\n• Speaker 1\n  - # Speaker 1\n\nSo how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way.\n  - So let's go to Settings, then go to Application Hub so we can create new app.\n• Speaker 1\n  - # Speaker 1\n\nWe can compose kind of icon for it.\n  - And we will use this very important feature link to an existing object.\n• Speaker 1\n  - # Speaker 1\n\nIt only uses existing object and then creates several client module.\n  - So I don't expect it to last longer than 20 \nseconds.\n• Speaker 1\n  - # Speaker 1\n\nWe can hide unnecessary columns.\n  - We can add the columns that we need you.\n• Speaker 1\n  - # Speaker 1\n\nI prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools.\n  - So I always want to check what is going on there.\n• Speaker 1\n  - # Speaker 1\n\nForm page is Freedom UI edit page for a section for an object.\n  - And as you can see it has its own properties in our \npackage code title.\n• Speaker 1\n  - # Speaker 1\n\nSo you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it.\n  - Okay, so in \ngeneral it looks like this.\n• Speaker 1\n  - # Speaker 1\n\nThere is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui.\n  - So if such logic exists, you will have to reprogram it Working at code source code part of the client module.\n• Speaker 1\n  - # Speaker 1\n\nThis is a result of some browser cache issues.\n  - Okay, let's cancel this log out, log in, go to Freedom UI section.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 227 ---\n\nNow let's go to Studio Realty Classic and Migration is somewhere at the Antifa world.\n  - I expect to see my sections on \ntheir places.\n• Speaker 1\n  - # Speaker 1\n\nSo you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages.\n  - But having the data stuff the same.\n• Speaker 1\n  - # Speaker 1\n\nSo it's really hard to.\n  - Now we switched to Freedom UI and that's why Classic UI edit page is not working normally.\n• Speaker 1\n  - # Speaker 1\n\nSo finally when you do migration, you will use this help of Application Hub.\n  - You will get new package for your \nmigrated stuff.\n• Speaker 1\n  - # Speaker 1\n\nSo server side part of your migrated stuff will be the same and you just need to check that it still works as expected.\n  - In case of any questions, I would be happy to hear.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 228 ---\n\nYeah, I have a question.\n  - Is realty.\n• Speaker 1\n  - # Speaker 1\n\nCurrently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it.\n  - So \nit's like you have an old PC and new PC and you think about installing some program.\n• Speaker 1\n  - # Speaker 1\n\nBecause in Freedom UI you have in like in several times more available.\n  - No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on.\n• Speaker 2\n  - # Speaker 2\n\nThanks Amelia.\n• Speaker 1\n  - # Speaker 1\n\nThank you Paddy.\n  - Thank you for your question.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have some tools as I showed you that intended to help you with it.\n  - But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have.\n  - Probably so anyone I\n\n--- Page 229 ---\n\nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios.\n• Speaker 1\n  - # Speaker 1\n\nSo probably I have to start that in any package now we see we have some set of items of different types.\n  - So we have \nitems with different types.\n• Speaker 1\n  - # Speaker 1\n\nSo object is a server side item, but its changes are applied easily without need to compile.\n  - So generally C Sharp code \nis not so let's say heavily used for objects and replacing objects.\n• Speaker 1\n  - # Speaker 1\n\nFinally to compile and get executable DLL libraries and then use such libraries at its website.\n  - So C Sharp sources \ndefinitely require compilation.\n• Speaker 1\n  - # Speaker 1\n\nIn general, it's recommended to have as less as possible for code in your processes.\n  - Because processes are \noriginally designed to be a no code tool and possibility to code into it.\n• Speaker 1\n  - # Speaker 1\n\nData is also metadata, not compiled and import.\n  - We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff.\n• Speaker 1\n  - # Speaker 1\n\nSo in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into.\n  - Let me show you what they are turned into DLLs that you can find in Bin folder here.\n• Speaker 1\n  - # Speaker 1\n\nWe will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it.\n  - I \nintentionally avoid making our own C Sharp sources at the beginning.\n• Speaker 1\n  - # Speaker 1\n\nOr maybe it's better to say lookup package installed application.\n  - It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have.\n• Speaker 1\n  - # Speaker 1\n\nI need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system.\n  - And in general business \nprocesses are interpreted.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items.\n  - Okay, let's start.\n• Speaker 1\n  - # Speaker 1\n\nSo my business sense is to make a process which will do some calculation at server side.\n  - And my calculation will \ninclude selecting some data and calculating average price for realty record.\n• Speaker 1\n  - # Speaker 1\n\nIf not just type Minus which means you are only watching and I can do it faster.\n  - Okay, thank you.\n• Speaker 1\n  - # Speaker 1\n\nSo if your process has no incoming flow, it means it's the start of your process.\n  - So take care.\n• Speaker 1\n  - # Speaker 1\n\nIn general, you know that Business Process Editor has two types of items that you can add.\n  - System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side.\n• Speaker 1\n  - # Speaker 1\n\nYou can also consider going to our customization course where my colleagues teach how to manage processes.\n  - So \nwhat my plan is I user.\n• Speaker 1\n  - # Speaker 1\n\nNow you see when you slightly move it then you correctly put it on the flow.\n  - So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly.\n• Speaker 1\n  - # Speaker 1\n\nSo now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method.\n  - It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so I copy and paste this code to the editor.\n  - We can also expand this editor to see like in more comfortable \nways.\n• Speaker 1\n  - # Speaker 1\n\nProbably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou.\n  - Then you can just make corresponding setting and run corresponding methods.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so I will save my code example.\n  - It's not finished yet.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you a bit more examples like apartment in will be an apartment for sale.\n  - Okay.\n• Speaker 1\n  - # Speaker 1\n\nWe need to take into consideration only records with a certain type in order to split apartments from houses.\n  - And \ndefinitely we have to filter data according to offer type splitting sales from rentals.\n• Speaker 1\n  - # Speaker 1\n\nAnd physically how we do this is the C Sharp code written in this editor.\n  - And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so let me explain in general what is happening here.\n  - I plan to operate with creation database.\n• Speaker 1\n  - # Speaker 1\n\nAnother approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model.\n  - So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model.\n• Speaker 1\n  - # Speaker 1\n\nAlso Entity schema query supports caching at server side.\n  - If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient.\n• Speaker 1\n  - # Speaker 1\n\nEntity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database.\n  - It has some arguments when we run its constructor.\n• Speaker 1\n  - # Speaker 1\n\nAlso you may ask me if we type this code like this how we know about present functions, methods properties and so \non.\n  - We have some Academy server side documentation.\n• Speaker 1\n  - # Speaker 1\n\nWe only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here.\n  - So let's look at our reality Object just to match our columns we need to select price and area.\n• Speaker 1\n  - # Speaker 1\n\nSo it's better to always add only columns into your selection which you really need to analyze later.\n  - In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns.\n• Speaker 1\n  - # Speaker 1\n\nBut it's possible you can use this argument as a special column path expression.\n  - Column path may include joins if \nyou use lookup columns of your main entity.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 235 ---\n\nSo we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to.\n  - Or in this case it looks like \nyou select cities and you would like to join all accounts from this city.\n• Speaker 1\n  - # Speaker 1\n\nI plan to get corresponding values for my filters with the help of no code tools.\n  - So I expect to get such values.\n• Speaker 1\n  - # Speaker 1\n\nBecause we know for sure that by default our ESQ filters has end logical connection logical conjunction operator.\n  - That's why we have it without any special setting.\n• Speaker 1\n  - # Speaker 1\n\nSo when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data.\n  - This is getentity collection method, which finally returns \nas some collection.\n• Speaker 1\n  - # Speaker 1\n\nSo generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database.\n  - So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 236 ---\n\nAnd as we get this collection, we have to process it line by line.\n  - So we can use for each statement or there are other \nways to process collection.\n• Speaker 1\n  - # Speaker 1\n\nSo simply speaking, this is the line how we get exact decimal price from our data.\n  - And next line is getting the same \napproach for getting decimal area.\n• Speaker 1\n  - # Speaker 1\n\nCurrently it looks like our code is ready.\n  - We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish.\n• Speaker 1\n  - # Speaker 1\n\nC Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part.\n  - The best way to do this is to use parameters.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type.\n  - So I copy its name \nshow it for you Go to process parameters.\n• Speaker 1\n  - # Speaker 1\n\nSo creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal.\n  - So add decimal parameter and I will do it like this.\n• Speaker 1\n  - # Speaker 1\n\nSo my plan is to Use as much as possible of no code here.\n  - And for example we can select a source certain record or \nwe can open certain page.\n• Speaker 1\n  - # Speaker 1\n\nIt will be also unique identifier so we can call it realty ID parameter and here its title will be reality id.\n  - Title is \nimportant for user display and code is important for programming.\n• Speaker 1\n  - # Speaker 1\n\nWhat we will do with this id, I will use a bit of no code tools.\n  - Read read data item carefully placing it on my diagram.\n• Speaker 1\n  - # Speaker 1\n\nThis filter will be enough to make read data to select just single record from my database and we can name it read \nreality.\n  - Read reality will be its title and it will be also shown here.\n• Speaker 1\n  - # Speaker 1\n\nWe are interested in type and offer type.\n  - So originally we expect to get only ID of the certain reality record.\n• Speaker 1\n  - # Speaker 1\n\nSo we will use getting data from read data into process level parameters and we can do it easily with formula.\n  - Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to.\n• Speaker 1\n  - # Speaker 1\n\nMy process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id.\n  - So parameter target parameter is offer type ID and form of value takes data \nfrom process elements.\n• Speaker 1\n  - # Speaker 1\n\nSo if anything should be shown or explained, tell me please if it's not clear what we are doing also please ask thanks, \nBetty.\n  - Thanks Monica.\n• Speaker 1\n  - # Speaker 1\n\nSo Monica, if any assistance needed, just tell me that we know.\n  - Now.\n• Speaker 1\n  - # Speaker 1\n\nYou saw dotnet Xeno you see.\n  - So here we have parts of.\n• Speaker 1\n  - # Speaker 1\n\nSo now you see our realty package has initial setting compiled into a separate smart.\n  - This option means that our\n\n--- Page 239 ---\n\ncontents that we did design in our.\n• Speaker 1\n  - # Speaker 1\n\nThen we have method inside of it and you can see oh, this method is a constructor.\n  - Okay, not so interesting.\n• Speaker 1\n  - # Speaker 1\n\nBut until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code.\n  - But you may just trust me that finally this code includes business logic and our class stuff here.\n• Speaker 1\n  - # Speaker 1\n\nSo we have this set of C files and bin folder here turns into this DLL.\n  - So now you see 11 megabytes of executable \ncode, which is quite a lot.\n• Speaker 1\n  - # Speaker 1\n\nYes, I understand this idea, but I Do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value.\n  - So possibly we \ncan do this.\n• Speaker 1\n  - # Speaker 1\n\nWith this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed.\n  - And so I think that our example will lack obviousness and lack visibility of what is going \non.\n• Speaker 2\n  - # Speaker 2\n\nI have a quick question about the.\n• Speaker 1\n  - # Speaker 1\n\nDLLs, if that's okay.\n  - I do.\n• Speaker 2\n  - # Speaker 2\n\nIs it possible when we're creating them this way that we can call other DLLs maybe outside of this package?\n• Speaker 1\n  - # Speaker 1\n\nOkay, we can.\n  - Sure it's possible.\n• Speaker 1\n  - # Speaker 1\n\nAnd this will be normally compiled and executed.\n  - So it's quite common thing how you can add other libraries and \nnamespaces with usings and these usings will form into Let me show you pkg configuration pkg Then your package, \nthen your source automatically generated source.\n• Speaker 1\n  - # Speaker 1\n\nBut in real life when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally.\n  - Please note if your system is saved in a state, that means you \nhave compilation errors.\n• Speaker 1\n  - # Speaker 1\n\nAnd you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors.\n  - So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully.\n• Speaker 1\n  - # Speaker 1\n\nI understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more.\n  - So \nthis is our page design.\n• Speaker 1\n  - # Speaker 1\n\nThis will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price.\n  - And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument.\n• Speaker 1\n  - # Speaker 1\n\nIn previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff.\n  - So realty will be recipient of our ID of currently edited record.\n• Speaker 1\n  - # Speaker 1\n\nWe can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do.\n  - Let's go back to actions list and we can check how it \nworks.\n• Speaker 1\n  - # Speaker 1\n\nSo let's make one more bulk action like cultivate average price Our action will be again run process where.\n  - Oh, it's my \nfault, I do it incorrectly.\n• Speaker 1\n  - # Speaker 1\n\nLet's just start to test it.\n  - So we can close the editor.\n• Speaker 1\n  - # Speaker 1\n\nSort by date of start.\n  - Read set formulas, calculation finish.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so this one is our list Selected data Calculate average price successfully started.\n  - I expect to run only one \ninstance of a process here.\n• Speaker 1\n  - # Speaker 1\n\nBut in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations.\n  - I just wanted you to see how we can run this calculation for \nmultiple scenarios.\n• Speaker 1\n  - # Speaker 1\n\nYou see start and end date is status.\n  - We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance.\n• Speaker 2\n  - # Speaker 2\n\nI have a quick question, if that's okay.\n• Speaker 1\n  - # Speaker 1\n\nYes, yes, please.\n• Speaker 2\n  - # Speaker 2\n\nIt's just about business processes.\n  - So at the moment we're tying them to.\n• Speaker 1\n  - # Speaker 1\n\nIt's possible, sure.\n  - But I try to keep it simple and use it as possible of no code.\n• Speaker 2\n  - # Speaker 2\n\nI understand.\n• Speaker 1\n  - # Speaker 1\n\nI'm just curious manually.\n  - But yes.\n• Speaker 1\n  - # Speaker 1\n\nSo you can do it in much more complicated way and trying to keep it simple.\n  - Because we are studying.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 244 ---\n\nThanks a million.\n• Speaker 1\n  - # Speaker 1\n\nThank you.\n  - See you soon.\n• Speaker 1\n  - # Speaker 1\n\nForeign number seven and today we will continue study of our server side of creation and we will continue to do our \ndevelopment.\n  - And let me show you where we finished at during our last yesterday's example.\n• Speaker 1\n  - # Speaker 1\n\nProcess Library on the top position here.\n  - This is a special section also available in Studio Workplace.\n• Speaker 1\n  - # Speaker 1\n\nAnd this tracing will help us to keep parameters values.\n  - We will be able to check how parameters are changed \nthrough process steps.\n• Speaker 1\n  - # Speaker 1\n\nOur process is active and it's also possible to deactivate it.\n  - So if you don't like some process, for example you have \nsome base product functionality that you really don't like, you want to stop it, you can deactivate any process you \nhave in your system.\n• Speaker 1\n  - # Speaker 1\n\nBut while you are developing it will be not ready for end users and you still want to save some intermediate progress.\n  - Once you start to develop version two, you still keep version one as actual.\n• Speaker 1\n  - # Speaker 1\n\nSo managing of processes versions is good if you develop directly on production, but if you have a separate \ndeveloper environment, if you have separate test environment and so on, it probably will additional difficulties for \nyou.\n  - And that's why I prefer not to enable this versioning or processes.\n• Speaker 1\n  - # Speaker 1\n\nYou should take care and save some items as exported metadata here, then recover it.\n  - So it's something that looks \nlike unnecessary difficulty.\n• Speaker 1\n  - # Speaker 1\n\nAnd compared to what functions and what features it shows us.\n  - So usually we sacrifice a bit of performance here \nand enable this trace in case.\n• Speaker 1\n  - # Speaker 1\n\nTrace data can be extremely helpful because it helps us to see our input parameter data which we had at the \nbeginning of the process.\n  - Then we have parameter values of selected item.\n• Speaker 1\n  - # Speaker 1\n\nSo let's display duration in milliseconds.\n  - This works good for system actions.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 247 ---\n\nAnd also we can set duration in minutes just to see some processes which were executed.\n  - Quite slow.\n• Speaker 1\n  - # Speaker 1\n\nSo you can see what items are fast and what items are slow in this list.\n  - Even in case of such numbers will be not \nreally representative.\n• Speaker 1\n  - # Speaker 1\n\nNow you see second execution in even though it processed more records, but it was faster because of so called \nwarm up effect.\n  - First time when you start process system takes a lot of resources to deploy process engine service \nin memory to organize and allocate all necessary class instances.\n• Speaker 1\n  - # Speaker 1\n\nAnd you still see that formulas are quite fast and takes almost no time.\n  - So that's how you can analyze performance \nof your processes.\n• Speaker 1\n  - # Speaker 1\n\nYou will exactly and easily and clearly see what items take the most of system resources and you may think of how \nto improve it.\n  - Okay, so that's how you can in general check your process execution and analyze its speed.\n• Speaker 1\n  - # Speaker 1\n\nIt is generated by creatio and then used by compilation.\n  - So this class is saved on disk.\n• Speaker 1\n  - # Speaker 1\n\nHere, this is Microsoft Visual Studio.\n  - I installed it recently.\n• Speaker 1\n  - # Speaker 1\n\nAfter you install Microsoft Visual Studio Community Edition, you need to perform some settings into it.\n  - If you do not \nperform such settings, if you skip this step, you will not be able to debug.\n• Speaker 1\n  - # Speaker 1\n\nThis is important.\n  - Just my code was originally on.\n• Speaker 1\n  - # Speaker 1\n\nThis is about development tools external IDE basics.\n  - Scroll down till we find Visual Studio screenshots here and \ncopy links.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 249 ---\n\nOf course we will not modify it, we only open it.\n  - Visual Studio will create automatically generated solution for this.\n• Speaker 1\n  - # Speaker 1\n\nSo this is the way how you can select the proper worker process.\n  - W3WP .\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to restart application button.\n  - This button appears as a result of installation of maintenance tools from \nMarketplace.\n• Speaker 1\n  - # Speaker 1\n\nIf we will run corresponding business process.\n  - Okay, let's calculate average for apartments for sale.\n• Speaker 1\n  - # Speaker 1\n\nBecause you need access to file system, you need Visual Studio to attach to your worker process.\n  - So this type of \ndebugging can only be performed in local environment conditions.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 250 ---\n\nNow you see SQL text changed.\n  - We can view it.\n• Speaker 1\n  - # Speaker 1\n\nThen we run the most important line in this code.\n  - This is for getting collection data.\n• Speaker 1\n  - # Speaker 1\n\nSo let me spend a minute on this C Sharp script task has options to inform process engine about is it successful \nexecution or not?\n  - In case if your script task finishes with return true, it means that process engine is ready to \nexecute next step immediately and no errors detected.\n• Speaker 1\n  - # Speaker 1\n\nBut also it will tell to the client side some exception text.\n  - And that's how you can provide some reason for stopping \nof your process.\n• Speaker 1\n  - # Speaker 1\n\nAnd as you can see, our read data executed more or less according to expectations.\n  - But our coded part took \nenormous time of six minutes because of our debugging session.\n• Speaker 1\n  - # Speaker 1\n\nSo you may ask about is it possible to debug no code items?\n  - Unfortunately no.\n• Speaker 1\n  - # Speaker 1\n\nOh yeah, it's already finished here.\n  - So just my fault.\n• Speaker 1\n  - # Speaker 1\n\nSo you can see that all of your execution or your processes is tracked and also you can handle and check process \nparameters.\n  - Unfortunately this trace data is not shown for any item.\n• Speaker 1\n  - # Speaker 1\n\nSo now we have process which only calculates data and saves its results into page into process parameters.\n  - We can \nuse some items to make a good looking display of such data and I plan to user actions for this.\n• Speaker 1\n  - # Speaker 1\n\nOkay.\n  - The most important is not to change the code in C sharp part.\n• Speaker 1\n  - # Speaker 1\n\nSo open edit page can only show you pages connected with existing objects and pre configured page can show you \nany random page designed in your system.\n  - So let's use this option reconfigure a page and carefully put it on the \ndiagram.\n• Speaker 1\n  - # Speaker 1\n\nI think one of the most recommended features for this task.\n  - Pre configured page will show some page for user at \nuser browser which page to open.\n• Speaker 1\n  - # Speaker 1\n\nOf course this is too big page for our purpose.\n  - But this is a simple example.\n• Speaker 1\n  - # Speaker 1\n\nAnd as this is an output value, I do not want user to modify this.\n  - So I'll make it read only.\n• Speaker 1\n  - # Speaker 1\n\nYou see very rich possibilities to build your page.\n  - In my case, SQL text will be also read only because this is only for \ndata output.\n• Speaker 1\n  - # Speaker 1\n\nSo I will use something like average price output page and we can also use the same title just to make it good \nlooking at our configuration section.\n  - So it will be named and coded properly.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 253 ---\n\nThere are other options like someone's manager or a role some member from a role.\n  - In my case, user is like simple \nand easy because server side will detect exact user session based on the contact value we provide here.\n• Speaker 1\n  - # Speaker 1\n\nOkay, show page automatically means that once this item will be executed page appears immediately you can hide \nit.\n  - So do not show page automatically.\n• Speaker 1\n  - # Speaker 1\n\nIt's important to understand that when some page is shown for a user as a business process item, then this page \nwill wait for a time user decision.\n  - So page will decide when its work is done.\n• Speaker 1\n  - # Speaker 1\n\nAnd such options are important to specify how we plan to continue our execution.\n  - Okay, at the end this item has \nparameters page parameters.\n• Speaker 1\n  - # Speaker 1\n\nSo this is important for you to understand that data will go from process parameters to our page parameters.\n  - Now \nwe set SQL text parameter and then average price for the page.\n• Speaker 1\n  - # Speaker 1\n\nSo if you do not save, your progress is only in your browser and will not work until you save it.\n  - So it's obvious I think.\n• Speaker 1\n  - # Speaker 1\n\nSo you didn't finish this page, you went to another section, you started to work with different data.\n  - You almost forgot \nabout your process.\n• Speaker 1\n  - # Speaker 1\n\nIt took 1.4 minutes and now you see that most of the time system spent on showing page and waiting for user \nresponse.\n  - Such analyzing of duration may help you to understand how actually your process is used.\n• Speaker 1\n  - # Speaker 1\n\nHere we have calculated offer type and so we have type and offer type input data is here and as a result we have \naverage price and we have SQL text for debugging purpose.\n  - In case if you have any questions feel free to ask \nbecause we almost finished this step and now you see we made a process which is able to show us some data and \nalso I need to explain you some side effects and the side questions.\n• Speaker 1\n  - # Speaker 1\n\nUser can easily go back to the process by looking at notification panel business process tasks show corresponding \npage, save it and that's how the page will be fixed.\n  - I mean the process will be correctly finished.\n• Speaker 1\n  - # Speaker 1\n\nSo user can look at any time even if user accidentally closed the page at all.\n  - User can go anytime here and see what \nprocesses are waiting for the feedback.\n• Speaker 1\n  - # Speaker 1\n\nWe have send email item which will show you some email text before sending it and approval tool which can be \nhelpful in case if you need to automate some kind of approval logic.\n  - When one user creates something and needs \nconfirmation from another user or even set of users that everything is okay.\n• Speaker 1\n  - # Speaker 1\n\nBut our sessions are intended for developers.\n  - That's why we focus on coding.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you three ways to handle object events.\n  - But before it makes sense to download everything to file \nsystem to commit it to version control.\n• Speaker 1\n  - # Speaker 1\n\nWe have three different ways to handle events at creation objects.\n  - Let me show you free handle handling object \nevents.\n• Speaker 1\n  - # Speaker 1\n\nSo we insert a new reality record into our data model.\n  - And if we do the such insert, we want to create several realty \nvisits automatically.\n• Speaker 1\n  - # Speaker 1\n\nSo go to settings and you see target package is dev classic.\n  - So you should change it for usr realty.\n• Speaker 1\n  - # Speaker 1\n\nSo it looks like here we have something artificially created, possibly used for future customizations of some apps, \nbut we don't have it now.\n  - Okay, so we will select only one package here and our code will be USR2 Add Reality Visits \nprocess.\n• Speaker 1\n  - # Speaker 1\n\nTechnically you can use custom programmed signal, but object signal is the most commonly used and we have to \nspecify object which we want to listen for our event handling.\n  - Of course, this is our reality hidden UI object, this one.\n• Speaker 1\n  - # Speaker 1\n\nBut for added and modified it's definitely after add and after modification because when we do selection from the \ndatabase, it shows that data was already added or modified.\n  - So in my case I plan to handle insert event.\n• Speaker 1\n  - # Speaker 1\n\nIf you run your process with no background option, it means that from user point of view, insert or update will take \nsome time plus time for running of your process because it will Be started at the same scope at the same thread.\n  - So \nwithout background perceived speed of your solution will be not so perfect.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 257 ---\n\nWe can name this signal realty added which means that once the signal is triggered, it means that some new record \nwas added.\n  - Okay, so we can start the process with the help of signal.\n• Speaker 1\n  - # Speaker 1\n\nTo insert a visit we need parent realty and some additional columns.\n  - So let me use add data item which object to \nadd data of course to the visit.\n• Speaker 1\n  - # Speaker 1\n\nOkay, and visit date and time can be something like current date and time and then we can go to formula.\n  - So for \nexample, we can add some days, add days and let it be just one day forward.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you go to realty section, try to copy data, save it, look at it.\n  - Now you see new visit was automatically \nadded.\n• Speaker 1\n  - # Speaker 1\n\nMonica and possibly Paddy, are you following me today?\n  - Should I make poses for you?\n• Speaker 1\n  - # Speaker 1\n\n--- Page 258 ---\n\nThis condition will include double click on n parameter then comparison greater than zero.\n  - So if this boolean \nexpression is true, then my conditional flow will work and will be used here otherwise.\n• Speaker 1\n  - # Speaker 1\n\nSo while n is greater than zero, we go back, we do one more insert and then we go back to this formula and \ndecrease N Again here we have N equals to zero.\n  - This is just a title, but it will show us that it's the end.\n• Speaker 1\n  - # Speaker 1\n\nOnce I save it, this process is already actual.\n  - So I do not need to start it with a special button.\n• Speaker 1\n  - # Speaker 1\n\nSo execution diagram sometimes may help you to understand how exactly your process started, how it worked.\n  - And \nthis can be helpful if you go to process work details.\n• Speaker 1\n  - # Speaker 1\n\nWhen I say about low speed, you see point two second.\n  - It means 200 millisecond for execution.\n• Speaker 1\n  - # Speaker 1\n\nAnd once you start to use it, for example before insert you see system generated some code, we can copy it.\n  - Then \nwe can look at open process button.\n• Speaker 1\n  - # Speaker 1\n\nSo with your current entity with its data row, you can use entity methods for it.\n  - But there is a very strong \ndisadvantage of using this approach in general, and this disadvantage is quite serious.\n• Speaker 1\n  - # Speaker 1\n\nCrtui let's check or maybe base something.\n  - CRT core base package.\n• Speaker 1\n  - # Speaker 1\n\nSorry, quite obvious.\n  - So methods include Decoration of the class fully and including methods that you need here.\n• Speaker 1\n  - # Speaker 1\n\nThe answer is third answer is Object events layer the most, let's say the most modern and like the most \nrecommended way to handle object events.\n  - It also still needs coding.\n• Speaker 1\n  - # Speaker 1\n\nAnd also we have very interesting and unusual event called saving before and after save.\n  - But what is save?\n• Speaker 1\n  - # Speaker 1\n\nThank you.\n  - So here we have a set of events for creating record, set of events for updating and obviously for delete.\n• Speaker 1\n  - # Speaker 1\n\nSo we can listen any existing system object, no matter how far it is developed inside of our package hierarchy.\n  - This \napproach does not care about package dependencies at all.\n• Speaker 1\n  - # Speaker 1\n\nAnd it's important to mention that this kind of event handling will be performed as well at server side.\n  - So no matter \nhow technically this insert will happen.\n• Speaker 1\n  - # Speaker 1\n\nSo okay, it's not correct too much.\n  - Yeah, you see we have some limitation here.\n• Speaker 1\n  - # Speaker 1\n\nSo let's do this, select our package add source code.\n  - This is a special type of item which is designed to provide a \npure source of a C Sharp which we can develop inside of creature.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 261 ---\n\nOr we can make a hack now trying to edit data in our list utilizing our editable list features.\n  - And when you see that if \nwe have no any event handling and we did not care about the handle, by the way, we don't have any no code options \nso far to make a custom handling of list edit events.\n• Speaker 1\n  - # Speaker 1\n\nThis is only for page and it's limited on the page.\n  - So if data comes some other way not from your page.\n• Speaker 1\n  - # Speaker 1\n\nI'm too lazy to compose a different title, so I will make the same title because it's technical thing.\n  - No one will be \nselecting it from any list.\n• Speaker 1\n  - # Speaker 1\n\nWe will finish probably in 10 minutes, so it's not so hard.\n  - Thank you for your time.\n• Speaker 1\n  - # Speaker 1\n\nThat's why having a friendly name is important because it will be good looking at our disk and also at our version \ncontrol.\n  - So here we see some bit of metadata.\n• Speaker 1\n  - # Speaker 1\n\nSo inside of a package folder we have files and we have csproj file.\n  - This project file was generated by creatio.\n• Speaker 1\n  - # Speaker 1\n\nAnd then I have to open this C Sharp project file CSProj open it.\n  - Studio will think for a couple of seconds, but it will be \nstill very quick.\n• Speaker 1\n  - # Speaker 1\n\nSo if we can find this C sharp file C sharp code of course, I already created an example, it will not take too much \ntime.\n  - Entity event listener so my code is ready.\n• Speaker 1\n  - # Speaker 1\n\nSo this is quite powerful editor with intellisense and Autocomplete we have to perform a class with couple of usings \nand inside of some namespace.\n  - There is a tradition to keep your configuration code into terrasoft configuration \nnamespace.\n• Speaker 1\n  - # Speaker 1\n\nSo this line number seven is very important because it shows what object we plan to listen.\n  - Very important.\n• Speaker 1\n  - # Speaker 1\n\nAccording to our documentation we have some arguments here and for before events we have reference to our data \nrecord which is an instance of an entity class and also we have some before arguments.\n  - Such arguments are quite \ninteresting and important.\n• Speaker 1\n  - # Speaker 1\n\nSo for example, if user tries to add new data and provides too big price then system says okay, no error messages.\n  - But when user will start to check it will turn out that corresponding record was not inserted or updated.\n• Speaker 1\n  - # Speaker 1\n\nWe already saved our code, open it from embedded editor and we can create localizable strings and our code is \nvalues too big.\n  - We use this localizable code and our localizable text message is here.\n• Speaker 1\n  - # Speaker 1\n\nAnd user will see that operation was not done and there is a reason why it failed.\n  - So we will see this error message.\n• Speaker 1\n  - # Speaker 1\n\nWe can compile our package the first time we have to manually to do this our package and compile action \ncompilation takes some time and first time probably it will take maybe 30 or 40 seconds.\n  - Next time for the same \npackage it may take just 10 or 20 seconds.\n• Speaker 1\n  - # Speaker 1\n\nSo we have definitely greater than 1 billion.\n  - So our logic, our comparison condition here checks.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 264 ---\n\nSo it will show me some error message now because can also enable browser developer console control shift I in \norder to make so and go to network tab in order to see all text or requests that will happen here.\n  - So this value is \ndefinitely greater than 1 billion.\n• Speaker 1\n  - # Speaker 1\n\nEverything is quite obvious that something is wrong.\n  - So we can fix our data.\n• Speaker 1\n  - # Speaker 1\n\nSo you see we cancel such attempt only if we will edit it in a value that is below our limit.\n  - Then we can save it and \nupdate will work normally.\n• Speaker 1\n  - # Speaker 1\n\nSave everything to file system because we had changes at our localizable strings business processes.\n  - So save \neverything and then committed to version control.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number eight of our development on Creature Platform Guided Learning and we will continue to \nwork with server side features and functionality.\n  - So today we will focus on the web services, making our own \nclasses at creation server side and make it work at the web service, write C Sharp code and practice with calling of \nweb services from Creature client side and from third party applications.\n• Speaker 1\n  - # Speaker 1\n\nSo when you look at your network tab, for example, when you open any record page, you see plenty of different web \nservice requests, different HTTP calls that were executed from server side.\n  - So from client side to the server side \nwith different request body with different responses and in general all our website operation is set of different \nqueries, different HTTP requests and then getting some responses at client side.\n• Speaker 1\n  - # Speaker 1\n\nSo client side definitely is not the place where you would like to perform some sensitive data operations or \ncalculations.\n  - So server side is a very natural place to do some complicated business logic like doing some \ncalculations, data processing, file processing and so on.\n• Speaker 1\n  - # Speaker 1\n\nUsually it's written in C Sharp and today I plan to explain how you can create your own web service, how you can \nmake it run and how it can be useful for you.\n  - So we have a lot of existing examples, but the most important you need \nto remember that web service is a special piece of functionality that was specially designed to be called from client \nside.\n• Speaker 1\n  - # Speaker 1\n\nSo in general web service is something that we can call from client side which works at server side, usually gets \nsome argument data, usually returns some result data and also makes some useful work etc.\n  - Side and that's why we \nneed it.\n• Speaker 1\n  - # Speaker 1\n\nIs it a freedom user interface or if it's a classic UI so you can use web services?\n  - Absolutely the same because server \nside is on the single item and requests and payload and response data will be parsed and will be processed \nabsolutely the same way.\n• Speaker 1\n  - # Speaker 1\n\nIf you randomly select then you probably will face unnecessary complex examples which will be hard to use it for \ntraining purpose for your study.\n  - So that's why I recommend you to use couple of very useful and simple examples.\n• Speaker 1\n  - # Speaker 1\n\nSo it means that contents of this package will be compiled in all terasoft configuration sln and you will have terse of \nconfiguration DLL as A result.\n  - Okay, so this is a simple C Sharp code as I told you at the beginning, just expected but \nthat creation developer has some experience in C, in JavaScript and also in SQL scripting.\n• Speaker 1\n  - # Speaker 1\n\nWe use set of standard base platform and system namespaces that are necessary to declare our class to use some \nof functions that we need inside of it.\n  - And mainly all these stuff is made possible thanks to system service model \nnamespace and I need to say that creatio uses.\n• Speaker 1\n  - # Speaker 1\n\nAnd then inside of this class you should make at least one method to turn it into endpoint something that we can \ncall and this endpoint must be decorated method.\n  - This method must be decorated with operation contract attribute \nand some additional web invoke attribute.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 267 ---\n\nSo after compilation this web service will be fully operational and it will be ready for calls that will be done from \nclient side.\n  - It could be done from creation client side or even from third party applications client side.\n• Speaker 1\n  - # Speaker 1\n\nAlso we will have some business logic functionality that also can include access to database, operating with some \nfiles, running other web services and so on.\n  - So we can use some useful method body.\n• Speaker 1\n  - # Speaker 1\n\nBut it can happen that you will need more complicated arguments like structures like instance of classes, objects \nand so on, and you may need to return some complex responses and complex result data.\n  - As example, you can see \nwhen we run some query at our creation list page, you see some request and response which usually includes a lot \nof properties, a lot of different values.\n• Speaker 1\n  - # Speaker 1\n\nWhy I'm saying about serializing because server side will be a dll, a library with a runtime code which will be capable \nto operate with some data with a certain data type.\n  - When client side calls a web service, it usually packs so parses, \nmaybe encodes your arguments into a string.\n• Speaker 1\n  - # Speaker 1\n\nThe same task will happen when server side already finished execution of a method and needs to return some data.\n  - So server side returned data also represents some class with some properties, and then it's necessary to serialize it \nback into a string because originally HTTP query will transport some string for you as result.\n• Speaker 1\n  - # Speaker 1\n\nVisa data service web service is a good example of a web service which is designed to get some arguments and\n\n--- Page 268 ---\n\nreturn some results using complex data type.\n  - In this example, Request options is a complex argument that is \nprovided as an argument for your method.\n• Speaker 1\n  - # Speaker 1\n\nAnd if you need it, so you have a lot of examples how to do this.\n  - You have samples in Creature, you can easily open it \nand find it.\n• Speaker 1\n  - # Speaker 1\n\nNow I will show you how to make our own web service.\n  - How to use Visual Studio for its development, to make it \nmore efficient and to make possible development of complicated functionality with a powerful editor.\n• Speaker 1\n  - # Speaker 1\n\nSo having this name well spelled is a good idea in general.\n  - So let's call it realty service and we can make the same \ntitle for this source code item saving our package no description and just apply.\n• Speaker 1\n  - # Speaker 1\n\nSo my plan is to create a web service that will work at server side and will be capable to calculate maximum price of \nreality objects filtering them by type and offering type.\n  - This is important because it's not good idea to mix \napartments, houses, parkings and so on.\n• Speaker 1\n  - # Speaker 1\n\nWe can as you can see we have a star here which means not all the items were fully saved on disk.\n  - So let's do this.\n• Speaker 1\n  - # Speaker 1\n\nI strongly recommend you not to modify Anything manually here and C sharp file which we will fill in now with the \nright good looking code.\n  - As usual I prefer to use local environment advantage and one of them is use of file system \nand use of external editors.\n• Speaker 1\n  - # Speaker 1\n\nI already have an example which implements all this logic and that's why probably it makes sense to do it faster.\n  - So \nlet me show you.\n• Speaker 1\n  - # Speaker 1\n\nThere is a tradition of creature developers to name classes which represent web services with the help of service \nsuffix.\n  - So if you do something when you develop C sharp class for the service of it will be do something service.\n• Speaker 1\n  - # Speaker 1\n\nBut thanks to decompilation features of Visual Studio we can see some code from it at least interface part of it.\n  - And \nit has a lot of useful things.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you here you can see examples.\n  - So we have HTTP context usually like this, and this works only for.\n• Speaker 1\n  - # Speaker 1\n\nBut now you should remember that inheriting from base service helps to get user connection and helps to get it \ninitialized properly.\n  - When your method started, your user connection property of your class will be already initialized.\n• Speaker 1\n  - # Speaker 1\n\nSo in general, declaring of support of this interface costs you nothing because you have no methods to implement \nfor it.\n  - But it tells IIS that it can process your web service calls with the fastest possible way.\n• Speaker 1\n  - # Speaker 1\n\nSo now I'm searching through C files which include service contract attribute and I will find approximately 200 web \nservices created out of the box in creatio based studio product.\n  - Okay, 157 files and possibly a bit more web services \ninside because one file may include more than one web service, but in general.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so this is only for better performance.\n  - What we have inside we have some method, but probably I have to start \nwith this.\n• Speaker 1\n  - # Speaker 1\n\nYou can create a lot of other methods in your class and some of them maybe will be decorated with operation \ncontract.\n  - If method is decorated with operation contract it will turn into endpoint.\n• Speaker 1\n  - # Speaker 1\n\nOne of them is very easy get example so this is just an example of a method which will return us okay string and if it, \nif we get it means that our web service is present Normally compiled and fully operational, this method get max \nprice by type id.\n  - So I decided to name this method like this will go to the database and search for realty records with \ncorresponding type offer type and also I plan to make it more universal and to call my service from different \nsections.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why I will use the same selection statement to work with different tables inside of my code.\n  - At the \nbeginning it makes sense to make a very simple check of our arguments and if any of them is empty then we will \nreturn minus one.\n• Speaker 1\n  - # Speaker 1\n\nOkay, we have several arguments, we check it out if they are empty or not and then I will show you another approach \nto get data.\n  - Previously you probably remember we used entity schema query approach to get data.\n• Speaker 1\n  - # Speaker 1\n\nNow I will show you another approach to operate with data which will not use data model at all.\n  - So this is alternative \napproach to operate with data, but of course we need to know source table name.\n• Speaker 1\n  - # Speaker 1\n\nAnd as you can see, no ID suffix at column code.\n  - But when you go to the database.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 272 ---\n\nAnd you should expect exactly the same data columns of your tables.\n  - And in general, when you operate with \ndatabase like this, you must go to the database physically to see corresponding table, corresponding columns, just \nto make sure that all your columns that you work with are present and so they represent what you expect from them.\n• Speaker 1\n  - # Speaker 1\n\nYou can use Visual Studio or Total Commander.\n  - Or in my case I'm using far manager tool inside of JSoft Web folder, \nmaybe even inside of JSOP configuration.\n• Speaker 1\n  - # Speaker 1\n\nAnd sometimes you will notice that use of direct database approach gives you More flexibility and more powerful \ntools than using just entity support and using entity schema clearer method.\n  - So depending on your task you can \nchoose proper tool.\n• Speaker 1\n  - # Speaker 1\n\nAnd also it's important to mention you create class instance and then in order to set it up you use different methods \nlike top method, column method, maybe many times from method makes to run it one time where method is equal \nmethod and a lot of others.\n  - So finally running such methods will configure your class to read corresponding columns \nfrom corresponding tables.\n• Speaker 1\n  - # Speaker 1\n\nIt means get one of the three database connection threads from thread pool from connection pool because \nconnection to database is pooled and you have like set of available threads for it.\n  - Then you take it and this is DB \nexecutor reference and then you run your select statement with the chosen DB executor and finally you will get data \nreader.\n• Speaker 1\n  - # Speaker 1\n\nSo while read returns you true, you can try to get some data and you can put it somewhere in order to analyze in \nfuture.\n  - So this tool is helpful to get data selection with many columns, as many data rows.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's how that's why you need to handle memory yourself.\n  - So when this method was executed, some memory \nwas allocated and in order to properly release it you need to dispose created class instance, you need to dispose the \nSTB executor or you need to use special using operator which will do this dispose automatically when this code \nfinishes its work.\n• Speaker 1\n  - # Speaker 1\n\nSo now you see 1 gigabyte, so 900 megabyte it's more or less okay, but you may see much more memory up to all of \nyour available virtual memory and one it will come to a certain limit.\n  - IIS will suddenly restart your website and you \nwill not know why this happens.\n• Speaker 1\n  - # Speaker 1\n\nBut in my example you may notice that we don't have using protection, we just use execute scalar method which is a \ngeneric method and it accepts expected data type of our result.\n  - And execute scalar is useful in case if you plan to \nread only one data row and you expect to read only one column value there.\n• Speaker 1\n  - # Speaker 1\n\nYou can try to see it would possible to decode scalar async probably no, but let's see, you see decompiled stuff DB \nexecutor you see using yes so first using is already used here ensure special DB executor then internal execute \nscanner sync probably here failover execute and somewhere so you probably may find another using here in this \ndecompiled code.\n  - But you can just trust me that execute scalar performs all code correct operation with memory so \nyou do not need to handle and to care here with additional protection.\n• Speaker 1\n  - # Speaker 1\n\nSo my example here is not only how to organize your web service, but it's also how to operate with the database and \nhow to use alternative data selection approach with some data that we expect to get and return.\n  - I try to make it \nsimple without need to collect many data records with many data columns inside of it.\n• Speaker 1\n  - # Speaker 1\n\nWe get this user connection as a property and this property is ready for use when at the moment when our method \nis called so WCF and our base service class makes all that is necessary to initialize user connection at the moment \nwhen our customer runs this HTTP post method.\n  - By the way, we used post because it's very common for creation.\n• Speaker 1\n  - # Speaker 1\n\nBecause this is very traditional, very typical, difficult to create for creation to use post.\n  - It offers us quite comfortable \nway to handle data.\n• Speaker 1\n  - # Speaker 1\n\nWe can also see our recent reality service item.\n  - It has all this code already, so it was loaded from the file system and \nwe can compile it.\n• Speaker 1\n  - # Speaker 1\n\nSo in my case compilation was successful.\n  - And in case if you have compilation error, you will see a big error page \nwith information about lines of code, type of the error and you will be able to look at it.\n• Speaker 1\n  - # Speaker 1\n\nWe need to get our browser URL copy go to separate tab paste.\n  - So this is my web server address including zero \napplication alias.\n• Speaker 1\n  - # Speaker 1\n\nIn net core we have all the stuff placed in one root folder.\n  - So it's a bit different, but all creature configuration will work \nabsolutely the same.\n• Speaker 1\n  - # Speaker 1\n\nIf you use URI template your method name may be different.\n  - I mean your code URI will be different.\n• Speaker 1\n  - # Speaker 1\n\nSo this is a very easy and quite practical way to check availability of your web service.\n  - For example, if you have \ncompilation issue your web service will not be hosted at creation web server and your query like this will return you \n404not found.\n• Speaker 1\n  - # Speaker 1\n\nSo let's make a 7 minutes coffee break and then we will move on with calls of our web service.\n  - We will make call of \nweb service from creature page and also I will show you to make how to make it from Freedom UI page, from classic \nUI page and from third party applications.\n• Speaker 1\n  - # Speaker 1\n\nAnd now we have to write some code at our creature client side in our browser JavaScript in our browser page \nJavaScript part.\n  - So let me show you.\n• Speaker 1\n  - # Speaker 1\n\nBut okay, I will recover closed page.\n  - This one go to front page.\n• Speaker 1\n  - # Speaker 1\n\nSo and then we have to save this.\n  - Our menu item will appear in actions menu and then we go to its code part.\n• Speaker 1\n  - # Speaker 1\n\nSo this code will be quite big.\n  - I will copy it into parts for you.\n• Speaker 1\n  - # Speaker 1\n\nAnd if you forget about line number one here, your next code samples will not work because you have no these utility \nmodules.\n  - Okay, we have this SDK now and it's time to implement our handler for our menu item.\n• Speaker 1\n  - # Speaker 1\n\nAnd this handler has its own request property.\n  - So it's like handler name.\n• Speaker 1\n  - # Speaker 1\n\nSo we plan to get type from our page, but when we operate with it, we will get an object in JavaScript.\n  - This object \nwill include several properties and if we need ID of selected data record we will look at value property.\n• Speaker 1\n  - # Speaker 1\n\nType represents this attribute name so I have to copy it, find my handler and paste it this one so PDS usr type and \nthere is a unique name for this attribute.\n  - So that's how we will get with await operator we will get our type lookup \nvalue which represents an object and if this object is not empty so it includes something then we will try to get value \nproperty in case if it's empty we will keep it clear so we will not use it.\n• Speaker 1\n  - # Speaker 1\n\nNow we will use our dev kit library in order to get HTTP client service out of it so we can ask SDK to create one and \nthat's how we get this JavaScript class instance in our code.\n  - We have to combine and collect correct viewers URL \nfor our web service.\n• Speaker 1\n  - # Speaker 1\n\nI have to fix it in my code here get max price by type id so it was mistake because I renamed this method recently \nand finally my endpoint URL will be combination of the base URL/method name slash this rest like template part \nthen class name then method name.\n  - Okay great, my endpoint is ready and here you can see some example of brick \nof my endpoint.\n• Speaker 1\n  - # Speaker 1\n\nAnd also I have to fix my code because this one already changed its name so my object is named usr reality.\n  - Okay, \nthis is important part and parameters will be passed as a part of our request HTTP request body.\n• Speaker 1\n  - # Speaker 1\n\nSo you should understand that even if it looks like easy thing and line by line execution, physically it is asynchronous \ncall which means we send request, then browser waits, then we get some response.\n  - Okay, we got response object \nwhich is a JavaScript object instance.\n• Speaker 1\n  - # Speaker 1\n\nIf you plan to perform your own examples of the same then we have to save this carefully because if you have \nmistakes of course you will see it doesn't work.\n  - And also let's remember about our your request name and return\n\n--- Page 278 ---\n\nback to line number 115 or something like this.\n• Speaker 1\n  - # Speaker 1\n\nAnd then we can save it.\n  - Great.\n• Speaker 1\n  - # Speaker 1\n\nThen we have response with some number correctly calculated by our server side and returned and some timing \ninformation.\n  - Now you see it's quite fast execution.\n• Speaker 1\n  - # Speaker 1\n\nSo our Freedom UI page calculation worked well.\n  - In case if you have any questions, please ask.\n• Speaker 1\n  - # Speaker 1\n\nSo now I will show you how to program some buttons in Classic ui.\n  - Go to view and open section wizard.\n• Speaker 1\n  - # Speaker 1\n\nSo in case if you want to call third party application from Creature.\n  - So Creature will initialize this call and do it.\n• Speaker 1\n  - # Speaker 1\n\nYou see this is area and somewhere here just nearby I plan to put some code for a button I need to steal some \nbutton definition from Academy.\n  - So so I will show you how you can find it.\n• Speaker 1\n  - # Speaker 1\n\nOf course I will have to fix it.\n  - I will have to make it look correct.\n• Speaker 1\n  - # Speaker 1\n\nThen I will have row three because I want to put it a bit below Parent name is the same button.\n  - We can call it Run \nweb service button.\n• Speaker 1\n  - # Speaker 1\n\nProbably it was not the best idea because I need to implement method for the button.\n  - I also need to make my in my \nclassic package.\n• Speaker 1\n  - # Speaker 1\n\nSo here is my own run web service button click.\n  - Okay, and also I need to have a callback function here.\n• Speaker 1\n  - # Speaker 1\n\nAnd we need to provide callback method to accept our result because in Classic UI we don't have so fancy stuff like\n\n--- Page 280 ---\n\nawait.\n  - And so it's because of the tools used here.\n• Speaker 1\n  - # Speaker 1\n\nSo it's a value of that enumeration item that we found in our article.\n  - So item type.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we will do some console output and show us returned data.\n  - Okay, finally we can save it.\n• Speaker 1\n  - # Speaker 1\n\nSo perfect time.\n  - Very good speed.\n• Speaker 1\n  - # Speaker 1\n\nPostman is on first position but we have Thunder client.\n  - You may use Advanced Rest client, Rest, Wet Insomnia and \na lot of other names.\n• Speaker 1\n  - # Speaker 1\n\nTry to run this button here.\n  - We can steal all necessary parameters.\n• Speaker 1\n  - # Speaker 1\n\nNow you need to know that if you want to call Creature Services from third party apps, you have to pass \nauthentication.\n  - Creature has different ways of authentication.\n• Speaker 1\n  - # Speaker 1\n\nNo, no, no.\n  - I need to reference for our service.\n• Speaker 1\n  - # Speaker 1\n\nSo what we have here, this is our web server address.\n  - This is our root folder pass to our web service.\n• Speaker 1\n  - # Speaker 1\n\nAnd obviously we will not get full set of cookies.\n  - So we are getting only just one temporary cookie, which is not \nenough, of course.\n• Speaker 1\n  - # Speaker 1\n\nIn this query we already have set of cookies thanks to postman sharing cookies with the same sites.\n  - And then we \ncan run our query.\n• Speaker 1\n  - # Speaker 1\n\nAnd in order to run post queries you have to make a header in post query named BPM CSRF and the value for this \nheader must match the same cookie BPM csrf.\n  - So I take cookie value carefully put it to value of our BPM CSRF \nheader and in this case my calculation is correct.\n• Speaker 1\n  - # Speaker 1\n\nAnd you see original value was 60, which means 60 minutes 1 hour.\n  - I've already changed this timeout to 600 which \nmeans 10 hours.\n• Speaker 1\n  - # Speaker 1\n\nSo in case if you plan to do some integration, of course first you will do authentication, then you Will do some \nintegration steps and also you can check how it goes and you can check current user sessions.\n  - If you go to system \nusers, find your user, go to access rules detail, then sort by start of the session.\n• Speaker 1\n  - # Speaker 1\n\nSo if you do something like this in your database, you will see all user sessions created initialized by any user in your \nsystem.\n  - And you will see session end date, session start date.\n• Speaker 1\n  - # Speaker 1\n\nBecause anonymous web service is simply a back door or kind of place which could be utilized by anyone without \nany credentials.\n  - So potentially making it possible to do some kind of DDoS attack on your website.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 283 ---\n\nBy default it's supervisor, but you can change and this user will be used for this Background Started and created user \nsession used only for system purpose and running anonymous services is also based on this approach.\n  - So if \ninterested in running anonymous web services, here is the article.\n• Speaker 1\n  - # Speaker 1\n\nBut in order to implement anonymous web service, you have to perform a lot of changes in file system, which is not \na problem if you deploy your anonymous service at on site environment, where you have access to file system, but \nwhich will be a trouble if you deploy it in cloud conditions, because you simply cannot modify such files in cloud.\n  - You \nonly can provide manual for support team and ask them, hey guys, please, I need to deploy anonymous web service \nat cloud environment.\n• Speaker 1\n  - # Speaker 1\n\nAnd you may know that we have already a lot of base product anonymous services.\n  - You can find it inner web config \nfile.\n• Speaker 1\n  - # Speaker 1\n\nAnd I will just show you a quick example of a web service which may work anonymously.\n  - The biggest difference is \nthis.\n• Speaker 1\n  - # Speaker 1\n\nDimitri, I have one question, if that's possible.\n  - Yes, yes, please.\n• Speaker 1\n  - # Speaker 1\n\nIt's possible, but I would not recommend you to make such strict restrictions because your end users usually work \nas a team.\n  - And if one created a customer, someone else may need to look at it.\n• Speaker 1\n  - # Speaker 1\n\nSo they will see all the data.\n  - Okay, that's clear.\n• Speaker 1\n  - # Speaker 1\n\nAnd in my practice we had successful examples where two different creation systems were communicating with \neach other using no code call web service tool.\n  - So it's possible.\n• Speaker 1\n  - # Speaker 1\n\nSo let's look at our call again.\n  - Now you see this query, but if you look at headers part you will see that we have \ncookies.\n• Speaker 1\n  - # Speaker 1\n\nIf we will steal all this data and try to make it from another browser without cookies, of course it will fail.\n  - And it was \nshown by postman, we will have 401.\n• Speaker 1\n  - # Speaker 1\n\nAt the end of tomorrow session I'm going to show you Clio tool, explain why you need it, how you can do some \nsystem maintenance with it and how you can organize delivery with help of Clio.\n  - So thank you for your time today \nand see you tomorrow.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number four of our development on Creature Platform Guided learning set of practical sessions \nthat we do for developing different features and functionality that requires some programming on Creature Platform \nand previously we finished with building our own section named Realty and we managed to set up List View, we \nmanaged to make a form page for it, we also added some default values and we.\n• Speaker 2\n  - # Speaker 2\n\nMade some required fields and it was.\n• Speaker 1\n  - # Speaker 1\n\nPretty much easy and we used only.\n• Speaker 2\n  - # Speaker 2\n\nNo code customization tools for this.\n• Speaker 1\n  - # Speaker 1\n\nAlso we managed to make a button which had a custom handler.\n• Speaker 2\n  - # Speaker 2\n\nSo we made a button push me button and this custom handler shows some console output.\n  - We can also display \nsome pop up.\n• Speaker 1\n  - # Speaker 1\n\nMessages and also we can do any kind of JavaScript code behind this button.\n  - Today I will show you a bit.\n• Speaker 2\n  - # Speaker 2\n\nMore complicated examples of how you can.\n  - --- Page 286 ---\n• Speaker 1\n  - # Speaker 1\n\nDo some programming and coding and also we will discuss debugging.\n  - So you will see how it's possible to stop \nexecution of your code and.\n• Speaker 2\n  - # Speaker 2\n\nMake it executed line by line.\n• Speaker 1\n  - # Speaker 1\n\nBy line and to see all the.\n• Speaker 2\n  - # Speaker 2\n\nVariables and to see all the conditions.\n• Speaker 1\n  - # Speaker 1\n\nSo so to make something that you probably get used to do when you operate with any like modern version, modern.\n• Speaker 2\n  - # Speaker 2\n\nDevelopment environment like Visual Studio or other so today question today's session I would.\n• Speaker 1\n  - # Speaker 1\n\nLike to warm up with Simple Question.\n• Speaker 2\n  - # Speaker 2\n\nWhich is about organizing of your sections.\n  - It's probably not so obvious so I.\n• Speaker 1\n  - # Speaker 1\n\nWill tell you all apps it's like Synthetic Workplace which includes all registered sections in one list.\n  - --- Page 287 ---\n• Speaker 2\n  - # Speaker 2\n\nWe have Studio out of the box.\n• Speaker 1\n  - # Speaker 1\n\nWorkplace, we have customer360 because it's a result of loaded contacts and accounts.\n• Speaker 2\n  - # Speaker 2\n\nSo our loaded customer360 app also caused creation of new Workplace.\n  - Such workplaces also can be created, you \ncan manage them and you can put your sections into it.\n• Speaker 1\n  - # Speaker 1\n\nI would like to show you something.\n• Speaker 2\n  - # Speaker 2\n\nThat I think will be useful.\n  - It's about organizing of Workplace for your users and for my developer purpose it will be \nquite often when we will.\n• Speaker 1\n  - # Speaker 1\n\nNeed to switch between our created section.\n• Speaker 2\n  - # Speaker 2\n\nAnd some system sections like Process library, process logs or lookups and system settings.\n• Speaker 1\n  - # Speaker 1\n\nSo I plan simply to put my new Created Reality section into this Studio Workplace.\n  - That will be very easy, but I need \nto demonstrate it.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 288 ---\n\nThen find Workplace Setup.\n  - Workplace Setup helps us to create new workplace or to manage existing workplaces.\n• Speaker 1\n  - # Speaker 1\n\nPresent but not shown even if we are administrators.\n• Speaker 2\n  - # Speaker 2\n\nSo that it's very interesting because it's one of not so many places where.\n• Speaker 1\n  - # Speaker 1\n\nUser permissions Are still matter when we run system under administrator privilege.\n• Speaker 2\n  - # Speaker 2\n\nSo now you can see I see only four workplaces.\n• Speaker 1\n  - # Speaker 1\n\nBut in total it looks like we.\n• Speaker 2\n  - # Speaker 2\n\nHave at least 5.\n  - And productivity workplace seems to not showing anything and not having any permission settings.\n• Speaker 1\n  - # Speaker 1\n\nSo that's probably why we are not seeing it.\n  - Okay, let's go to studio workplace.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 289 ---\n\nWe have set of sections for a workplace.\n  - Also it will be interesting for you to know that sections have positions.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you columns set up for sections list.\n  - We can arrange and add the position column.\n• Speaker 2\n  - # Speaker 2\n\nNow you will understand why I display this position.\n  - Any section in a workplace has its position and position \norganizes order.\n• Speaker 1\n  - # Speaker 1\n\nIf we rearrange such items such sections.\n• Speaker 2\n  - # Speaker 2\n\nPosition will be changed.\n  - And finally your sections will be displayed in a different order.\n• Speaker 1\n  - # Speaker 1\n\nSometimes this order is not so consistent.\n• Speaker 2\n  - # Speaker 2\n\nYou see UI management and message templates, they have the same position.\n• Speaker 1\n  - # Speaker 1\n\nAnd sometimes UI management will be on top.\n• Speaker 2\n  - # Speaker 2\n\nSometimes message templates will be on top.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 290 ---\n\nDepending on how data will be loaded at a certain time.\n  - Because sorting by this position it makes some ambitious \nresult.\n• Speaker 2\n  - # Speaker 2\n\nI plan to add one more section in the list system will show me only sections that are not listed here.\n  - And it's \ninteresting to see here that we have couple of accounts section.\n• Speaker 1\n  - # Speaker 1\n\nIt's very unusual.\n• Speaker 2\n  - # Speaker 2\n\nCouple of calls and couple of contacts.\n  - One of the possible explanation why we.\n• Speaker 1\n  - # Speaker 1\n\nHave two different account section is that.\n• Speaker 2\n  - # Speaker 2\n\nOne of them is section for Classic.\n• Speaker 1\n  - # Speaker 1\n\nUi, another is Freedom UI section.\n  - We can also display columns here which.\n• Speaker 2\n  - # Speaker 2\n\nWill let you understand what we are looking at.\n• Speaker 1\n  - # Speaker 1\n\nSo we can just squeeze a bit title display e.g.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 291 ---\n\nCreated on column save column settings.\n• Speaker 1\n  - # Speaker 1\n\nNow when we try to add you.\n• Speaker 2\n  - # Speaker 2\n\nWill see title, you will see created on and one of them is 19, another is 24.\n• Speaker 1\n  - # Speaker 1\n\nAnd it looks like first one is classic UI, second one which is younger.\n• Speaker 2\n  - # Speaker 2\n\nThis is freedom UI.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can detect which one is necessary for you to add.\n• Speaker 2\n  - # Speaker 2\n\nIn my case, I plan to find realty section created recently and we can see it at the end of this list.\n  - You see, its position \nis also not so consistent.\n• Speaker 1\n  - # Speaker 1\n\nBut it guarantees that it will be at the end.\n• Speaker 2\n  - # Speaker 2\n\nBut it's not so comfortable to see this item at the very end of this list.\n  - So possibly we would like to move it upper.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to do this.\n• Speaker 2\n  - # Speaker 2\n\nYou can move it even on the first top position.\n  - Unfortunately we cannot move it upper than home.\n• Speaker 1\n  - # Speaker 1\n\nIt if you want and realty will be position zero.\n  - So when we save it we can.\n• Speaker 2\n  - # Speaker 2\n\nAlso reward this page.\n• Speaker 1\n  - # Speaker 1\n\nProbably we will see our reality section.\n• Speaker 2\n  - # Speaker 2\n\nDirectly at Studio Workplace at zero position.\n  - But it's also important to say that other items were changed so they \nchanged.\n• Speaker 1\n  - # Speaker 1\n\nTheir position because reality shifted them.\n• Speaker 2\n  - # Speaker 2\n\nSo if we want to transport such change, we must make a corresponding data item.\n• Speaker 1\n  - # Speaker 1\n\nOr we can use help of data binding tool.\n  - --- Page 293 ---\n• Speaker 2\n  - # Speaker 2\n\nThis data binding tool helps us to.\n• Speaker 1\n  - # Speaker 1\n\nRemember positions of O sections here and we can just click Bind Workplace, specify.\n• Speaker 2\n  - # Speaker 2\n\nTarget package and click save.\n  - Then we can see what was created.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we for example try to.\n• Speaker 2\n  - # Speaker 2\n\nActualize data and save it, we will.\n• Speaker 1\n  - # Speaker 1\n\nSee warning and this warning will tell us that such Studio Workplace was already.\n• Speaker 2\n  - # Speaker 2\n\nRegistered somewhere in parent package.\n• Speaker 1\n  - # Speaker 1\n\nAnd even more it was registered one more time in another parent package.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 294 ---\n\nBut it's not a big mistake.\n  - So it's not a mistake at all.\n• Speaker 1\n  - # Speaker 1\n\nSuch data is already present somewhere in parent packages data items.\n  - So maybe we are doing it.\n• Speaker 2\n  - # Speaker 2\n\nIt'S not a mistake.\n  - Another one is sys module in Workplace.\n• Speaker 1\n  - # Speaker 1\n\nSo you can see data and you can see all the sections in Workplace.\n• Speaker 2\n  - # Speaker 2\n\nStudio were listed here.\n  - And also it's important to mention that forced update option must be applied for.\n• Speaker 1\n  - # Speaker 1\n\nPosition column because otherwise update or position.\n• Speaker 2\n  - # Speaker 2\n\nWill be not performed.\n• Speaker 1\n  - # Speaker 1\n\nYou probably remember from our Tuesday session that when you create data items, it's.\n• Speaker 3\n  - # Speaker 3\n\nPossible that you will make data item that will perform update, not an insert.\n  - --- Page 295 ---\n• Speaker 1\n  - # Speaker 1\n\nIn case of update in case of.\n• Speaker 3\n  - # Speaker 3\n\nTarget record was found.\n• Speaker 1\n  - # Speaker 1\n\nBy the way, I prefer to make it not by this key.\n• Speaker 2\n  - # Speaker 2\n\nI prefer to make it by this.\n• Speaker 1\n  - # Speaker 1\n\nKey and found by id.\n• Speaker 3\n  - # Speaker 3\n\nSo if record was found by ID.\n• Speaker 1\n  - # Speaker 1\n\nAnd then it will update target database.\n• Speaker 3\n  - # Speaker 3\n\nAccording to loaded data and in our case only position will be updated.\n  - Okay, we can save it.\n• Speaker 2\n  - # Speaker 2\n\nNow you can see that save was.\n  - --- Page 296 ---\n• Speaker 1\n  - # Speaker 1\n\nSuccessful, but we have a lot of warnings related to parent data that was already registered in base product.\n  - And \nthis is valid set of warnings because our change caused the change of position of all previously registered sections \nin Studio Workplace.\n• Speaker 2\n  - # Speaker 2\n\nHad a warning that tells us that you're trying to Change the data which was originally declared somewhere else.\n• Speaker 1\n  - # Speaker 1\n\nSo maybe you're doing it wrong.\n• Speaker 2\n  - # Speaker 2\n\nSo please take care.\n  - Here is your warning.\n• Speaker 1\n  - # Speaker 1\n\nBut this warning is still so we can ignore this.\n  - And last one is admin unit in workplace.\n• Speaker 2\n  - # Speaker 2\n\nThis is about access permissions.\n  - System administrators have full access to Studio.\n• Speaker 1\n  - # Speaker 1\n\nWorkplace and probably this data is also.\n• Speaker 2\n  - # Speaker 2\n\nPresent in our database.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 297 ---\n\nYes, so maybe not so necessary to save it.\n• Speaker 2\n  - # Speaker 2\n\nSo it's warning, not an error in case if you have an error.\n  - For example, you save the same data twice in the same \npackage.\n• Speaker 1\n  - # Speaker 1\n\nIn this case, save button will show you error message and save button will not disappear.\n  - If save button was \ndisappeared, means your.\n• Speaker 2\n  - # Speaker 2\n\nData item was normally saved.\n• Speaker 1\n  - # Speaker 1\n\nIf save button did not disappear, it means an error.\n  - It's like serious mistake and the system.\n• Speaker 2\n  - # Speaker 2\n\nWill not allow you to save such data.\n  - It happens only when you save the.\n• Speaker 1\n  - # Speaker 1\n\nSame data twice in the same package.\n  - Okay, so it was set of client modules of sorry, set of data items.\n• Speaker 2\n  - # Speaker 2\n\nAutomatically created by help of data binding tool.\n• Speaker 1\n  - # Speaker 1\n\nWhen we registered our reality section in a studio workplace, now we have comfort.\n  - Here is our new created section.\n• Speaker 2\n  - # Speaker 2\n\nHere we have lookups which we also often look at.\n• Speaker 1\n  - # Speaker 1\n\nAnd we'll use it and some other.\n• Speaker 2\n  - # Speaker 2\n\nSystem sections that we may need.\n• Speaker 1\n  - # Speaker 1\n\nSo we now have very comfortable conditions and easy transitions between different sections.\n  - So it was just a \nsimple example how you can organize your workplaces in.\n• Speaker 2\n  - # Speaker 2\n\nMore complicated based products like sales, service and marketing.\n• Speaker 1\n  - # Speaker 1\n\nYou will see more workplaces, more sections inside.\n• Speaker 2\n  - # Speaker 2\n\nAnd you also can create your own workplace with sections that you think will be necessary to use for your end.\n• Speaker 1\n  - # Speaker 1\n\nUsers with particular roles.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 299 ---\n\nAnd you can provide permissions for such.\n• Speaker 1\n  - # Speaker 1\n\nSections and for such workplaces.\n• Speaker 2\n  - # Speaker 2\n\nAnd what is important for you to understand that you can create many different.\n• Speaker 1\n  - # Speaker 1\n\nWorkplaces and include the same section many times.\n  - So if you added some section to some workplace, it doesn't \nmean that you can't do it with another workplace.\n• Speaker 2\n  - # Speaker 2\n\nIn different places with no limitations.\n• Speaker 1\n  - # Speaker 1\n\nIn my case, I have my applications.\n• Speaker 2\n  - # Speaker 2\n\nWorkplace with real T section and I also have.\n• Speaker 1\n  - # Speaker 1\n\nJust a second.\n  - So what I wanted to show you.\n• Speaker 2\n  - # Speaker 2\n\nWe can use the same section in.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 300 ---\n\nDifferent workplaces and it's not a problem if we specify the same section in.\n• Speaker 2\n  - # Speaker 2\n\nDifferent workplaces many times.\n  - So physically this is the same section.\n• Speaker 1\n  - # Speaker 1\n\nThe same data shown in different places.\n  - Just a second.\n• Speaker 2\n  - # Speaker 2\n\nI think will be interesting for you to know.\n  - So let's do something more serious.\n• Speaker 1\n  - # Speaker 1\n\nYou can do some more serious programming.\n• Speaker 2\n  - # Speaker 2\n\nInside of Creature client side page using.\n• Speaker 1\n  - # Speaker 1\n\nSome JavaScript and using creature tools and let's say data platform.\n  - First of all I will explain you some business \nideas.\n• Speaker 2\n  - # Speaker 2\n\nPlan is to show you some recalculations and it could be a good example.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 301 ---\n\nIf we for example create one more column, call it commission.\n  - So it will be our future profit from the deal.\n• Speaker 2\n  - # Speaker 2\n\nAnd also we have to take care.\n• Speaker 1\n  - # Speaker 1\n\nAbout the type offer.\n• Speaker 2\n  - # Speaker 2\n\nSo for sale we have one formula.\n• Speaker 1\n  - # Speaker 1\n\nAnd for rental we will have another formula.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's do it step by step.\n  - So first of all we need new column.\n• Speaker 1\n  - # Speaker 1\n\nNew column can be added to this very easily.\n  - We can just go to modify our page.\n• Speaker 2\n  - # Speaker 2\n\nCarefully dropping it here it will be named Commission.\n  - And as we have a price in.\n• Speaker 1\n  - # Speaker 1\n\nUS dollars, so let it be a commission.\n  - Also in the same currency, the inner column name will be USR.\n• Speaker 2\n  - # Speaker 2\n\nCommission.\n• Speaker 1\n  - # Speaker 1\n\nAnd we confirm such code for this column.\n  - The data format will be decimal with two digits.\n• Speaker 2\n  - # Speaker 2\n\nTo manually change it.\n  - That's why I will set read only.\n• Speaker 1\n  - # Speaker 1\n\nOption on I temporary hide place attachments tab.\n  - So my commission will be read only.\n• Speaker 2\n  - # Speaker 2\n\nAnd also just to make it easier.\n• Speaker 1\n  - # Speaker 1\n\nTo find in div array, I will name its element code so we can type it as we wish Commission USD.\n  - Let it be our element \ncode.\n• Speaker 3\n  - # Speaker 3\n\nThis element code will be used in.\n• Speaker 2\n  - # Speaker 2\n\nView config, div and also physically it.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 303 ---\n\nWill be used for building real page.\n• Speaker 3\n  - # Speaker 3\n\nHTML markup with set of divs inside.\n• Speaker 1\n  - # Speaker 1\n\nAnd this code will be used.\n• Speaker 3\n  - # Speaker 3\n\nTo name set of items and div HTML tags inside of our page.\n• Speaker 1\n  - # Speaker 1\n\nSo element code, it's about physical component.\n• Speaker 2\n  - # Speaker 2\n\nRepresentation on the page.\n• Speaker 1\n  - # Speaker 1\n\nOkay, you already know this and that's all I can just save System will.\n• Speaker 2\n  - # Speaker 2\n\nAutomatically modify our object.\n• Speaker 1\n  - # Speaker 1\n\nIt will save changes to our page code which we can find here if.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 304 ---\n\nWe click open source code.\n  - So now let's just click save and.\n• Speaker 1\n  - # Speaker 1\n\nThat'S probably will be enough for the beginning.\n  - So this change will be made in objects and in our client module.\n• Speaker 2\n  - # Speaker 2\n\nOkay, we can move on.\n• Speaker 1\n  - # Speaker 1\n\nAnd now we can close this page editor.\n  - Go to main page.\n• Speaker 2\n  - # Speaker 2\n\nAs you can see, I did not even reload it.\n• Speaker 1\n  - # Speaker 1\n\nWe can just open it again and.\n• Speaker 2\n  - # Speaker 2\n\nProbably we will immediately see our new column and it's read only.\n• Speaker 1\n  - # Speaker 1\n\nSo you see this lock sign which.\n• Speaker 2\n  - # Speaker 2\n\nTells us that column is read only.\n  - So now we need to think of.\n• Speaker 1\n  - # Speaker 1\n\nImplementing read calculation and it will be.\n• Speaker 3\n  - # Speaker 3\n\nTriggered by change of price.\n  - And also we want to make it.\n• Speaker 1\n  - # Speaker 1\n\nDependent on offer type.\n  - So for the sales offer type it.\n• Speaker 3\n  - # Speaker 3\n\nWill be more or less okay if.\n• Speaker 1\n  - # Speaker 1\n\nWe make commission like 2% from list price from our price of realty shown here.\n  - So to be quite fair and good \nenough commission for our business and for.\n• Speaker 3\n  - # Speaker 3\n\nSales it's totally okay.\n• Speaker 1\n  - # Speaker 1\n\nNow let's create some sample for house for rental.\n• Speaker 3\n  - # Speaker 3\n\nOur rental price will be 1200 bucks.\n• Speaker 1\n  - # Speaker 1\n\nFor some house in Miami.\n  - --- Page 306 ---\n• Speaker 3\n  - # Speaker 3\n\nI'm not sure that can we find.\n• Speaker 1\n  - # Speaker 1\n\nSo cheap houses in Miami for maybe it's not like not in a high.\n• Speaker 3\n  - # Speaker 3\n\nSeason and some area.\n  - And as you can see, commission will be recalculated.\n• Speaker 1\n  - # Speaker 1\n\n50% from monthly payment price if this is a rental.\n• Speaker 3\n  - # Speaker 3\n\nSo for rentals we will have another percentage.\n  - So for sales it will be 1% or 2% value.\n• Speaker 1\n  - # Speaker 1\n\nAnd for rental it will be 50% from price value.\n• Speaker 3\n  - # Speaker 3\n\nSo when we will do some calculation we have to take care about it.\n  - But also you should be mentally ready.\n• Speaker 1\n  - # Speaker 1\n\nThat in real life business it really.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 307 ---\n\nOften happens that such ratios, such formulas.\n• Speaker 1\n  - # Speaker 1\n\nCan be changed from time to time.\n• Speaker 3\n  - # Speaker 3\n\nAnd once we introduce hard coded value like 2% a month later our customer.\n• Speaker 1\n  - # Speaker 1\n\nMay call us and say, you know.\n• Speaker 3\n  - # Speaker 3\n\nNow conditions were changed so we need to modify this percent and now it will be 2.5.\n  - Could you please change it?\n• Speaker 1\n  - # Speaker 1\n\nSo it will be really expensive.\n• Speaker 3\n  - # Speaker 3\n\nTo make such changes.\n• Speaker 1\n  - # Speaker 1\n\nAnd our customer will be not ready.\n• Speaker 3\n  - # Speaker 3\n\nWill be not really happy if we.\n  - --- Page 308 ---\n• Speaker 1\n  - # Speaker 1\n\nAsk for example for half, maybe for a couple of hours of work to be paid.\n  - If we want to change just one number.\n• Speaker 3\n  - # Speaker 3\n\nIdeally customers should be able to change such ratios themselves.\n  - We have several options to do this.\n• Speaker 1\n  - # Speaker 1\n\nTable which will keep necessary percents.\n• Speaker 2\n  - # Speaker 2\n\nOr we can use some system settings for this.\n• Speaker 1\n  - # Speaker 1\n\nOr as you can see, our ratio is really stick to offer type.\n• Speaker 3\n  - # Speaker 3\n\nSo probably we can add new column.\n• Speaker 1\n  - # Speaker 1\n\nTo offer type lookup in order to save one value in percent for sales.\n• Speaker 3\n  - # Speaker 3\n\nAnd another value in percent for rentals.\n  - I will show you how we can do this.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 309 ---\n\nIn this case you can do the same if you.\n  - Oh, I did not save it.\n• Speaker 3\n  - # Speaker 3\n\nGreat.\n  - So if you prefer to focus on application, you can go to Application hub, you may find your realty app, you.\n• Speaker 1\n  - # Speaker 1\n\nMight check your data models and that's.\n• Speaker 3\n  - # Speaker 3\n\nHow you can find corresponding object.\n  - Or you can switch to advanced settings to see all the contents of your \nsolution.\n• Speaker 1\n  - # Speaker 1\n\nSo I just get used to work.\n• Speaker 2\n  - # Speaker 2\n\nWith this configuration section.\n• Speaker 3\n  - # Speaker 3\n\nAlso it has some useful actions like.\n• Speaker 1\n  - # Speaker 1\n\nSave packages to file system.\n  - So that's why I stick to this.\n• Speaker 3\n  - # Speaker 3\n\nApproach and I feel more confident when.\n  - --- Page 310 ---\n• Speaker 1\n  - # Speaker 1\n\nWork here because I have full available.\n• Speaker 3\n  - # Speaker 3\n\nSet of tools to manage my system set my system configuration setup.\n  - So we opened corresponding object, we have \ninheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far.\n• Speaker 2\n  - # Speaker 2\n\nSo for each reality offer type for.\n• Speaker 3\n  - # Speaker 3\n\nRental or sale, we can add one more column to be number.\n  - Maybe we can do it with quite high precision.\n• Speaker 1\n  - # Speaker 1\n\nOkay, two digits after decimal point.\n• Speaker 3\n  - # Speaker 3\n\nWe can call it something like commission percent.\n• Speaker 1\n  - # Speaker 1\n\nSo we can even specify what is.\n• Speaker 3\n  - # Speaker 3\n\nThe available range of our data values here just to make it clear for any user what type of value should be put here.\n  - So if we specify from 0 to 100 it means from 0 to 100%.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 311 ---\n\nAnd it will be clear how to.\n• Speaker 2\n  - # Speaker 2\n\nPut some value here if you want.\n• Speaker 3\n  - # Speaker 3\n\nTo save for example 2%.\n  - One more column is not a big deal, so we can easily add it save and publish.\n• Speaker 1\n  - # Speaker 1\n\nBut after we do this we may.\n• Speaker 3\n  - # Speaker 3\n\nStart to get some additional unexpected difficulties.\n  - Now I will show it.\n• Speaker 1\n  - # Speaker 1\n\nAnd for example lookups.\n• Speaker 3\n  - # Speaker 3\n\nLet's go to reality offer type lookup and let's try to see its data.\n  - Now we have name and description.\n• Speaker 1\n  - # Speaker 1\n\nWith some initial values for calculations.\n  - --- Page 312 ---\n• Speaker 3\n  - # Speaker 3\n\nAnd we agreed that for a sale it will be enough for us to specify 2%.\n  - According to this helpful message, 2% will look \nlike this 2.00, so it means just 2.\n• Speaker 1\n  - # Speaker 1\n\nOffer type object.\n• Speaker 3\n  - # Speaker 3\n\nSo not object data item for this.\n  - Let me find it.\n• Speaker 3\n  - # Speaker 3\n\nIt looks like we still did not need to do any additional steps related.\n• Speaker 1\n  - # Speaker 1\n\nTo adding new column into existing object.\n• Speaker 3\n  - # Speaker 3\n\nBut some of you may start to feel some difficulties and such difficulties are connected with the way how server side \nsystem remembers information about objects.\n  - And unfortunately it may happen that your kind of difficulty which you \nwill finally face will be inability to display data here or inability to use new column a bit later.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 313 ---\n\nSo let's go.\n  - Now we have offer type which also has additional data.\n• Speaker 1\n  - # Speaker 1\n\nThe top where we can easily use such data columns.\n• Speaker 3\n  - # Speaker 3\n\nNow I plan to show you how to get data out from a lookup.\n  - We will use again page editor.\n• Speaker 1\n  - # Speaker 1\n\nSo.\n• Speaker 3\n  - # Speaker 3\n\nNow you will see this trick how we can make data out from existing lookup.\n  - We have new fields here, but if you add \nany it will add new.\n• Speaker 1\n  - # Speaker 1\n\nColumn to your object and it will.\n• Speaker 3\n  - # Speaker 3\n\nAdd a new control to your page.\n  - So such columns I would like to call data fields and data fields represents \nconnection between controls and real life data column of your main object that this page works with.\n• Speaker 1\n  - # Speaker 1\n\nSave data from them or at least.\n  - --- Page 314 ---\n• Speaker 3\n  - # Speaker 3\n\nNot save into main primary object with the standard tools.\n  - So maybe you will save it somewhere somehow else.\n• Speaker 3\n  - # Speaker 3\n\nIt will show us all existing lookup columns in our realty object and then we will find offer type extended and system \nwill show us only suitable on the compatible field which will be you can be used within decimal number control.\n  - This \nis our commission percent so we will select it and here now you will see some changes.\n• Speaker 3\n  - # Speaker 3\n\nSo simply speaking we made read only column that will be automatically loaded each time offer type is set and each \ntime offer type changed or cleared.\n  - Let's save our changes and we will see how it works.\n• Speaker 1\n  - # Speaker 1\n\nA while, tell me please.\n• Speaker 3\n  - # Speaker 3\n\nOkay, Monica, thank you again.\n  - Secret and Rakhi, thank you for mentioning.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 315 ---\n\nWe can read it from the database if we use related objects, if we use offer type and if we display commission \npercent and this commission percent will be obtained from corresponding record from our offer type.\n  - But you see, \nnow we have some troubles.\n• Speaker 3\n  - # Speaker 3\n\nBut if you click there and back to sale now you see this value is okay, save, close, open and still it doesn't work.\n  - So \nwe still have some problem with this additional column.\n• Speaker 1\n  - # Speaker 1\n\nAnd this problem unfortunately cannot be solved.\n• Speaker 2\n  - # Speaker 2\n\nBy logging out and logging in.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you.\n  - I try to log out.\n• Speaker 2\n  - # Speaker 2\n\nMaybe thinking.\n• Speaker 1\n  - # Speaker 1\n\nThere is something like a user session cache issue.\n  - Then I try to log in.\n• Speaker 2\n  - # Speaker 2\n\nWhen you work with client side, it's.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 316 ---\n\nBetter to keep your browser console on.\n• Speaker 2\n  - # Speaker 2\n\nProbably you will see some interesting messages.\n• Speaker 1\n  - # Speaker 1\n\nThere or a lot of red messages.\n• Speaker 2\n  - # Speaker 2\n\nIn case of errors.\n• Speaker 1\n  - # Speaker 1\n\nSo it's important to see it quick.\n• Speaker 2\n  - # Speaker 2\n\nOkay, opening our realty section, ignoring all.\n• Speaker 1\n  - # Speaker 1\n\nWarnings here, open it once again and you see no, it did not help us.\n  - So unfortunately logging out and logging in.\n• Speaker 3\n  - # Speaker 3\n\nDoesn'T help you and the only solution.\n• Speaker 1\n  - # Speaker 1\n\nWhich we can do is restart our app or shut it down and start.\n  - --- Page 317 ---\n• Speaker 3\n  - # Speaker 3\n\nIt again for example with the help of IIS Manager.\n  - But it will take more than minute for us to normally shut down and \nstart.\n• Speaker 1\n  - # Speaker 1\n\nThis is restart our app and we.\n• Speaker 3\n  - # Speaker 3\n\nHave a maintenance tools for this restart application.\n  - This is the only way to quickly fix this issue.\n• Speaker 1\n  - # Speaker 1\n\nNow you see we have some.\n• Speaker 2\n  - # Speaker 2\n\nErrors in browser console, but it looks.\n• Speaker 3\n  - # Speaker 3\n\nLike not very critical.\n• Speaker 1\n  - # Speaker 1\n\nSo now restart is being performed.\n• Speaker 3\n  - # Speaker 3\n\nWe can check what's happening with our memory and with our processes using task manage.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 318 ---\n\nW3WP .\n  - Looks like we have the same worker.\n• Speaker 3\n  - # Speaker 3\n\nProcess, but it has a comment to.\n• Speaker 1\n  - # Speaker 1\n\nRestart so possibly to rewards some of its assemblies.\n• Speaker 2\n  - # Speaker 2\n\nOkay, so we restarted our app.\n• Speaker 1\n  - # Speaker 1\n\nWe go to reality section.\n• Speaker 2\n  - # Speaker 2\n\nNow we already will see the difference.\n• Speaker 1\n  - # Speaker 1\n\nNow you see that commission percent here.\n• Speaker 2\n  - # Speaker 2\n\nWas normally displayed in this list previously it was not normal.\n• Speaker 1\n  - # Speaker 1\n\nAnd if we open any record now.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 319 ---\n\nCommission percent will be fully normally loaded.\n• Speaker 1\n  - # Speaker 1\n\nWhen we just open the page.\n  - So you see commission percent loaded correctly if you take any other value.\n• Speaker 2\n  - # Speaker 2\n\nSo now we fixed it.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why I had to use this add on called maintenance tools for creature.\n• Speaker 2\n  - # Speaker 2\n\nSuch add on helps me easily restart.\n• Speaker 1\n  - # Speaker 1\n\nThe app with just waiting approximately 10 seconds.\n  - And it's much easier than restarting my app by shutting down \nand starting again.\n• Speaker 2\n  - # Speaker 2\n\nMy worker process or recycling worker process.\n• Speaker 1\n  - # Speaker 1\n\nIt's possible, so it will take significantly longer.\n• Speaker 2\n  - # Speaker 2\n\nOkay, so we fixed this question with.\n  - --- Page 320 ---\n• Speaker 1\n  - # Speaker 1\n\nThe commission percent and now.\n• Speaker 3\n  - # Speaker 3\n\nOur task.\n• Speaker 2\n  - # Speaker 2\n\nIs.\n• Speaker 1\n  - # Speaker 1\n\nTo make actual calculation.\n• Speaker 2\n  - # Speaker 2\n\nSo now we can think of how.\n• Speaker 1\n  - # Speaker 1\n\nTo trace changes of price or commission percent.\n• Speaker 2\n  - # Speaker 2\n\nLuckily commission percent will be available for.\n• Speaker 1\n  - # Speaker 1\n\nUs the same as any attribute for a real column.\n• Speaker 2\n  - # Speaker 2\n\nSo commission percent will be also an attribute for us.\n  - --- Page 321 ---\n• Speaker 1\n  - # Speaker 1\n\nSo if this value changes or if.\n• Speaker 2\n  - # Speaker 2\n\nThis value changes, as you can see.\n• Speaker 1\n  - # Speaker 1\n\nIt will be changed in case if you clear in case if you set.\n• Speaker 2\n  - # Speaker 2\n\nSome offer type or if you change to another offer type, commission percent is changed.\n• Speaker 1\n  - # Speaker 1\n\nSo price or commission percent should trigger recalculation of commission.\n• Speaker 2\n  - # Speaker 2\n\nI will show you how we can do this.\n  - Let's go to our configuration section.\n• Speaker 1\n  - # Speaker 1\n\nFind client modules.\n  - We are working with form page.\n• Speaker 2\n  - # Speaker 2\n\nAndrean is asking is it possible to use this add on in a cloud environment?\n• Speaker 1\n  - # Speaker 1\n\n--- Page 322 ---\n\nYes, all creation apps from Marketplace can be installed on cloud systems.\n• Speaker 2\n  - # Speaker 2\n\nAbsolutely the same as you can install it locally.\n  - When you install any add on, you.\n• Speaker 1\n  - # Speaker 1\n\nUse only web interface.\n• Speaker 2\n  - # Speaker 2\n\nSo it will work absolutely the same.\n• Speaker 3\n  - # Speaker 3\n\nLet me show you.\n• Speaker 1\n  - # Speaker 1\n\nSo you go to Settings, you go to Application management, Application Hub and then you click Install or Add new \napplication.\n• Speaker 3\n  - # Speaker 3\n\nAnd you can select something from this.\n• Speaker 1\n  - # Speaker 1\n\nList or you can select Marketplace Powered.\n• Speaker 2\n  - # Speaker 2\n\nAnd it will work absolutely the same.\n  - --- Page 323 ---\n• Speaker 1\n  - # Speaker 1\n\nIf you run it in cloud.\n  - Thank you Adrian for your interesting question.\n• Speaker 2\n  - # Speaker 2\n\nWe decided to open directly its source code.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we open this tab.\n• Speaker 2\n  - # Speaker 2\n\nWe can try to find our commission diff part.\n• Speaker 1\n  - # Speaker 1\n\nYou can see this our commission column.\n  - It was added by help of page editor.\n• Speaker 2\n  - # Speaker 2\n\nSo practically we should not modify this.\n  - But it will be interesting to see how it will be connected with the.\n• Speaker 1\n  - # Speaker 1\n\nData attribute PDS USR commission USR so.\n• Speaker 2\n  - # Speaker 2\n\nThis is our attribute name.\n• Speaker 1\n  - # Speaker 1\n\nOkay, we can collapse temporary all such things.\n  - --- Page 324 ---\n• Speaker 2\n  - # Speaker 2\n\nI will only show you.\n• Speaker 1\n  - # Speaker 1\n\nSo price.\n  - Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config.\n• Speaker 2\n  - # Speaker 2\n\nSet of variables that can be saved.\n• Speaker 1\n  - # Speaker 1\n\nOn the page level.\n• Speaker 2\n  - # Speaker 2\n\nAnd we already started to work with.\n• Speaker 1\n  - # Speaker 1\n\nIt yesterday I just tried to explain you such attributes and now we will work with them.\n  - So for the price column we \nsee this attribute name.\n• Speaker 2\n  - # Speaker 2\n\nWe have this attribute name and finally.\n• Speaker 1\n  - # Speaker 1\n\nWe will save our data into commission.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 325 ---\n\nAttribute which has this name.\n• Speaker 1\n  - # Speaker 1\n\nThis is important.\n  - Okay, I will collapse anything else to make it clear and quite compact for you.\n• Speaker 2\n  - # Speaker 2\n\nPercent attribute and commission attribute.\n• Speaker 1\n  - # Speaker 1\n\nOkay?\n  - Nothing else.\n• Speaker 2\n  - # Speaker 2\n\nModel config is not interesting.\n  - And then we will do something with handlers.\n• Speaker 1\n  - # Speaker 1\n\nI already have an example which will.\n• Speaker 3\n  - # Speaker 3\n\nMake it possible for us to do it quickly.\n  - So let me show you this example of the code examples reading UI and then \nwe need calculated field example.\n• Speaker 1\n  - # Speaker 1\n\nField example.\n  - So now I will use a special.\n• Speaker 3\n  - # Speaker 3\n\nPre designed handler name.\n  - Probably we need to look at Academy.\n• Speaker 1\n  - # Speaker 1\n\nTo explain all possible handler names.\n• Speaker 3\n  - # Speaker 3\n\nSo let's go to Academy, let's go.\n• Speaker 1\n  - # Speaker 1\n\nTo go to guides development.\n• Speaker 3\n  - # Speaker 3\n\nFront end.\n• Speaker 1\n  - # Speaker 1\n\nFreedom UI and somewhere we will see some client schema references handlers.\n• Speaker 3\n  - # Speaker 3\n\nYes, this is an article explaining handlers and their definition.\n  - So we have some set of standard names for handlers \nand they represent some.\n• Speaker 1\n  - # Speaker 1\n\nImportant steps of page life cycle.\n  - In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed.\n• Speaker 3\n  - # Speaker 3\n\nAt our page changes the attribute.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 327 ---\n\nSo this handler is called handle view.\n• Speaker 3\n  - # Speaker 3\n\nModel attribute change request.\n  - Let me show you my example.\n• Speaker 1\n  - # Speaker 1\n\nSo simply speaking, this handler will be.\n• Speaker 3\n  - # Speaker 3\n\nCalled each time when any column value.\n• Speaker 1\n  - # Speaker 1\n\nChanges at our user at our client.\n• Speaker 3\n  - # Speaker 3\n\nSide page in our browser.\n  - So this handler will be triggered quite often.\n• Speaker 1\n  - # Speaker 1\n\nWe will also.\n• Speaker 3\n  - # Speaker 3\n\nPaste it for you and we will copy it and put it to our examples in our handlers area.\n  - So this is an array, we have to \nkeep syntax well.\n• Speaker 1\n  - # Speaker 1\n\nIt like this, keeping commas, brackets and so on.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 328 ---\n\nSo now you see, this piece of code was just simply added.\n• Speaker 1\n  - # Speaker 1\n\nThis piece of code was added and let's check what we can do with it.\n  - Of course we have to take care about attribute \nnames because they are always unique.\n• Speaker 2\n  - # Speaker 2\n\nSo how we can check it?\n• Speaker 1\n  - # Speaker 1\n\nThis handler will be called quite often for each column change.\n• Speaker 3\n  - # Speaker 3\n\nAnd in order to make it efficient.\n• Speaker 1\n  - # Speaker 1\n\nWe need to check if some column.\n• Speaker 2\n  - # Speaker 2\n\nThat we are interested had changed or not.\n  - If yes, then we do our recalculation.\n• Speaker 1\n  - # Speaker 1\n\nIf not, we should do nothing in.\n• Speaker 2\n  - # Speaker 2\n\nOrder to save system resources.\n  - So we check request property here and.\n• Speaker 1\n  - # Speaker 1\n\nWe have attribute name.\n  - And if this attribute name is our price, then this is logical or attribute name is our \ncommission percent.\n• Speaker 2\n  - # Speaker 2\n\nThen we do some calculation, but we.\n• Speaker 1\n  - # Speaker 1\n\nHave to actualize our names so you.\n• Speaker 2\n  - # Speaker 2\n\nCan see our list of attributes for the price.\n• Speaker 1\n  - # Speaker 1\n\nHere is our attribute name.\n  - Let's copy it and carefully paste here.\n• Speaker 2\n  - # Speaker 2\n\nSo how we do this?\n  - I already showed you yesterday.\n• Speaker 1\n  - # Speaker 1\n\nWe have to use operator await.\n  - Then request is our argument dollar context and then we have access to our certain \nattribute.\n• Speaker 2\n  - # Speaker 2\n\nSo we have just a variable in.\n  - --- Page 330 ---\n• Speaker 1\n  - # Speaker 1\n\nOur JavaScript code for price for percent.\n  - Then we do calculation of commission as result of multiplication and don't \nForget to.\n• Speaker 2\n  - # Speaker 2\n\nDivide by 100 because commission percent represents.\n• Speaker 1\n  - # Speaker 1\n\nPercent, not just a decimal value.\n  - Okay, and then we will save our commission percent.\n• Speaker 2\n  - # Speaker 2\n\nIf we do it incorrectly, we will fail.\n• Speaker 1\n  - # Speaker 1\n\nSo this is important.\n  - Our commission value will be finally saved into this.\n• Speaker 3\n  - # Speaker 3\n\nI provided an example for you, so you can also check out your example.\n• Speaker 1\n  - # Speaker 1\n\nJust a second.\n  - Okay, saving was successful and we can move on with our checks.\n• Speaker 2\n  - # Speaker 2\n\nProbably it's because of cache.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 331 ---\n\nSo let's reload the page.\n  - Reloading helps to fight with browser cache effect.\n• Speaker 2\n  - # Speaker 2\n\nNow you can see that recalculation works well.\n• Speaker 1\n  - # Speaker 1\n\nSo we have our price for rental of our apartment.\n• Speaker 2\n  - # Speaker 2\n\nAnd you see our commission is correctly.\n• Speaker 1\n  - # Speaker 1\n\nRecalculated and we can save our data.\n• Speaker 2\n  - # Speaker 2\n\nCommission will be also saved.\n• Speaker 1\n  - # Speaker 1\n\nWe can see it here.\n  - Commission is our legal valid column, so it will be saved.\n• Speaker 2\n  - # Speaker 2\n\nLet's open some sale example.\n• Speaker 1\n  - # Speaker 1\n\nNow you can see.\n  - --- Page 332 ---\n• Speaker 2\n  - # Speaker 2\n\nOkay, price was not changed.\n• Speaker 1\n  - # Speaker 1\n\nCommission is already calculated.\n  - Let's check if we switch from sale to rental.\n• Speaker 2\n  - # Speaker 2\n\nYou see, commission was recalculated.\n• Speaker 1\n  - # Speaker 1\n\nIf we switch back to sale, it's.\n• Speaker 2\n  - # Speaker 2\n\nAlso quite well calculated.\n• Speaker 1\n  - # Speaker 1\n\nSo now you see that our commission is quite fair for this amount of price for the house.\n• Speaker 2\n  - # Speaker 2\n\nSo our recalculation also works well and.\n• Speaker 1\n  - # Speaker 1\n\nIt shows even when page is opened.\n  - It looks like when page is opened our data filled in client side.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 333 ---\n\nDo not change anything.\n• Speaker 1\n  - # Speaker 1\n\nBut just open the page.\n  - Yes, we'll see.\n• Speaker 2\n  - # Speaker 2\n\nSo it looks like our calculation is.\n• Speaker 1\n  - # Speaker 1\n\nAlready done and works quite well.\n• Speaker 2\n  - # Speaker 2\n\nAnd of course everything works quite smoothly.\n• Speaker 1\n  - # Speaker 1\n\nWhen we have a pre programmed examples where everything is correct.\n• Speaker 2\n  - # Speaker 2\n\nBut in real life you will do.\n• Speaker 1\n  - # Speaker 1\n\nYour own examples where some errors or mistakes could happen.\n  - So you will need to know how to debug this code.\n• Speaker 2\n  - # Speaker 2\n\nI will show you how to make.\n• Speaker 1\n  - # Speaker 1\n\nSuch debug and you will see that's not so difficult.\n  - One of the easiest ways to debug.\n• Speaker 2\n  - # Speaker 2\n\nIs to put a special debugger breakpoint into your code.\n• Speaker 1\n  - # Speaker 1\n\nLike this, the word debugger.\n  - If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code.\n• Speaker 3\n  - # Speaker 3\n\nSo if browser developer console is on.\n• Speaker 1\n  - # Speaker 1\n\nThen your debugging will work for you.\n  - But this approach has also disadvantage.\n• Speaker 2\n  - # Speaker 2\n\nAnd when you finished your debugging, you.\n• Speaker 1\n  - # Speaker 1\n\nShould not forget to remove all your debugger lines.\n• Speaker 2\n  - # Speaker 2\n\nSave your changes again.\n• Speaker 1\n  - # Speaker 1\n\nAnd ideally you have to run your.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 335 ---\n\nLogic again just to make sure you did not accidentally damage anything.\n• Speaker 1\n  - # Speaker 1\n\nBecause when you save, you have chance that something will be incorrectly saved.\n  - Something will go not so well.\n• Speaker 2\n  - # Speaker 2\n\nI need to explain and I need to show you.\n• Speaker 1\n  - # Speaker 1\n\nWe can go to this is easy.\n• Speaker 2\n  - # Speaker 2\n\nWay to put debugger word.\n  - I will show you a bit more professional way to debug.\n• Speaker 1\n  - # Speaker 1\n\nThen we enable browser developer console.\n• Speaker 2\n  - # Speaker 2\n\nYou can do it by F12 or control shift I.\n• Speaker 1\n  - # Speaker 1\n\nAnd when you do this, you then.\n• Speaker 2\n  - # Speaker 2\n\nGo to Sources tab.\n  - You see, we already opened some set of scripts here.\n• Speaker 1\n  - # Speaker 1\n\nLet's close everything and then we can.\n• Speaker 2\n  - # Speaker 2\n\nJust search and you see we have.\n• Speaker 1\n  - # Speaker 1\n\nA USR reality form page part of the URL.\n• Speaker 2\n  - # Speaker 2\n\nSo it's a page, it's a name.\n• Speaker 1\n  - # Speaker 1\n\nOf client module and we can try to find it.\n• Speaker 2\n  - # Speaker 2\n\nControl p Open file.\n• Speaker 1\n  - # Speaker 1\n\nLet's try Control p open file.\n  - Which one?\n• Speaker 2\n  - # Speaker 2\n\nOkay, if you do not want to.\n• Speaker 1\n  - # Speaker 1\n\nGuess which one is correct, we can go back reload the page.\n  - --- Page 337 ---\n• Speaker 2\n  - # Speaker 2\n\nSo we will suppress any kind of.\n• Speaker 1\n  - # Speaker 1\n\nCache and then we will open it again.\n  - And we have just one option, single option to select corresponding file Control \nP .\n• Speaker 2\n  - # Speaker 2\n\nAnd you see only one form page here.\n• Speaker 1\n  - # Speaker 1\n\nSo no any cached, no any duplicates that will make you confused.\n  - And you probably may select Incorrect 1.\n• Speaker 2\n  - # Speaker 2\n\nSee set of equalizable strings here.\n  - But the most important of course is our code.\n• Speaker 1\n  - # Speaker 1\n\nBig part with view config div some.\n• Speaker 2\n  - # Speaker 2\n\nPart view model config.\n  - And finally you will have your header handlers.\n• Speaker 1\n  - # Speaker 1\n\nFor example, we can click on this.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 338 ---\n\nLine number which will make a breakpoint for us.\n• Speaker 1\n  - # Speaker 1\n\nSo it's the same as debugger, but.\n• Speaker 2\n  - # Speaker 2\n\nIt doesn't change the source of our client module.\n• Speaker 1\n  - # Speaker 1\n\nSo we can use browser debugging tools for this.\n• Speaker 2\n  - # Speaker 2\n\nClick on the line number.\n• Speaker 1\n  - # Speaker 1\n\nThat's how we activate breakpoint.\n  - So here we have one breakpoint that we just clicked here.\n• Speaker 2\n  - # Speaker 2\n\nExecution will be stopped.\n  - Let me show you.\n• Speaker 1\n  - # Speaker 1\n\nIf you change for example offer type from rental to sale, you see These.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 339 ---\n\nLines are executed and now code stops and we can go line by line.\n• Speaker 1\n  - # Speaker 1\n\nNow we have to use tools that.\n• Speaker 2\n  - # Speaker 2\n\nWill help us to proceed with this piece.\n  - The most popular, I think the Most.\n• Speaker 1\n  - # Speaker 1\n\nEfficient is F10 which is a step over running of a line without going into sub functions for it.\n  - So I will press F10.\n• Speaker 2\n  - # Speaker 2\n\nThen you can see commission was recalculated.\n• Speaker 1\n  - # Speaker 1\n\nNow you will see commission will be set here.\n  - So my commission is now 26, so I expect it to be saved here.\n• Speaker 2\n  - # Speaker 2\n\nYes, 26 and then we move on.\n• Speaker 1\n  - # Speaker 1\n\nSo here we can use resume F8 hotkey to normally continue execution.\n• Speaker 2\n  - # Speaker 2\n\nThat's how we can check this code.\n  - If we change the price.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 340 ---\n\nYou will see the Same I press F10 I have another commission F8.\n• Speaker 2\n  - # Speaker 2\n\nOkay, we can make more serious price.\n• Speaker 1\n  - # Speaker 1\n\nFor an apartment.\n• Speaker 2\n  - # Speaker 2\n\nAnd obviously we'll have more serious commission.\n  - So that's how you can debug your code.\n• Speaker 1\n  - # Speaker 1\n\nAlso, if your code has something has.\n• Speaker 3\n  - # Speaker 3\n\nSome obvious mistakes and causes runtime errors, you will also see such runtime errors in your sources tab.\n  - You \nwill also see your console which will be full of red messages.\n• Speaker 1\n  - # Speaker 1\n\nNow let's check.\n  - You see that percent is empty so percent is null.\n• Speaker 2\n  - # Speaker 2\n\nSo that's how we will clear.\n• Speaker 1\n  - # Speaker 1\n\nOkay, when we have some valid percent, we can move on with F8 and you see setting is done.\n  - --- Page 341 ---\n• Speaker 3\n  - # Speaker 3\n\nIf you have any questions related to this debugging, please tell me.\n  - As you can see, debugging can be.\n• Speaker 2\n  - # Speaker 2\n\nReally effective if your code is more.\n• Speaker 3\n  - # Speaker 3\n\nComplex, if you have sub functions.\n  - If you are not sure what values you finally get from your code so you can check \nit out with the help of browser developer tools.\n• Speaker 1\n  - # Speaker 1\n\nAnd.\n• Speaker 3\n  - # Speaker 3\n\nDifferent validators so different clones will be used for universal validation.\n  - And also I plan to show you some \nexamples of so we already displayed debugging but also you need to know a bit more about logging.\n• Speaker 1\n  - # Speaker 1\n\nForeign.\n• Speaker 2\n  - # Speaker 2\n\nSo today I want you to see.\n• Speaker 1\n  - # Speaker 1\n\nSome more technical things about how client side works and how we can do.\n  - --- Page 342 ---\n• Speaker 3\n  - # Speaker 3\n\nSome technical steps with it.\n  - So we already know how to debug our code.\n• Speaker 1\n  - # Speaker 1\n\nSo I will show you login mechanisms.\n• Speaker 3\n  - # Speaker 3\n\nThat are available on Creature platform.\n  - Here is our installed app and this is our folder with installed application.\n• Speaker 1\n  - # Speaker 1\n\nTo provide the different logs and save them In Creature web server.\n• Speaker 3\n  - # Speaker 3\n\nThe most important log file for us is invoke targets config because here we can change default file to save our all \ndefault folder to save all our logs.\n  - You may be interested in the way how we can do some logging.\n• Speaker 1\n  - # Speaker 1\n\nAs well appender so they are synonym.\n• Speaker 3\n  - # Speaker 3\n\nLogger or appender they are synonyms.\n  - So you can see a lot of different loggers registered and appenders are \nsettings that will collect log messages.\n• Speaker 1\n  - # Speaker 1\n\nLogical thing that you can use in your program code.\n  - Appender is a place that is used to collect your data and save\n\n--- Page 343 ---\n\nit.\n• Speaker 3\n  - # Speaker 3\n\nSo we have a lot of loggers, a lot of targets.\n  - Sorry, targets.\n• Speaker 3\n  - # Speaker 3\n\nBy default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we can find logs \nand as you can see we have zero which means main application logs and log folder which.\n• Speaker 2\n  - # Speaker 2\n\nWhich.\n• Speaker 1\n  - # Speaker 1\n\nSorry.\n• Speaker 3\n  - # Speaker 3\n\nA log folder which means loader part is not so interesting because it has no customizable items that will be \ninterested for us to Interesting for us to see so loader is very technical and we have just several log files here, \nnothing very spectacular.\n  - And zero folder is what we really need because it's a log set of logs for our main \napplication.\n• Speaker 1\n  - # Speaker 1\n\nYou from the maintenance point of view?\n• Speaker 3\n  - # Speaker 3\n\n--- Page 344 ---\n\nI think the most important is error log.\n  - Error log represents all exceptions and keeps information about all exceptions \nthat happened in your system.\n• Speaker 1\n  - # Speaker 1\n\nIt because usually it is important and.\n• Speaker 3\n  - # Speaker 3\n\nSometimes you may find some errors which are not related to your changes.\n  - So you may simply speaking find some \nerrors from base product like this 1 error parent schema is now parent ID sets to empty and so on.\n• Speaker 1\n  - # Speaker 1\n\nSo it's really hard to test everything.\n• Speaker 3\n  - # Speaker 3\n\nAnd to polish any line of code.\n• Speaker 1\n  - # Speaker 1\n\nSo it should show it so it.\n• Speaker 3\n  - # Speaker 3\n\nCould not fail in any way.\n  - So in real life, in any big system, some errors usually happen.\n• Speaker 1\n  - # Speaker 1\n\nBut in our case it's not so.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 345 ---\n\nCritical so you can simply ignore.\n  - But if you will find another errors with some user complaints, of course you should \ntake care of it.\n• Speaker 3\n  - # Speaker 3\n\nBut it will be more efficient for you if you can Collect logs by yourself.\n  - And that's why I plan to show you some \nspecial tool which makes it easier if you need to collect logs from cloud based environment.\n• Speaker 3\n  - # Speaker 3\n\nIt takes just almost no time, maybe 20 seconds.\n  - And you will see that new app is installed to our system.\n• Speaker 3\n  - # Speaker 3\n\nOkay, wait for a minute.\n  - And I'm also curious about what is happening at my website.\n• Speaker 3\n  - # Speaker 3\n\nNow you will see one more item at our settings page.\n  - Previously called System Designer, currently it's called \nSettings.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 346 ---\n\nWe can check.\n• Speaker 3\n  - # Speaker 3\n\nYou probably remember we looked at our logger and appenders.\n  - So we have appenders, we have loggers here.\n• Speaker 1\n  - # Speaker 1\n\nSo we can listen for a certain.\n• Speaker 3\n  - # Speaker 3\n\nLogs in order to get some error.\n• Speaker 1\n  - # Speaker 1\n\nMessages for the certain, let's say subject or certain area of functionality.\n• Speaker 3\n  - # Speaker 3\n\nAnd you can also listen everything like this, which will mean that you look and get every message.\n  - And I'll try to find a \nlogger for SQL.\n• Speaker 1\n  - # Speaker 1\n\nExecutor SQL log appender.\n• Speaker 3\n  - # Speaker 3\n\nOkay, will it be DB executor?\n  - And we're only interested in for example errors.\n• Speaker 1\n  - # Speaker 1\n\nSo I plan to make example of.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 347 ---\n\nListening of DB execution errors.\n  - And I especially will do some example which makes such an error.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's try to delete once again.\n  - Yes, error message appears.\n• Speaker 3\n  - # Speaker 3\n\nLogger pattern.\n• Speaker 1\n  - # Speaker 1\n\nMaybe you should use info subscribe.\n• Speaker 3\n  - # Speaker 3\n\nI will try to delete it once again.\n• Speaker 1\n  - # Speaker 1\n\nYes, now you see, funny thing, but.\n• Speaker 2\n  - # Speaker 2\n\nIt was not an error, it was just a warning.\n• Speaker 3\n  - # Speaker 3\n\nSo like yellow color, which means this is not an error, just a warning.\n  - --- Page 348 ---\n• Speaker 1\n  - # Speaker 1\n\nAnd okay, so I got some text.\n• Speaker 3\n  - # Speaker 3\n\nMessage from our DB executor and you see that my message has an error.\n  - So exception occurred, statement \nterminated.\n• Speaker 2\n  - # Speaker 2\n\nYou can also get the same logs.\n• Speaker 1\n  - # Speaker 1\n\nIf you go to your files, you.\n• Speaker 3\n  - # Speaker 3\n\nWill find SQL JSON here we will have similar information.\n  - So you see my delete statement failed.\n• Speaker 1\n  - # Speaker 1\n\nSo it conflicted with foreign reference constraint.\n• Speaker 3\n  - # Speaker 3\n\nAnd it's interesting that for the SQL.\n• Speaker 1\n  - # Speaker 1\n\nErrors, system logs only queries that were failed.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 349 ---\n\nSo only queries that failed to be executed at the database.\n  - In my case, I intentionally made an error for the database \nlevel and showed.\n• Speaker 1\n  - # Speaker 1\n\nYou how you can handle it and.\n• Speaker 3\n  - # Speaker 3\n\nHow you can track it.\n  - You can also use all existing loggers for all messages subscribe.\n• Speaker 1\n  - # Speaker 1\n\nOf your system, when you open any.\n• Speaker 2\n  - # Speaker 2\n\nSection, you will start to get more.\n• Speaker 3\n  - # Speaker 3\n\nAnd more Logs because system usually writes.\n• Speaker 1\n  - # Speaker 1\n\nSomething to logs and it has quite verbose logging.\n  - So you will have more and more data.\n• Speaker 3\n  - # Speaker 3\n\nYou see more messages appeared, some of.\n• Speaker 1\n  - # Speaker 1\n\nThem are useless for you and so.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 350 ---\n\nYou have to play a bit with it.\n  - But finally you will be able to do the same as you can do with log files.\n• Speaker 1\n  - # Speaker 1\n\nSo this can be really helpful for you.\n  - Please remember about this telemetry log and we have some buttons here.\n• Speaker 3\n  - # Speaker 3\n\nWhat is this?\n  - As you can see we have some help message explaining how to use this some button which shows or it \nruns.\n• Speaker 1\n  - # Speaker 1\n\nAnd stops a listening of logs.\n• Speaker 3\n  - # Speaker 3\n\nSo green means run, red means stopped and that's how you can also use it.\n  - So listening all of the logs will provide \nyou a lot of verbose noisy messages.\n• Speaker 1\n  - # Speaker 1\n\nYou can easily install it from Marketplace.\n• Speaker 3\n  - # Speaker 3\n\nOkay, so what else you need to know about client site?\n• Speaker 1\n  - # Speaker 1\n\nWe will work with details soon and.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 351 ---\n\nBefore we doing this I need to explain you how to do validation.\n  - As you can see my previous program was a bit more \noriented on classic ui.\n• Speaker 1\n  - # Speaker 1\n\nSo sometimes I jump from topics topics and that's why we are not following directly from this schedule.\n• Speaker 3\n  - # Speaker 3\n\nSo I plan to provide you material like step by step slightly improving complexity of topics.\n  - So I think it's not so hard, \nnot so difficult for you to study.\n• Speaker 1\n  - # Speaker 1\n\nThis material this way.\n• Speaker 3\n  - # Speaker 3\n\nSo let's move on validation.\n  - What it is about and this is.\n• Speaker 1\n  - # Speaker 1\n\nCheck of data before it will be.\n• Speaker 3\n  - # Speaker 3\n\nSaved at server side.\n  - Let's return back to our reality section and let's look at our data value.\n• Speaker 1\n  - # Speaker 1\n\nNegative price as you can see as.\n• Speaker 3\n  - # Speaker 3\n\nA result we have negative commission.\n  - It's also possible to save negative area and also system does not prevent us \nfrom doing such things.\n• Speaker 1\n  - # Speaker 1\n\nSo we have to make some kind.\n• Speaker 3\n  - # Speaker 3\n\nOf protection for our data input.\n  - And luckily we have this on the platform level as existing validation tools.\n• Speaker 1\n  - # Speaker 1\n\nOur form page again, open its source code again.\n• Speaker 3\n  - # Speaker 3\n\nAnd I need to show you some examples at our Academy documentation which will really help you.\n  - So we have some \narchitectural SDK things at front end documentation, but we have.\n• Speaker 1\n  - # Speaker 1\n\nA lot of useful examples in platform.\n• Speaker 3\n  - # Speaker 3\n\nCustomization area of our academy.\n  - And we have examples for Freedom UI for fields examples and we have \nexamples of population of fields.\n• Speaker 2\n  - # Speaker 2\n\nField which we are interested right now.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 353 ---\n\nSo I will share useful links for such articles.\n• Speaker 1\n  - # Speaker 1\n\nI recommend you to read it or.\n• Speaker 3\n  - # Speaker 3\n\nJust maybe look at it.\n  - So let me explain how we plan to move on.\n• Speaker 1\n  - # Speaker 1\n\nSo it's a special designed place for us to program special functions that will be used for checks of data during input.\n  - And luckily we have examples at Academy.\n• Speaker 2\n  - # Speaker 2\n\nWhich will help us to make it.\n• Speaker 1\n  - # Speaker 1\n\nSmoothly without spending too much time.\n  - So validators is a collection, this is not an array.\n• Speaker 2\n  - # Speaker 2\n\nNow you see, this is a collection.\n  - Each collection item should include its name.\n• Speaker 1\n  - # Speaker 1\n\nAnd implementation and validation.\n• Speaker 2\n  - # Speaker 2\n\nImplementation includes validator property which is a.\n  - --- Page 354 ---\n• Speaker 1\n  - # Speaker 1\n\nFunction that finally should return something set of parameters and async property.\n  - Then when we finish with this \npart, we will connect our created validator with set of columns.\n• Speaker 2\n  - # Speaker 2\n\nCan do this and I already have.\n• Speaker 1\n  - # Speaker 1\n\nAn example, we will not spend too.\n• Speaker 2\n  - # Speaker 2\n\nMuch time on it.\n• Speaker 1\n  - # Speaker 1\n\nSo now you will see how we can do this validation.\n• Speaker 2\n  - # Speaker 2\n\nFirst of all we go to validators.\n• Speaker 1\n  - # Speaker 1\n\nArea and we will provide some code here.\n  - I already have example, no difficulties.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let me copy and paste for you.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 355 ---\n\nThis is example of our validation.\n  - Okay, no need to use cameras to show.\n• Speaker 2\n  - # Speaker 2\n\nAnd I will also implement it.\n• Speaker 1\n  - # Speaker 1\n\nIt's my own validators area.\n  - So copy and paste.\n• Speaker 2\n  - # Speaker 2\n\nSo probably we have to Start with parameters first.\n• Speaker 1\n  - # Speaker 1\n\nBecause parameters are values that we can provide for each validated column and for different columns, we can \nprovide different parameter values.\n• Speaker 2\n  - # Speaker 2\n\nHere we have to declare what parameters we will have.\n• Speaker 3\n  - # Speaker 3\n\nIn my case there are two parameters.\n• Speaker 1\n  - # Speaker 1\n\nMin value and message parameter.\n• Speaker 2\n  - # Speaker 2\n\nValidator function has a bit complex structure.\n  - This is one function, it returns another.\n• Speaker 1\n  - # Speaker 1\n\nFunction and first function requests config, Another function requests control inside of control.\n  - Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page.\n• Speaker 2\n  - # Speaker 2\n\nBut it makes it universal.\n• Speaker 1\n  - # Speaker 1\n\nIf we have value, we don't know exact column.\n  - So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us.\n• Speaker 2\n  - # Speaker 2\n\nThe config we know what parameters to expect.\n  - So we have min value parameter and we have message parameter.\n• Speaker 1\n  - # Speaker 1\n\nOur check is quite simple.\n• Speaker 2\n  - # Speaker 2\n\nWe get value and then compare with min value.\n  - And in case if our value is.\n• Speaker 1\n  - # Speaker 1\n\nGreater or equal than min value then we think that data is correct and our returned result will be null, which.\n• Speaker 2\n  - # Speaker 2\n\nMeans no warnings, no messages, everything is okay.\n  - But in case that value is not.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 357 ---\n\nCorrect we have to return special type.\n• Speaker 2\n  - # Speaker 2\n\nOf result which is a JavaScript object with a specific name, the property inside.\n• Speaker 1\n  - # Speaker 1\n\nAnd with the message property inside of this property.\n  - So it's kind of nested JavaScript object and our message here \nwill be text, it should be displayed nearby problem control.\n• Speaker 3\n  - # Speaker 3\n\nAnd also this message will be explained.\n• Speaker 1\n  - # Speaker 1\n\nDisplayed when we will try to save our page.\n  - So we will say try to save data system will check all the validators and it \nwill find that some columns are not correct and it will not allow to save it.\n• Speaker 2\n  - # Speaker 2\n\nSo this is our example of a.\n• Speaker 3\n  - # Speaker 3\n\nValidation, but it's not applied yet.\n• Speaker 2\n  - # Speaker 2\n\nSo we have to set up some.\n• Speaker 1\n  - # Speaker 1\n\nColumns which will work with this validator.\n  - --- Page 358 ---\n• Speaker 3\n  - # Speaker 3\n\nOtherwise our validator is useless because no.\n• Speaker 1\n  - # Speaker 1\n\nColumn expect checks with it.\n• Speaker 2\n  - # Speaker 2\n\nSo I do not need to change anything here.\n  - This code is universal as you can see.\n• Speaker 1\n  - # Speaker 1\n\nOnly one hard coded thing is a validator type name.\n  - Next step is connection of validator with.\n• Speaker 2\n  - # Speaker 2\n\nCertain columns or it's better to say with attributes.\n• Speaker 1\n  - # Speaker 1\n\nSo I will show you examples how we can connect.\n  - Maybe I should do it here.\n• Speaker 2\n  - # Speaker 2\n\nAfter module config I have to provide.\n• Speaker 1\n  - # Speaker 1\n\nValidators setting so I should carefully copy this and paste it here.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 359 ---\n\nAnd that's how I will put it.\n  - So here's my price attribute.\n• Speaker 1\n  - # Speaker 1\n\nHere is my validator.\n  - The type of validator should be matched.\n• Speaker 2\n  - # Speaker 2\n\nWith what we created and parameter.\n• Speaker 1\n  - # Speaker 1\n\nSo the minimum value for the price.\n• Speaker 2\n  - # Speaker 2\n\nI think it will be 50.\n• Speaker 3\n  - # Speaker 3\n\nSo we will not allow to save.\n• Speaker 1\n  - # Speaker 1\n\nAny reality object with the price less than 50 bucks.\n  - Okay, and also we can use message, not just a plain string \nconstant which.\n• Speaker 2\n  - # Speaker 2\n\nIs also supported, but also we can use localizable string.\n  - Here is an example of a macro.\n• Speaker 1\n  - # Speaker 1\n\nThat you can use for localizable strings.\n  - --- Page 360 ---\n• Speaker 2\n  - # Speaker 2\n\nAnd localizable strings are saved separately and can provide translations into other languages.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you what localizable strings I plan to use.\n  - I will put it for you.\n• Speaker 2\n  - # Speaker 2\n\nI go to localizable strings.\n  - Probably we can save it before modifications.\n• Speaker 1\n  - # Speaker 1\n\nBut now I will modify non localizable.\n• Speaker 2\n  - # Speaker 2\n\nStrings.\n• Speaker 1\n  - # Speaker 1\n\nTake significantly longer than usual.\n  - As you can see, my worker process consumed quite a lot of ram.\n• Speaker 2\n  - # Speaker 2\n\nThat's why I will try to save now.\n• Speaker 1\n  - # Speaker 1\n\nIf it saves correctly, okay, no problem.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 361 ---\n\nBut in previous versions I experienced some.\n• Speaker 1\n  - # Speaker 1\n\nTroubles with localizable strings here and it turned out to save it.\n  - So when I added once, it physically.\n• Speaker 2\n  - # Speaker 2\n\nAdded it twice and then denied to.\n• Speaker 1\n  - # Speaker 1\n\nSave because it tells that such localizable string already exists.\n  - In case, if you face this kind.\n• Speaker 2\n  - # Speaker 2\n\nOf issue when you add localizable string.\n• Speaker 1\n  - # Speaker 1\n\nTry to save and then get error message about duplicated localizable strings.\n  - You can just remove that visible one \nthat you created.\n• Speaker 2\n  - # Speaker 2\n\nAnother one which is invisible will be still saved.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can bypass this bug.\n• Speaker 2\n  - # Speaker 2\n\nAs you can see, Creature also as.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 362 ---\n\nAny software, it has its own bugs.\n  - Sometimes bugs are detected, fixed new bugs appeared.\n• Speaker 2\n  - # Speaker 2\n\nAnother localizable string that we will need is about area.\n• Speaker 1\n  - # Speaker 1\n\nSo localizable string for area.\n• Speaker 2\n  - # Speaker 2\n\nAnd for its.\n• Speaker 1\n  - # Speaker 1\n\nValue here, save it.\n• Speaker 2\n  - # Speaker 2\n\nArea can't be less.\n  - Let's try to save.\n• Speaker 1\n  - # Speaker 1\n\nAnd my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring.\n  - It looks like in this version this.\n• Speaker 2\n  - # Speaker 2\n\nBug was finally fixed.\n• Speaker 1\n  - # Speaker 1\n\nThat's nice.\n  - So for the price we already set.\n• Speaker 2\n  - # Speaker 2\n\nSettings, now we do the same for area.\n  - So let me show you what we.\n• Speaker 1\n  - # Speaker 1\n\nDo for area we will set validators setting for one column.\n  - We can use multiple validators so it's possible to make \nchecks with different criterias.\n• Speaker 2\n  - # Speaker 2\n\nAnd in my case for the area.\n• Speaker 1\n  - # Speaker 1\n\nI will use the same validator but.\n• Speaker 2\n  - # Speaker 2\n\nMinimum value will be 100 square feet.\n• Speaker 3\n  - # Speaker 3\n\nSo it's close to 10 square meters.\n  - We think that we will not input any kind of realty less than 10 square meters or 100 \nsquare feet.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's our limitation here.\n• Speaker 2\n  - # Speaker 2\n\nAnd we will use localizable string that.\n  - --- Page 364 ---\n• Speaker 1\n  - # Speaker 1\n\nWe already successfully saved.\n  - Okay, now we have this example, save.\n• Speaker 2\n  - # Speaker 2\n\nIt and then it's our turn to.\n• Speaker 1\n  - # Speaker 1\n\nTest and check out how our data were saved.\n  - How well it looks, we can close.\n• Speaker 2\n  - # Speaker 2\n\nOur editor, go to main app probably.\n• Speaker 3\n  - # Speaker 3\n\nLet'S reward it just to fight with.\n• Speaker 1\n  - # Speaker 1\n\nAny potential impact of browser cache issue.\n  - Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here.\n• Speaker 2\n  - # Speaker 2\n\nNow you see that once we finished.\n• Speaker 1\n  - # Speaker 1\n\nAnd moved focus out of control, you see we have some checks and this checks displays error message.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 365 ---\n\nPrice can't be less than 50 bucks.\n  - Area can't be less than 100 square feet.\n• Speaker 3\n  - # Speaker 3\n\nSo this validation may help you to improve your logic to make it more protected to get rid of like silly mistakes made \nby end users.\n• Speaker 1\n  - # Speaker 1\n\nAnd I think that this is something that will be quite important in your future projects and implementation.\n• Speaker 2\n  - # Speaker 2\n\nNow I plan to show you some.\n• Speaker 1\n  - # Speaker 1\n\nSimple topic and it's simple but it's very important because such topic will be.\n• Speaker 2\n  - # Speaker 2\n\nQuite often faced in your projects.\n  - It will be not really directly connected with programming, but it's something that \nyou definitely should know about.\n• Speaker 1\n  - # Speaker 1\n\nI'm talking about typical settings of columns.\n• Speaker 2\n  - # Speaker 2\n\nThat you need according to some conditions.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 366 ---\n\nFor example, some column must be visible.\n• Speaker 2\n  - # Speaker 2\n\nOnly in case of a certain condition and otherwise should be hidden or another.\n• Speaker 1\n  - # Speaker 1\n\nColumn must be required according to some conditions and otherwise should be optional.\n  - And also you may need \nsome like talk about visibility, about required settings or about read only columns.\n• Speaker 3\n  - # Speaker 3\n\nFrequently faced in requirements from business owners and that's why such functionality was decided.\n• Speaker 2\n  - # Speaker 2\n\nTo implement as a no code Tools.\n• Speaker 1\n  - # Speaker 1\n\nAnd developers code such functionality.\n  - Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples.\n• Speaker 2\n  - # Speaker 2\n\nPage business rules mainly used for controls.\n• Speaker 1\n  - # Speaker 1\n\nVisibility, maybe required property, read only property and also we have object business rules here it's called realty \nbusiness rules, but.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 367 ---\n\nYou should understand this is about object.\n  - Object business rules also offer us possibility.\n• Speaker 1\n  - # Speaker 1\n\nTo make some filtering and depending on the type of business row, it will be physically saved into metadata of a.\n• Speaker 2\n  - # Speaker 2\n\nPage or into metadata of an object.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you.\n• Speaker 2\n  - # Speaker 2\n\nLet's imagine our task is quite simple.\n• Speaker 1\n  - # Speaker 1\n\nTo show comment only in case of type is not empty.\n• Speaker 2\n  - # Speaker 2\n\nSo when we add new data, type.\n• Speaker 1\n  - # Speaker 1\n\nCould be not specified.\n  - In this case, comment should be hidden.\n• Speaker 2\n  - # Speaker 2\n\nWe can use page level business rules.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 368 ---\n\nBecause it's about column visibility add new rule.\n  - This rule will have automatically generated title to be applied to the \npage and it has triggering condition, page is open or some condition changed.\n• Speaker 2\n  - # Speaker 2\n\nSo we have if scenario and then action.\n  - Okay, let's start with if and now we will think of something like.\n• Speaker 1\n  - # Speaker 1\n\nI should do it a bit better with initial status.\n  - Okay, so if our type is not empty, then comment should be visible.\n• Speaker 2\n  - # Speaker 2\n\nLet's try to do this attribute or.\n• Speaker 1\n  - # Speaker 1\n\nData field realty and our type okay, if type is not empty so we can use condition is filled in.\n  - If this condition is true, \nthen we will use action show elements on the.\n• Speaker 2\n  - # Speaker 2\n\nPage and we can decide what element.\n• Speaker 1\n  - # Speaker 1\n\nWill be shown to be Input column of a comment text comment okay, so if type is filled in comment will be visible.\n• Speaker 3\n  - # Speaker 3\n\nOtherwise comment will be hidden.\n• Speaker 1\n  - # Speaker 1\n\nSo let's try to test how it works.\n  - --- Page 369 ---\n• Speaker 3\n  - # Speaker 3\n\nWe can save it.\n• Speaker 2\n  - # Speaker 2\n\nSave our page.\n• Speaker 3\n  - # Speaker 3\n\nNow and let's check how it will be physically working for us.\n• Speaker 2\n  - # Speaker 2\n\nAs you can see, each time you.\n• Speaker 1\n  - # Speaker 1\n\nDevelop something, this is very important to immediately test it when it's ready and.\n• Speaker 2\n  - # Speaker 2\n\nWhen you make many different changes you.\n• Speaker 1\n  - # Speaker 1\n\nMay think of okay, I will do many changes, then I will test them in total.\n• Speaker 2\n  - # Speaker 2\n\nI do not recommend you to follow this approach, so it's much better and more safer.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 370 ---\n\nIf you will do some small step.\n• Speaker 2\n  - # Speaker 2\n\nThen you go to your system and.\n• Speaker 1\n  - # Speaker 1\n\nStart to test it.\n• Speaker 2\n  - # Speaker 2\n\nThen you do another small step, then you do another test.\n• Speaker 1\n  - # Speaker 1\n\nThe reason is that creature client side sometimes could bring you surprises and it will be not so clear according to.\n• Speaker 2\n  - # Speaker 2\n\nThe error message text in your browser console.\n  - To understand what exact part is gave you such a surprise.\n• Speaker 1\n  - # Speaker 1\n\nSo it's better to make small steps and to test it frequently.\n  - So once you get and start to.\n• Speaker 2\n  - # Speaker 2\n\nGet some error messages and you will.\n• Speaker 1\n  - # Speaker 1\n\nEasily understand that it was caused probably the most latest recent changes and you.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 371 ---\n\nShould take care about it and maybe.\n• Speaker 1\n  - # Speaker 1\n\nRevert them maybe to look carefully and.\n• Speaker 2\n  - # Speaker 2\n\nYou will find some errors.\n  - So small steps and frequent testing.\n• Speaker 1\n  - # Speaker 1\n\nType is set, Comment is visible.\n  - It's clear the type.\n• Speaker 2\n  - # Speaker 2\n\nI think that we have a problem because of initial state of the square column.\n  - Let me show you how we can fix it.\n• Speaker 1\n  - # Speaker 1\n\nInitial state should be aligned with our business rule and in case if we.\n• Speaker 3\n  - # Speaker 3\n\nCheck some condition and turn this column on.\n  - So make it visible.\n• Speaker 1\n  - # Speaker 1\n\nClear.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 372 ---\n\nNow you see our comment disappeared.\n  - If we set some type, it appeared again.\n• Speaker 1\n  - # Speaker 1\n\nIf you clear, it hides.\n• Speaker 3\n  - # Speaker 3\n\nHides?\n  - Yes.\n• Speaker 3\n  - # Speaker 3\n\nWhen I want to specify manager here, I definitely want to specify someone who is company employee and not just a \nrandom contact.\n  - So I want to make some simple filter here which will help me to select only context with a certain \ntype.\n• Speaker 3\n  - # Speaker 3\n\nOkay and first of all I will check available action here and in comparison with page level we have more options here \nand I plan to use simple static filter Business rule Static filter will not require any as you can see static filter will not \nrequire any special conditions I mean for triggering so it will be applied always.\n  - That's why it's called static.\n• Speaker 3\n  - # Speaker 3\n\nSo please be careful when you use this home version and just know about this.\n  - So this will be temporary not \navailable for you.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 373 ---\n\nAnd then save it again.\n• Speaker 3\n  - # Speaker 3\n\nNow I save page and I will reload my main tab and you will see how this manager filter will work for us.\n  - Go back.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's make more examples better examples.\n• Speaker 1\n  - # Speaker 1\n\nAnd go to customer 360 add more contacts to make it representative and let's make a contact name something like \nJames Bond and type will be customer.\n  - Okay, one more Bruce Lee will be our employee and Bruce Willis will be also \nour employee.\n• Speaker 2\n  - # Speaker 2\n\nThis is very simple filtering tool.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see we just used only mouse to set up this type of customization.\n  - But it's very efficient and that's why.\n• Speaker 2\n  - # Speaker 2\n\nI think it's important for you to know about it.\n• Speaker 1\n  - # Speaker 1\n\nBecause even if it doesn't require programming.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 374 ---\n\nBut if you did not attend our.\n• Speaker 1\n  - # Speaker 1\n\nCustomization course, you still need to know.\n• Speaker 2\n  - # Speaker 2\n\nThat such type of filtering is supported.\n  - Also I can quickly show you another filtering of connected fields like filtering \ncities by countries.\n• Speaker 1\n  - # Speaker 1\n\nSo or maybe if we focus on us only.\n  - For example we can filter cities by states but Maybe for countries it will be more \nclear and understandable.\n• Speaker 2\n  - # Speaker 2\n\nSo let's go again to our page.\n  - In order to filter something by something.\n• Speaker 1\n  - # Speaker 1\n\nOf course we need to have connected lookups.\n• Speaker 2\n  - # Speaker 2\n\nLuckily in base product cities and countries are already connected.\n• Speaker 1\n  - # Speaker 1\n\nEach city has corresponding country reference.\n  - Let me show you cities lookup already has connections with country.\n• Speaker 2\n  - # Speaker 2\n\nProbably we have to start from country.\n  - --- Page 375 ---\n• Speaker 1\n  - # Speaker 1\n\nBecause we plan to input data starting from country providing country value and then USR country copy and lookup.\n  - We will use standard lookup.\n• Speaker 2\n  - # Speaker 2\n\nThat will be based on.\n• Speaker 1\n  - # Speaker 1\n\nIt's also CT drop down list.\n  - And here we can name something like city.\n• Speaker 2\n  - # Speaker 2\n\nGood unique value for us.\n• Speaker 1\n  - # Speaker 1\n\nOkay.\n  - Is it okay?\n• Speaker 3\n  - # Speaker 3\n\nChanges to the object level.\n• Speaker 1\n  - # Speaker 1\n\nAnd so to fully modify our data model properly to take maybe less than a minute our time.\n  - It okay, saved.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 376 ---\n\nThis is a special type of filter.\n• Speaker 1\n  - # Speaker 1\n\nWhich is I think originally designed for connected lookups.\n  - And we can specify what column to filter.\n• Speaker 2\n  - # Speaker 2\n\nBetween cities and countries.\n  - So it will show us where city.\n• Speaker 1\n  - # Speaker 1\n\nCountry which means country value inside of city lookup equals to value of country.\n• Speaker 2\n  - # Speaker 2\n\nProvided in our realty page and also automatic settings for clearing when country changed.\n• Speaker 1\n  - # Speaker 1\n\nClearing cities when country changed or automatically set country if city was set and for example country was \nempty.\n  - So you can do this also then country will be automatically populated.\n• Speaker 2\n  - # Speaker 2\n\nSo this rule will work good for us.\n• Speaker 1\n  - # Speaker 1\n\nBut what I need to add here is triggering condition.\n• Speaker 2\n  - # Speaker 2\n\nWe need to change such Filter each.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 377 ---\n\nTime when country changes, so page is opened or some changes and when country.\n  - Okay, we can select here is \nfilled in.\n• Speaker 2\n  - # Speaker 2\n\nWorking with this filter.\n• Speaker 1\n  - # Speaker 1\n\nSometimes it will work, sometimes not.\n• Speaker 2\n  - # Speaker 2\n\nSo you should not forget about this condition.\n  - Let's save it.\n• Speaker 1\n  - # Speaker 1\n\nSave page and then we will test it.\n  - You will see how it works.\n• Speaker 2\n  - # Speaker 2\n\nOkay, let's test.\n  - We need to reward it.\n• Speaker 1\n  - # Speaker 1\n\nSo let's say Miami and you see.\n• Speaker 2\n  - # Speaker 2\n\nCountry, you see city.\n• Speaker 1\n  - # Speaker 1\n\nOkay, Country, States, United States.\n  - --- Page 378 ---\n• Speaker 2\n  - # Speaker 2\n\nCities.\n  - As you may see, cities are filtered by country.\n• Speaker 1\n  - # Speaker 1\n\nOh, Hartford, Frankfort.\n• Speaker 2\n  - # Speaker 2\n\nLooks like only.\n• Speaker 1\n  - # Speaker 1\n\nUS cities I think.\n  - Okay, so now you see it looks.\n• Speaker 2\n  - # Speaker 2\n\nLooks like.\n  - Well, okay, let's take another example.\n• Speaker 1\n  - # Speaker 1\n\nNo country, you see all cities from different country.\n  - Ararat, Astrakhan, Baghdad, you see Bishkek, you see Bratislava.\n• Speaker 2\n  - # Speaker 2\n\nSo from different countries from.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so if you set some city.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 379 ---\n\nCountry will be populated automatically in this case.\n• Speaker 1\n  - # Speaker 1\n\nBut if you clear country, city was cleared automatically.\n  - So if we provide some country like Bangladesh, you will see \nonly filtered cities.\n• Speaker 2\n  - # Speaker 2\n\nLet's go to our states.\n• Speaker 1\n  - # Speaker 1\n\nNow we have to search for Seattle.\n• Speaker 2\n  - # Speaker 2\n\nYes, you see it finds and filter works well.\n  - So this type of filtering can be.\n• Speaker 3\n  - # Speaker 3\n\nDone not only for citizen countries.\n  - For example, you can make two connected hookups.\n• Speaker 1\n  - # Speaker 1\n\nOne is type of document and second one is for example subtype.\n• Speaker 3\n  - # Speaker 3\n\nAnd subtype should have a lookup column.\n• Speaker 1\n  - # Speaker 1\n\nReferencing to corresponding type.\n• Speaker 3\n  - # Speaker 3\n\n--- Page 380 ---\n\nAnd in this case when user specifies type, it will be technically possible to.\n• Speaker 1\n  - # Speaker 1\n\nFilter subtypes according to selected type.\n  - But this canonic example with countries and cities, I think it's the easiest \nto.\n• Speaker 2\n  - # Speaker 2\n\nUnderstand examples so you can also use it.\n• Speaker 1\n  - # Speaker 1\n\nDon't forget about business rules triggering by changing country.\n  - So save it.\n• Speaker 2\n  - # Speaker 2\n\nHave one more session tomorrow that will.\n• Speaker 1\n  - # Speaker 1\n\nBe dedicated to our client side.\n• Speaker 2\n  - # Speaker 2\n\nI plan to show you how to.\n• Speaker 1\n  - # Speaker 1\n\nMake details and also probably answer your questions if appear.\n  - If you ask something about some cases with \nprogramming inside of our pages in Freedom UI later we probably will also invest a bit of time into classic.\n• Speaker 2\n  - # Speaker 2\n\nUI examples and I think you'll be.\n  - --- Page 381 ---\n• Speaker 1\n  - # Speaker 1\n\nInterested in migration from Classic UI to Freedom ui.\n  - It will be only client side, so objects will be the same.\n• Speaker 3\n  - # Speaker 3\n\nThank you very much for your time.\n• Speaker 2\n  - # Speaker 2\n\nToday our session is over.\n  - In case.\n• Speaker 1\n  - # Speaker 1\n\nEnvironments, with your homework, tell me please.\n  - It's important for me to know.\n• Speaker 4\n  - # Speaker 4\n\nI have one.\n  - Did we go over.\n• Speaker 1\n  - # Speaker 1\n\nYou probably asked about something that you.\n• Speaker 2\n  - # Speaker 2\n\nAlready saw in Classic UI with overriding of methods or this is something else.\n  - So can you explain the business \nexample?\n• Speaker 4\n  - # Speaker 4\n\n--- Page 382 ---\n\nNo, sorry, I just saw it on the list on.\n  - So you know you have the list of the breakdown of each day.\n• Speaker 1\n  - # Speaker 1\n\nOh, you mean this one?\n• Speaker 2\n  - # Speaker 2\n\nThis is.\n• Speaker 1\n  - # Speaker 1\n\nYeah, yeah.\n  - So this schedule is a bit outdated unfortunately.\n• Speaker 4\n  - # Speaker 4\n\nThat's it.\n• Speaker 1\n  - # Speaker 1\n\nIt was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui.\n  - In Classic UI you \ncould rewrite or interfere into some life cycle stages of page by replacing its like critically important methods.\n• Speaker 2\n  - # Speaker 2\n\nOwn methods, but system does not allow.\n• Speaker 1\n  - # Speaker 1\n\nYou to significantly change this life cycle.\n  - So it looks like I tried and.\n• Speaker 2\n  - # Speaker 2\n\nIt looks like when you have for.\n  - --- Page 383 ---\n• Speaker 1\n  - # Speaker 1\n\nExample some handler and you already know that there is a base product handler which is declared somewhere in \nparent.\n• Speaker 2\n  - # Speaker 2\n\nTemplates, you cannot replace it with your own.\n  - Rejecting execution of all parent implementation.\n• Speaker 1\n  - # Speaker 1\n\nSo in Freedom UI you can write your own part and it will be.\n• Speaker 2\n  - # Speaker 2\n\nJust part of all the steps executed.\n• Speaker 1\n  - # Speaker 1\n\nIn total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol, I think so in Freedom UI we have different conditions for programming.\n  - I plan to update this program for.\n• Speaker 2\n  - # Speaker 2\n\nOur sessions and it's a bit outdated.\n• Speaker 1\n  - # Speaker 1\n\nHere, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural.\n  - So \nwhen you do simple settings, then.\n• Speaker 2\n  - # Speaker 2\n\nYou do a bit more complex.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 384 ---\n\nAnd so our flow of real topics that we study, I think it's quite optimal for current version.\n• Speaker 4\n  - # Speaker 4\n\nThanks Mario.\n• Speaker 1\n  - # Speaker 1\n\nThank you Paddy for questions and any.\n• Speaker 2\n  - # Speaker 2\n\nAny, any difficulties with your Homework.\n• Speaker 1\n  - # Speaker 1\n\nWhen you do examples, when you make your sections, Maybe.\n  - Maybe you have something to say.\n• Speaker 3\n  - # Speaker 3\n\nIt happens that most of our participants watch videos like you now and then they decided to process video files \nmuch later than finishing of the sessions.\n  - So I recommend you to invest some time between the sessions to watch \nvideos and practice.\n• Speaker 3\n  - # Speaker 3\n\nSo at the end of the sessions next week, I will explain you some details how we will prepare for the exam, how it will \nbe organized and this is optional thing.\n  - So if you feel confident, you may apply for it.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 385 ---\n\nOr 50 minutes to get this video.\n• Speaker 3\n  - # Speaker 3\n\nThank you and goodbye.\n  - See you tomorrow.\n• Speaker 1\n  - # Speaker 1\n\nIt.\n  - --- Page 386 ---\n• Speaker 1\n  - # Speaker 1\n\nSo today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items.\n  - And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nAnd you can see that for one main account record we can save unlimited number of addresses.\n  - So we can put \nunlimited number of addresses here and they will be usually displayed in a list.\n• Speaker 1\n  - # Speaker 1\n\nSo one account connected to as many detail records.\n  - And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records.\n• Speaker 1\n  - # Speaker 1\n\nWe have contacts list, we have also emails or sorry, we have probably it's better to say communications.\n  - If you go to \ncontacts open any record, you will see communications detail.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's how we can select a company and to see all its connected contacts.\n  - So usually connection is one too \nmany.\n• Speaker 1\n  - # Speaker 1\n\nAnd some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details.\n  - So this is nothing special for you.\n• Speaker 1\n  - # Speaker 1\n\nIn our realty business, we definitely need to speak with potential customers.\n  - We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental.\n• Speaker 1\n  - # Speaker 1\n\nSo let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object.\n  - So new object requires new good working friendly code.\n• Speaker 1\n  - # Speaker 1\n\nWe can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required.\n  - We have no default values here, but we have a special lookup behavior.\n• Speaker 1\n  - # Speaker 1\n\nBut in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted.\n  - So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 388 ---\n\nSo here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically.\n  - This is performed by help of foreign key at the database and with option cascade on delete.\n• Speaker 1\n  - # Speaker 1\n\nSo we can call this colon visit date time.\n  - We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord.\n• Speaker 1\n  - # Speaker 1\n\nSo potential customer is a person who probably will buy a house or will rent an apartment.\n  - So potential customer, we \ndon't know who it is.\n• Speaker 1\n  - # Speaker 1\n\nSo we have an option do not control integrity which means please do not create foreign keys by default.\n  - When you \ncreate a lookup column foreign key is created automatically.\n• Speaker 1\n  - # Speaker 1\n\nSo such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal.\n  - But it's very rare case when you remove contact who \npreviously was a user of your system.\n• Speaker 1\n  - # Speaker 1\n\nSo for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity.\n  - So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why they decided to make it with no foreign keys.\n  - For created by and for modified by and such behavior \nwas inherited from base lookup.\n• Speaker 1\n  - # Speaker 1\n\nIn this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source.\n  - So here we have just standard situation \npotential customer based on contact.\n• Speaker 1\n  - # Speaker 1\n\nSo comment after a visit could be really helpful if you want to proceed with this realty.\n  - So we can have a comment \nas a text field, very simple, not required and just text value.\n• Speaker 1\n  - # Speaker 1\n\nSo now you can see pages tab and we have to specify edit page for our reality visit.\n  - Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page.\n• Speaker 1\n  - # Speaker 1\n\nSo reality visit form page Its parent packages realty template is mini page.\n  - Great, now we have to use existing \ncolumns.\n• Speaker 1\n  - # Speaker 1\n\nThe answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user.\n  - So we can hide this column so we cannot show it on the page.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be just hidden, it will be not shown on the page and our reality visit page will look like this.\n  - We can see why \nis there a red asterisk beside visit date and time and parent realty.\n• Speaker 1\n  - # Speaker 1\n\nThis is very common for details and creature to hide parent column from the page at all.\n  - So we can save our page \nnow.\n• Speaker 1\n  - # Speaker 1\n\nWhen you edit, you want to specify totally another set of columns.\n  - It could be used.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why we have this option multiple pages based on specific field value.\n  - So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting.\n• Speaker 1\n  - # Speaker 1\n\nOkay, finally we finished and we can publish our object again.\n  - As you can see, we have to do it twice.\n• Speaker 1\n  - # Speaker 1\n\nBut in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not.\n  - In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object.\n• Speaker 1\n  - # Speaker 1\n\nWe have another options like finding your corresponding form page and open it from configuration section to be the \nsame result.\n  - Or you can achieve the same result if you go to settings page physically system designer.\n• Speaker 1\n  - # Speaker 1\n\nI prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it.\n  - That's why it's called expanded.\n• Speaker 1\n  - # Speaker 1\n\nOf course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail.\n  - It immediately shows us set of columns.\n• Speaker 1\n  - # Speaker 1\n\nAnd there is no horizontal scrolls in classic UI and only 24 available columns to be displayed.\n  - So freedom UI is more \nflexible here.\n• Speaker 1\n  - # Speaker 1\n\nAnd if it has some data, they will also see corresponding data and they will see what they expect.\n  - So here is our list.\n• Speaker 1\n  - # Speaker 1\n\nIn reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this.\n  - So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty.\n• Speaker 1\n  - # Speaker 1\n\nWe can also program bulk actions for list.\n  - So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions.\n• Speaker 1\n  - # Speaker 1\n\nOf course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically.\n  - But here we have important setting which column values to set.\n• Speaker 1\n  - # Speaker 1\n\nSo please remember this is filling of a column that is used for connection between visits and our realty.\n  - Okay, great.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 393 ---\n\nIf other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails.\n  - So let's make a quick test of how our detail works.\n• Speaker 1\n  - # Speaker 1\n\nWe can copy this data, save it, check it out.\n  - You see the parent reality is copyable.\n• Speaker 1\n  - # Speaker 1\n\nMaybe it will help our system to work more correctly.\n  - Something unusual happens with my browser, with my app.\n• Speaker 1\n  - # Speaker 1\n\nWe have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid.\n  - Without being afraid of something can be lost in the middle.\n• Speaker 1\n  - # Speaker 1\n\nAnd we will sync changes which means pull and push to common repository.\n  - And now it's okay, it's done.\n• Speaker 1\n  - # Speaker 1\n\nAnd also you can use business rules if you want to do Some kind of filtering or simple fields hiding or showing.\n  - You \ncan use all the features.\n• Speaker 1\n  - # Speaker 1\n\nSo inline edit should be disabled.\n  - So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user.\n• Speaker 1\n  - # Speaker 1\n\nAnd possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications.\n  - So let me explain what I plan to do right now.\n• Speaker 1\n  - # Speaker 1\n\nFor example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it.\n  - So we need one more extra column at our accounts section.\n• Speaker 1\n  - # Speaker 1\n\nYou may now see some very strange package automatically created and system does not allow us to change it.\n  - And \nthis strange package will be used.\n• Speaker 1\n  - # Speaker 1\n\nBut you need to know how technically this is done and where it will be finally saved.\n  - And how to for example, turn \nyour system back to its previous step, previous stage.\n• Speaker 1\n  - # Speaker 1\n\nSo I attract your attention that we will finally receive new package.\n  - Our customization will be saved as a special type \nof item into this new package.\n• Speaker 1\n  - # Speaker 1\n\nSo everything's good.\n  - We can even edit inline edit.\n• Speaker 1\n  - # Speaker 1\n\nAnd once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it.\n  - And such items are not so easy.\n• Speaker 1\n  - # Speaker 1\n\nLet's open it.\n  - Maybe we'll understand it better when we open it.\n• Speaker 1\n  - # Speaker 1\n\nParent object is account and replacing Object code is absolutely the same.\n  - This is important rule of creature \narchitecture.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes.\n  - So I think that this editor should not \nallow you to modify code in case if you work with replace an object.\n• Speaker 1\n  - # Speaker 1\n\nAnd in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range.\n  - For example, if original type was text 200, then potentially you can extend it to text 500.\n• Speaker 1\n  - # Speaker 1\n\nSo we cannot rename inherited columns.\n  - We can only change its title.\n• Speaker 1\n  - # Speaker 1\n\nIn total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases you can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only.\n  - So three levels of access rights protection and when you make a \nreplacement object you can also change such permission set.\n• Speaker 1\n  - # Speaker 1\n\nThis can be done.\n  - You can see it clearly if you go to configuration section.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 397 ---\n\nBut then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently.\n  - So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it.\n• Speaker 1\n  - # Speaker 1\n\nSo if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles.\n  - Final structure of account is formed by its origin plus all the replacements.\n• Speaker 1\n  - # Speaker 1\n\nReplacing object uses existing table and adds new columns there.\n  - If you will remove replacing object from your \nsystem, logically your new column will disappear physically.\n• Speaker 1\n  - # Speaker 1\n\nAnd Adrian is asking very interesting question which I plan to move on here.\n  - So you work with some account page \nand you would like to keep your settings saved in a proper place.\n• Speaker 1\n  - # Speaker 1\n\nBy default, system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app.\n  - But obviously you may not want to work with such many packages.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 398 ---\n\nSo your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system?\n  - And the answer is yes, we can manage this.\n• Speaker 1\n  - # Speaker 1\n\nBut if you know that it exists, so you will enable it.\n  - Of course, package installed application and we will provide the \nsame name for our lookup and try to save it.\n• Speaker 1\n  - # Speaker 1\n\nSo any new customization that we do in customer360 will fall into this package.\n  - We don't really want this, so we \nwant probably to remove this package at all.\n• Speaker 1\n  - # Speaker 1\n\nGo to advanced settings.\n  - And now you see our dev Classic package is connected to this app and we can see \nproperties of this package.\n• Speaker 1\n  - # Speaker 1\n\nWe want to get rid of it and we will continue customization of Customer360 in our classic package.\n  - Andreen, is it \nwhat you were asking for?\n• Speaker 1\n  - # Speaker 1\n\nAs you can see, this transfer takes significant time because it looks like system performance performs a lot of \nchecks of items that we process and it makes sure that we have no other connections to this item.\n  - So it does\n\n--- Page 399 ---\n\nsomething like probably some excessive work.\n• Speaker 1\n  - # Speaker 1\n\nNow it's empty.\n  - It should not take a lot of time.\n• Speaker 1\n  - # Speaker 1\n\nOf course you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool.\n  - If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor.\n• Speaker 1\n  - # Speaker 1\n\nOkay, thank you for all of your active questions.\n  - Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics.\n• Speaker 2\n  - # Speaker 2\n\nHi.\n• Speaker 1\n  - # Speaker 1\n\nYes, hello.\n• Speaker 2\n  - # Speaker 2\n\nI have a. I have a small question I have.\n  - Yeah, so I said we use the two lookups.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 400 ---\n\nOkay.\n• Speaker 2\n  - # Speaker 2\n\nFirst one is for country and second one is for city.\n  - Right?\n• Speaker 1\n  - # Speaker 1\n\nSo what about which lookup you're interested?\n  - Is it the main realty or.\n• Speaker 2\n  - # Speaker 2\n\nYeah, main reality.\n  - We have country and city.\n• Speaker 1\n  - # Speaker 1\n\nDrop down type.\n• Speaker 2\n  - # Speaker 2\n\nNo country and city.\n• Speaker 1\n  - # Speaker 1\n\nThis one.\n  - So I can't hear.\n• Speaker 2\n  - # Speaker 2\n\nYeah, yeah.\n  - So we have a plus icon over there, right?\n• Speaker 1\n  - # Speaker 1\n\nSo you ask about if it's possible to manually create new city for this.\n  - --- Page 401 ---\n• Speaker 2\n  - # Speaker 2\n\nOkay, Can I, can we hide that button?\n  - Disable that button if possible.\n• Speaker 1\n  - # Speaker 1\n\nThis.\n  - Yes, sure you can.\n• Speaker 1\n  - # Speaker 1\n\nAnd you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects.\n  - So you need to get some basic understanding of how classic UI can be managed.\n• Speaker 1\n  - # Speaker 1\n\nOh, I'm not sure because it looks like this is hard coded thing.\n  - So possibly you may find somewhere in CSS value for \nthis color.\n• Speaker 1\n  - # Speaker 1\n\nSo you may try to replace actual storage of this image and you may design your own and that's how you will finally \nmake corresponding change.\n  - Rakhi, is it clear?\n• Speaker 1\n  - # Speaker 1\n\nSo this is part for core which Is not designed to be changeable by configuration changes.\n  - But if you really want, you \ncan replace files on disk with another ones and that's how you can do this.\n• Speaker 1\n  - # Speaker 1\n\nAnd if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session.\n  - In the current example, current package is not cached, so we may change it without logging out.\n• Speaker 1\n  - # Speaker 1\n\nIf you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache.\n  - So we need to do this restart.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have to be very careful with the code because code will not be able to change if we finish its input.\n  - And that's \nwhy we have to type it correctly from the first attempt.\n• Speaker 1\n  - # Speaker 1\n\nSo I will only change something like a name column.\n  - I will provide some minor change copyable setting, no any other \nsettings.\n• Speaker 1\n  - # Speaker 1\n\nNow we can edit it.\n  - And editing a section is much safer than creating it.\n• Speaker 1\n  - # Speaker 1\n\nToday's Friday and probably tired a bit.\n  - So copyable value type based on existing lookup, realty type or Classic UI \nDrop down list block behavior.\n• Speaker 1\n  - # Speaker 1\n\nBy the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui.\n  - Comment here in their name is comment.\n• Speaker 1\n  - # Speaker 1\n\nWe have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary.\n  - And \nlet's go back keep it simple and save the changes.\n• Speaker 1\n  - # Speaker 1\n\nSo we have much more objects for classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects.\n  - And we have more tables for this for the database.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's go to another page.\n  - Go to reality classic page.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 404 ---\n\nSo okay, let it be Paris Ren.\n  - The type is apartment.\n• Speaker 1\n  - # Speaker 1\n\nThis one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package.\n  - So this is important step because such data also should travel to our test and \nproduction.\n• Speaker 1\n  - # Speaker 1\n\nThis one will be about position of a module in Workplace.\n  - Let's check Reality Realty Classic.\n• Speaker 1\n  - # Speaker 1\n\nBecause it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this.\n  - So \nsome browsers does not.\n• Speaker 1\n  - # Speaker 1\n\nWe have different approach for setting up columns.\n  - So we can provide column settings type.\n• Speaker 1\n  - # Speaker 1\n\nYou can find it here reload and that's how we can change and transport Classic UI columns setup to test and\n\n--- Page 405 ---\n\nproduction.\n  - This one is saved in sysprofile data at the same with details.\n• Speaker 1\n  - # Speaker 1\n\nAlso it will be renamed on disk in our dev classic package.\n  - You will see realty classic section.\n• Speaker 1\n  - # Speaker 1\n\nAfter we do this we can bind columns to our package creating one more data item in our classic section data was \nbound successfully close it.\n  - Now we have to review what we got in our package in order to remove previously \ncreated unnecessary data item here old one is not needed anymore because it represents old values, old settings \nwhich will be not so practical.\n• Speaker 1\n  - # Speaker 1\n\nSo when you rename client modules because of ugly names, take care about quest API column settings because \nyou will probably have to review them afterwards.\n  - Okay, so final quick brief look at our client modules in Classic ui.\n• Speaker 1\n  - # Speaker 1\n\nSo our functionality is now in parent one and all the buttons for classic UI section, like new actions, view buttons, \ngrid folders, feature tag, everything is inherited.\n  - That's why we do not need to customize it and that's why this code is \nso small.\n• Speaker 1\n  - # Speaker 1\n\nSo if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually.\n  - And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it.\n• Speaker 1\n  - # Speaker 1\n\nI can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you.\n  - Okay, that's all for today.\n• Speaker 1\n  - # Speaker 1\n\nAs a final step for today, it looks like I unnecessary caused it.\n  - I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number six of our development on Creature Platform Guided Learning.\n  - Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration.\n• Speaker 1\n  - # Speaker 1\n\nBut in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui.\n  - And most development is focused on Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nThen you can create a handler as a function add methods section.\n  - And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data.\n• Speaker 1\n  - # Speaker 1\n\nUnfortunately we don't have any automated procedures for this.\n  - And especially this becomes additionally complex if \nyou have some programmed code in Classic ui.\n• Speaker 1\n  - # Speaker 1\n\nSuch items which have section in their name or page in their name, they usually designed as Classic ui.\n  - If you look at \nthe pages and you see form page or list page, it's a Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 408 ---\n\nAt the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes.\n  - So server side part will remain the same.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be possible to switch.\n  - First of all, I need to tell you about some important settings related to such view.\n• Speaker 1\n  - # Speaker 1\n\nSo let me show you system settings and this system setting is called like Freedom use Freedom UI interface.\n  - This \nsetting generally turns on or off this background frame stuff.\n• Speaker 1\n  - # Speaker 1\n\nAnd we can also go to Workplace Management System Designer.\n  - This page go to Workplace System Setup.\n• Speaker 1\n  - # Speaker 1\n\nSo we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections.\n  - It's still supported.\n• Speaker 1\n  - # Speaker 1\n\nFor example, some users are really stick to some Classic UI solutions.\n  - They are not ready to switch to Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nSo this is a page which will be temporary important for you, so it will be not forever for you.\n  - And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it.\n• Speaker 1\n  - # Speaker 1\n\nSo how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way.\n  - So let's go to Settings, then go to Application Hub so we can create new app.\n• Speaker 1\n  - # Speaker 1\n\nWe can compose kind of icon for it.\n  - And we will use this very important feature link to an existing object.\n• Speaker 1\n  - # Speaker 1\n\nIt only uses existing object and then creates several client module.\n  - So I don't expect it to last longer than 20 \nseconds.\n• Speaker 1\n  - # Speaker 1\n\nWe can hide unnecessary columns.\n  - We can add the columns that we need you.\n• Speaker 1\n  - # Speaker 1\n\nI prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools.\n  - So I always want to check what is going on there.\n• Speaker 1\n  - # Speaker 1\n\nForm page is Freedom UI edit page for a section for an object.\n  - And as you can see it has its own properties in our \npackage code title.\n• Speaker 1\n  - # Speaker 1\n\nSo you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it.\n  - Okay, so in \ngeneral it looks like this.\n• Speaker 1\n  - # Speaker 1\n\nThere is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui.\n  - So if such logic exists, you will have to reprogram it Working at code source code part of the client module.\n• Speaker 1\n  - # Speaker 1\n\nThis is a result of some browser cache issues.\n  - Okay, let's cancel this log out, log in, go to Freedom UI section.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 411 ---\n\nNow let's go to Studio Realty Classic and Migration is somewhere at the Antifa world.\n  - I expect to see my sections on \ntheir places.\n• Speaker 1\n  - # Speaker 1\n\nSo you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages.\n  - But having the data stuff the same.\n• Speaker 1\n  - # Speaker 1\n\nSo it's really hard to.\n  - Now we switched to Freedom UI and that's why Classic UI edit page is not working normally.\n• Speaker 1\n  - # Speaker 1\n\nSo finally when you do migration, you will use this help of Application Hub.\n  - You will get new package for your \nmigrated stuff.\n• Speaker 1\n  - # Speaker 1\n\nSo server side part of your migrated stuff will be the same and you just need to check that it still works as expected.\n  - In case of any questions, I would be happy to hear.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 412 ---\n\nYeah, I have a question.\n  - Is realty.\n• Speaker 1\n  - # Speaker 1\n\nCurrently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it.\n  - So \nit's like you have an old PC and new PC and you think about installing some program.\n• Speaker 1\n  - # Speaker 1\n\nBecause in Freedom UI you have in like in several times more available.\n  - No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on.\n• Speaker 2\n  - # Speaker 2\n\nThanks Amelia.\n• Speaker 1\n  - # Speaker 1\n\nThank you Paddy.\n  - Thank you for your question.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have some tools as I showed you that intended to help you with it.\n  - But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have.\n  - Probably so anyone I\n\n--- Page 413 ---\n\nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios.\n• Speaker 1\n  - # Speaker 1\n\nSo probably I have to start that in any package.\n  - Now we see we have some set of items of different types.\n• Speaker 1\n  - # Speaker 1\n\nSo object is a server side item, but its changes are applied easily without need to compile.\n  - So generally C code is not \nso let's say heavily used for objects and replacing objects.\n• Speaker 1\n  - # Speaker 1\n\nFinally to compile and get executable DLL libraries and then use such libraries at its website.\n  - So C Sharp sources \ndefinitely require compilation.\n• Speaker 1\n  - # Speaker 1\n\nIn general, it's recommended to have as less as possible for code in your processes.\n  - Because processes are \noriginally designed to be a no code tool and possibility to code into it.\n• Speaker 1\n  - # Speaker 1\n\nData is also metadata, not compiled and import.\n  - We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff.\n• Speaker 1\n  - # Speaker 1\n\nSo in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into.\n  - Let me show you what they are turned into DLLs that you can find in Bin folder here.\n• Speaker 1\n  - # Speaker 1\n\nWe will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it.\n  - I \nintentionally avoid making our own C Sharp sources at the beginning.\n• Speaker 1\n  - # Speaker 1\n\nOr maybe it's better to say lookup package installed application.\n  - It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have.\n• Speaker 1\n  - # Speaker 1\n\nI need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system.\n  - And in general business \nprocesses are interpreted.\n• Speaker 1\n  - # Speaker 1\n\nAnd we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items.\n  - Okay, let's start.\n• Speaker 1\n  - # Speaker 1\n\nSo my business sense is to make a process which will do some calculation at server side.\n  - And my calculation will \ninclude selecting some data and calculating average price for realty record.\n• Speaker 1\n  - # Speaker 1\n\nIf not just type Minus which means you are only watching and I can do it faster.\n  - Okay, thank you.\n• Speaker 1\n  - # Speaker 1\n\nSo if your process has no incoming flow, it means it's the start of your process.\n  - So take care.\n• Speaker 1\n  - # Speaker 1\n\nIn general, you know that Business Process Editor has two types of items that you can add.\n  - System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side.\n• Speaker 1\n  - # Speaker 1\n\nYou can also consider going to our customization course where my colleagues teach how to manage processes.\n  - So \nwhat my plan is I user.\n• Speaker 1\n  - # Speaker 1\n\nNow you see when you slightly move it then you correctly put it on the flow.\n  - So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly.\n• Speaker 1\n  - # Speaker 1\n\nSo now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method.\n  - It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so I copy and paste this code to the editor.\n  - We can also expand this editor to see like in more comfortable \nways.\n• Speaker 1\n  - # Speaker 1\n\nProbably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou.\n  - Then you can just make corresponding setting and run corresponding methods.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so I will save my code example.\n  - It's not finished yet.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you a bit more examples like apartment in will be an apartment for sale.\n  - Okay.\n• Speaker 1\n  - # Speaker 1\n\nWe need to take into consideration only records with a certain type in order to split apartments from houses.\n  - And \ndefinitely we have to filter data according to offer type splitting sales from rentals.\n• Speaker 1\n  - # Speaker 1\n\nAnd physically how we do this is the C Sharp code written in this editor.\n  - And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so let me explain in general what is happening here.\n  - I plan to operate with creation database.\n• Speaker 1\n  - # Speaker 1\n\nAnother approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model.\n  - So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model.\n• Speaker 1\n  - # Speaker 1\n\nAlso Entity schema query supports caching at server side.\n  - If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient.\n• Speaker 1\n  - # Speaker 1\n\nEntity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database.\n  - It has some arguments when we run its constructor.\n• Speaker 1\n  - # Speaker 1\n\nAlso you may ask me if we type this code like this how we know about present functions, methods properties and so \non.\n  - We have some Academy server side documentation.\n• Speaker 1\n  - # Speaker 1\n\nWe only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here.\n  - So let's look at our reality Object just to match our columns we need to select price and area.\n• Speaker 1\n  - # Speaker 1\n\nSo it's better to always add only columns into your selection which you really need to analyze later.\n  - In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns.\n• Speaker 1\n  - # Speaker 1\n\nBut it's possible you can use this argument as a special column path expression.\n  - Column path may include joins if \nyou use lookup columns of your main entity.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 419 ---\n\nSo we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to.\n  - Or in this case it looks like \nyou select cities and you would like to join all accounts from this city.\n• Speaker 1\n  - # Speaker 1\n\nI plan to get corresponding values for my filters with the help of no code tools.\n  - So I expect to get such values.\n• Speaker 1\n  - # Speaker 1\n\nBecause we know for sure that by default our ESQ filters has end logical connection logical conjunction operator.\n  - That's why we have it without any special setting.\n• Speaker 1\n  - # Speaker 1\n\nSo when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data.\n  - This is getentity collection method, which finally returns \nas some collection.\n• Speaker 1\n  - # Speaker 1\n\nSo generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database.\n  - So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 420 ---\n\nAnd as we get this collection, we have to process it line by line.\n  - So we can use for each statement or there are other \nways to process collection.\n• Speaker 1\n  - # Speaker 1\n\nSo simply speaking, this is the line how we get exact decimal price from our data.\n  - And next line is getting the same \napproach for getting decimal area.\n• Speaker 1\n  - # Speaker 1\n\nCurrently it looks like our code is ready.\n  - We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish.\n• Speaker 1\n  - # Speaker 1\n\nC Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part.\n  - The best way to do this is to use parameters.\n• Speaker 1\n  - # Speaker 1\n\nAnd when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type.\n  - So I copy its name \nshow it for you Go to process parameters.\n• Speaker 1\n  - # Speaker 1\n\nSo creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal.\n  - So add decimal parameter and I will do it like this.\n• Speaker 1\n  - # Speaker 1\n\nSo my plan is to use as much as possible of no code here.\n  - And for example we can select a source certain record or \nwe can open certain page.\n• Speaker 1\n  - # Speaker 1\n\nIt will be also unique identifier so we can call it realty ID parameter and here its title will be reality id.\n  - Title is \nimportant for user display and code is important for programming.\n• Speaker 1\n  - # Speaker 1\n\nWhat we will do with this id, I will use a bit of no code tools.\n  - Read read data item carefully placing it on my diagram.\n• Speaker 1\n  - # Speaker 1\n\nThis filter will be enough to make read data to select just single record from my database and we can name it read \nreality.\n  - Read reality will be its title and it will be also shown here.\n• Speaker 1\n  - # Speaker 1\n\nWe are interested in type and offer type.\n  - So originally we expect to get only ID of the certain reality record.\n• Speaker 1\n  - # Speaker 1\n\nSo we will use getting data from read data into process level parameters and we can do it easily with formula.\n  - Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to.\n• Speaker 1\n  - # Speaker 1\n\nMy process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id.\n  - So parameter target parameter is offer type ID and form of value takes data \nfrom process elements.\n• Speaker 1\n  - # Speaker 1\n\nSo if anything should be shown or explained, tell me please.\n  - If it's not clear what we are doing also please ask.\n• Speaker 1\n  - # Speaker 1\n\nSo Monica, if any assistance needed, just tell me that we know now.\n  - You see, I saved my process and I did not \nexplain what is happening here.\n• Speaker 1\n  - # Speaker 1\n\nYou saw dotnet Xeno you see.\n  - So here we have parts of.\n• Speaker 1\n  - # Speaker 1\n\nSo now you see our realty package has initial setting compiled into a separate smart.\n  - This option means that our\n\n--- Page 423 ---\n\ncontents that we design in our.\n• Speaker 1\n  - # Speaker 1\n\nThen we have method inside of it and you can see oh, this method is a constructor.\n  - Okay, not so interesting.\n• Speaker 1\n  - # Speaker 1\n\nBut until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code.\n  - But you may just trust me that finally this code includes business logic and our class stuff here.\n• Speaker 1\n  - # Speaker 1\n\nSo we have this set of C files and bin folder here turns into this DLL.\n  - So now you see 11 megabytes of executable \ncode, which is quite a lot.\n• Speaker 1\n  - # Speaker 1\n\nYes, I understand this idea, but I do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value.\n  - So possibly we \ncan do this.\n• Speaker 1\n  - # Speaker 1\n\nWith this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed.\n  - And so I think that our example will lack obviousness and lack visibility of what is going \non.\n• Speaker 2\n  - # Speaker 2\n\nI have a quick question about the.\n• Speaker 1\n  - # Speaker 1\n\nDLLs if that's okay.\n  - I do.\n• Speaker 2\n  - # Speaker 2\n\nIs it possible when we're creating them this way that we can call other DLLs maybe outside of this package?\n• Speaker 1\n  - # Speaker 1\n\nOkay, we can.\n  - Sure it's possible.\n• Speaker 1\n  - # Speaker 1\n\nAnd this will be normally compiled and executed.\n  - So it's quite common thing how you can add Other libraries and \nnamespaces with usings and these usings will form into.\n• Speaker 1\n  - # Speaker 1\n\nBut in real life, when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally.\n  - Please note if your system is saved in a state, that means you \nhave compilation errors.\n• Speaker 1\n  - # Speaker 1\n\nAnd you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors.\n  - So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully.\n• Speaker 1\n  - # Speaker 1\n\nI understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more.\n  - So \nthis is our page design.\n• Speaker 1\n  - # Speaker 1\n\nThis will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price.\n  - And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument.\n• Speaker 1\n  - # Speaker 1\n\nIn previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff.\n  - So realty will be recipient of our ID of currently edited record.\n• Speaker 1\n  - # Speaker 1\n\nWe can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do.\n  - Let's go back to actions list and we can check how it \nworks.\n• Speaker 1\n  - # Speaker 1\n\nSo let's make one more bulk action like cultivate average price.\n  - Our action will be again run process where.\n• Speaker 1\n  - # Speaker 1\n\nLet's just start to test it.\n  - So we can close the editor.\n• Speaker 1\n  - # Speaker 1\n\nSort by date of start, read set formulas, calculation finish.\n  - It looks like everything went correctly here.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so this one is our list Selected data Calculate average price successfully started.\n  - I expect to run only one \ninstance of a process here.\n• Speaker 1\n  - # Speaker 1\n\nBut in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations.\n  - I just wanted you to see how we can run this calculation for \nmultiple scenarios.\n• Speaker 1\n  - # Speaker 1\n\nYou see start and end date is status.\n  - We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance.\n• Speaker 2\n  - # Speaker 2\n\nI have a quick question, if that's okay.\n• Speaker 1\n  - # Speaker 1\n\nYes, yes, please.\n• Speaker 2\n  - # Speaker 2\n\nIt's just about business processes.\n  - So at the moment we're tying them to.\n• Speaker 1\n  - # Speaker 1\n\nIt's possible, sure.\n  - But I try to keep it simple and use it as possible of no code.\n• Speaker 2\n  - # Speaker 2\n\nI understand.\n• Speaker 1\n  - # Speaker 1\n\nI'm just curious manually.\n  - But yes, Later I will show you how we can trust trigger some business logic that will start \naccording to data change.\n• Speaker 1\n  - # Speaker 1\n\nSo you can do it in much more complicated way and trying to keep it simple.\n  - Because we are studying.\n• Speaker 2\n  - # Speaker 2\n\n--- Page 428 ---\n\nThanks a million.\n• Speaker 1\n  - # Speaker 1\n\nThank you.\n  - See you soon.\n• Speaker 1\n  - # Speaker 1\n\nToday is session number nine of our development on Creature platform guided learning.\n  - And today we will continue \nto study server side and we'll move on with integration tools.\n• Speaker 1\n  - # Speaker 1\n\nSo what we'll study today, how to use standard platform level tools to operate with data with the help of HTTP \nqueries.\n  - And we will discuss and I will show you examples of how to work with standard tools.\n• Speaker 1\n  - # Speaker 1\n\nSo don't be shy, ask any questions if you feel something that you need to know and let's move on.\n  - So integrations \nwith data tools.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see we have other options to integrate with creation.\n  - We have two options for data transfer such called \nCRUD operations which means create, read, update and delete.\n• Speaker 1\n  - # Speaker 1\n\nIt's very specific to creature, but it offers you more options, more possibilities, more complicated calculations.\n  - And \nthat's why data services used for creation of client side and data service in general is more powerful than ODATA \nand more complex to program.\n• Speaker 1\n  - # Speaker 1\n\nWe had the class on Freedom UI section, we can open its page and then we made an action to calculate average \nprice with the help of business process.\n  - You remember we did this calculation, we started process, now we have \nsome results, average price in dollars.\n• Speaker 1\n  - # Speaker 1\n\nSo if interested, you can just watch yesterday video and get more details.\n  - So today we'll focus on data transfer \nintegration options.\n• Speaker 1\n  - # Speaker 1\n\nWe have a lot of documentation about it and if interesting you can find much more.\n  - And we have examples, we have \nreferences.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so depending on what operation you need, you have to select the proper HTTP method, Get is used to select \npost for inserts, patch for updates, and HTTP Delete is used to perform physical delete operation.\n  - I will show you a \ncouple of examples and also you need to know that we have a lot of interesting documentation samples here.\n• Speaker 1\n  - # Speaker 1\n\nYou see, for different filters there are special expressions in let's say ODATA language.\n  - And so you can find a lot of \nexamples here.\n• Speaker 1\n  - # Speaker 1\n\nLet's read data from our reality object, but with the help of all data.\n  - First of all, I will use integration tool, I will use\n\n--- Page 431 ---\n\nPostman app and my yesterday cookies are not working anymore.\n• Speaker 1\n  - # Speaker 1\n\nWe provide login and password.\n  - No any special data, no any special headers.\n• Speaker 1\n  - # Speaker 1\n\nWe will have to make a selection of data records and we will make it get HTTP query.\n  - Let's do this.\n• Speaker 1\n  - # Speaker 1\n\nIf I provide no any parameters, system will try to read all of the data with all of the records, all of the columns.\n  - Let's \ntry to do this and run send for get queries we do not need to use BPM CSRF protection.\n• Speaker 1\n  - # Speaker 1\n\nAnd let me show you for example parameters for selecting data collection instance selected fields.\n  - So here I can see \nan example and it means dollar select so question dollar select and then we have columns with comma separated \nvalues to get necessary columns.\n• Speaker 1\n  - # Speaker 1\n\nYou see only requested columns.\n  - Now here and we can see all of the data.\n• Speaker 1\n  - # Speaker 1\n\nIn case if you will try to run such query in your browser, you do not need authentication because usually your browser \nis already authenticated in creation and you keep running session running pages of your creation in your browser.\n  - And that's why you don't usually need to prepare separate separate authentication for it.\n• Speaker 1\n  - # Speaker 1\n\nThen usr realty is also part of endpoint and it gives information to data what exact object you plan to operate with.\n  - Then I have to look at body row JSON and we have to provide some data for example USR name.\n• Speaker 1\n  - # Speaker 1\n\nNow we can go to our main app, sort by date of creation and we will immediately see that our data was added and \nwe can also check column values.\n  - Here you see price was added, we see column was added correctly.\n• Speaker 1\n  - # Speaker 1\n\nSo let's try to add very big number and it will be more than 1 billion.\n  - So we will see how system will react on this \nattempt.\n• Speaker 1\n  - # Speaker 1\n\nIn case if your task is to transport huge amounts of data, you have the only one option.\n  - This is your own \nprogramming of such data and your own parsing your data structures and your own database direct operations and \navoiding use of object model.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 433 ---\n\nSo you have to search for a better solution.\n  - So in case of big number of records to process, in case of very, let's say, \nhard speed requirements for your solution, the only suitable option is your own web service with your own data \nformats, your own direct database management without use of object model.\n• Speaker 1\n  - # Speaker 1\n\nAnd for some tasks I think it will work perfectly.\n  - But for some other tasks you may find that all data is not enough, \nmaybe because of hard load conditions you will finally realize that our data is not going perfect with hard, I would \nsay hardwood big amounts of data.\n• Speaker 1\n  - # Speaker 1\n\nSo it's appropriate way of operating with data using creature server side, it can do all the same operations like \ncreate, read, update and delete data and but it can do it a bit more efficiently.\n  - And also it supports different filter \ncondition macroses and it's much more rich when you need to select data from different tables, perform some \naggregations, perform some complex filtering.\n• Speaker 1\n  - # Speaker 1\n\nSo if you view source, you see a lot of settings and parameters that can be passed as arguments for data service.\n  - But it also has a response with a JSON.\n• Speaker 1\n  - # Speaker 1\n\nSo in documentation you will find that data service is promoted as integration tool.\n  - So it's a restful service.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 434 ---\n\nRecently created records are having more visits because we already had automatically creation for them.\n  - But also \nwe have.\n• Speaker 1\n  - # Speaker 1\n\nAdd the columns and instead of working with traditional set of columns we have in main object you can go to related \nobjects and then we will see all objects that are available for us according to lookup columns from main object and \nalso we will see reverse joins.\n  - We will see other entities that have lookup columns pointing to reality.\n• Speaker 1\n  - # Speaker 1\n\nIt's also possible to specify special conditions to select data.\n  - For example, we can only calculate number of records \nthat are in future or only visits where contact is specified.\n• Speaker 1\n  - # Speaker 1\n\nSo if you reload the data using this update refresh button, you see only one query was executed and if you go deeper \nin payload you will see that our column for calculation of aggregate number is also represented to the standard \ncolumn.\n  - Here we have some column path for it, some setting for Type of aggregation.\n• Speaker 1\n  - # Speaker 1\n\nSo in general folders work here like search folders in your outlook.\n  - So here we can specify some name and the filter \nconditions that will be useful for us to select only some searching data, not all of the data from our list.\n• Speaker 1\n  - # Speaker 1\n\nAnd aggregate filters will be used for selecting data applying conditions on connected records, not on reality data \nbut on connected records.\n  - In my case I plan to select only reality data where this visits count is greater or equal to\n\n--- Page 435 ---\n\nthree so we can make condition and here we have to select connected entity.\n• Speaker 1\n  - # Speaker 1\n\nSo in my case I will just do quantity calculation select and we have condition count greater or equal three that will be \nour filter condition.\n  - We also can make additional filters here like counting only visits in future or counting only visits \nwith not empty comment.\n• Speaker 1\n  - # Speaker 1\n\nWe use count for our aggregation so it will do selection only of records where some sub select some count of \nconnected data is greater than certain right expression and we have just value three here.\n  - So my example is to \ndemonstrate that data service web service is capable not only to read plain data from the data sections, but also it's \ncapable able to calculate aggregate columns and to use aggregate filters and you can use data service for your \nintegration.\n• Speaker 1\n  - # Speaker 1\n\nThen we go to postman create new actually you should be careful because data service is usually working with post \nqueries only.\n  - So we go to postman.\n• Speaker 1\n  - # Speaker 1\n\nThis is a post clear so we obviously will go will fail into CSRF protection if we do not care about it.\n  - So BPMCSRF \nheader and corresponding cookie value you should get it carefully copying full value and pasting it here.\n• Speaker 1\n  - # Speaker 1\n\nIn Classic UI we had an option to keep such code advanced mode and make this filtering like flying in the air without \nlanding anywhere in your system.\n  - But I personally think that this kind of advanced filter is not so good because once \nyou take time to build it, once you make complex conditions there is a highly likely situation then you will need it to \nsave.\n• Speaker 1\n  - # Speaker 1\n\nIf you don't like it you can also remove it.\n  - So I think it's not a problem.\n• Speaker 1\n  - # Speaker 1\n\nYou will need to remember data and save it somewhere.\n  - And in general it requires some quite strong professional \ndeveloper skills and architectural understanding of what you are doing.\n• Speaker 1\n  - # Speaker 1\n\nKeep some logging by yourself so it will be easier for you to detect and understand how actually it goes and do you \nhave any serious errors in your integration.\n  - So it's like a programmer task, but it's possible and in complex projects \nwe also do this and it works well.\n• Speaker 1\n  - # Speaker 1\n\nIt takes very little time to develop and gives quite quick and valuable results.\n  - Let me show you.\n• Speaker 1\n  - # Speaker 1\n\nJSON body this JSON body is also shown here for us and this JSON body represents some prices and I need to tell \nyou some physical sense of it.\n  - ID bank is one of the banks in Armenia and they sell gold bars, gold plates starting \nfrom 1 gram gold to up to 12 kilos gold, big gold slab and you see their prices are in local Armenian currency, \nArmenian drums.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 437 ---\n\nSo let's imagine we have a task to regularly get gold prices from this URL, from this API, save it in creatio and make it \npossible to run multiple times and correctly update such prices.\n  - I will use only no code tools for it and you will see \nhow we can do this.\n• Speaker 1\n  - # Speaker 1\n\nAnd in my case so I can also share with you this is kind of documentation but the most important we need example \nof call which works for us.\n  - Luckily we don't have any special protection, security or authentication necessary for this.\n• Speaker 1\n  - # Speaker 1\n\nWe will properly register our new third party web service here and then we'll be able to call this web service from our \nbusiness processes with the help of call web service item.\n  - This will not require actual development skills, but it \nrequires some engineering knowledge and understanding of HTTP queries and HTTP methods type and just a bit of \nunderstanding of JSON string and you will see that it's not very difficult.\n• Speaker 1\n  - # Speaker 1\n\nThis is classic package because our current package system setting points to it.\n  - But my plan is to save our data to \nfreedom UI realty package.\n• Speaker 1\n  - # Speaker 1\n\nThis will be saved as special metadata directly to the package.\n  - And we have a method here, so let's save it first.\n• Speaker 1\n  - # Speaker 1\n\nAnd in general one web service may have many methods so you can register them manually in order to use different \nfunctionality of the same web service.\n  - Get method the content type is JSON and response timeout is 5 seconds by\n\n--- Page 438 ---\n\ndefault, 5000 milliseconds means 5 seconds, no authentication necessary.\n• Speaker 1\n  - # Speaker 1\n\nIf you use get query like in our case you only can use method address parameters inside of this URL.\n  - If you use post, \nit's possible to fill in post body request body and it helps to get much more possibilities to transport different data \nvalues as arguments to your web service.\n• Speaker 1\n  - # Speaker 1\n\nSo if you do some operations with third party system which requires some authentication or requires some cookie \nfor like your user settings, then it's also possible to use it in your query.\n  - So it's very universal tool.\n• Speaker 1\n  - # Speaker 1\n\nSo my idea is to tell creatio how should I parse result data in order to extract specific values from it.\n  - So in my case \nresponse parameters can be added manually or we can use special very effective tool which is called quick setup \nand I will use example of my response body and give it to system in order to detect what are the possibilities, what \nare the possible values that we can get out from this example.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see it was it detected that I have two collections one is called cash sell it list of sell prices so bank sells \ngold bars and cash byte it looks like they have this data.\n  - But zeros tell us that possibly they are not really planning to \nbuy anything.\n• Speaker 1\n  - # Speaker 1\n\nThis is very important because in real life examples, for example, you can call some foreign currency exchange rate \nservice and you know, we have almost 200 of different world currencies and you may face maybe 4 or 5 or even \n1000 of records, 4 or 500 or thousands of records with different values and parameters as response.\n  - So it will be \nreally important for you to select only parameters that you really need to get from results of web service.\n• Speaker 1\n  - # Speaker 1\n\nBut using this quick setup tool by examples is much more efficient.\n  - So I have a root item here which represents a \ncollection is array.\n• Speaker 1\n  - # Speaker 1\n\nBecause we see that for all data values here it will be nice if we have an integer so we can treat results as integer \nand system will be okay with it.\n  - But when we go to rate and see some examples sometimes.\n• Speaker 1\n  - # Speaker 1\n\nSo if you really need so you can parse this data lately after you've got it from the web service and then later and then \nyou can save it as you wish.\n  - In my case I keep it simple.\n• Speaker 1\n  - # Speaker 1\n\nOkay, so this example takes result data and parses it and finally will present our data as collection of data records.\n  - We can save it.\n• Speaker 1\n  - # Speaker 1\n\nBut it will require some C sharp scripting for us in order to keep data in redis memory.\n  - For example, I prefer to make \nit more simplified and no code.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 440 ---\n\nThe minimum one usr rate will be our rate column text 50.\n  - You may ask me why text?\n• Speaker 1\n  - # Speaker 1\n\nOne more small step we can go to lookups and register this object as lookup.\n  - So we click lookups new lookup find \nour gold prices save it.\n• Speaker 1\n  - # Speaker 1\n\nWe can create new process name it like USR yet road price main process this is main process because I also plan to \nuse sub process to parse my collection.\n  - That's why I call this processes main process.\n• Speaker 1\n  - # Speaker 1\n\nAnd sometimes full response body will be important because it will be it will include everything obtained from third \nparty without any parsing Boolean success property and probably that's enough.\n  - And we also have a SO request \nbody but it looks like this is an input parameter and only for very specific cases.\n• Speaker 1\n  - # Speaker 1\n\nAnd first of all I will show you some error handling in case if our request finished successfully.\n  - We can turn this flow \ninto conditional flow by clicking on this change type button and then set conditional flow so we can name it okay \nand we can check condition.\n• Speaker 1\n  - # Speaker 1\n\nSo if we not successfully code our web service, no need to try to perform next steps.\n  - We just need to stop our so \nabort our process and use a separate terminate item because it will be stored in our history of execution so we will \neasily understand that it finished with an error.\n• Speaker 1\n  - # Speaker 1\n\nThis protection means that for delete data we must use some parameter.\n  - If we don't, this will not allow us to save \nprocess and it will show us errors.\n• Speaker 1\n  - # Speaker 1\n\nSo we delete prices from our storage and then we can use so we have a Collection and we have two options.\n  - To use \nno code approach with sub process to parse collection or to use C Sharp code in order to parse our collection with \nprogramming.\n• Speaker 1\n  - # Speaker 1\n\nSo realty package should be dependent from dev classic and dev classic package should not be dependent from \nrealty.\n  - Yes, looks good.\n• Speaker 1\n  - # Speaker 1\n\nSo we'll use parameters and I was a process to accept collection data values and I will make my process name USR \nadd gold price subprocess.\n  - So it will be my sub process to add the gold prices.\n• Speaker 1\n  - # Speaker 1\n\nThen we will use our process and our process structure will be really simple.\n  - We will just use one add data item.\n• Speaker 1\n  - # Speaker 1\n\nNow we will use an item called sub process and I will use this orange item and place it into my diagram.\n  - Normally \nwhen you want to run a single instance of a sub process, you just specify your sub process name and single \ninstance call means you have to transport.\n• Speaker 1\n  - # Speaker 1\n\nSo I click on this lightning button, select process parameter and then I will select process elements and our get gold \nprices call web service.\n  - It returns collection and we have corresponding weight column in this correction.\n• Speaker 1\n  - # Speaker 1\n\nBut in here we can just run the process and we are interested that in finishing it fully synchronously.\n  - No strong \nreasons to run it in background creating some scheduler executed tasks.\n• Speaker 1\n  - # Speaker 1\n\nLet's reload it by clicking on this icon and we have to start main process.\n  - Let's start it.\n• Speaker 1\n  - # Speaker 1\n\nSo we can click on show trace data.\n  - You will see all the parameters in your collection.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 443 ---\n\nAlso it makes sense to look at the columns of creation, date of creation.\n  - Okay, and now you see we have all obtained \ndata saved in creation.\n• Speaker 1\n  - # Speaker 1\n\nAnd finally we have a process which takes probably less than hour to develop with all the explanations and we \nsuccessfully got our data.\n  - If we start this process one more time, you will see in our lookups, you will see new data.\n• Speaker 1\n  - # Speaker 1\n\nMy next topic for today is to explain you how to use Clio tool and explain why you need it.\n  - So first of all I should \nexplain why we have some additional tools and not inside of the base platform.\n• Speaker 1\n  - # Speaker 1\n\nAnd so it has a lot of different, let's say quite technical purpose, which probably will be not necessary for end users.\n  - So developers used it for a long time.\n• Speaker 1\n  - # Speaker 1\n\nSo generally you can consider as this tool was written by Creation in general, but this tool has open source code.\n  - You \ncan easily not easily, but you can analyze its source code.\n• Speaker 1\n  - # Speaker 1\n\nBut you should keep in mind that this tool was written by developers of base product, so they had their own reasons\n\n--- Page 444 ---\n\nand needs to operate inside of base product.\n  - And now you will see this difference.\n• Speaker 1\n  - # Speaker 1\n\nI already have it dotnet tool list G this is command showing me existing installed dotnet core tools on my PC and \nClio is already installed here.\n  - Okay, I can remove it dotnet to uninstall Clio G It means remove it from my system.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's install it.net sorry to install Clio G this is command that you can type in your windows command terminal.\n  - This is two this is common to install Clio.\n• Speaker 1\n  - # Speaker 1\n\nI have suspect that the most early created functions are at the top of this list and the most recently lately created \nfunctions are at the end of this list, you will not need all of them.\n  - So it's like a universal tool.\n• Speaker 1\n  - # Speaker 1\n\nSo I already have some previous environments registered.\n  - I have to register my current environment.\n• Speaker 1\n  - # Speaker 1\n\nSo it will be included into this file and then you will refer to it by name.\n  - This is easier than providing URL, login and \npassword each time when you need to operate with target environment.\n• Speaker 1\n  - # Speaker 1\n\nWow, we have some troubles in this file line 41.\n  - Probably because I have some older versions of such settings.\n• Speaker 1\n  - # Speaker 1\n\nSo now we can do some simple operations with it.\n  - Cleoping and then we have different options.\n• Speaker 1\n  - # Speaker 1\n\nYou remember when we modified some objects, added new columns, we had to restart our app to properly apply \nsuch changes.\n  - So we had such scenarios in our training when we needed it.\n• Speaker 1\n  - # Speaker 1\n\nLet me switch find it should be somewhere here.\n  - Yeah.\n• Speaker 1\n  - # Speaker 1\n\nBut if you want to use all power of existing Clio commands, you must perform special command and this command \nis named Install gate.\n  - This Command downloads from NuGet and installs in your target system special package \nwhich keeps DLL inside.\n• Speaker 1\n  - # Speaker 1\n\nLet's try to run a command to install gate Clio install gate ED1 this is required in case if you want to enable full power \nof Clio commands.\n  - So in my case, I will do it in my source environment.\n• Speaker 1\n  - # Speaker 1\n\nSo system tried to compile and failed exceeded narrow try count work process.\n  - So our IIS prevented our system to \ncompile.\n• Speaker 1\n  - # Speaker 1\n\nYou can see its size 5 megabyte of executables not so little files Bin and here, here and here are DLLs included as \nfile content for this Clio Gate package.\n  - So such DLLs are used to execute Clio commands.\n• Speaker 1\n  - # Speaker 1\n\nAnd this will be comments to save and load environment settings and Sorry, Save and load packages.\n  - Let me show \nyou.\n• Speaker 1\n  - # Speaker 1\n\nSo I will check availability of my second environment and it looks like should be okay.\n  - Yes, looks like Bing is okay.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 447 ---\n\nNot only one but several packages from source environment.\n  - Destination path is somewhere like this guided dev.\n• Speaker 1\n  - # Speaker 1\n\nLet's try first system will save three packages into gz files organized into one single zip file and then it will be done \nand as you can see it makes it as a one operation if you do save manually saving of an app or saving of a separate \npackage.\n  - So you will have to perform it with separate structure steps.\n• Speaker 1\n  - # Speaker 1\n\nSo you see we have location packages more file descriptor more than one file app descriptor JSON what it is what \npackage it's about real to migration No, I don't know.\n  - So something wrong with application descriptors we can check \nit at our file system.\n• Speaker 1\n  - # Speaker 1\n\nSomething is strange here and it looks like probably system failed to work with it but it looks like it's not a big trouble \nand you see one more issue here parent schema and was not found yes, this is more serious trouble because it \nlooks like our target environment was not fully prepared to install our changes because it miss customer 360 app \npossibly previous error message that we had here previous message with this stuff here probably it was also \nmissing corresponding app and we used so our solution expects that target system will help customer360 in my \nexample customers current our target environment did not have customer 360 that's why we have this stuff.\n  - So in \norder to fix it of course we have to install customer360 first and then our solution next.\n• Speaker 1\n  - # Speaker 1\n\nBut now we can test our target environment.\n  - So usually we need to reload it.\n• Speaker 1\n  - # Speaker 1\n\nManual load can be done with new application and then install from file.\n  - Now we have successful installation.\n• Speaker 1\n  - # Speaker 1\n\nAnd if we ever try to compile our package on target environment, we may have very unpleasant situation when we \nwill try to compile old contents of C sources instead of actual one.\n  - So in order to make correct export of your \nsolution to test in production, we need to save everything on disk.\n• Speaker 1\n  - # Speaker 1\n\nIt will be not so hard and thank you for your time.\n  - So now I just plan to make it correctly with save and load and then \nif everything goes well, we will see our Apps we will see our functionality loaded to our target environment if \nsomething goes not as planned.\n• Speaker 1\n  - # Speaker 1\n\nSo sys module entity USR realty no then this module in workplace studio so violation of primary key.\n  - Oh, it's because \nof data binding which does not keep correct IDs but duplicate cases module in workplace.\n• Speaker 1\n  - # Speaker 1\n\nWe have classic we miss reality sections here because such data items were not loaded.\n  - I will show you how you \ncan fix it.\n• Speaker 1\n  - # Speaker 1\n\nIt looks like we already have sys module in workplace ID and it looks like this data entity was not good.\n  - So we have \nsome items here and we have key which was not ID and key was used by section and workplace.\n• Speaker 1\n  - # Speaker 1\n\nGreat, and we can save it.\n  - And we have a lot of warnings, but it's about existing date.\n• Speaker 1\n  - # Speaker 1\n\nNow we will have a bit better version of it.\n  - Okay, saved.\n• Speaker 1\n  - # Speaker 1\n\nLoader text takes zip file, takes information about its items, all the packages, all the items of configuration and it \nanalyzes date of modification.\n  - If date of modification of the loaded item is the same as date of modification of items \nthat you have already in your target environment, then it just skips it.\n• Speaker 1\n  - # Speaker 1\n\nActually only base product stuff.\n  - Okay, don't care, no errors.\n• Speaker 1\n  - # Speaker 1\n\nSo that's how you can deliver your solution to test and check it out and perform corresponding full scale test for your \nsystem to check how it works.\n  - Now you see details were filled in.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 450 ---\n\nSo this is example of how you can read list of contacts from your database.\n  - Of course your queries could be much \nmore complicated.\n• Speaker 1\n  - # Speaker 1\n\nAnd that's why now we don't have any fancy good looking tool to run SQL query from application user interface.\n  - But \nnow this is something that you can do.\n• Speaker 1\n  - # Speaker 1\n\nSplit editor.\n  - More actions.\n• Speaker 1\n  - # Speaker 1\n\nAs usual you will receive video recording of today's session.\n  - If you have any questions, ask today or prepare \nquestions for tomorrow.\n• Speaker 1\n  - # Speaker 1\n\nSo if you agree to run Fast track certification, you should just respond to my email and we will arrange individual \ndate and time for you to run your exam.\n  - Your exam will include check of the homework.\n• Speaker 1\n  - # Speaker 1\n\nYou will see the type of the homework Raki is asking will include.\n  - So let me quickly show.\n• Speaker 1\n  - # Speaker 1\n\nSo it requires some javascripting and C Sharp scripting.\n  - And so it will not take too much time for you, I think, and I \nhope that it will be clear.\n• Speaker 1\n  - # Speaker 1\n\nSorry for staying a bit later than usual and if you will have more questions, so prepare for tomorrow, we will have \ntime for this.\n  - Thank you very much for today's session and goodbye.\n• Speaker 1\n  - # Speaker 1\n\nForeign session number 10 of our development on creation platform Guided Learning.\n  - Today we will prepare with \nthe to prepare for the certification for the development exam.\n• Speaker 1\n  - # Speaker 1\n\nSo you see that we check some major creation development skills related to some C sharp programming, JavaScript \nprogramming, understanding of general architecture, understanding of packages, some little SQL experience and \nintegrations questions.\n  - So certification is like part of your path.\n• Speaker 1\n  - # Speaker 1\n\nIn this case you'll be able to ask questions about development and improvements and support team will help will \nhave to help you.\n  - So now you are somewhere here.\n• Speaker 1\n  - # Speaker 1\n\nSo if you are a customer and attended our guided learning session, obviously it makes sense to apply for a free fast \ntrack certification.\n  - RAK is telling that going to do the same step.\n• Speaker 1\n  - # Speaker 1\n\nI will show you, Rakhi, how you get such data.\n  - Here you see handlers.\n• Speaker 1\n  - # Speaker 1\n\nYes, thank you Rakhi for telling this telling me about this trouble.\n  - So let's move on with the certification.\n• Speaker 1\n  - # Speaker 1\n\nSo today I will send you the homework and if you respond me on this proposal to pass the exam.\n  - And we will \norganize individual sessions with those of you who would like to run this exam.\n• Speaker 1\n  - # Speaker 1\n\nSo please send me a message about it, I will process it properly and we can run Fast Track certification with you or \nwith someone with your team.\n  - Thanks.\n• Speaker 1\n  - # Speaker 1\n\nSo all of you will receive your homework today with the final email with all the video recording sessions list and so \non.\n  - So you will receive your homework and you will have some time.\n• Speaker 1\n  - # Speaker 1\n\nSo if you spend your time, if you already spent your time on making all our training session examples, it will be very \neasy for you to make your homework because it's also very similar and that's how you can get benefits from your \neveryday activity during the session.\n  - So let me explain what will include, what will be included into your homework.\n• Speaker 1\n  - # Speaker 1\n\nAnd also it includes some examples which will require coding and validate coding samples for you in JavaScript and\n\n--- Page 454 ---\n\nin C. So validation should include coding at client side.\n  - We already discussed how to do this.\n• Speaker 1\n  - # Speaker 1\n\nSo validation we already discussed you may watch our previous videos if you skipped it and you will know how to do \nthis calculation is about edit page online let's say runtime calculation that we did also in JavaScript and we made the \ncalculation of commission depending on price and offer type.\n  - Let me show you we did it.\n• Speaker 1\n  - # Speaker 1\n\nPlease note we have a bit different percentage of prices and for center for rentals and for sales, so take care to \nprovide correct values here.\n  - So this is important and we will check it the next task is about C Sharp programming \nmake your own back service club.\n• Speaker 1\n  - # Speaker 1\n\nIn your homework exam it will be minimum price calculation so they're easy to change but you have to perform this \nstuff in and that's why your homework sorry that's why your everyday work and your results of work at our sessions \nwill be important and it's so it will be useful for your exam and we already discussed how you can write such code.\n  - We used Visual Studio to facilitate our development and make it really easy with the help of background syntax \ncheck, intellisense, autocomplete coloring and also if you're interested, you can study the structure of this project \nand understand a bit more how it was done and generally project files and all the preparations made by creation.\n• Speaker 1\n  - # Speaker 1\n\nOf course you may use so it's expected that you will use your local instance if you have no any conditions to run \nlocal instance.\n  - You can use cloud one trial environment or dedicated demo environment if you have so you can do \nthis in any kind of environments and it will work for you.\n• Speaker 1\n  - # Speaker 1\n\nAlso we have a task number six which is a bit additional one.\n  - It's about business processes.\n• Speaker 1\n  - # Speaker 1\n\nAnd also I didn't tell you important thing that if you are a member of a partner company it makes big sense to get \nmany certified professionals at your partner company because it impacts on your partnership level.\n  - And partnership \nlevel is something about margins, about deals and money sharing between partner company and creation company.\n• Speaker 1\n  - # Speaker 1\n\nSo if partner has not so many experts and certified professionals then such partner will have less partnership level.\n  - And probably this is more risky for creature when any kind of agreement will be signed with a real customer \nincluding partner part of work.\n• Speaker 1\n  - # Speaker 1\n\nAfter you add this data, let me show you and remind you how we can do this.\n  - So it will be very quick and easy.\n• Speaker 1\n  - # Speaker 1\n\nWe already used this process to add data.\n  - When new record was added, we used start signal item for it.\n• Speaker 1\n  - # Speaker 1\n\nSo we can register such parameter as you remember, parameters are like variables at our process.\n  - And in case if we \nstart our process manually so we can call it manual start, if we do it manually, then we expect that this parameter \nwill be filled in and then we can just move on to our step where we add data and then we can replace here parent \nrealty not from signal but from this parameter.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 456 ---\n\nYou can see it's not so hard and it's very important for you to become familiar and to feel some confidence when you \nwork with processes because this is like a brick game, like a Lego, which you can use for much more complicated \nProcesses and business logic.\n  - If you understand well how such tools work, if you make your own simple examples \nand understand it clearly, then you can use it for much more complicated things and you can use it quite efficiently.\n• Speaker 1\n  - # Speaker 1\n\nSo we can look at its title or at icon type that will help us to get it.\n  - And the only suitable parameter from a signal is \nunique identifier of record double click and that's how we will get this data and save it as formula value.\n• Speaker 1\n  - # Speaker 1\n\nBut we can start this process manually.\n  - So of course we have to save it.\n• Speaker 1\n  - # Speaker 1\n\nOkay, little bit plus will be a good example and add visits menu item will be our unique element code.\n  - This will help \nus to easily find this item in view config diff part of the JavaScript code for our client module.\n• Speaker 1\n  - # Speaker 1\n\nAs you can see it works, so let's try to run it.\n  - Process successfully started.\n• Speaker 1\n  - # Speaker 1\n\nI will explain how you can do this so we can close unnecessary tabs.\n  - Let's go to search for objects and find reality \nVisit object.\n• Speaker 1\n  - # Speaker 1\n\nSo it was generally intended to be used for updates.\n  - Situation when you have a record it was already opened at client \nside and you change the data columns of the record at server side.\n• Speaker 1\n  - # Speaker 1\n\nWe need to use some good examples.\n  - So let's delete all the data records.\n• Speaker 1\n  - # Speaker 1\n\nSo if you do something like this and your end user will see the detailed data changed, so it will be quite good enough \nto display that data was modified and you see how it works.\n  - So also it's interesting to mention that it works for \ninsert, it works for updates, but unfortunately for some unknown reason it doesn't work for delete.\n• Speaker 1\n  - # Speaker 1\n\nIf you want to display and demonstrate more skills, you can also try to use a bit more complicated approach with the \nweb sockets with messaging from server side to the client side.\n  - I can quickly explain you how you can do this.\n• Speaker 1\n  - # Speaker 1\n\nSo we can use it for free.\n  - And the main idea is that we can.\n• Speaker 1\n  - # Speaker 1\n\nLet me show you when page of creature is opened.\n  - You can also see we have some WebSocket hard beat and it's \nused to check that WebSocket connection is alive or not.\n• Speaker 1\n  - # Speaker 1\n\nAnd one of the specific message tells client side that we have to show some specific process driven page.\n  - So \nsystem should show another page instead of current one.\n• Speaker 1\n  - # Speaker 1\n\nOkay, this one probably will better.\n  - So let me explain how it can be useful.\n• Speaker 1\n  - # Speaker 1\n\nIt has some corresponding data parameters which will be enough for client side to understand what it talks about.\n  - And as you can see, we have some values here that are enough.\n• Speaker 1\n  - # Speaker 1\n\nOh, you don't see it here easily because we opened browser developer to wait.\n  - Okay, let's open it again.\n• Speaker 1\n  - # Speaker 1\n\nBut when you start to design business rules, I faced situation when managing business rules requires additional \nwebsocket connections and it also failed in Windows Home version.\n  - So that's how you can track WebSocket \nmessages.\n• Speaker 1\n  - # Speaker 1\n\nBut this is like a technical possibility for you to listen for this websocket at client side.\n  - You also need to know how to \nsend messages at server side to the client side.\n• Speaker 1\n  - # Speaker 1\n\nSo I think it's more efficient, it's more correct and like more fair to send messages only for current user because \nusually you need to do in like connection exactly to current user, not to anyone.\n  - And if you imagine working with \nthousands of end users, so it will be really noisy for them to see such messages that are not intended.\n• Speaker 1\n  - # Speaker 1\n\nSender is a text MSG body as a text and such command will It's a C sharp and it will send the websocket message \nfrom server side to the client side.\n  - In the client side you can subscribe for it and this is classic UI example.\n• Speaker 1\n  - # Speaker 1\n\nThis type of messaging can be important in case if you don't really need live update or if you want to make some \nsignificant changes to server side and then run your necessary comments to update client side only once, which \nmeans to be a bit more correct to do.\n  - For example, if you add 100 records at server side, then you ask client side to \nupdate once, which will be definitely better than asking client side to update hundred of times because of live update \noption.\n• Speaker 1\n  - # Speaker 1\n\nOkay, let's go back to our general certification.\n  - So it was just about this advanced part of the homework.\n• Speaker 1\n  - # Speaker 1\n\nAnd before we continue, possibly let's make it five or up to 10 minutes break today.\n  - Today's Friday, all of you are a bit \ntired.\n• Speaker 1\n  - # Speaker 1\n\nSo 50 for the homework and also 50 for your test.\n  - Depending on the type of the test, there are different number of \nquestions.\n• Speaker 1\n  - # Speaker 1\n\nSo I'm trying to explain that in your self assessment test you will have slightly different so different results from the \nsame answers if you do it on the exam.\n  - And self assessment test is harder and real exam is easier.\n• Speaker 1\n  - # Speaker 1\n\nAnd also you will face questions with single choice like radio button with circles on the letters not squares.\n  - And we \nhave to answer this test properly and correctly.\n• Speaker 1\n  - # Speaker 1\n\nSo this is about this setting and what are the purpose?\n  - So this purpose is a redis database number.\n• Speaker 1\n  - # Speaker 1\n\nThis is about very old times when you can use such system setting.\n  - And I can show you examples.\n• Speaker 1\n  - # Speaker 1\n\nNow we use the sum default values for real t classic types.\n  - So we used it here columns code autonumber and we \nuse the auto number prefix number of digits and that's how this numbering can be implemented now in current \nenvironment version.\n• Speaker 1\n  - # Speaker 1\n\nThank you to.\n  - Okay, so proper transfer of changes target database.\n• Speaker 1\n  - # Speaker 1\n\nI have a quick question about the multiple choice questions, if that's okay.\n  - Yes, yes, please.\n• Speaker 1\n  - # Speaker 1\n\nIn general, it's not so good and it's not recommended because they can temporarily do some violation like you made \nstart to compile and another developer will see hanging of the website.\n  - So this is something that it's better to avoid \nand interfere with other developers.\n• Speaker 1\n  - # Speaker 1\n\nBut for this test you will always get random 28 questions from different categories.\n  - It means that if you want to \nprepare better, you need to run this test more than once.\n• Speaker 1\n  - # Speaker 1\n\nNo, it's not true.\n  - When truncate is called table is completely cleared and deletes every record separately row by row.\n• Speaker 1\n  - # Speaker 1\n\nThe reason is that packages cannot be embedded into each other.\n  - So packages cannot be included into another \npackage and embedded packages are not allowed.\n• Speaker 1\n  - # Speaker 1\n\nOne more package architecture question.\n  - If you do not specify dependency in the package, what will happen?\n• Speaker 1\n  - # Speaker 1\n\nThis question is about Marketplace applications and this category is on the for advanced level.\n  - So we already \nstudied almost all of proposed marketplace applications.\n• Speaker 1\n  - # Speaker 1\n\nAnd we can search functionality for all data access to all data.\n  - By default it's provided for all administrators.\n• Speaker 1\n  - # Speaker 1\n\nHow do you use custom types?\n  - This is about data contract and data member.\n• Speaker 1\n  - # Speaker 1\n\nNow you cannot see it, but usually it's randomized.\n  - So in order to make it hard to remember, you see that when you \nopen same question next time it shows you randomized options randomized positions of options.\n• Speaker 1\n  - # Speaker 1\n\nPlease be careful Disable file design False Enable file design True you should not mix it this one is correct Entity \nschema query you remember this class?\n  - We used it for server side calculations and operating with data Also similar \napproach with client side Entity schema query can be used at JavaScript part with the client side code it can also \nwork if you're interested, you can find other examples.\n• Speaker 1\n  - # Speaker 1\n\nSo how to properly use it?\n  - This is about protection from memory leakage, you remember?\n• Speaker 1\n  - # Speaker 1\n\nWe did not actually study the entity class and you can study it yourself.\n  - You can find a lot of examples like this.\n• Speaker 1\n  - # Speaker 1\n\nSo when you use entity is an instance of an object so in memory and you can use it for data management.\n  - But one \nentity may operate only with one data row at a moment.\n• Speaker 1\n  - # Speaker 1\n\nSo here we have a question about how to apply changes.\n  - Working with entity Obviously this is running of the save \nnetwork.\n• Speaker 1\n  - # Speaker 1\n\nSo rules and details are supported in Classic UI edit pages only and not supported in list pages or they are called \nsection pages.\n  - In section pages, rules and details are not present.\n• Speaker 1\n  - # Speaker 1\n\nSo when we save yes, validation will be triggered when opening page for insert no, but currently we have to review \nthis because when Freedom UI page opens, it also triggers for validation delete no switching focus from field to \nfield.\n  - Yes, we are almost at the end and schema must be used as parent for a section schema.\n• Speaker 1\n  - # Speaker 1\n\nBut for those who work with Classic UI this knowledge I think it's quite actual.\n  - So this section V2 is correct here.\n• Speaker 1\n  - # Speaker 1\n\nWe did not study this.\n  - In Classic UI it makes more sense.\n• Speaker 1\n  - # Speaker 1\n\nSo don't be so upset because each mistakes, each mistake takes 4% from your score.\n  - And when you run self \nassessment test you need to only to see different questions, potential possible answers and practice with it.\n• Speaker 1\n  - # Speaker 1\n\nIf you do seven mistakes in this self assessment test, you will lose 28 marks and your final score will be 72.\n  - But don't \nworry because your score in self assessment is not so important as your knowledge of answers of and your \nknowledge of existing questions.\n• Speaker 1\n  - # Speaker 1\n\nAnd here is what this is a question from Rakhi and this is about client side programming and we did not study this \npart.\n  - It's about send box Messaging.\n• Speaker 1\n  - # Speaker 1\n\nAnd for such purpose, messaging mechanism was designed and this is sandbox messaging mechanism which is \nonly working at client side between modules.\n  - Between client side modules.\n• Speaker 1\n  - # Speaker 1\n\nSo messages, they have different types and correct answers.\n  - Here are point to point message returns an object \nbroadcast messages does not.\n• Speaker 1\n  - # Speaker 1\n\nI can quickly show you examples of how it can look like and example of sandbox messaging.\n  - So in such messaging \nwe have an initializer.\n• Speaker 1\n  - # Speaker 1\n\nSubscriber is a party, so it's a module which declares that it can process certain messages and it also should \nregister them and then this module must subscribe.\n  - Message has its own identifier.\n• Speaker 1\n  - # Speaker 1\n\nI think we have to remove this question from the test because it was from very early version 7 settings and it's about \nbind config for properties events for events.\n  - So A is correct here, but we will remove this question soon.\n• Speaker 1\n  - # Speaker 1\n\nSo just make sure your homework looks good, run tests several times and then for example, some of you may apply \nfor the exam and run it next week.\n  - But in general, usually participants need from two till three weeks and this is time \nquite fair which will be totally comfortable for you to prepare for your exam and then run it today you will receive your \nhomework file and please respond at Please respond on my email with your confirmation that you are ready to or \nyou plan to pass FastTrack certification and I will provide you individual date and time of course, taken into \nconsideration your time zone.\n• Speaker 1\n  - # Speaker 1\n\nSo you will receive everything necessary in email.\n  - And when the proper date will come, I will wait for you in Zoom \nsession when you will finally proceed with your test.\n• Speaker 1\n  - # Speaker 1\n\nAt the end of this period, while your certificate is still valid, you will be able to run recertification, which means \ngetting new certificate by running test only with no homework.\n  - So if you want, when you have current certificate, \nyou'll be able to get new one with a simplified procedure.\n• Speaker 1\n  - # Speaker 1\n\nYeah, and advanced has 28 theoretical questions, while basic has only 25 theoretical questions.\n  - So Advanced is a \nbit.\n• Speaker 1\n  - # Speaker 1\n\nAnd unfortunately such links work only once and that's why we have to generate it each time when participants \nwants to pass an exam.\n  - Oh yes, sorry.\n• Speaker 1\n  - # Speaker 1\n\nWhen we will have online session, you will show your homework.\n  - We will see if it's working.\n• Speaker 1\n  - # Speaker 1\n\n--- Page 468 ---\n\nOh, so you are worried about the business sense of this time, of this type of cultivation.\n  - Or you have some errors in \nexecution?\n• Speaker 1\n  - # Speaker 1\n\nSo in general, it looks like we have 300 bucks.\n  - 311 bucks per square foot.\n• Speaker 1\n  - # Speaker 1\n\nSo it looks like this data was the result of our calculation and it looks like more or less close to reality $300 per \nsquare foot according to our current prices and areas.\n  - So area is used here in this calculation.\n• Speaker 1\n  - # Speaker 1\n\nYeah, yeah.\n  - Thank you.\n• Speaker 1\n  - # Speaker 1\n\nThen at next step it will go to page parameter here if you do something so if you lost your data something on the \nway so you will see zero and you should debug your process, you should debug your script task.\n  - And we already \ndiscussed how to do this.\n• Speaker 1\n  - # Speaker 1\n\nBut I think that regular Certification is a bit more harder and it has different variants.\n  - There are different subjects, not \njust one realty, there are different subjects.\n• Speaker 1\n  - # Speaker 1\n\nBut now you have automation with Zoom and with already prepared links for download.\n  - So probably it makes sense \nto use existing links without waiting for me to host the same video somewhere else.\n• Speaker 1\n  - # Speaker 1\n\nSo your homework, if you do it well, no need to do it again for the next exam, yes you can take it again.\n  - Thank you \nBasic for your question.\n• Speaker 1\n  - # Speaker 1\n\nOur session is over.\n  - Thank you and goodbye.\n\nKey Concepts: page, schema, field, customization, integration",
  "key_points": [
    "page",
    "schema",
    "field",
    "customization",
    "integration",
    "business process",
    "package",
    "sql",
    "data",
    "section"
  ],
  "keywords": [
    "speaker",
    "data",
    "page",
    "let",
    "like",
    "okay",
    "use",
    "need",
    "code",
    "make"
  ],
  "topics": [
    "speaker"
  ],
  "summary_length": 90642,
  "original_length": 207848,
  "compression_ratio": 0.43609753281243985,
  "confidence_score": 0.9,
  "created_timestamp": "2025-07-23T16:58:17.107750",
  "metadata": {
    "structure": {
      "title": "Speaker 1",
      "sections": [
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number one of our development on Creation Platform Guided Learning.",
            "My name is Dmytro and I'm \nfrom Creation.",
            "So working as a trainer for many years and working in Creation for more than 18 years and quite a lot \nand I plan to share some experience and Creation development basics with you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAt the end of the course for some of you who would like to we will perform individual development certification.",
            "So \nit's kind of exam where you can show your skills, you will make your homework, prepare for the test and finally some \nof you will become certified Creation developers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we will work with packages with version control and enable git integration.",
            "Next sessions will include working \nwith object model, making data items, using some bit advanced examples of working with object, connecting it with \ndatabase views and so on.",
            "Then we will switch to work with UI user interface.",
            "I will tell you about new Freedom UI \nuser interface and Classic ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then when finished I will show you server side programming in C Sharp and server side includes programming \nwith data model, working with database, writing your own C scripts, making your own classes of course integrating \nwith modern powerful tools like Visual Studio or Rider and I will show you how to debug, how to process object \nevents so how to do different server side things.",
            "Then we will work with classes with web services moving towards \nintegrations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will show you examples of working with Clio of its functions and explain how you may improve your experience and \nin general how you may do your actions more efficiently if you operate with Clio.",
            "At the end we will take some time to \nprepare for the exam.",
            "I will explain you how homework looks and what it includes and how to perform this, how to \nprepare for exam test and finally I hope some of you will be ready to get certified.",
            "We call it fast track certification \nbecause you spent probably two weeks for our developer sessions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you have any questions, please feel free to ask at any moment of time in chat or using your microphone.",
            "Whatever \nworks better for you.",
            "Today we are doing first steps on Creature platform, so I probably need to explain what it is in \nvery general.",
            "So Creatio is a website heavily connected with the database and it's mainly designed to work as an \nenterprise level data management system and business process automation system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it also allows you to program and make more, let's say complex and more efficient solutions on the same \nplatform.",
            "We will study how to install it, how it's recommended to work with it, how to make a local environment and \na lot of steps with our 10 sessions training."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo don't hesitate, don't feel shy, even if you understand that Your question is very simple and silly.",
            "Don't worry about \nthis.",
            "We are gathered here just to know more and know better about creation.",
            "My task is to help you with it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general it's much more safer to do some development, especially if it's complex development.",
            "Separately from \nyour production environment we have Academy website which has plenty of interesting articles related to creation, \ncustomization and development.",
            "Academy.creation.com Most of you already registered here because you registered \nfor the training session.",
            "Okay, everything is off necessary on.",
            "Okay, let it be."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo developers can do some experiments, they can do some tries and they finally make some changes to the system \nwhich include functionality that customer asked and explained how to so how it should work.",
            "Solutions made on \ndeveloper environment can be easily exported into files and then we will have another environment which is called \npre production or simply I call it test environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 3 ---\n\nFinally when we decide that our solution is good enough, then we can go to production environment and choose \nproper moment of time to load our settings like the time where minimum of our users are active and then the same \nway as we imported solutions on test environment you can easily import it on production, also taking care about \nbacking up existing settings.",
            "And in general it's recommended to have some backups of your production \nenvironment.",
            "So that's how you will make a delivery from your development Stuff after testing to production."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can also do this, but this is at your own risk.",
            "Sometimes you can do customization and finally you may do \nsome changes which you would like to revert.",
            "But in creature revert of changes, sometimes it's not very easy and \nsometimes it's really hard and was not designed originally.",
            "So please take care.",
            "Any development I think should be \nsafe."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo server side machines, their licenses, database, all connections and other things that are very technical related to \norganizing of creation working.",
            "So everything is managed by creature cloud engineers.",
            "And that's how most of our \ncustomers work with production and test environment.",
            "But what about development?",
            "It's better."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd of course, as they work with a single project, they will naturally need to exchange settings between each others.",
            "So they will need to see.",
            "Oh, sorry, this one is probably here.",
            "It's my tool to make some draws for you.",
            "Okay, so I just \nwant to say that if you have a team of developers, they will need to exchange settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFirst developers should submit their changes to version control like this.",
            "Second developer will get changes from \nversion control and vice versa.",
            "And version control will keep history of all the changes and it will help us to \nunderstand who did changes when it was done, what were the previous state of files, and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo don't worry, we will do this and I will explain and you understand how to work with it.",
            "But first of all we need to \nmake our own environment and to see how we can do first steps."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCould I ask a quick question before we move on?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSorry.",
            "Please, please."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo to see here on this diagram where we have they all have separate databases.",
            "Is it strongly recommended to \nfollow that structure?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThink that if you have different websites you must use different databases.",
            "But in some cases, for example, you \nhave one developer and couple of analysts.",
            "Yeah, and you would not like to create a separate environment for each \nanalyst because they are not planning to write any code, they do not need some debugging, they probably are not so \ninterested in the file system and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEspecially when developer will start to do some compilation or some debugging or other actions that will make their \nwebsite to hang for some time.",
            "So the main reason why it is not recommended to operate as many developers with \none site is such operations like compilation, like debugging and other scenarios where a website will be, let's say, will \nlook like it's hanging and not responding if all the team is okay with it and such developer actions are not performed \ntoo often."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThanks Maria.",
            "--- Page 5 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThanks Paddy for your questions.",
            "So let's move on.",
            "We already know how it's recommended to organize your \nprocess.",
            "Sorry, sorry here and how you should use.",
            "And no delivery management here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will see exactly the same of what you will feel at production when you install your solution.",
            "So let's move on.",
            "We need some local environment.",
            "Why?",
            "Because we are developers, we want to make our own first steps and we \nhave serious reasons to make this environment local."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou probably have necessary files and maybe you even installed your system locally.",
            "But generally this is not easy.",
            "Procedure.",
            "A lot of participants of our training sessions usually face some troubles and difficulties during this \ninstallation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I prefer to keep it easy, especially as we are beginners.",
            "So to run Creatio on Windows, I'm using Windows 10 Pro.",
            "You can also use Windows 11 Pro if you use Windows Home, Windows 10 or 11 Home.",
            "So you should understand \nthat it will be not fully working, so you will experience some serious difficulties."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo WebSocket connection is used and there are some troubles on version home.",
            "So you should expect if you use \nthis type of Windows and Windows Home, then you will see problems and you will only be able to operate with one \ntab at a moment, which is definitely not so comfortable.",
            "So now you warned about it.",
            "Okay, so I have a Windows PC."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 6 ---\n\nSo 16 is good and 8 is like minimum that you can look at.",
            "SSD Drive of course is also very recommended because of \ngeneral speed.",
            "So the most critical parameters are CPU and memory.",
            "Okay, so you have one single PC and you can \nrun Creature on this single PC.",
            "Croatia has two big server side parts."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI do not recommend you Express because it has limitations on amount of CPU cores used by server, amount of RAM \nand the size of the database.",
            "So Developer Edition works the best.",
            "So we have Database part and we also will \nmanage Web Server part implemented by Internet Information Services.",
            "This is part of Windows and this is also one \nof the biggest component of the system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe no permissions, no hardware, let's say powerful enough to run it or some other technical reasons, or no \npermissions at your machines and so on.",
            "But you still want to practice this creation, you can go to creation.com \nwebsite sorry, this one probably have to log in there and then you can request.",
            "So you can ask for a trial \nenvironment.",
            "Try it free environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can just try it free and provide some data about you and in minutes, maybe in a minute system will create a \nfree cloud trial environment for you which will be available for you if you log in at Creature website and then follow.",
            "And so you will have URL, login and password for your trial environment.",
            "That's how you can do it easily and practice \nthis creation.",
            "But if this will not work, I also can create an individual demo website."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to academic guides.",
            "Then it will be about setup and administration and we have a set of articles related \nto on site deployment.",
            "We have a general deployment procedure which I recommend you to know to look at and I will \nalso post all necessary links into our chat.",
            "This chat is also recorded the same as videos and also we have captions \nrecorded."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorking with the cloud version, you will not have full set of developer tools, you will not be able to use git, you will \nnot be able to perform server side debugging, no access to File system, so quite serious limitations.",
            "And Local \nsystem has all such features for you.",
            "So what we need to do at the first step we can follow all of the general \nprocedure steps here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can also install Redis as an image in Docker and unfortunately this is not set so you cannot easily find it in our \nofficial documentation.",
            "You can also use Redis or Windows and Redis for Windows is recommended on Developer \nEdition or Developer Environment.",
            "You can consider by your own would you like to run it for test and production."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd one of them is Redis for Windows at GitHub made by some Poland guys T Porodowski and the current version \nis a bit older, but still good enough.",
            "So what you need to do is take this MSI file, download it.",
            "So let me show you and \nthen you can install it.",
            "The question from Paddy, is it possible to run Redis on Windows subsystem for Linux?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo what you need to do is to download this MSI file, I will copy link address for you can download it, then you will find \nit on your disk.",
            "Then you should make sure you're running it under local administrator privilege.",
            "And finally after \ninstallation of all Redis settings, by default you will find C program files redis and this is all what Redis saves on your \ndisk.",
            "So this is just set of its files."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can go to its settings and if you want you can change some parameters like login level.",
            "Default login level is \nnotice.",
            "So it's like moderately verbose, not so verbose.",
            "You can change log file position, you can change maximum \nnumber of databases allowed and so on.",
            "But out of the box settings for Redis is good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the only possible issue you may have is Redis.",
            "Once you installed it's running so you will have no troubles with it.",
            "If you prefer to run Redis with Windows subsystem for Linux or inside Docker, you can also do this.",
            "You can take \noriginal Docker images for this and original website is Redis IO.",
            "Redis is developed by Community."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 8 ---\n\nLet's see, do we have anything with downloads, what else we have here?",
            "So now you can see Linux version for \nversion 7 and Windows version 5.",
            "But it's still good enough.",
            "So creation doesn't use too much of new Commons.",
            "So \nRedis is trouble free."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis file is distributed as a big zip archive file.",
            "Let me explain what does it mean?",
            "So invite email you have chance to \ndownload such zip archive file and depending on the platform, Windows or Linux and depending on the Target \ndatabase, Microsoft SQL or Postgres, you may find the three different options.",
            "The only one option was in our email."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see this is a zip archive with 1 gigabyte and it has several maybe thousands of files inside.",
            "So what we need \nto do, we have to take this file if you for example start some new project maybe year after we finished today's \nsession.",
            "So of course this version will be outdated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in general I recommend you to focus on SQL or Postgres because they are the most popular and I think the most \nattractive for solving your customization needs.",
            "So we have this file.",
            "I already downloaded it from inner creation \nsources.",
            "So this file is on my disk."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe reason is quite serious because if you deploy your creature somewhere in Windows protected folders, you will \nexperience additional difficulty with access of creation app to its own files because Windows protects it especially \nwhen system needs to modify such files.",
            "That's why I created my own folders.",
            "I keep some kind of structure of \nseveral websites running on my PC currently I will actually stop any execution any running website."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you use Windows Explorer, you can also do this unzipping automatically and it will take some time, probably up to\n\n--- Page 9 ---\n\none minute thanks to fast SSD on my disk, on my PC in total creation codes more than 20,000 tiny files.",
            "That's why \nthis unpacking will take some time.",
            "But in general this is just one time step and not so difficult I think.",
            "So we will \nfinally have all the items ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will not be able to run this bug file for Postgres oracle if you're interested.",
            "For example, in Postgres database \nyou should take another installation file.",
            "If you need it, I can share it with you.",
            "For example, this one is for Windows \nand Postgres.",
            "You will see DB and you will see different size twice less than Microsoft SQL and different extension \nbackup against bug."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI expect that you already installed your Microsoft SQL Server and some management tools for it.",
            "The best one is \nMicrosoft SQL Server Management Studio and also I made some preparations on my SQL Server properties.",
            "Let me \nshow you what is important here.",
            "So let's go to see its properties of SQL Server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you want to use this SQL Server and Windows, you can switch.",
            "But also you should remember once you switch this \noption and press ok, it will work only after you restart your SQL Server.",
            "This restart is a special action for SQL Server.",
            "Don't forget about it if you will change authentication settings for your SQL Server.",
            "In my case, this is already done \nand I already have my SQL Server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe 10 years ago this product was called BPM Online and from that times this file name is still generated with \nthese words.",
            "But of course physically this is creation.",
            "So we will use this backup file.",
            "How we'll use it very easily."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so we select this file, click OK system recognize that this is a valid backup file and we have to specify database \nname.",
            "So we have to provide database name.",
            "I prefer some naming conventions here.",
            "So I will call it D1 Studio.",
            "But \nyou may name your database whatever you want."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo here we have to think of how creation website, how creation web app will connect to the database.",
            "We need to go \nto security logins and then we have to make a login for our connection.",
            "We can make a new login for it and we can \ncall it something like SQL Server Authentication Login, namely D1 Login.",
            "Let it be so D1 Login will be our login name.",
            "Login name is name of credential where you try to connect to your SQL Server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can just click ok everything else by default.",
            "That's how I created new login for my SQL Server.",
            "Then I have to \ngo to my database, find its security tab users and then I have to add user with the same name.",
            "This is my username, \nthe same as login name.",
            "And the only special setting I must do is go to membership and click DBoner."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd it's about enabling all necessary Windows components.",
            "Please note that this part is the most tricky and a lot of \nbeginners do mistakes here.",
            "So you should take it quite serious and perform all recommended steps here because \nthere are no optional items.",
            "Everything is mandatory here.",
            "So let's do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have all links here.",
            "Now you can see that this and these are direct links.",
            "So let me show you what you will see.",
            "To \ntry to download you have to choose version 6 and according to your platform it's Windows X64.",
            "So you should take \nthis one, click on it and download."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you forget about this, you will not successfully run your creation.",
            "So you should follow such recommendations and \nwe can do this.",
            "So you can find Control Panel programs and features.",
            "Windows features on or off.",
            "This will show this \nwindow and this window."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, and this one as you can see in the manual, developers of this documentation decided just enable everything.",
            "In \nmy case I enabled only what was really necessary here.",
            "And one of the most important thing is WebSocket protocol.",
            "So you can enable what you see and finally click ok.",
            "Wait for a couple of minutes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I think my windows is normally updated.",
            "I can skip this part and then I need to do some final preparations with \nregistering of my website in iis.",
            "There are two ways how we can do this.",
            "Registering a separate website with \nseparate port Or I prefer registering of a website as an app inside of default website.",
            "I prefer to use this one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you prefer to run connection to your database using Windows credentials, then you have to go to advanced \nsettings of the pool, find identity and change this identity to some specific Windows user account which you expect \nto use for connection between application server and database.",
            "This is necessary if your database server is set for \nWindows connections only.",
            "I mean only Windows credentials.",
            "In my case I prefer SQL Server credentials, so I will not \nchange any of settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThey so turned out they are sensitive to the file names and path of the app and if it starts with the digit, some regular \nexpressions are failing inside of the angular and that's why you must start your application name with a digit.",
            "In my \ncase it's a D D1 studio.",
            "I should select a proper application pool and specify physical path."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we do this first we register water part and physical path should point to root folder of our app this one and \nokay I copy this path for future.",
            "So we register root part of our app, but then we need to remember about its inner \nmain application part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 12 ---\n\nThere are some also side quests that you may need like settings of different MIME types and so on.",
            "But from my \nexperience if you enable necessary Windows components, all the items like this will be good just out of the box so \nyou should not modify it if you perform Windows component settings.",
            "So I actually only needed to register my \nwebsite in IIS Manager and that's all now the last part, the last step is special configuration file which we must \nmodify in order to make our system runnable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI hope so.",
            "Let's look in this connection strings file.",
            "So this is my folder of my app.",
            "This is loader part of it.",
            "And the \nonly file system file that I must change to make my creation running is connection strings config file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn your case, if you have your SQL Server located somewhere in your network, you will need your SQL Server network \nname including named instance.",
            "So full name in case if you have named instances of Microsoft SQL Server \ndatabase.",
            "In my case, this SQL Server.",
            "This SQL Server has a name just a local host and it works for me maybe with \nnon capital.",
            "Oh, okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou remember we did it at the database.",
            "And then password equals this is my password for the login.",
            "So that's how \nI can do this.",
            "Probably this space is not necessary and nothing else.",
            "So data source, initial catalog, user space ID \nand the password."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd one more thing which we must do in case so we must do for our creation installation is Redis connection.",
            "So \nthis file also keeps information about how Creature may find Redis somewhere in the network.",
            "So host should point \nto network name of your regis server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we have another important parameter DB is number of so called Redis database, but it's more closer to call it \nstorage because Redis storage is a set of key value pairs saved in the Redis memory.",
            "And by default redis has 16\n\n--- Page 13 ---\n\ndifferent so called databases named from 0 till 15.",
            "And as we keep several creation instances, we must keep such \nDB numbers unique.",
            "If you run several creation environments on the same machine, you must take care to have a \npersonal unique values for each creature instance connected to the regis server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne more thing which I recommend you to do, but it's not required, it's optional.",
            "One, it's about creation logs.",
            "We can \ngo into terrasoft web, find envog, targets config and by default this line number 3 log dir this is folder on your disk \nwhere creation will save its logs by default.",
            "As you can see, it points somewhere to temporary catalogs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example somewhere at C creation logs so we can create this folder system will create itself if it's missing.",
            "So \nthat's how I do my settings for env targets config, this is optional and log targets Config this is example of my \nsettings and this can help you to easily access such files if you don't like going to Windows temp or if you have \nlimited settings as me working with this folder because of Windows protection.",
            "Okay, now everything is done.",
            "So \nsave changes and we can start our website.",
            "How we can do this?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo Google Chrome I think is one of the best for creation because of the fast JavaScript core and you can use also a \nlot of other Chromium based products and browsers and you can use Firefox, you can use Microsoft Edge and \nplease note Microsoft Internet Explorer is not supported at all.",
            "So you can use Chromium based browsers, you can \nuse Safari, you can use Edge.",
            "Currently I'm using Google Chrome and I'm quite happy with it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFirst login in supervisor and the same password supervisor.",
            "Also you can see at this login page you can see current \nversion number of the app we are running and I can click just log in.",
            "If everything was done correctly, you will see \nafter some time, maybe after a minute you will see our application successfully logged in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in case if you have some troubles with setting of inner app here, in this case your login page will be okay.",
            "But \nwhen you start to provide login and password and then click login button, then you also may have some error \nmessages which will lead to let's say errors during start of your app and you will not see this page.",
            "Now let's make a \n5 minutes break to refresh a bit and then we will move on.",
            "I will show you what next we will do with our installed \nsystem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now let's take a break and then we will move on.",
            "So next, what I wanted to show you now is about how we can do \nsome preparation of our system.",
            "Before continue, let's do some technical things and enable browser console, Ctrl \nshift I or F12 or you go to this, then more tools, this and then developer tools.",
            "Okay, let's enable browser developer \nconsole."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why I will show you how to disable this telephone.",
            "I go to the user profile, then go to additional settings.",
            "We will see some settings for call center parameters and then we can disable call center integration.",
            "This will \nsuppress this login, excessive login at our console."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo they are generally used by creation system.",
            "We can find system setting called show widget on login page and we \ncan disable it.",
            "And also one more show widget on intro page.",
            "It's also better disabled, but this is advertisement stuff \nwhich is currently not active.",
            "And currently this advertisement only shows you some error messages in your \nbrowser."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo looks good and we are going quite fast today.",
            "And probably that's because of not so many questions from your \nside.",
            "But.",
            "So if you have any questions, if you feel some, let's say uncertainty, please ask me."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSorry Dimitri, I just.",
            "When you mentioned questions, I've just been writing down questions as we go."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr I can hold them all for you, please.",
            "It will be interesting because something which is not so boring like just a \nlecture so kind of dialogue.",
            "--- Page 15 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, so my understanding.",
            "Sorry, this.",
            "We're going back to the database section.",
            "When there's two section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGenerally we have two, let's say two options to support our customers.",
            "Normally we have no.",
            "So almost no test data.",
            "It means we will have very little number of useful values.",
            "For example, I can show you some data which is quite \ncommon for you to expect like list of contacts."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe other question and I have you kind of already answered.",
            "It's just I was."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNot use Redis cluster because it's not mandatory, this is optional thing which makes a bit higher overall reliability of \nyour system.",
            "But once I'm running just a single developer environment which probably will never experience high \nload conditions when having hundreds or even thousands of queries per second."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNo, that's brilliant.",
            "Cheers.",
            "Thanks Melin."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you.",
            "Thank you, Paddy.",
            "It's interesting actually.",
            "You can also customize your iis but in my case I'm not running \nin under high load conditions or I do not need to allow like couple of thousands of users to log into my environment.",
            "That's why I do not enable IIS based cluster."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, I'm going to install the SQL Server management.",
            "But what of what version exactly I should use on premise \ndeveloper.",
            "Oh no, download.",
            "No, no, just scroll down a bit and the left part you will see a skilled developer.",
            "So this \nskilled developer download now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI my windows is 11 home.",
            "It.",
            "It's good.",
            "It can be doing the step you are doing.",
            "If you have no options to use Pro, you \ncan keep running on home."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, thank you, Peso.",
            "Let's move on.",
            "So now we have more or less okay running Creature Instance and I need to \nexplain you what next steps we will do.",
            "So my main next goal is to show you file system development mode.",
            "But in \nthe last versions we have some unusual behavior which you need to understand."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently Such results are DLLs loaded from the database stored somewhere else.",
            "And the application is quite fine \nrunning with such assemblies.",
            "But when we will switch to file system development mode, system will search for \nsuch files exactly here.",
            "So we must compile our system before doing any file system operations and before doing \nany switches between environments.",
            "So we have to compile our system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you try to compile, you have two errors with no file name.",
            "It's totally unclear what is wrong here, but you will \nconstantly get this error.",
            "So it's not random.",
            "It will happen all the time when you try to compile."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see this log is still going on because compilation is not finished.",
            "So compilation produces some messages \ninto this log file.",
            "And if you will get compilation errors, you'll be able to get log.",
            "You will get error details in this log."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou only create folders, you do not provide any access and it works nice.",
            "So your compilation will not fail anymore.",
            "It \nwill not show you such compilation issue.",
            "This is the link to community Creation has quite powerful community.",
            "So \nthis is about compilation error that you will certainly that you probably will have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThey include a lot of classes and such DLLs are necessary, so they are vital for creation normal work.",
            "And when we \nwill switch now into another mode, which I need to tell you.",
            "So we will need these libraries in this space.",
            "Okay, so I'm \ntelling you about this mode and I need to explain why we have modes.",
            "So when we installed our creature system, we \ncan go to settings, we can get this page, it's called System Designer page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEven if your main app is broken, so badly broken and it's not working, then you can type this address 0dev and go to \nconfiguration and try to fix so what we need to know about modes Creature has two different development modes.",
            "One is called Creature ID mode.",
            "Let me show you guides development tools and we have two modes, Creature ID \nand External ID mode.",
            "Let me explain what is the difference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you use only UI of creation to build it and modify it.",
            "We call this mode Creature ID mode and it means we use only \nCreature user interface tools.",
            "This mode is perfect for beginners and it's also the only allowed to run at cloud \nconditions where you have no access to file system.",
            "Creation ID is relatively simple and it's quite, let's say, well \nprotected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 18 ---\n\nIn order to use full power, we have a special mode called External IDs.",
            "The main idea is to allow system to save a lot \nof settings directly on disk into file system and then use external editors to modify such contents.",
            "Also you can still \nuse internal editors, you can still use existing tools and open them in creatio ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you see gray colored it means file system development mode is not turned on and it means that simply Creation ID \nis on.",
            "Now you can change this mode according to the manual.",
            "So here is the article which I recommend you to read \nand this manual well, explain how we can switch between environments.",
            "We need to make corresponding settings in \nweb config file depending on the platform.",
            "For NET framework it means iis."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut please remember before you will do any changes, make sure your system can be normally compiled.",
            "This is \nimportant for two reasons.",
            "First reason is to get corporate necessary files in bin folder here software web \nconfiguration bin and also second reason is to make sure you have no common compilation issues like I explained \npreviously.",
            "So we already performed this compilation.",
            "Now we follow manuals to switch between environments."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo line number 510 I found file design mode setting.",
            "Originally it was false.",
            "I will carefully put it to oh sorry, no \nkidding.",
            "I will carefully put it to true and then one more setting must be done a bit below.",
            "Use static file content must \nbe set to false."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill study what package is what package contents usually includes.",
            "So this original storage is in database in set of \nsystem tables inside of our database.",
            "So it's very important to understand Creation has out of the box big number of \ndata tables.",
            "Most part of them are data tables for business entities and business data."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 19 ---\n\nAre GUI changes saved in the same database.",
            "So say like if I just add some extra information to say a client, is that \nalso the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, yes, it's also stored in the database and database is primary storage for this.",
            "So when we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, and then the only reason I'm interested in, I'm just asking that is how then does that work with version control?",
            "Say if you have multiple people working on the same.",
            "On the same, we'll say client, I will explain."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI wish I will now explain.",
            "You will see that.",
            "So originally we have all the content stored at the database.",
            "But if we \nenable this file system development mode, then we have an option to save changeable part of it into files and what \nwe do customizing.",
            "So like we make our own changes in this external ID mode."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn my case, I have only one storage code package for this editable stuff.",
            "So it performs almost nothing and it saves \nsome files on disk.",
            "We can track what's going on our disk.",
            "Now let's go to javasoft web app JP configuration.",
            "We \nhave a special PKG folder for such storage on disk."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in order to finalize our switch, it also recommended.",
            "So according to the manual, we have a next step to compile \nit again.",
            "So it looks like we need to compile it one more time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 20 ---\n\nSo your homework for today will be just reproduce the same steps as I did and install your local creation system.",
            "Turn it into development in file system mode.",
            "Make sure you can compile it normally and I recommend you to \ncompile it twice before you do any changes to make sure it's compiled and to get executables, DLLs and then after \nyou switched into this mode to make sure that system is fully operational and server side has no any visible, let's say \nincorrect parts.",
            "We will study more about making creation settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it has hundreds or even thousands of changeable items and most of them are called schemas and we have \ndifferent types of such schemas.",
            "So you can when you hear schema you should understand some customizable \nchangeable item in creation, such items declare entities.",
            "For example, we can filter by item type like look only at \nobjects so we can see objects responsible for keeping address data and other objects are very simple and \nresponsible for keeping e.g."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo objects are related to data model and we have plenty of different objects, but not only objects, we have a lot of \nother items.",
            "Client modules are responsible for page settings.",
            "C sharp source codes are responsible for server side \nclasses programmed in C. Data items are responsible for data transfer between environments."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's quite difficult to manage such amount of settings in a list.",
            "So developers decided to make kind of big \ncontainers for them and they called them packages.",
            "And the left part of this configuration section just remind how \nyou can get there.",
            "So you go to settings, scroll down advanced settings or you type 0 dev in your browser 0 dev.",
            "That's how you go to this configuration section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's a studio app which includes only platform version and almost no business functionality except of hundreds of \nlookups.",
            "But in general we have almost no business sections.",
            "Business functionalities is absent here.",
            "So we have \nonly platform level tools like constructor setting which allow us to build our own apps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLuckily, Creature offers you possibility to look at any part of base product items.",
            "You can open any part of its\n\n--- Page 21 ---\n\nconfiguration code and you can see how exactly it was written, how exactly it was set.",
            "So Creation has open source \nof base product configuration.",
            "Configuration is a like changeable part of the system.",
            "Also we have opposite one \nwhich is called Core."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course you will have updated versions of such DLLs so they are not designed to be changed and they perform \njust low level functions of creation functioning.",
            "Also we have client side core parts in JavaScript which is also not \ndesigned to be changed and only changes when creation issues new version."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the main sense of building packages is to make management of such configuration easier to make possible \nseparate development and let's say splitting of responsibilities, sharing responsibilities and like splitting of all \nsystem functions into separate parts.",
            "It could be developed separately and transported and delivered separately.",
            "So \neach package should be considered as a box for some items inside you can put unlimited number of items into it \nand probably it will be interesting to see how many items we have in different packages.",
            "So let's do some simple \nselection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhy doesn't like this should be okay the name this is okay this package.",
            "Okay, let's try to run.",
            "Let's see what's wrong.",
            "Maybe it expects something like this or maybe I'm doing something very stupid.",
            "So let me check again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can also see the same but you can see that some packages have quite big number of items like 800, like 400, \n300 and so on.",
            "And the main sense of the package is to make some separate functionality stored separately and \ncould be saved and delivered separately developed separately."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is a special package named custom and custom package is designed for cases when you so when customer \ndoesn't think too much about storage of settings at all and when customer just don't know the architecture and they \njust want to customize system, save it, perform some no code settings and that's it.",
            "So custom is kind of default \npackage for such kind of customization, but for big projects it's not recommended because custom package is also \npresent on target environments and custom package may be not empty at target environments, for example at \nenvironment when you want to test or when your users are running in production."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nObviously we will create our own package or even several packages to save our customizations there and now you \nneed to remember there are two general approaches.",
            "You may manage packages yourself and it may mainly make \nsense if you develop something in Classic ui.",
            "Classic UI is a legacy type of settings that we still have in our \napplication and still support.",
            "And we have hundreds of maybe thousands of different partner solutions designed \npreviously in Classic ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will click on this tiny create page button, this opens new package window and I will call it something like Dev \nClassic.",
            "So I intend to use this package for some classic UI stuff.",
            "That's why I will call it Dev.",
            "Classic package has \nsome properties and compile into separate assembly is extremely useful feature and it's so useful.",
            "So it's enabled by \ndefault and it makes our compilation time three or four times less than usual."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you want to support this feature, you can use smart activation, but in general I think that it's not for our case, so \nnot so necessary.",
            "We don't have any version control for svn so we'll keep it empty, no version value and we will \ncreate and add dependencies.",
            "Now I need to explain you one more important thing about packages and their \ndependencies."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when you have a dependency for a package, it means that this package will not work until parent packages \npresent into your system.",
            "So in my case calendar base requires CRT core base for some reasons and this is how \npackages are connected.",
            "So if your package has dependency from some parent package, you may use some parent \npackage functionality like pages as templates objects."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere are two common approaches how you can do this.",
            "One of the approaches which is now currently used by \nApplication Hub is to use package named CRT core.",
            "It gives us enough access to base product functionality and the \nCRT core is a good option for your solutions to be connected to the parent base product system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in this case it makes sense to find the latest package here in this hierarchy except of custom and make your \npackage dependent on it.",
            "Thanks to parent dependencies you will have full access to parent packages including \nbase product section packages.",
            "So if you work with base product which already includes a Lot of functionality.",
            "For \nexample, it's a banking, product, sales service or marketing.",
            "Then it makes sense to create your packages dependent \nfrom all this parent diagram and it will be able so you will be able to customize parent packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will make it dependent from.",
            "I can search studio and that's how I will do this.",
            "Any package has its own maintainer.",
            "It's a text property written at packages.",
            "Each package has its own maintainer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe reason why we have so many different words for the same is incorrect translation.",
            "Originally in English it was \nmaintainer.",
            "Then it was translated into Russian, then back to English.",
            "That's how we get publisher.",
            "I would prefer to \nhave everything just as maintainer here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in order to fully apply it, you have to log out and log in.",
            "Because cached system settings are loaded at the session \nstart only.",
            "So when changed it, you have to log out login and then you can create your own package.",
            "And your \nmaintainer will be according to your system setting when you create your package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you can see my dev Classic package is created after studio and thanks to this parent transitions I can get \naccess and logical visibility to any part of base product.",
            "So this is very important.",
            "This is example how you can \ncreate packages for your own manually made the customizations mainly for Classic ui.",
            "In future we will make more \npackages and we will use package for Freedom ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 24 ---\n\nNow our package is fully empty, so we will fill it in with some test settings tomorrow and we will continue tomorrow's \nsession with git integration.",
            "Now today our session is over.",
            "If you have any questions about it, tell me please.",
            "You \nwill receive video recording very soon, probably in one hour if Zoom will be quick to convert video.",
            "So I will send you \nvideo once it will be ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case, you will need these update packages from file system action in order to tell creatio about some new \nchanges and in order to load such changes back to the database.",
            "So our session is over.",
            "Thank you.",
            "Thank you for \nyour time today."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThanks a million Demetri.",
            "That was very insightful."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Paddy.",
            "Thanks others, thank you for your time.",
            "So see you tomorrow."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBye.",
            "Thank you Sarah."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number two and we will continue to do our first steps on creature platform.",
            "As developers, we \nworked with our environment.",
            "We made our package recently and today we will continue with git with doing other \npreparations.",
            "I will explain how to operate with packages, how to integrate with git and we will work with objects and \ndata.",
            "I will show you how to build data items, why we need them, how to transport solutions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you are fully ready to continue.",
            "If you have any questions, feel free to ask Tushar any questions we have.",
            "Is \nthere some issue during installation of the local environment?",
            "I'm getting this one error.",
            "Please type in the chat."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy port number is different like your.",
            "You should find your Regis service running.",
            "If it's running, it means it should be \nokay.",
            "You can also look at Regis logs.",
            "Maybe it will be more clear for you and which version of Regis are you \nrunning?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nC program files regis usually if you installed regis for Windows, you will find it here and then you can just run regis Cli \nexec file.",
            "It will be a command line utility for redis.",
            "So you can run different commands like select number of \ndatabase db size.",
            "You can see size of the database that you selected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd usually creation is caring about redis itself only in some rare cases you will need something like this, like flush \nall in order to reset your redis to clear everything and that's all.",
            "But it looks like you have a connectivity issue.",
            "So \nquestion about network name or question about port number or something like this.",
            "So is it possible to run your \nredis CLI and make connection to your redis?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 26 ---\n\nI would also type it in our chat so this may help you to normalize your redis operations.",
            "But the most common \nreason I think is about connection strings.",
            "So you should take care about the host and database number.",
            "You can try \nto choose another database number, maybe you have some other apps using the same number and you may try to \nrun another one.",
            "I'm able to log in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will give me a bit more entertainment because so once you have a question, I will be happy to answer.",
            "Today \nwe'll continue with git, with package management, and also with working with objects in general and using data \nitems.",
            "And possibly I will show you some advanced example with connecting database views and objects.",
            "So today \nwe will mainly focus on general stuff like git and object and data management."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo creating package manually usually means that you are planning to do some classic UI stuff.",
            "Just to remind you, \nclassic UI is a special old type of user interface which you can still find in many system sections like system users, \nlike system settings, like web services.",
            "You will see some specifics and no possibility to shrink columns easily.",
            "And \na bit later I will show you examples of Freedom UI and you will see how you can use such tools, how it will look like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently you can see that we can select all packages.",
            "As you remember we have 141.",
            "Now let me check number of \npackages at our d one database.",
            "Now we have 141.",
            "So one package was added because we added it manually."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can create some dummy stuff here just to demonstrate something that is not empty inside of our package.",
            "So \nlet me show you what it will be.",
            "For example, we can make a test process, business process.",
            "It's a type of \nconfigurable item designed for automation of some business actions in our creation system.",
            "So now I need it only \nas a template done stuff just to make it to make my package not empty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can change this prefix at the beginning of your project or you can even remove it if you do not like.",
            "So \nsupporting prefixes.",
            "In my case I do not need to disable it.",
            "So let it be as is.",
            "Prefix usually helps me to detect my\n\n--- Page 27 ---\n\ncustom changes and differ them from base product stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I do not really plan to make some business logic here.",
            "So my test process includes some start simple event and \nthen terminate event.",
            "So this process, it's just doing nothing.",
            "I have no parameters, no special settings, I only have \ncode and title.",
            "Then I can save this sample diagram."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn the case if we work in this mode, this star is really important and helpful because it shows us that something was \nchanged and not fully saved on disk.",
            "But if you will turn back to creature ide, this star will be almost useless because \nit will represent that your changes are not submitted to the SVN.",
            "And if you do not support SVN, so you will always \nhave big set of such items with stars and it will not help you to detect some recent changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDownload packages to file system the reason why we have to do this is that some changes when we do them at \nconfiguration section are not initially and fully saved on disk.",
            "They are still created and saved in database first, \nbecause it was historically and originally the first storage place of creation items in database.",
            "And only several years \nlater possibility to save items on disk was added.",
            "And that's why we have some kind of legacy and historical stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also this star nearby.",
            "The item name will disappear.",
            "Meanwhile you can see the type of the item.",
            "It was a \nbusiness process.",
            "Now you can see this small report includes text that this USR process was modified on this so it \nwas fully saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMetadata is information about our configurable items stored in a special system inner format in a JSON string with \na big number of different properties and values.",
            "And luckily we should not look here constantly.",
            "So just something \nthat you need to know that it exists.",
            "So metadata represents in the structure of the item and for some types of \nconfigurable items it's not really designed to be edited out of creation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's how we will exchange settings between different developer environments within one development team \ndoing the same project.",
            "So now as you can see, we're going closer to file system and to understanding how we can \nexchange settings between developers.",
            "I need to tell you that creation has two different flows of changes, two \ndifferent, let's say directions of how you can transport changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this zip archive file can be also uploaded on some other environments.",
            "Such uploading can be done with the \nsettings.",
            "Then you go to application hub and then it's possible to add new application with install from file option."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be really hard to operate as a team where each team member can do his own, let's say contribution to the \ncommon repository.",
            "So such export and import is not designed for sharing settings between developers.",
            "We have to \nuse a bit more sophisticated approach and that's why we turned our environment into a file system development \nmode."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how it can be organized as a team.",
            "And now I will show you.",
            "I will use git as a version control system, the \nmost popular for now.",
            "And in order to run git I need some kind of good git client."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo first before you enable any folders, before you operate with your git, if you don't have git client, you should click on \nthis button source control in order if you so if you don't have any git client installed, you will see only one button here \nto be called something like oh we have to update.",
            "Okay, maybe later one single button will be install git client.",
            "In this \ncase you have to run your visual studio as administrator when you click on this button to automatically download \nand install official git client and after this you will see the same settings as I do."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI think you can easily fix it if you face this difficulty with new terminal window and a bit of googling will tell you how \nto make full setup of your git client.",
            "In my case, this git client was already set so I already have git client normally \nworking so I can now open folder and initialize repository in it.",
            "This is very important to understand how you should \nmanage folders."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if I decide to make a repository root folder somewhere inside of my folder representing a package, then it will be \nreally hard for me to add any other packages here.",
            "So I will need to keep several repositories for several packages \nwhich is also not so good.",
            "So possibly we can select upper level folder."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will do this with visual studio code and in Explorer tab I'll just click open folder.",
            "I need to find the corresponding \nfolder from my disk.",
            "And now probably it's time to explain why we have so many files and folders inside of TKG.",
            "So \nwhen opened you will see a lot of subordinate.",
            "Yes, I trust the authors, but you will see a lot of subordinate files and \nfolders here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nContent builder is also representing a page.",
            "Okay.",
            "CRT analytics dashboard okay, let's find it.",
            "Yes, you can see it, but \ntotal number of such folders is much less than 140.",
            "So it looks like such folders appear here as a result of presence."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor client side we have some data items, we will discuss them and they are used to keep some data records in your \nsystem, business processes and some other types of items.",
            "So in general any package may include unlimited \nnumber of different configurable items.",
            "That's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this file contents is usually having two types of files.",
            "It usually has some DLL's as a result of compilation and for\n\n--- Page 30 ---\n\nsome cases it may include some JavaScript stuff, JavaScript components.",
            "So generally the answer is that in PKG \nfolder we have file contents which is a legal valid part of some packages saved on disk and we should treat it as \nread only stuff.",
            "We should not remove or modify any part of base product packages file content."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we only opened some folder with big number of files.",
            "We are really interested only in some part of such files, \nbut we are not interested in all the contents.",
            "So let's go to source control tab and now it's time for us to make a git \ninit comment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will run initializerepository which is the same as git init command and it will initialize my git local repository in \nPkG folder.",
            "So I just click this, it performs some steps and now we can see that at this source control tab our git \nclient detects huge number of modifications.",
            "Of course most of them are at base product packages.",
            "So we do not \nplan to version such base product file content."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is our package that we plan to operate.",
            "We want to ignore everything else.",
            "Custom package is also editable, \nbut we agreed that it's not a good idea to use custom package for big project development.",
            "So I prefer to ignore \ncustom package as well and keep it empty or only with some temporary stuff which will be not submitted to version \ncontrol and will be not shared with any other developers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to GitHub.com.",
            "I need to sign in.",
            "I use my Microsoft authenticator for this.",
            "Just a second.",
            "Authenticator \nhelps me GitHub yeah."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course I will share it with you.",
            "Gitignore file is a file with empty name and gitignore extension.",
            "And the main \nreason of this file is to provide set of macros or a set of text templates which will be used to find and exclude from \nthe contents all stuff which we consider as not necessary.",
            "Usually it's designed to exclude log files, some settings \nfiles, some technical files generated by your integrated development environment, temporary files, project files, \nsometimes executables if you do not need them, debug files and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you will do this with your Windows Explorer, make sure you set for display of the full file names with extensions.",
            "In \nthis case you will not fail and you will not create a gitignore txt file.",
            "So I will create new gitignore file, paste this stuff \nthere and save it.",
            "Now you will see immediate change happening in my repository, in my working copy source \ncontrol tab.",
            "Now you see gitignore file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see CrT omnichannel appear it here and I can add it to gitignore.",
            "Let me show you what happened and \nalso I do not need to put all of the files here, so package name is enough and CrT security so I can type it manually \nCrT security and save it.",
            "Now you will see I cleared my versioned stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will help me to understand your current level of skills and knowledge about version control.",
            "Because today \ndeveloper I think must have some say basic experiences version control tools because it's quite inevitable to operate \nas a team.",
            "So thanks for all of you who replied you have some experiences git."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso I wanted to show you in file system once we initialize git repository, you will see that new folder appeared on my \ndisk folder name is git and this folder is hidden.",
            "As you can see the file attributes here show us it's hidden.",
            "So \npossibly I will not see this folder easily in my Windows Explorer, but here I already saw set show hidden items and \nalso already set for showing file name extensions.",
            "Just not to be tricked by windows.",
            "So now you can see hidden \nfolder dot git even in Windows Explorer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy first commit ever.",
            "So it's just something fun.",
            "Text and text for your commits is important to describe your \nchanges in general.",
            "Like you did some new section, you did improvements integrations or you made some data fixes \nor anything else.",
            "So your commit text should help you to track history of your changes in future."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's about some git secrets, how it saves your comments, your changes and so on my git repository is still local so \nI did not share anything with my imagined team members.",
            "I need now I need remote global git repository that will be \navailable for my team members.",
            "I will use GitHub.com as a central git repository host so it will be my git server and I \ncan create new repository.",
            "I will have a lot of repositories here and I can easily create new one more new repository \nfor our training session stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I need this common repository to organize sharing of settings with my colleagues.",
            "This is very easy.",
            "I will also I \nalso avoid using commons.",
            "I user interface because it's easier and quite straightforward.",
            "I will create new repository \nto be something like guided dev May 2024 let it be so this name was not used inside of my account and no \ndescription public repository, no readme file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will connect remote repository to my local git client and my local git repository.",
            "I can do it with a terminal \nwindow.",
            "Actually I can run any command line on my PC, but I prefer to do it here just to be a bit more consistent and \nto show you what happens directly not far from my visual studio code.",
            "So I just paste this code git remote add origin \nand as you can see my remote repository had this URL.",
            "Okay, let's do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see, compressing was used here.",
            "And finally my remote repository was updated by set of commits by stuff that \nI committed from my local one.",
            "We can check it out.",
            "So now my repository is ready.",
            "You can see some files and \nfolders here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd now we have some stuff from our package which is not empty.",
            "So we have some files and folders committed to \nlocal git repository and then to common repository.",
            "So now it's globally available and I can share my repository link \nfor you.",
            "So you can also check it out if you have any git account and know any restrictions to access GitHub.com \nfrom your PC."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I can easily add more packages to my solution and it will still be located at one repository.",
            "You can also see all\n\n--- Page 33 ---\n\nthe history of my comments.",
            "You can see changes there.",
            "So we will work with it a bit later.",
            "Now I will demonstrate \nwhat usually developers do when they operate with git and how their, let's say set of steps should look like we are \nstarting some steps at our development."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut this is something that and I will read only one column 80 okay, so this is just example read contact.",
            "An example \nof what we can do as business logic automation inside of a process.",
            "Let's imagine we did something useful, \nsomething very important for us, and then we save our customization.",
            "This is an example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOriginally when you do customizations they are saved in database and only if you download on disk it will be \nproperly and fully saved on disk.",
            "Some items are also saved on disk while you edit them.",
            "But this download action \nensures that everything is properly saved.",
            "So you must do this action when finished.",
            "Some development steps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we have some new items appeared here probably because of our titles added to the process pieces.",
            "But okay \nso we have test process and so on.",
            "So we have set of file changes.",
            "We can commit it as a commit example one and \nwe can do git commit into our local repository.",
            "Great."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we can go to git repository loaded and you see some history of changes.",
            "So we have two commits.",
            "Here is my \ncommit history.",
            "You can, you can see and compare changes.",
            "Let me show you here you can compare changes in \neach file, in each separate file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnother developer originally has no own package at all.",
            "Another developer just installed new environment and they \nhave no package at all.",
            "So only one single developer should create a package, should commit it to file system and \nthen to version control repository."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThey can do it with git pull comments or git clone comments, whatever works better.",
            "And finally, creature is \ninterested only in PKG folder and the contents here.",
            "So finally you will get this folder from git repository to some \nanother developer environment.",
            "After you do this, you will have file system stuff like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo second developer will perform this operation and second developer will see results that some new files, new \nfolders appeared and even new package will appear at second developer environment.",
            "So that's how your package \nchanges may travel from one environment to another.",
            "I mean from one developer environment to another developer \nenvironment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's how first developer will receive all changes in the package files.",
            "And then first developer must run the \nseparation update packages from file system.",
            "So that's how you can exchange settings between developer \nenvironments.",
            "And as you can see, it's fully 100% based only on files and folders.",
            "So no any special magic or special \ncalls or special web services are involved into this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will commit only changed items, changed parts to common repositories and everyone else can do the same.",
            "So \nthat's how you can easily, let's say, modify two different items of the same package and work as a team.",
            "There are \nsome warnings about this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen two developers made changes to the same item, I think the best way is to sacrifice changes from one of the \nside and submit another side changes into repository and then ask first side to check out it and make changes \nagain.",
            "So merge of metadata is not designed and probably will not be successful.",
            "So you should not try and it's \nbetter to avoid this.",
            "So you may communicate with your team members and organize your work so they will not \ninterfere into each other settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you have any questions about it, any other ideas, feel free to ask.",
            "I'll be happy to explain.",
            "So in general, now we \nmade all major settings and you see how you can set up your common repository."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can easily create objects in your configuration and also when you do customization using no code tools.",
            "For \nexample when you operate with application hub or with section wizard, system is capable to create number of \nobjects automatically.",
            "But in order to study it, you need to make some examples manually.",
            "You understand it better \nif you do it like by hands.",
            "And creature has a lot of out of the box existing objects, so maybe a couple of hundreds \nhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also I need created on column just to make more comfortable sort in this list so I can sort by name.",
            "For \nexample, we can find a lookup called address types.",
            "So it's something simple, address types, you can open it and we \nwill see set of records representing types of addresses in creature, like home address, business address, actual or \nlingo address, and so on.",
            "We have six records here.",
            "Such records are physically saved in the database and we can \ngo to the database using our database management tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs any object created in creation will finally turn into a table in database.",
            "So now we talk about general objects \nwithout special chemistry, without any tricks.",
            "So in general, if you create an object, it will have its own database \nrepresentation as a table.",
            "One object means one table.",
            "Sometimes participants ask me, participants are asking me \nabout is it possible to have one object for many tables at a time?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me find this one.",
            "So you can see table structure, all the columns, you can see it's key field, you can see primary \ndisplayed text field and some others.",
            "We have a lot of base product lookups.",
            "You can see how many we have if you \ngo to view in your lookup section, view summaries set up summaries, display number of records and now you see \nwe have 120 lookups, an out of the box studio product."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo building more complex solutions usually starts from making your lookups and that's why we will do some.",
            "Now I \nplan to do some changes in my package and it will be necessary for my future solution in classic UI.",
            "So this will be \njust an example for you and I will show you how to create new object from scratch.",
            "And business sense of it will be \nsome lookup for our future section that we will design."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can call it real to type and I will show you how to create it from scratch.",
            "So select our package add object when \nyou create new object, it means you are creating new entity in our system.",
            "New database table will be created.",
            "Working with replacing object will be covered a bit later.",
            "So now let's make new object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we will have this prefix USR and then we can provide code for our new object.",
            "It will be real t type.",
            "And also I \nplan to make two different solutions, one for classic UI, another for freedom UI.",
            "So for classic UI I will have a suffix \nclassic.",
            "So let it be reality type classic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo system is capable to make set of theories to the database like create table, alter table and add columns and so \non.",
            "So we only provide some necessary properties and system will take care about database storage itself.",
            "This is \nalso very important so code will turn into database table title it could be anything and even more it can be translated \ninto other languages.",
            "Currently in my environment there are two active languages so I can easily set values here.",
            "But \nin total we have probably 21 supported language."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's interesting because previously I only remember added Japanese at the beginning of 2024 and now we have \nsome very recently added languages.",
            "Hungarian language was added recently.",
            "So greetings to Hungary and croatian \nlanguage looks like Hr, it's probably Croatian Hr.",
            "Hr yes, it's croatian language.",
            "So you see more and more, let's say \nnational languages are added here and now we have 23 supported languages in our system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 37 ---\n\nThen you can find languages part and now you can see 23 languages and you can activate language if necessary by \nopening it, setting active and then save.",
            "But please.",
            "So this is a warning for you.",
            "If you activate the language, it will \nconsume system resources and usually activation takes some time, maybe up to five minutes.",
            "So please be very \ncareful with it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have also an alternative way to support multiple languages with the translation section, but I do not recommend \nyou to work with it because when you initially go to translation section, it will take probably 15 minutes of time for \ninitial preparation, so it's not so comfortable.",
            "And I think it's much easier to provide correct translations just while \nyou develop it.",
            "So in my case it will be realty type classic UI.",
            "It will be my title if I want."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe plan to use reality type classic as a lookup so we can inherit structure for our object from some base objects.",
            "That can be helpful.",
            "In our case, the most commonly used Bayes object is base entity.",
            "It helps to inherit key field, \nhistorical columns and some behavior setting, some event handling that is necessary to operate in some lists and \nsome cases."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI have to confirm my change, and once I do this now you see I have new inherited columns list.",
            "I have eight inherited \ncolumns.",
            "The most interesting is probably id as a key field.",
            "Its data type is unique identifier.",
            "You already saw \nexamples of such unique identifiers in many creation tables."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you should know that creature uses Unicode strings anywhere.",
            "So every text column you will find in creation is \nbased on Unicode text.",
            "It means you can simply save any national characters there.",
            "Any kind of arabic letters, \nchinese letters, or even emoji can be saved into such text fields."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 38 ---\n\nSo we have description name and description are business columns, all others are system columns and process \nlisteners is an integer column for a very rare cases when record level event handling is used in business processes.",
            "So what do you need to know?",
            "Inheriting from base lookup gets access and we get structure.",
            "So we inherit structure \nof system columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the main text column which is shown in drop down list of lookups.",
            "So name will be used for this purpose but you \ncan change if you want nor any other special properties.",
            "We have some event handling made for this and inherited \nfrom parent one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we'll go to columns list and obviously we can add our own columns to the object.",
            "We have plenty of options for \ndifferent database types, a lot of text options.",
            "The minimum supported is text 50 characters, then we have 200 \n5500.",
            "We have unlimited length."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo just something like bizarre thing that possibly you will never use in your practice.",
            "So number is obviously integer \nand several types of decimals.",
            "Currency is also decimal with two digits after decimal point.",
            "The difference from \nstandard decimal is that standard decimal is 18 digits and two after decimal point.",
            "Currency is 20 digits and two \nafter decimal point."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when you have a lookup column system creates foreign key for you.",
            "So it keeps referential integrity which will not \nallow you to save into lookup column any value which is not faced in your lookup table.",
            "So we can try to make some \nexamples like make a new text column named code title can be code text is 250.",
            "And as example I can show you \nhow default values can work for us, especially how we can make autonumbering."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is auto numbering which works pretty well and it doesn't require any programming.",
            "So this is a no code tool to \nmake automatic numbering in your lines when you, when user import adds data.",
            "That's how we can do this and if\n\n--- Page 39 ---\n\nnecessary can use custom indexing.",
            "You can also make your own custom indexes and even complex indexes.",
            "Unique indexes can be added, but generally creature takes care about indexing by its own quite well."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis type of item is also inherited from schema, but the word scheme I think it's hard to understand.",
            "So let's say \nconfigurable item which will be closer to its meaning and I think it's easier for you.",
            "So when we saved this item, it will \nbe shown in our package contents."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo publish is necessary to make our object operational and useful for us.",
            "Let's do this.",
            "Some years ago publish took \na lot of time.",
            "It may took up to 1 minute of time.",
            "Now this operation is well automated and now we have no serious \nreasons to separate save and publish operation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut at this moment our object is already working so it can be used for us and we can try to use it in our environment.",
            "Let me show you how we can use it.",
            "We can go to studio workplace find lookups section.",
            "As you can see we have \n120 existing lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when we click new lookup, it doesn't create new table.",
            "New lookup means register existing object as lookup.",
            "Our \nobject is called realty type.",
            "We can name customers, we can provide custom title of this lookup.",
            "So name is separate \nfrom object as you can see, and we can save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is so called editable list and we are not using any separate edit page for it.",
            "So we just manage data directly in \nthis list.",
            "Another one will be apartment.",
            "As you can see, numbering works for us automatically.",
            "The no code tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, if you create one more, you see the number goes on, you cancel.",
            "If you create one more, you see numbering is \ngoing on and it will be not rolled back.",
            "The reason of why it performs.",
            "So when it generates system does not know \nare you planning to save it or not.",
            "So it generates new number, keeps currently created number somewhere in the \ndatabase, in so called sequence in the database structure."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see that numbering is generated using database tools.",
            "This is extremely reliable and physically sequence \ndatabase object is used for it.",
            "Bas is telling us and about appointment and we watch the video.",
            "Thank you Bas.",
            "See \nyou tomorrow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is physical data saved in my database.",
            "It's pretty simple.",
            "And of course, when you develop your big project, \nyou will not pay so much attention to every single lookup.",
            "You will do it in much more automated way.",
            "But this is an \nexample which will let you understand and will make you better feeling of what object is and how it works."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo for inherited columns, there are some limitations on what is available for you for change.",
            "So generally speaking \nyou can manage your object, you can change them, then you can save and publish.",
            "That's how it will be applied in \nbig scale solutions.",
            "You will create tens of different lookups and creation is capable to help you with it with \nautomation of lookup creation, using application hub tools or using section wizard for classic UI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course we need to download packages to file system if we want to submit everything to repository.",
            "But here is \nvery frequent mistake that a lot of beginners usually do.",
            "This will be about data part, so saving anything to disk here \nis okay.",
            "And in our package we only have test dummy process and we have our object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 41 ---\n\nThey see their environment, they fill in with data, they think that everything looks okay and then they just export their \npackage install for example in test environment and then they realize they miss lookup contents and they also miss \nlookup registering data.",
            "So we have technically only two options how we can transport such data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you should only use SQL script if you have enough SQL experience and I always recommend you to check your \ncode with someone else who also have experience in SQL just to make sure you will not do anything dangerous in \nyour database.",
            "SQL script can be easily used for permanent serious damage for your system, so your creation will \nnot work anymore if you do intentionally some delete of system data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn my case, I should select for my object code which I recently used to register my lookup in lookup section.",
            "Unfortunately, you have to remember this code name by heart and this object is called lookup.",
            "This lookup object \nincludes a list of registered objects in our lookup section and in general we have 121 records here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's why we go and search for the object named lookup.",
            "We can find it by name, by code and we can also provide \nsome unique name here.",
            "For example, we can add something useful, reality type, classic, something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBound data tabs represent exact records which will be saved into our data item so we can manually add such \nrecords.",
            "In total we have 121 records but most of them are base product contents so we do not need to transport \nbase product stuff.",
            "We expect it to be present at our target place target database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can only select this data select button and that's how we saved only one data row in this data object.",
            "Then we \njust click save and our snapshot of data which includes only one data row will be saved into our package.",
            "Now you\n\n--- Page 42 ---\n\nsee data item is created.",
            "This is only registering of an object that's not the contents.",
            "So for the contents of the \nobject when we open it, we have five records here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI prefer to use codes because they are always unique and system keeps this uniqueness and titles sometimes are a \nbit ambitious, especially if you use non english language.",
            "So you may struggle with finding some corresponding title \nand I prefer to use codes.",
            "Okay, we can provide some common suffix just to make sure what we are doing here.",
            "If \nnecessary we can add more columns, but the most important of course is bound data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo need to use camera styler because it will be recorded.",
            "I will stop it.",
            "Okay, so changes were saved on disk, stars \ndisappeared."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now our solution is full and if we export this package as Zip archive then if we import it somewhere on test \nenvironment to work and user will be able to find our new lookup in lookup section, user will be able to find its \ncontents and user will see such data.",
            "Maybe it's time to practice with git and let's make one more commitment.",
            "Now \nyou can see a lot of changes, 80 different changes.",
            "Mainly this is our data parts."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGreat, everything is done now common repository also felt such changes.",
            "You see three commits and you can see \ncomment history if interesting.",
            "Now you can see all the changes here.",
            "So it will be easy to check previous values, \ncurrent values and so on.",
            "So what I need to tell you about data items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, they decided to rename office space into just office.",
            "And we can do this only at developer environment \nbecause we need to share all such changes to all other environments including test and production.",
            "So such \nchanges should be started from developer environment first and then someone decided to rename parking lot into \njust parking.",
            "So now we have some changes made at developer environment and we need to populate them to all \nother systems.",
            "Data items can help us with it, but you need to know how to properly set it up."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's imagine such data items are so such data items is being loaded at target environment.",
            "System is capable to \nprevent duplicates and it uses key columns to detect presence of the record which is being processed right now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if record exists system is capable to update existing record and here you will face something which is a bit tricky \nand you may fail for the first time.",
            "And you will have to look carefully at the settings of your columns because \nsystem will perform update only for columns marked with the first update option and by default as you can see no \nupdates are asked here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso you may check some other columns if you're not sure and you also want to update so you know the source of \ntruth is your developer environment.",
            "So if something else was changed at your target system then you have to \nupdate it anyway.",
            "So first update is not set by default.",
            "If you expect to perform update operation you should take \ncare about it and once you do this your update will work."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's why we can see it here.",
            "If you want to actualize it, to make it actual and read it from your database, you can \njust click actualize data.",
            "When you do, this system will refresh data item contents and now you see office and \nparking exactly as in our database.",
            "Now let's check column settings correct."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd next time when you export your package and import in some target environment because of change the date of \nmodification, this item will be processed and corresponding updates will be performed.",
            "The same happens with our \nsystems shared with a git.",
            "So we need to save everything in file system.",
            "Then we will commit our changes to our \ncommon repository and it will be an example of how we can do some updates in data and populate it on other \nenvironments.",
            "Now you can see we have only small part of changes here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou may ask me about the delete scenario, what happens if in our source database we finally realize that castle will \nbe never used and should be deleted from developer environment and for test and production.",
            "Unfortunately data\n\n--- Page 44 ---\n\nitems cannot help us to delete such data.",
            "So if you really need to remove your data from target environments, you \nhave the only way for this.",
            "This is SQL script."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course in real life you probably never use this, but this is some like a training example for you so you can create \nSQL scripts for some specific needs.",
            "Installation type determines the way the moment of time when your script will \nbe executed in the scope of package loading procedure.",
            "Before package is at the very beginning.",
            "After package \nmeans after new tables will be created and processed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will write some script like delete from USR realty type classic.",
            "This is our name of the object and then where \nname equals something like this.",
            "So this is an example of a script which intentionally removes some data and this \nscript will remove nothing if no data found.",
            "This is easy example.",
            "I do not use id and I'm using this free name just to \nmake it simple and easy to understand."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if we run it now, you can go to actions in write part here, then install, which means run SQL script, you can do it \ncarefully and if script finishes with an error it still will have status and also you will see its properties and last error \nmessage text will show you last error which happened with running the script.",
            "In my case it was successful, so my \nscript executed with no errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou should be careful because if someone already started to use such data that you plan to remove, you will have \nsome cascade problems with it.",
            "So you will have referential integrity exceptions.",
            "You will need to look at connected \ndata and ideally you should think of it in your script, you should process such scenarios and you should think of what \nto do with connected data entities."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now we saved everything on disk and later we will start with the building of our new applications and we will need \nsome base product parts which are very common to be used.",
            "I'm talking about contacts and accounts and also \nneed some additional tools.",
            "So my plan is at the end of today's session to show you how you can add some \nnecessary frequently used marketplace add ons that will really help us to operate in future."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI think that if I keep some data here which is not present in real database, this is mistake, so I should avoid such \nmistakes.",
            "I should actualize data, not to keep any non existent records in my contents of the package.",
            "So actualized \ndata saved it.",
            "Now everything is consistent.",
            "So my castle fully disappeared from my conscience here and we can \nalso save it again to disk."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently we will use this application hub only for inserts so only to add some useful items into our environment.",
            "So \nadd new application marketplace powered so we can find a lot of application there.",
            "And also we have some base \nproduct tools made by creation.",
            "Now I need customer 360 because it enables contacts and accounts section in my \nsystem.",
            "So simply speaking, when you install customer 360 you will have new sections in your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is a high degree of integration and seamless connection between my local website and marketplace dot \ncreation.com.",
            "So I just click install.",
            "You see some automation works.",
            "It asks me to confirm.",
            "Okay, no worries, \nconfirm one more confirmation about app that I plan to install anyway."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this installation logs can be kept for some time on your disk just for future reference.",
            "Because even in case of \nsuccessful installation, sometimes you may face situations where you see something that you do not expect and \nworking with such logs can be efficient to check it out and to see some technical details about your installation.",
            "At \nleast we can see how much time it took.",
            "So 1437 till 1510 it looks like 33 seconds.",
            "So it took only 33 seconds to \ninstall this app."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt was only for let me show you properties here.",
            "It only for Microsoft SQL type of the database if you need a similar \nscript for postgres, you have to create another SQL script.",
            "That's why base creature product if you will filter by SQL \nscript only.",
            "It always includes three types of SQL scripts for each business action that we need.",
            "For example, let me \nscroll down and find any kind of procedures like create omniscient tables for postgres, separately for Oracle, \nseparately for Microsoft SQL."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt could be most frequently it could be Microsoft SQL or postgres.",
            "If you expect to deploy your solution in creature \ncloud, it's highly likely that you will have PostgreSQL in the cloud condition.",
            "So it makes sense to use the same type \nof the database for your own local development.",
            "But it's not mandatory.",
            "If you develop on Microsoft SQL and then \ndeploy your solution on postgres, it will also work if you support all necessary database dependent settings like \nnecessary scripts."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably we will need to reload main page just to suppress any kind of browser cache issues that possibly can \nappear.",
            "So now we can see a bit more workplaces.",
            "Originally we had only one studio.",
            "Now we have all apps \nworkplace studio and we have new one which is called customer 360.",
            "We have context Freedom UI section here you \ncan easily check if the section is Freedom UI or not because only Freedom UI section offer you, they offers you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can easily detect which type of UI you are working with.",
            "But also you can remember position of \nbuttons.",
            "In freedom UI, managing buttons are usually the right part and fonts are different.",
            "The style of the list is a \nbit different functionality of buttons in list and you can see you can hide and freeze buttons, freeze columns in lists."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can open edit page, you will see page reach of controls with oh no, no.",
            "This is a classic UI stuff.",
            "So this is still \nexample of it's not a glitch, it's kind of behavior connected with a cache and server side.",
            "So we have to log out.",
            "We \nwill need to log in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut so we will study how to build such pages.",
            "You will know and if some one of you already passed our \ncustomization course, you already know how to do such things.",
            "So this is example of a freedom UI user interface \naccounts also shown as a list and edit page.",
            "So contacts represent physical persons with names, emails, addresses \nand so on.",
            "Accounts represent companies like Samsung, like Tesla, like others."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 47 ---\n\nIt's still a bit strange that application hub is empty here, let me reload this page because something unusual.",
            "Yes, \nnow it's better.",
            "Now you see customer 360 is already installed and we will study what an application is, how it works.",
            "Now we will just install a couple more apps from our marketplace because we will need them in future examples.",
            "So \nmarketplace powered."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo data items can be automated and you can create them with several clicks.",
            "And it's easier than to make everything \nmanually.",
            "So data binding tool takes some time to install.",
            "It's pretty awesome.",
            "Old tool, I think it exists maybe for five \nyears and it's designed for an older version of creature and it also has a lot of support in classic UI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny warnings here?",
            "Perfect.",
            "Everything is okay.",
            "Everything is okay.",
            "So our app was installed and one more final thing \nso we can reward this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this app simply adds a couple of buttons into our creation user interface to make it easy to restart the app or to \nclear redis cache.",
            "I will use this restart app, we will need it, we cannot avoid it unfortunately.",
            "And in our examples \nyou will see it.",
            "So you see 2708 started, 20 718 finished."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this is important to track how long it took for creation to install something, especially if you do it in the middle of \nworking hours.",
            "So my installation was successful.",
            "We can also go back again to application hub.",
            "Now you see one \nmore app, maintenance tools and I can show you where this maintenance tools can be found.",
            "It will be into our \nsettings page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you for your time.",
            "Today we moved forward with working with objects.",
            "We discussed how to build data items, \nhow to operate with lookups.",
            "We also worked with Git.",
            "And tomorrow I plan to show you one more example with\n\n--- Page 48 ---\n\ndatabase view and we will move on with building user interface."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow your homework, as usual, is to watch this video to represent all the steps or produce all the steps for today's \nsession.",
            "Working with your package, creating new lookup, new object, register it as lookup and practice with data \nitems.",
            "So this will be your homework and tomorrow we will continue doing more complicated things.",
            "Thank you.",
            "Thank you for your time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs changes customizations in our settings page to enable couple of buttons.",
            "Yeah.",
            "And customer 360 c 3300 okay.",
            "CRT customers, it's surprisingly low.",
            "I need a bit more."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen I am going to advanced setting, the configuration page doesn't work, it just reload.",
            "It's because you're probably \nusing Windows home.",
            "If you windows home you have to close previous page.",
            "In this case, configuration page will be \nworking normally.",
            "Yeah."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy question is like if we have a new lookup, like if we have two, three more lookups and we want how we can then \nupdate it and like a system designer, do we have to create the data file again?",
            "Or we can update in the existing data \nfile which you already showed.",
            "So probably you are talking about new data records added to existing lookups table, \nam I right?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the minimum amount of data items in your case will be six, one for five lookup records and five others for each \nseparate data contents of your lookups.",
            "So simply speaking, any lookup should include data item for registering of \nthe lookup and data item for the contents of the lookup.",
            "In this case it will be the most comfortable for your end \nusers because they will always find all your lookups in production and lookups section and they will be able to open \nit to see their contents normally and data items guarantee such transport of records.",
            "Okay, thanks.",
            "Thank you \nTashar."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo our tomorrow session will be as usual and we will continue working with objects and we will start to work with \nuser interface programming.",
            "Thank you very much for your time.",
            "See you tomorrow.",
            "Bye.",
            "Good luck."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo today session number three of our development on creation platform guided learning.",
            "So we started \ndevelopment questions.",
            "We already set up our environment.",
            "We did some simple changes there.",
            "We practiced with \nobjects and with data items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you experience some problems with your app and if you start to get error messages about some files are not \ncannot be written or you have some file system access issues, especially you can face it during calculation, you can \ncreate separate setting and you can find your app folder Terrasoft web folder and add special role IIs underscore I \nusers and you should provide modified permission for this role for all of your application folder Javasoft web folder \nthis will grant unlimited file system access to create your application.",
            "So you will not have troubles with saving files."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo iis I users it's a local role which includes set of automatically created users made by creature.",
            "Sorry, made by IIS.",
            "When you create your application pool system makes automatic creation of application pool identity and such \nidentity.",
            "Actually it's medically generated user.",
            "I can show you something in my c users."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut currently my regular user has no such privilege because of corporate restrictions which I have with my \nenvironment.",
            "So let's move on.",
            "So this is something that may help you with troubleshooting of your access issues of \nyour application."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example we can make our own view in database, so we can use some SQL scripting and then we can make an \nobject named the same as this view and we will have the same columns in our object the same as available in view.",
            "And finally it will show you some interesting trick, how you can use creation objects to read data from sources not \ncreated by creation system.",
            "For example, such sources may be created by developer or can be used for integration \npurpose to connect with other systems.",
            "So let me show you some simple example which implements this idea."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere we used application hub and we installed it from marketplace.",
            "So this customer 360 was installed from \ncreation marketplace.",
            "Customer 360 encodes contacts and accounts.",
            "So now we have contacts section and what I \nwant to show you is that contact by default already has birth date column and also contact entity has integer age \ncolumn representing current age which is recalculated every day automatically according to birth date and current \ndate."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe want to calculate it in days.",
            "So just to see how many days certain person lived and what is its current age in \ndays.",
            "We can do it easily at the database level.",
            "So let me show you, I already have some examples how we can do \nthis.",
            "So I will do it quick and I will provide you necessary scripts for this SQL view."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo actually it's better to say difference between get date which represents current date and birth date.",
            "And it makes \na difference in days and shows us some integer value.",
            "So if we run such query we will see list of our contacts and \nwe will see age in days.",
            "This is a very simple example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this is example of how we can do some special selection from the database which is not normally available if \nyou want to use just only creation tools.",
            "So creation supports three types of databases.",
            "It doesn't support some \nspecific database dependent features like date, d function.",
            "And also we have not so much of flexibility building \nqueries in our creation.",
            "So as we have flexibility to build queries directly from SQL."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will share example of a script for creating Vue for SQL version and some of you are running postgres.",
            "For \nexample you may run postgres at cloud instances like demo websites or maybe trial websites.",
            "They are usually \nbased on cloud, on postgres.",
            "So this is example of postgres for the same stuff.",
            "Okay, so these such scripts of \ncourse obviously are database dependent."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 52 ---\n\nThat's how we go to configuration section, find our package that we decided to use.",
            "Add SQL script I can name my \nSQL script whatever I want.",
            "For example USR, create contact age, days view, something like this.",
            "It could be \nanything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJust to make clear that your object is not a simple table, you plan to make a view.",
            "So this view name should be the \nsame as our future object that we will create.",
            "That's why this view has such a strange name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can save this SQL script.",
            "Obviously if you work with postgres database you should use postgres version for this.",
            "When you create SQL script you can decide what type of database you are focusing.",
            "So close it and we can also run \nthis script.",
            "So of course I could run it in my SQL server management studio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if I select successfully.",
            "Yes, now it looks like my view is present.",
            "It has four columns and my database level part \nis ready.",
            "So I have database item as a view which returns some data if I select it.",
            "If something is not clear, if \nsomething you do not fully understand why I'm doing this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now I will show you and explain some of behavior settings we must set up.",
            "Represents structure of database \nview this is very important property which tells creature that system should not try to create corresponding table or \nfind existing table.",
            "If we create an object with represent structure of database on it means developer took care about \ndatabase part themselves."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will try to do it and treat it as a table with a set of columns and columns information will be provided in this object, \nso it will try to use it as a regular object, but it will not try to modify its structure the database.",
            "This helps us to make \nanything at the database level, including views or self handmade tables."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAll we have to do is set of columns which matches with set of columns of a real database view.",
            "First column is \nUSRiD and the type is unique identifier.",
            "So we have to represent it.",
            "Type is unique identifier, column code is Usrid and \ntitle could be just id.",
            "Okay, this column is done."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo our key column is id column we created especially it has Usrid code and it has id title.",
            "So this is the most \nimportant part and that's all we can save and publish our object.",
            "As you remember, we can just click publish \nbecause it performs save anyway.",
            "And luckily for us, publishing such object which is represented as a database view \ndoes not make any changes in the database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can register this object as a lookup.",
            "By the way, you probably noticed we have a new button here.",
            "Sorry for this \nalignment, but it's not a big deal.",
            "This button appeared as a result of data binding tool and it helps us to automate \ncreating of data items and for many different scenarios.",
            "In our case, we need data item for register object as a \nlookup."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can see we have name column, we have birthday and we have age in date.",
            "So you can see this calculation \nworks.",
            "There are some side effects because of this is editable list and our object is not inherited from base entity.",
            "We have some side effects caused by it like this.",
            "So you see it's not working fully as expected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen you can create an object representing your data structure and with the same name and same columns set.",
            "And \nif you mark this object as represent structure database view system will not modify data tables.",
            "It will trust you and \nit will try to read data from sources that you specify.",
            "So it will try to read data from the table or view with the same \nname as your code.",
            "So this trick can be also useful."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow I will show you how we can do this.",
            "But first of all we need to modify our SQL script.",
            "Let's go to our SQL script \nand add one more column.",
            "We can add one more column.",
            "It will be id as contact id."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will name it USR contact title can be contact and there are some architectural peculiarities.",
            "When we have a \ncode something then on database system works with code plus id suffix.",
            "So I named my column in the object level \nUSR contact and system will work with USR contact id when it reads data from the physical database.",
            "This happens \nnot only for this object, it happens for all objects with lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to specify lookup property.",
            "It will be a contact obviously it looks like that's it.",
            "We do not need anything else.",
            "Let's save and publish.",
            "Click publish, make saving and publishing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let it be just maximum value for one contact.",
            "We always have just one data row in our connected entity.",
            "So \nmaximum will work for us.",
            "And I can just name this column age in days.",
            "No need to use any additional filters, save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo possibly this is not very difficult for you, and if you have more questions about it, just tell me.",
            "So it was an \nexample of how you can use additional tricks with objects and to connect it using database view.",
            "There are some \nother properties here like virtual connected to the portal, wave update and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we will search in our configuration for objects, search for something with the name base, we'll find a lot of objects\n\n--- Page 55 ---\n\nlike base address, base entity, base folder and so on.",
            "I will open base lookup as example.",
            "You will see this object is \nvirtual, so it has no its own table.",
            "So you see object based lookup."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we create new object inherited from base lookup, it will be a true new real object.",
            "But you will inherit a lot \nof properties and events, settings and behavior from base lookup.",
            "And that's how this object can be really useful \nbecause you can.",
            "So base architects can program lookups behavior.",
            "Once in base lookup object, then you create \nyour own lookups inherited from it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's check.",
            "I never faced it previously.",
            "Base value lookup let's see what.",
            "So it's empty.",
            "Translations are also empty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd inside of the objects you can specify what columns will support this translation and what columns will not \nsupport translation.",
            "By default, name and description text columns are turned on with this option, localizable text.",
            "It \nmeans that if you want, you can save translations of name and description column into other languages.",
            "And this \ntranslation was already done at base product lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is probably what else, I don't know what is the language here?",
            "This seems to be italian, maybe Portugal and so \non.",
            "Probably, I don't know, it's hard for me to guess.",
            "I can join and so decode such cultures.",
            "Okay, let's do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can see translations of the same records that you get from your main table are saved into different \nlanguages and out of the box lookups.",
            "That is because name and description are supported with localizable text.",
            "--- Page 56 ---\n\nYou can turn this option off if you don't like it or you can keep it on by default because it was inherited from base \nlookup.",
            "It was inherited and that's why we did not change it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, you see my table is empty because I did not provide any translation.",
            "But once you will support several \nlanguages and if you want to keep your lookups translated into other languages so you can start to use it.",
            "And the \nbest way to transport and make such translation is to register one more user with another language and then log in \nat this user, go to lookups and when you will go to corresponding lookup then you will start to edit data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEverything should be saved on disk.",
            "Of course we will remember now about our visual studio code and git client to \nshare our settings with our imagined team members.",
            "Now you see some items created so we can commit \nsomething like contact age view example added.",
            "This will be our comment for the commit that we do with these \nrecent changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhat else I wanted to show you before we proceed is example of delivery because it will be important I think that \nyou are interested how we can transport our solution for test and production.",
            "You remember version control.",
            "Working with git with bunch of files is not so efficient when you want to transport your solution for test and \nproduction.",
            "This type of sharing with many files is good for developers and between developer environments in \norder to make delivery to your test and production."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInside of it we can find Gz archive and inside of it we can find a single file with metadata saved here and it's not so \nreadable.",
            "And this is a transportable format for creation packages.",
            "Okay, so this is metadata of your package fully \nincluding all the package items, including all scripts, including processes, whatever we have and even more including \nfile system package contents from the files folder.",
            "Let me show you telescope configuration ekg dev classic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will take some ram, some cpu.",
            "You see my ram consumption is more than 11gb now, so I can start my second \nenvironment.",
            "I will use it as a test environment to check how delivery works and to also make sure that I have no any \ntroubles with changes with transition of my settings between environments.",
            "Sometimes it happens.",
            "Now I started to \nreceive this attempt when I attempt to login."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have to be a member of a sysadmin.",
            "Let me show you system users.",
            "My supervisor user is a member of \nsystem administrators role.",
            "The only condition necessary for us to load packages and here is my application hub on \ntest environment and I can just install the application from file, select file from disk, go to downloads.",
            "This is my dev \nclassic package saved several minutes ago."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's see what happened.",
            "So 13 seconds we started no visible errors and 31 finished.",
            "It looks like maybe 18 seconds \nto install.",
            "Very good, very good.",
            "Okay, so you see some text, comments and details about installation of the package, \nbut now it's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor some reasons you can do this by unlock for hotfix temporary thing that helps you to make temporary make your \npackage temporary editable.",
            "If you forget to lock it again, system will do it according to the special timeout which \ncan be found in system settings.",
            "Now you can see my package was loaded.",
            "You see status, no errors.",
            "It means all \nSQL scripts or objects were applied successfully."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nContact age in days as you can see according to my current data on test environment is calculated.",
            "Great.",
            "So it \nlooks like everything I did was normally loaded and we can use this environment for future checks.",
            "Now we can \ntemporarily disable it, but then later we will check our new environments.",
            "We will check our new application which \nwe plan to do right now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd today I plan to show you how to make a UI settings how to make new sections not with section wizard because \nit's classic UI, outdated stuff.",
            "I will show you how to make new sections, new bake applications made with \nautomations provided by application hub and Freedom UI.",
            "So we will focus mainly on Freedom UI.",
            "But before doing \nthis I need to explain you what is application hub and how it's intended to be used.",
            "So we go to settings, then we go \nto application hub section and open it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nApplication appeared not so far ago, maybe just a couple of years, and packages were present for more than ten \nyears.",
            "So you see that application is generally relatively new to creation and previously we had only packages.",
            "So \napplication is a new logical type of items and usually one application means one or several packages.",
            "So application \nis a higher level logical setting and it may include so it must include at least one package.",
            "But sometimes it can \ninclude more than one package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso it has information about its developer.",
            "Terrasoft here means that it is a creation company.",
            "Terrasoft, as you \nremember from previous sessions is previous name of creature company and creature brand.",
            "So application has its \nown properties.",
            "Also application has color settings and application has icon."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch items are data items created for some purpose.",
            "Data models means objects.",
            "Business processes are like \nautomated business procedures implemented as diagrams.",
            "So code in creation.",
            "They are called business \nprocesses."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe system will revert and go back into its original state which was before installation of such tools.",
            "So finally, end \nuser system may include only solutions, only applications that user decides to run.",
            "And that's why we can call this \nlogic composable app.",
            "It's very close."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it was not fully composable approach.",
            "And we had just simply hard coded part of the system which also was \ncustomizable, but it was not removable from the system.",
            "Now developers decided to make constructor only and \nthen to install everything that you need on top of it.",
            "And that's why they needed applications, because sometimes \nfunctionality that you want to add includes more than one package.",
            "So developers needed applications because \nsome functions were designed as set of packages, not just one package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this is pretty standard for creation.",
            "So you can use one zip file for many packages inside.",
            "It was possible even \nbefore applications appeared.",
            "So now developers just improved this idea and made a separate logical level code \napplication.",
            "Okay, how safe is creatio?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo ideally if you develop a very good app and then you remove it, you can take care for full recovery of your database \noriginal structure after your application was removed.",
            "And if really needed, you can create SQL scripts which will do \nthis.",
            "Recovery and installation type will be uninstall app."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in real life when you remove your app, some traces may remain in the database and usually this is not critical for \napplication because logically such columns or some data leftovers will not be available to see easily unless you go \nto the SQL level, unless you start to make some special queries in order to find them.",
            "So in general, when you \nremove some app, it will be logically cleared so it will fully disappear from the system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general, it was designed to make it easy to install some app and to remove some app.",
            "And ideally when app \nwas removed, no visible traces should remain.",
            "Beddy is it clear?",
            "Brilliant.",
            "Thanks million."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur plan is to automate realty estate agency and we want to keep list of realty records in freedom UI application.",
            "We \nwill have a section for such list of realty records and we can use existing platform customization tools to make it as \nfast as possible, to make it quick and easy.",
            "So click new application.",
            "We have several different templates here.",
            "In my \ncase, probably the best option is records and business processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 60 ---\n\nIn our examples of sections are accounts or contacts and also we have set of system sections like lookups or users \nor system settings.",
            "So section in creature, it's like main big entity which usually has a lot of columns and usually has \nsome subordinate items called details.",
            "We will study it, you will see.",
            "And also if you're just more risky and you're \ninterested in AI tools, it's possible to make a section with the help of AI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's change its color to something more like significant.",
            "And we can see, oh, we have some new icons here.",
            "So I \nplan to create a real tea section.",
            "So possibly I could find some icon representing a house or apartment.",
            "Okay, let it be \nlike this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will not be able to easily change it later.",
            "So it's important to provide it correctly from the first time.",
            "Also it's \npossible to link so simply to create rhythm UI section based on existing object.",
            "But this option is really useful only in \ncase if you already have some created objects in your system.",
            "And usually it happens when you already have classic \nUI solution and you want to migrate into freedom UI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt has its main name, version, default page, some description, date of creation developer.",
            "This is a string named \ncustomer.",
            "If we change our system setting, named publisher to be possible to change developer of this package and \nthis app.",
            "Okay, no changes in app properties.",
            "We have pages part, we have list and form page, we have navigation \nand section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt means such packages are read only.",
            "If you want to customize something in customer 360 app system will not be \nable to save anything into such read only packages.",
            "So this will automatically create new package for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd as you can see it created seven data items representing inserts into some system tables that are necessary to \nmake our application work normally as a section.",
            "Let me show you where we can see it.",
            "We can also run this app \nbut I prefer to work with main application window and in order to fight with any potential browser cache issues I\n\n--- Page 61 ---\n\nreloaded it.",
            "Now we can go to studio and switch to my applications workplace or we can find all apps in all apps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is just an example of a reality object that we plan to reality data that we plan to save.",
            "Such list and edit page \nwill be used to manually input data, to modify this data and to work with this data.",
            "Then of course we need to \ncustomize it to make more columns to make it more useful to work with.",
            "But let's make a break and then we will \ncontinue because it looks like I just forgot to have a five minutes break."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen you open edit page.",
            "You can also open edit page by clicking on this action, but it takes two clicks quite hard \nand we can just click on this hyperlink.",
            "Okay, now we have a so called form page or edit page.",
            "We can do \ncustomizations right from here with a small edit page button.",
            "It will open corresponding page editor if you have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will do it quite fast.",
            "Please confirm.",
            "Do any of you reproduce the same steps just during the session or you just \nwatch and plan to do your own practical steps separately?",
            "Watching videos so please type plus in our chat if you \nfollow me just during this section right now and do the same examples at your environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my plan is to extend a bit our settings and make it more useful.",
            "When I select any column we can look at its \nproperties settings.",
            "We have some kind of object inspector for settings of a certain selected item.",
            "In my case here is \ntitle code, data format, some settings and here I would like to make it copyable.",
            "For some unknown reasons, \ndevelopers who made a template made name not copyable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSimply drag and drop.",
            "You see several potential places to land our page.",
            "Our column I prefer to put it here nearby \nname.",
            "I can name it price.",
            "I can also specify the amount so maybe the currency of our price to make it more clear."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn our case, code will be something like USR because we need prefix for our new columns and technical things, so it \nrequires prefix.",
            "USR price USD will be our code and we confirm.",
            "Save this change.",
            "Okay, the data format will be \ndecimal, two digits, no description, maybe not required and okay, if you want you can make it required."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt should be unique so we can name it the same as our own USR price USD and confirm.",
            "As you can see, \nconfirmation is provided for the most important properties and columns of our items.",
            "So element code seems to be \nimportant because we have this confirmation stuff.",
            "Okay, did it.",
            "So this is how we can make one more column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need type what is real t and I will use it based on drop down or lookup.",
            "Column drop down and lookup are very \nclose synonyms so it's almost the same.",
            "The title for our new lookup column will be type.",
            "Inner code will be USR, \ntype and confirm.",
            "But lookup is not present here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo classic UI words here so it will be our freedom usage reality type, title and code are necessary because system \nwill use it to create new lookup object inherited from base lookup.",
            "It will also register it as lookup in lookups section.",
            "It will provide data items for this registering and the only missing part will be lookup contents.",
            "We will do it later.",
            "Okay, type is clear."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo lookup for this so we can create one from scratch realty offer type I will do some poses for some of you like \nMonica or macho or rakhi who confirmed that you do it just along with me.",
            "Okay, save it.",
            "And I also just was quite \nquick.",
            "Normally by default lookups will be shown as simple drop down list.",
            "But in case if you select something \ncomplex like big entity like contacts or accounts, it may be useful to use full scale selection window for the offer \ntype."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is just to make it more, let's say friendly when we will work with code part.",
            "Okay, so what else?",
            "Maybe we can\n\n--- Page 63 ---\n\njust practice with a single text column and it will be just a comment 250.",
            "Maybe it's enough for us.",
            "Okay, checked \neverything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGood, good option for this type of selection.",
            "And I can also make unique name here manager as a code.",
            "Okay, so I \nonly usually set four parameters, title code, we specify lookup and element code.",
            "Okay, for the very beginning this is \nenough.",
            "We have some required columns, some not required columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt takes time because system saves client module.",
            "It saves changes to object, it publishes objects, so it takes some \nsignificant time and that's why it takes a while.",
            "Okay, everything was saved.",
            "We can close this editor.",
            "You can check \nwhat's happening with our new package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see that just from 20 minutes of our work we have a lot of items already created and including main entity, \nincluding some objects that are used for lookups.",
            "You can also check if you go to lookups section, you will see \nrecently registered lookups automatically.",
            "So system also made this registering as data items.",
            "So it's quite smart.",
            "And when you create lookups with the help of page editor, it will automatically create object for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe most commonly will be using sale offer type and another one will be rental.",
            "So we have only two offer types in \nour system and when we have data binding tool it will be extremely easy for us to save all data into our target \npackage.",
            "And that's IT system creates thanks to data binding tool it creates corresponding data item automatically, \nhelping us to save our time and do not perform some boring work.",
            "So here you can see all the records of our lookup \nwere saved as data item.",
            "This is very efficient."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's do one more column display id.",
            "Column.",
            "I want to display it.",
            "I don't need description at all.",
            "Okay, save such \ncolumn settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we go to another lookup realty tape for Freedom UI section.",
            "And just for demo purpose I will show you how we \ncan import this data from file.",
            "Data import target object is already selected.",
            "We need to select file for our import.",
            "We \nneed to match columns and provide such column settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if we import, we have to specify duplicate search rule.",
            "So what column will be used to check presence of data.",
            "Okay, we can do it very technical way and check by id.",
            "In real life, when you import data from excel, you may not have \nthis id.",
            "You will need to select some, let's say reliable enough columns which should be quite unique."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we can do more steps with main object setting because I want to use some additional features available at \nobject model.",
            "Let's go to objects and I want to show you default values for our section.",
            "Unfortunately we cannot set \nit from page editor, so we can go to object editor.",
            "For example, for the manager we can set default value as a special \nsystem variable, current user contact.",
            "So if a person creates some reality record, it will be considered, this person \nwill be considered as the manager."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can make default value for created reality records as a constant.",
            "And we can take constant from lookup to be \nhouse.",
            "So this will be our house.",
            "And when we create new record, this default setting will be done.",
            "If we had some \nnumbering we can also use auto number feature, but for reality I just did not use it so far."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we made our section and we can check how it works.",
            "Going to our realty section or going to my applications \nrealty and opening its page, you see previous data.",
            "We have some price for department, some area, maybe it's in \nsquare feet.",
            "So that's why we have such data.",
            "It will be an apartment for sale and some default contact."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHouse in Seattle was saved normally.",
            "Okay, we have some kind of basement for our future study.",
            "And now I need to \ntell you something that you will consider as boring.",
            "So we need to go deeper.",
            "Okay, a couple of words for list part \nbefore we go deeper."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now I try to keep it simple, everything as is by default.",
            "So I only have some set of columns set by default.",
            "Reload \nthis page so you will see default column settings for me.",
            "Okay, great.",
            "Looks very good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's select our package, select only client modules and for example, let's try to open form page.",
            "If you click on the \nform page directly on its title, you will see page editor, not a program code.",
            "You can find program code part of it.",
            "If \nyou click on this source code, don't save source code will be opened."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can go to write part.",
            "This is three dots button called actions.",
            "And then you can open source code directly \nwithout opening page editor.",
            "So this is some kind of code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see a lot of divs, a lot of some layout settings, a lot of classes, and also you will see plenty of Ng names here \nstanding for angular.",
            "So in Freedom UI, its undercover framework which helps us to build and display components is \nangular.",
            "So if you have some angular knowledge and experience, you will find it easy to make your own new \ncomponents if you need it for your solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is result of work of big number of JavaScript files and such.",
            "JavaScript files consume information about\n\n--- Page 66 ---\n\ncontrols, about settings, about what they have to build.",
            "And thanks to base product architects, we do not need to \ntype or develop such code ourselves."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere you will see plenty of files and what is really frightening, then you will see a lot of configuration items here.",
            "So \nprobably several hundreds, maybe up to 1000.",
            "And it's important for you to understand that client side of creature \nconsists of big number of relatively small pieces of code.",
            "So quite big number of JavaScript sources."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe'll find some articles Academy AMD modules module overview yes probably this one is good article explaining \nthis, but also this concept can be found at some common sources like Wikipedia.",
            "So AMD stands for asynchronous \nmodule definition.",
            "So this is an idea of splitting of all your JavaScript application into parts code modules and make \nsuch modules capable to be loaded separately from other modules and asynchronously."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nQuite simple and very old framework require G's.",
            "You can read more about require G's, probably you can find it, \nrequiregs.org probably can find its original page, explain explanations and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut when you open any page, system needs only some part from it.",
            "For example, it needs only 100 or maybe 200 \nmodules.",
            "Required G's helps to load only necessary modules by the help of by the analyzing of definitions of such \nmodules and so generally required J's is main under cover framework for organizing of executable JavaScript code \nin creation client side and required J's has its own requirements for how such JavaScript code should look like and \nthat's why we are coming to answer of why our client module code looks like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso client module has its own schema properties, so properties of changeable item saved in creation configuration.",
            "--- Page 67 ---\n\nIt has its own code localizable title information about parent client module so it could be used for inheritance and \npackage where this client module is saved.",
            "So code of your client module must be matched with the name of the \nclient module in your code.",
            "If name will be not the same as code, this will not work.",
            "So first argument here is our \nmodule name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis function has a main purpose to return you some data object.",
            "As you can see it returns JavaScript object, \nincluding in our case six properties.",
            "This JavaScript object represents necessary information which system needs to \nknow about how to build our page.",
            "And this information in general was created with the help of automation tools of \npage editor and that's why we did not program this code ourselves."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nConfig diff represents visual part of the page and physically this is an array in JavaScript and this array includes set \nof items.",
            "In each item represents one control on the page.",
            "Let me show you a simple example.",
            "This is control for \nname column.",
            "So here when we look at this name we have some title and we have input field."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have a label, we have some other properties, parent container, name and that's all.",
            "It's interesting to mention that \nhere we have some settings which represent connection between our control and physical data field connected and \nsaved in memory.",
            "I will explain this a bit later.",
            "Now you should remember that view config represents set of \ninformation set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, if I accidentally do something like this, system will notice it and it will not show me where I have a \nmistake.",
            "So you should be very careful working with this part and 100% of such settings are now performed with the \npage editor so it's not so hard.",
            "Not so difficult to do this customization with page editor and then looking at this \ncode.",
            "Okay, in general, view config diff represents UI structure set of user interface items that you plan to see.",
            "Okay \ngreat."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor page level they have special names generated by application automatically and once I tried to change them, it \nturned out to be hard coded each time you create them.",
            "So it's not a good idea to make them better.",
            "If it looks a bit \nugly like this, you should not try to change it because it looks like page has also some metadata saved separately\n\n--- Page 68 ---\n\nwhich has corresponding names inside of it.",
            "And if you start to beautify with no any part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo attributes are used to keep some data and connect with controls.",
            "Then finally we have model config which \nrepresents set of data objects used with our page.",
            "In our case, only one data object is used.",
            "Reality reality entity is \nused to work with our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can do conversion between columns like recalculations, but personally I prefer to do it inside of handlers and \nvalidators are used to perform some checks at client side to ensure that values provided in the columns are correct \nand in case if they are not correct, it's possible to display error messages and prohibit saving of data.",
            "We will also do \nsuch examples later.",
            "So if you ask me about where we will program here, the most common answer will be we do \nour own handlers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPlease do not modify do not remove them because they are necessary for page editor it's unusual, but page editor \ndoesn't search for the name of the object here or name of the array.",
            "Page editor searches for such system \ncomments and then takes code between and analyzes it and representing page design for you.",
            "When finished and \ndata changes are saved, page editor creates new set of items like Div array for example and saves it into this code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome of you who studied somewhere at university or who studied yourself with the way how UI can be programmed \nprobably know about architectural patterns and maybe you know a pattern named MVC and here we have a pattern \nnamed Mvvm.",
            "Let me explain what it is we can study and we can find some simple articles at Wikipedia about it.",
            "So \nMvvm this is an architectural pattern."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in MVVM pattern it's recommended to separate visual part and code view separately, store data values and call \nit model and also make a separate controller unit which is called view model.",
            "And Viewmodel has a lot of \ninformation about view.",
            "Viewmodel knows view structure and Viewmodel manages our view."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nView config diff represents view structure and that's why it's called view config diff, not just diff.",
            "By the way, the word \ndiff here is probably shortage from a difference and means that it's information about only some changes.",
            "And it \nmakes sense because our module is not made from scratch.",
            "Our module was made as inherited item from some \ntabbed pages left area base platform client module."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when client side modules will finally form final page structure, they will take base parent one, they will apply child \nitem like this setting, and finally they will analyze base diff child diff and they will make all of the components \naccording to parent and child items.",
            "Okay, so view config div represents visual part represents view in mvvm pattern \nmodel, config represents information about data entities used for our page and also view model config.",
            "I think partly \nalso works about the same because this is registering of available variables that we can use on the page and \nimplementation of handlers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt looks like quite boring thing.",
            "So let's do some practical step for today and I will show you very simple hello world \ncomplexity level example.",
            "So let's do some simple example.",
            "But first as we want to make a button, it's better to start \nmaking button with the help of editor."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can make some kind of funny caption like push me and if you want you can translate this title into other \nsupported languages and by default, as you can see we have a lot of supported actions like open records, like saved \ndata, close page run business process and so on.",
            "Once I started to count I found 24 supported actions here.",
            "So I will \njust randomly select some action and then I will replace it with something else.",
            "By the way, what's happening here?",
            "My title looks a bit strange."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have more than 60 supported icons here and okay, so and I also set some dummy action.",
            "I plan to change it \nlater.",
            "I don't have any support.",
            "Net menu.",
            "No any special conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have caption, we have type and also we have clicked setting.",
            "Let's remember line number 52 and this is setting \nfor some tenders tender which is already programmed somewhere in parent templates, parent components and \nsystem knows how to implement this.",
            "Now we can go to handlers part and make our own handler.",
            "I already have \nsome example because making it from scratch is a bit difficult."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy the way, it looks like this editor was seriously changed because previously we had some unnecessary warnings \nrelated to new JavaScript comments and features and now it looks like in this editor there are significant \nimprovements related to the way how code is managed.",
            "So thanks developers.",
            "Version 813 now had a new type of \neditor here.",
            "Okay, this is my handler physically is also JavaScript object with three."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when you see Terasoft here, you should understand this is a JavaScript core framework, quite old but still \nsupported.",
            "You can use true information from it to show some pop up messages.",
            "And also I plan to show you how \nyou can manage data, read data and write data.",
            "We have a special procedure to get attribute values.",
            "Now let's \ncollapse view model con collapse diff part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRequest dollar context attribute name equals and then we will just take 20% of this price and save it again.",
            "We have \nto normally analyze our code inside of a synchronous function, allowing other potential handlers to be started.",
            "So \nthis is also very typical end of handler code.",
            "In your case, you will have to change this line to find corresponding \nprice attribute and also to do it with setting value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn most of cases probably it makes sense to reward the page, but in most of cases browser cache doesn't really \nprevent us from working, so it will probably work normally even without revolting the page.",
            "So open it again.",
            "Now we \nsee our button enable browser developer console f twelve or control shift I.",
            "There are plenty of warnings, as you can \nsee here, they are minor warnings, and it's because freedom UI page is not ideal now, so system probably will be \nfixed later."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 71 ---\n\nOkay, here in my button I have clicked property and I have to specify my own custom handler name here.",
            "That was \nmy mistake, I just missed it.",
            "So I have to save and fix and save it.",
            "I will also call copy this piece for you.",
            "You config \nprobably I should not copy big part of it, so I only should do something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSorry for safe I should use push me this one.",
            "Yes, you can see now price changed.",
            "We have all the proofs here and \nno errors.",
            "So it looks like everything works according to the plan.",
            "This is example of hello world application."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you do not use await, you will have a bit different structure at the end and you will still have to dig into object that \nyou will get from it.",
            "So recommended option is like this, await request, doer context and then your attribute name.",
            "Okay, that's all for today.",
            "We sat a bit longer than usual so our session is over."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is exactly this API for this telescope framework.",
            "So you can use some search here for example, we used the \nmethod to show information.",
            "So method show information.",
            "We can search here, show information and you can see \nexamples of it, you can see source and you can see all the arguments.",
            "Show information and probably it's not the \nbest example, but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMaybe it's about my problem of performance of the application in my laptop."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, yes, we can do this.",
            "Would you like to record this part also as part of our training or you prefer to keep it more \npersonal and private so we can start recording if you want."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 72 ---\n\nYou can.",
            "I have no problem to me, no problem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so I will stop sharing.",
            "Our main part of the session is over.",
            "Thanks all for your attention.",
            "Today we will have \nsome small session, Carlos, to detect potential performance issue problems on their environments.",
            "So thanks all for \ntoday's session."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI share my screen with you?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, yes, please.",
            "Thanks all of you, thanks for all information and your questions.",
            "Yes, please show me your screen, \nplease."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, sorry, I have two."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can show only one, but I.",
            "Okay, green share screen button."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIf I have two screens, so I disconnect one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, please select one.",
            "Okay, I can see a screen.",
            "Thank you.",
            "Nice.",
            "So please show me how your creature works and \nmaybe you can agree for request of remote control, so I can manage your screen more efficiently."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 73 ---\n\nYes, it's chrome.",
            "Yes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, you try to run it once again."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYes, I restart in many occasions and don't work.",
            "Good.",
            "So let me show you a little problem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so are you using Windows Pro or Windows home?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have windows."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can find system information?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYes, Windows homes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will have significant issues.",
            "Let me show you how you can fix this.",
            "But it will be not full fix, it will be just a \nworkaround which is not fully."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 74 ---\n\nI can see how you do that.",
            "You can repeat that, please just close."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOther pages, that's the solution.",
            "So when you go to configuration section, you should close other main page.",
            "Creation will work normally.",
            "So it cannot work normally on home actually, because we still will face some problems.",
            "Even if you work with single page, but with for example setting business rules, you will face trouble."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut when you need to go back to your main configuration section, you will have to use tabs and you will have to \nclose other tabs.",
            "This is not comfortable.",
            "Okay, I understand this saving will work for you.",
            "This works, but not so \nfast.",
            "And as far as I know, the problem is number of available websockets."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I recommend you to upgrade your windows to pro.",
            "In this case it will be.",
            "In this case it will better."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAndrea is my colleague, he takes the code the course too.",
            "So he asked me, okay, so I save, socially save, I cancel \nand I."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can, you can just open another tab with your, you can recover previous page.",
            "Yes.",
            "Now you can see your process \nis saved and you can export, you can do everything."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it's work.",
            "Oh, it is so simple.",
            "Yeah."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes.",
            "And it's."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, thank you.",
            "Thank you very much, Dmitry."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Karim."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou saved me.",
            "My boss is over me all day and it's difficult forwarding to the course.",
            "Thank you very much."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo problem.",
            "Thank you, thank you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSee you tomorrow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, so our session is over.",
            "If any other questions?",
            "Hi, Vikrat Alpha is sorry.",
            "Hi Dmitry.",
            "Yes please."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo maybe you have just a bit older version than I do because I recently switched to the latest one and your version \nmaybe not the same latest, but this is not critical.",
            "So you can just see this compilation result.",
            "But I can complete.",
            "Yeah, in general it's not ideal, but it's something that is satisfactory.",
            "So you can continue your work."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 76 ---\n\nI believe it should only change some files on your windows and it will not be like clean environment.",
            "So you should \nhave the same IIs website, you should have the same stuff.",
            "And I did not check it by my own, so I have no \ninformation, no practical experience with it.",
            "So my company gave me a laptop with Windows Pro and I never tried to \nrun on Windows home and upgrade it.",
            "Yeah."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number four of our."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDevelopment on creation Platform guided learning set of practical sessions that we do for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDeveloping different features and functionality that."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nRequires some programming on Creature platform.",
            "And previously we finished with building our."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOwn section named Realty and we managed."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo set up List View, we managed to make a form page for it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe also added some default values and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe made some required fields and it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWas pretty much easy and we used.",
            "--- Page 78 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOnly no code customization tools for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we managed to make a button."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich had a custom handler.",
            "So we made a button push me button and this custom handler shows some console \noutput.",
            "We can also display some pop up messages and also we can do any."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nKind of JavaScript code behind this button.",
            "Today I will show you a bit."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMore complicated examples of how you can."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo some programming and coding and also we will discuss debugging."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo you will see how it's possible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo stop execution of your code and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 79 ---\n\nMake it executed line by line."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy line and to see all the."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nVariables and to see all the conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo so to make something that you probably get used to do when you operate with any like modern version, modern."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDevelopment environment like Visual Studio or other so today question today's session I would."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike to warm up with Simple Question."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich is about organizing of your sections.",
            "It's probably not so obvious so I will tell you all apps it's like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSynthetic Workplace which includes all registered sections in one list."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe have Studio out of the box workplace, we have customer360 because it's a."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 80 ---\n\nResult of loaded contacts and accounts."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo our loaded customer360 app also caused creation of new workplace.",
            "Such workplaces also can be created, you \ncan manage them and you can put your sections into it.",
            "You can also create data items for workplaces if you want to \ntransport them between environments."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat will be very easy, but I."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNeed to demonstrate it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo show how you can do this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGo to Settings then find Workplace Setup.",
            "Workplace Setup helps us to create new workplace or to manage existing \nworkplaces."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRun system under administrator privilege."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now you can see I see only four workplaces."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 81 ---\n\nBut in total it looks like we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHave at least 5.",
            "And productivity workplace seems to not showing anything and not having any permission settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's probably why we are not seeing it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's go to studio workplace.",
            "We have set of sections for a workplace.",
            "Also it will be interesting for you to know \nthat sections have positions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you columns set up for sections list.",
            "We can arrange and add the position column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you will understand why I display this position.",
            "Any section in a workplace has its position and position \norganizes order."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSometimes this order is not so consistent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou see UI management and message templates, they have the same position."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 82 ---\n\nAnd sometimes UI management will be on top."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSometimes message templates will be on top depending on how data will be loaded at a certain time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause sorting by this position it makes some ambitious result.",
            "Okay, so what I plan to do."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI plan to add one more section in the list system will show me only sections that are not listed here.",
            "And it's \ninteresting to see here that we have couple of accounts section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's very unusual."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCouple of calls and couple of contacts.",
            "One of the possible explanation why we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHave two different account section is that."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOne of them is section for Classic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUi, another is Freedom UI section.",
            "We can also display columns here which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 83 ---\n\nWill let you understand what we are looking at."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can just squeeze a bit title display e.g."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCreated on column save column settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow when we try to add you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill see title, you will see created on and one of them is 19, another is 24.",
            "And it looks like first one is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nClassic UI, second one which is younger."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is freedom UI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can detect which one is necessary for you to add."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn my case, I plan to find realty section created recently and we can see it at the end of this list.",
            "You see, its position \nis also not so consistent.",
            "--- Page 84 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it guarantees that it will be at the end."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it's not so comfortable to see this item at the very end of this list.",
            "So possibly we would like to move it upper."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to do this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou can move it even on the first top position.",
            "Unfortunately we cannot move it upper than home."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt if you want and realty will be position zero.",
            "So when we save it we can."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAlso reward this page.",
            "Probably we will see our reality section directly at Studio Workplace at zero position.",
            "But it's \nalso important to say that other items were changed so they changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTheir position because reality shifted them."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo if we want to transport such change, we must make a corresponding data item.",
            "Or we can use help of data \nbinding tool.",
            "This data binding tool helps us to remember positions of O sections here and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 85 ---\n\nWe can just click Bind Workplace, specify."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTarget package and click save.",
            "Then we can see what was created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we for example try to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nActualize data and save it, we will see warning and this warning will tell."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUs that such Studio Workplace was already."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nRegistered somewhere in parent package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd even more it was registered one more time in another parent package."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it's not a big mistake.",
            "So it's not a mistake at all.",
            "This is warning that tells us that."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch data is already present somewhere in parent packages data items.",
            "So maybe we are doing it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 86 ---\n\nIt'S not a mistake.",
            "Another one is sys module in Workplace.",
            "This is a system table which keeps information about \nsection which is called module and workplace."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can see data and you can see all the sections in Workplace."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nStudio were listed here.",
            "And also it's important to mention that forced update option must be applied for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPosition column because otherwise update or position."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill be not performed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou probably remember from our Tuesday session that when you create data items, it's."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nPossible that you will make data item that will perform update, not an insert."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn case of update in case of."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTarget record was found.",
            "--- Page 87 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy the way, I prefer to make."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt not by this key.",
            "I prefer to make it by this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nKey and found by id."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo if record was found by ID."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then it will update target database according to loaded data and in our case only position will be updated.",
            "Okay, \nwe can save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you can see that save was."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuccessful, but we have a lot of warnings related to parent data that was already registered in base product."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd this is valid set of warnings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause our change caused the change of.",
            "--- Page 88 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPosition of all previously registered sections in Studio Workplace."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo simply all of the registered sections had different position because we moved our reality to the top and we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHad a warning that tells us that you're trying to Change the data which was originally declared somewhere else."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo maybe you're doing it wrong."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo please take care.",
            "Here is your warning."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut this warning is still so we can ignore this.",
            "And last one is admin unit in workplace."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is about access permissions.",
            "System administrators have full access to Studio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorkplace and probably this data is also."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 89 ---\n\nPresent in our database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, so maybe not so necessary to save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it's warning, not an error in case if you have an error.",
            "For example, you save the same data twice in the same \npackage."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case, save button will show you error message and save button will not disappear.",
            "If save button was \ndisappeared, means your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nData item was normally saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf save button did not disappear, it means an error.",
            "It's like serious mistake and the system."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill not allow you to save such data.",
            "It happens only when you save the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSame data twice in the same package.",
            "Okay, so it was set of client modules of sorry, set of data items."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAutomatically created by help of data binding tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 90 ---\n\nWhen we registered our reality section in a studio workplace, now we have comfort.",
            "Here is our new created section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHere is set of processes we will manage very soon.",
            "Here we have lookups which we also often look at."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we'll use it and some other."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSystem sections that we may need.",
            "So we now have very comfortable conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd easy transitions between different sections.",
            "So it was just a simple example how you can organize your \nworkplaces in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMore complicated based products like sales, service and marketing.",
            "You will see more workplaces, more sections \ninside.",
            "And you also can create your own workplace with sections that you think will be necessary to use for your \nend."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUsers with particular roles."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd you can provide permissions for such."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSections and for such workplaces.",
            "--- Page 91 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd what is important for you to understand that you can create many different."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorkplaces and include the same section many times.",
            "So if you added some section to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSome workplace, it doesn't mean that you can't do it with another workplace."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo one context section can be added."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn different places with no limitations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn my case, I have my applications."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWorkplace with real T section and I also have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJust a second.",
            "So what I wanted to show you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 92 ---\n\nWe can use the same section in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDifferent workplaces and it's not a problem."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIf we specify the same section in different workplaces many times.",
            "So physically this is the same section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe same data shown in different places.",
            "Just a second.",
            "Okay, so what we will do today, it was a warm up example \nthat."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think will be interesting for you to know.",
            "So let's do something more serious."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can do some more serious programming."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nInside of Creature client side page using."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome JavaScript and using creature tools and let's say data platform.",
            "First of all I will explain you some business \nideas."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo what we plan to do, my plan is to show you some recalculations and it could be a good example.",
            "--- Page 93 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we for example create one more column, call it commission.",
            "So it will be our future profit from the deal."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd also we have to take care."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAbout the type offer."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo for sale we have one formula."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for rental we will have another formula."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's do it step by step.",
            "So first of all we need new column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNew column can be added to this very easily.",
            "We can just go to modify our page.",
            "Then we can add new number \ncolumn."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCarefully dropping it here it will be named Commission.",
            "And as we have a price in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 94 ---\n\nUS dollars, so let it be a commission.",
            "Also in the same currency, the inner."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nColumn name will be USR Commission."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we confirm such code for this column.",
            "The data format will be decimal with two digits."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, great."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDecimal with two digits.",
            "And we want to make this commission calculated automatically so we don't allow users."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo manually change it.",
            "That's why I will set read only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOption on I temporary hide place attachments tab.",
            "So my commission will be read only."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd also just to make it easier."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo find in div array, I will name its element code so we can type it as we wish Commission USD.",
            "Let it be our element \ncode."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 95 ---\n\nThis element code will be used in view config, div and also physically it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill be used for building real page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHTML markup with set of divs inside."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this code will be used to name set of items and div."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHTML tags inside of our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo element code, it's about physical component."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nRepresentation on the page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, you already know this and that's all I can just save System will."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAutomatically modify our object.",
            "--- Page 96 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will save changes to our page code which we can find here if."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe click open source code.",
            "So now let's just click save and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat'S probably will be enough for the beginning.",
            "So this change will be made in objects and in our client module.",
            "Okay, finally it's saved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, we can move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd now we can close this page editor."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGo to main page.",
            "As you can see, I did not even reload it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can just open it again and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably we will immediately see our new column and it's read only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see this lock sign which.",
            "--- Page 97 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTells us that column is read only.",
            "So now we need to think of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nImplementing read calculation and it will be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTriggered by change of price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also we want to make it dependent on offer type.",
            "So for the sales offer type it will be more or less okay if we \nmake commission like 2% from list price from our price of realty shown here."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI'm not sure that can we find."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo cheap houses in Miami for maybe it's not like not in a high season and some area.",
            "And as you can see, \ncommission will be recalculated.",
            "And we need to make another formula for rentals."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo for rentals probably it will be."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nQuite enough if we will ask for 50% from monthly payment price if this is a rental."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 98 ---\n\nSo for rentals we will have another percentage.",
            "So for sales it will be 1% or 2% value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for rental it will be 50% from price value.",
            "So when we will do some calculation we have to take care about it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut also you should be mentally ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat in real life business it really often happens that such ratios, such formulas can be changed from time to time.",
            "And once we introduce hard coded value like 2% a month later our customer may call us and say, you know."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow conditions were changed so we need to modify this percent and now it will be 2.5."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCould you please change it?"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd if we hard code it, of course it's not so good idea to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGo into code and change it.",
            "Then deliver changes to production.",
            "So it will be really expensive."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 99 ---\n\nTo make such changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd our customer will be not ready will be not really happy if we ask for example for half, maybe for a couple of \nhours of work to be paid.",
            "If we want to change just one number.",
            "Ideally customers should be able to change such \nratios themselves."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe have several options to do this.",
            "For example, we can make a separate."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTable which will keep necessary percents."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOr we can use some system settings for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr as you can see, our ratio is really stick to offer type.",
            "So probably we can add new column to offer type lookup in \norder to save one value in percent for sales."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd another value in percent for rentals.",
            "I will show you how we can do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's focus on objects Again, now we."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHave offer type object, we can open it for edit.",
            "I prefer to work from configuration section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case you can do the same if you.",
            "Oh, I did not save it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nGreat.",
            "So if you prefer to focus on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nApplication, you can go to Application hub."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou may find your realty app, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMight check your data models and that's."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHow you can find corresponding object.",
            "Or you can switch to advanced settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo see all the contents of your solution."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo you may practically do almost the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSame as you can do it here.",
            "So I just get used to work.",
            "--- Page 101 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWith this configuration section.",
            "Also it has some useful actions like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave packages to file system.",
            "So that's why I stick to this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nApproach and I feel more confident when."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWork here because I have full available."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSet of tools to manage my system set my system configuration setup."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we opened corresponding object, we have."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nInheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far.",
            "So for each reality offer type for rental or sale, we can add one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMore column to be number.",
            "Maybe we can do it with quite high precision."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 102 ---\n\nHere just to make it clear for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny user what type of value should be put here.",
            "So if we specify from 0 to 100 it means from 0 to 100% and it will be \nclear how to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPut some value here if you want."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo save for example 2%."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne more column is not a big deal, so we can easily add it save and publish.",
            "But after we do this we may start to get \nsome additional unexpected difficulties."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow I will show it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably sometimes I get it, sometimes not.",
            "But anyway I have to tell you about this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo we added new column to some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nObject that was already present for today morning.",
            "--- Page 103 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo it was already created recently.",
            "That's why we can face some unexpected behavior."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you what I'm talking about.",
            "Now you can see it's very close and easy to switch between our section and \nfor example lookups.",
            "Let's go to reality offer type lookup and let's try to see its data."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow we have name and description."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's try to set up columns to display."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nName is okay here description is also."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay and we can try to display one more column.",
            "Commission percent looks good and we can save it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd we agreed that for a sale it will be enough for us to specify 2%."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAccording to this helpful message, 2% will look like this 2.00, so it means just 2.",
            "And for rentals we expect to earn \n50% but from monthly payment."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 104 ---\n\nWe added some data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo possibly we have to look at data part and find corresponding object reality offer type object so not object data \nitem for this.",
            "Let me find it.",
            "This one Offer type."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt looks like it was created by data binding tool, so we could also."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo, no.",
            "This is lookup registering.",
            "Now I need to find it here this one values."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo now we have one more column here.",
            "We can update this data item with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe help of data binding tool."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOr we can manually modify it by adding one more column.",
            "As you can see, originally this column was not present \nhere because we created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData item before adding new columns to the object."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 105 ---\n\nSo now we have one more column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere we have new data."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n2% for sale, 50% for rental."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to save it.",
            "Everything is okay.",
            "So our new column, our new values are here in our data part."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nGreat."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt looks like we still did not need to do any additional steps related to adding new column into existing object.",
            "But \nsome of you may start to feel some difficulties and such difficulties are."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nConnected with the way how server side system remembers information about objects.",
            "And unfortunately it may \nhappen that your."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nKind of difficulty which you will finally face will be inability to display data here or inability to use new column a bit \nlater.",
            "In order to fix this, you may need maintenance tools for creation so which we already installed.",
            "Maintenance \ntools can help us to restart the app or clear regis if I need it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI will do this restart but a bit later.",
            "--- Page 106 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow I will try to avoid this to show you what will happen if you did not perform a restart."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo let's check will we be able."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo make all the way all the settings as I plan to do this and will we need restart or not?",
            "So let's go."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nData and for rental value we also."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHave another additional data."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd it's really lucky for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat it's possible to get such additional data out from this lookup somewhere at the top where we can easily use \nsuch data columns.",
            "Now I plan to show you how to get data out from a lookup."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe will use again page editor."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 107 ---\n\nOur task is to get decimal value from this offer type lookup and display it somewhere."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThe reason why we need to display."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs to make it visual and also to make it fully no code.",
            "So now you will see this trick how we can make data out from \nexisting lookup."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCall data fields and data fields represents."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nConnection between controls and real life data column of your main object that this page works with.",
            "But if you \nscroll down you will."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nFind interesting set of components called inputs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInputs are designed to organize input only without direct connection with your main data object and without direct \nsave of any data that you input into this call.",
            "Simply speaking, inputs are controls that you use for inputs but not \nintended to save data from them or at least."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNot save into main primary object with the standard tools.",
            "So maybe you will save it somewhere somehow else."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you how I can use this for our task.",
            "I need number control.",
            "So I will take number and carefully drag and \ndrop it somewhere on my page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCan take out from existing lookups or."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExisting from existing fields."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet me show you how we can do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe go to data source, click on this lookup button and then we will search."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo select some data field that we will use to fill this control."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRealty related objects."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt will show us all existing lookup."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumns in our realty object and then we will find offer type extended and system will show us only suitable on the \ncompatible field which will be you can be used within decimal number control."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 109 ---\n\nThis is our commission percent so we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill select it and here now you will see some changes."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTitle appeared the same as title of your column inside of your offer type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLookup Code appeared and cannot be edited."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThis is read only and also you can unlock it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this column will be constantly read only.",
            "Title position okay title on the page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd element code number input.",
            "So we can call it something like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCommission percent okay and save change of our element code.",
            "So simply speaking we made read only column \nthat will be automatically loaded each."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTime offer type is set and each.",
            "--- Page 110 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTime offer type changed or cleared."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet's save our changes and we will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSee how it works."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBy the way, please confirm with plus in our chat if you follow me."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDirectly during the session.",
            "So I need to know, should I."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAllow you some pause to do some steps after I demonstrate it?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMarcel, thank you, Andre.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIf something is not good and you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWould like me to stop for a while, tell me please.",
            "Okay, Monica, thank you again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nGreat.",
            "So we saved our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we can go to our page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nClose, open it again.",
            "Now you see this commission percentage shown.",
            "Okay, Maybe we can reward the page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJust to suppress any possible issue with the browser cache.",
            "So let's open again.",
            "Apartment of New Orleans we have \noffer type sale."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut you see this commission percent is not shown."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's try to select another one.",
            "Rental or I chose sale again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nClose.",
            "Such data will be not possible to see in list."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have no reality column which will represent our commission percent.",
            "We can read it from the database."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 112 ---\n\nIf we use related objects, if we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUse offer type and if we display."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCommission percent and this commission percent will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBe obtained from corresponding record from our offer type.",
            "But you see, now we have some troubles."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe have some troubles and system does."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNot recognize commission percent column fully."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nProbably it also shows us some error messages, I believe.",
            "Let's try to reload it and see what happens."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo, no error message.",
            "It just doesn't show us corresponding values."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe can find columns there.",
            "So our commission percent is here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 113 ---\n\nSo what is happening and why we have such a trouble?"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd if you open the page, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSee no initial value here.",
            "But if you click there and back."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo sale now you see this value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs okay, save, close, open and still it doesn't work.",
            "So we still have some problem with this additional column.",
            "And \nthis problem unfortunately cannot be solved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBy logging out and logging in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you.",
            "I try to log out."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMaybe thinking."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is something like a user session cache issue.",
            "Then I try to log in.",
            "--- Page 114 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhen you work with client side, it's."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBetter to keep your browser console on."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably you will see some interesting messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere or a lot of red messages."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn case of errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's important to see it quick."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, opening our realty section, ignoring all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWarnings here, open it once again and you see no, it did not help us.",
            "So unfortunately logging out and logging in."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 115 ---\n\nDoesn'T help you and the only solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhich we can do is restart our app or shut it down and start it again for example with the help of IIS Manager."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut it will take more than minute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor us to normally shut down and start.",
            "So we have a quick solution."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nErrors in browser console, but it looks."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike not very critical.",
            "So now restart is being performed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nProcess, but it has a comment to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRestart so possibly to rewards some of its assemblies."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, so we restarted our app.",
            "--- Page 116 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe go to reality section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow we already will see the difference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see that commission percent here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWas normally displayed in this list previously it was not normal.",
            "And if we open any record now, commission percent \nwill be fully normally loaded."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we just open the page.",
            "So you see commission percent loaded correctly if you take any other value."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now we fixed it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why I had to use this add on called maintenance tools for creature."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSuch add on helps me easily restart."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe app with just waiting approximately 10 seconds.",
            "And it's much easier than restarting my.",
            "--- Page 117 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nApp by shutting down and starting again my worker process or recycling worker process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's possible, so it will take significantly longer."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, so we fixed this question with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe commission percent and now our task."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo make actual calculation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now we can think of how."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo trace changes of price or commission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 118 ---\n\nLuckily commission percent will be available for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUs the same as any attribute for a real column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo commission percent will be also an attribute for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if this value changes or if."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis value changes, as you can see, it will be changed in case if."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou clear in case if you set."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSome offer type or if you change."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo another offer type, commission percent is changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo price or commission percent should trigger recalculation of commission."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 119 ---\n\nI will show you how we can do this.",
            "Let's go to our configuration section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFind client modules.",
            "We are working with form page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo you can also open the code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFrom page editor if you want.",
            "I just feel it's more comfortable to work here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo form page open source code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we can go directly to the JavaScript part of it and See what's happening."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAndrean is asking is it possible to use this add on in a cloud environment?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, all creation apps from Marketplace can."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBe installed on cloud systems.",
            "Absolutely the same as you can install it locally."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you.",
            "So you go to Settings, you go."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo Application management, Application Hub and then."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou click Install or Add new application and you can select something from this list or you can select Marketplace \nPowered."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd it will work absolutely the same."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you run it in cloud.",
            "Thank you Adrian for your interesting question."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe decided to open directly its source code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we open this tab."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe can try to find our commission diff part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can see this our commission column.",
            "It was added by help of page editor.",
            "--- Page 121 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo practically we should not modify this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it will be interesting to see how it will be connected with the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData attribute PDS USR commission USR so."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is our attribute name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, we can collapse temporary all such things."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI will only show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo price.",
            "Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config.",
            "So attributes of view model config represent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSet of variables that can be saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 122 ---\n\nOn the page level."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd we already started to work with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt yesterday I just tried to explain you such attributes and now we will work with them.",
            "So for the price column we \nsee this attribute name.",
            "Okay?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd for the percent here we have this attribute name and finally we will save our data into commission attribute \nwhich has this name.",
            "This is important."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, I will collapse anything else to make it clear and quite compact for you.",
            "So we are interested in price attribute."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPercent attribute and commission attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay?",
            "Nothing else."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nModel config is not interesting.",
            "And then we will do something with handlers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI already have an example which will make it possible for us to do it quickly.",
            "So let me show you this example of the \ncode examples reading UI and then we need calculated field example."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nProbably we need to look at Academy."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo explain all possible handler names.",
            "So let's go to Academy, let's go to guides development front end Freedom UI \nand somewhere we will see some client schema references handlers."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNames for handlers and they represent some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nImportant steps of page life cycle.",
            "In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAt our page changes the attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this handler is called handle view model attribute change request.",
            "Let me show you my example."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHandle view model attribute change request."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo simply speaking, this handler will be called each time when any column value changes at our user at our client \nside page in our browser.",
            "So this handler will be triggered quite often."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCopy it and put it to our."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExamples in our handlers area.",
            "So this is an array, we have."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo keep syntax well."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why I try to paste it like this, keeping commas, brackets and so on."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo now you see, this piece of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCode was just simply added."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis piece of code was added and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet'S check what we can do with it.",
            "Of course we have to take care about attribute names because they are always \nunique.",
            "Each time you do the same example again, you will see different unique names."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 125 ---\n\nSo how we can check it?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis handler will be called quite often for each column change.",
            "And in order to make it efficient, we need to check if \nsome column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat we are interested had changed or not.",
            "If yes, then we do our recalculation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf not, we should do nothing in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOrder to save system resources.",
            "So we check request property here and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have attribute name."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd if this attribute name is our."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPrice, then this is logical or attribute name is our commission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen we do some calculation, but we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 126 ---\n\nHave to actualize our names so you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCan see our list of attributes for the price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is our attribute name.",
            "Let's copy it and carefully paste here.",
            "And also as we already have it in our clipboard here \nwhen we need."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo read it, then the same for commission percent.",
            "Let's make sure this is our attribute name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you.",
            "Yes, it looks like it is already."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe same because generated by system and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI usually do same examples.",
            "That's a bit strange shifts.",
            "Okay, Very unusual."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo how we do this?",
            "I already showed you yesterday."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to use operator await.",
            "Then request is our argument dollar context and then we have access to our certain \nattribute.",
            "--- Page 127 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we have just a variable in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur JavaScript code for price for percent.",
            "Then we do calculation of commission as result of multiplication and don't \nForget to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDivide by 100 because commission percent represents."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPercent, not just a decimal value.",
            "Okay, and then we will save our commission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIf we do it incorrectly, we will fail."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is important.",
            "Our commission value will be finally saved into this.",
            "Okay, now it's ready and we can check how \nit works by saving our code.",
            "I provided an example for you, so you can also check out your example."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably it's because of cache."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's reload the page.",
            "Reloading helps to fight with browser cache effect.",
            "Open again, try to make changes."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 128 ---\n\nNow you can see that recalculation works well."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have our price for rental of our apartment."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd you see our commission is correctly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRecalculated and we can save our data."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCommission will be also saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can see it here.",
            "Commission is our legal valid column, so it will be saved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's open some sale example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you can see."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, price was not changed.",
            "--- Page 129 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCommission is already calculated.",
            "Let's check if we switch from sale to rental."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou see, commission was recalculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we switch back to sale, it's."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAlso quite well calculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you see that our commission is quite fair for this amount of price for the house."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo our recalculation also works well and it shows even when page is opened."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt looks like when page is opened our data filled in client side.",
            "So it triggers recalculation even if we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDo not change anything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut just open the page.",
            "Yes, we'll see.",
            "--- Page 130 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it looks like our calculation is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlready done and works quite well."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd of course everything works quite smoothly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we have a pre programmed examples where everything is correct."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut in real life you will do."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYour own examples where some errors or mistakes could happen.",
            "So you will need to know how to debug this code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI will show you how to make."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch debug and you will see that's not so difficult."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 131 ---\n\nOne of the easiest ways to debug is to put a special debugger breakpoint into your code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike this, the word debugger.",
            "If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen your debugging will work for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut this approach has also disadvantage."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd when you finished your debugging, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nShould not forget to remove all your debugger lines."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSave your changes again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd ideally you have to run your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLogic again just to make sure you did not accidentally damage anything.",
            "Because when you save, you have chance."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 132 ---\n\nThat something will be incorrectly saved.",
            "Something will go not so well.",
            "Okay, so let me show you how we can do \nthis type of debugging."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI need to explain and I need to show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can go to this is easy."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWay to put debugger word.",
            "I will show you a bit more professional way to debug.",
            "We can go to our section open \npage which we plan to debug."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we enable browser developer console."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou can do it by F12 or control shift I."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when you do this, you then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGo to Sources tab.",
            "You see, we already opened some set of scripts here.",
            "We don't need it now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's close everything and then we can.",
            "--- Page 133 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nJust search and you see we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nA USR reality form page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage part of the URL.",
            "So it's a page, it's a name of client module and we can try to find it.",
            "Control p Open file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's try Control p open file.",
            "Which one?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, if you do not want to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGuess which one is correct, we can go back reload the page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we will suppress any kind of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCache and then we will open it again.",
            "And we have just one option, single option to select corresponding file Control \nP .",
            "Okay, open the page, then Control p open file and press Control P realty."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 134 ---\n\nAnd you see only one form page here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo no any cached, no any duplicates that will make you confused.",
            "And you probably may select Incorrect 1.",
            "So let's \nopen the only one you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSee set of equalizable strings here.",
            "But the most important of course is our code.",
            "And you will see our module text \nhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBig part with view config div some."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPart view model config.",
            "And finally you will have your header handlers.",
            "Part we are interested in debugging \nsomewhere here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, we can click on this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLine number which will make a breakpoint for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's the same as debugger, but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt doesn't change the source of our client module.",
            "--- Page 135 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can use browser debugging tools for this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nClick on the line number."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we activate breakpoint.",
            "So here we have one breakpoint that we just clicked here.",
            "Then when your \nbrowser developer console is."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOn and execution comes to this line, execution will be stopped."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet me show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you change for example offer type from rental to sale, you see these."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLines are executed and now code stops and we can go line by line."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we have to use tools that."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 136 ---\n\nWill help us to proceed with this piece.",
            "The most popular, I think the Most."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEfficient is F10 which is a step over running of a line without going into sub functions for it.",
            "So I will press F10."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen you can see commission was recalculated.",
            "Now you will see commission will be set here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my commission is now 26, so."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI expect it to be saved here.",
            "Yes, 26 and then we move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo here we can use resume F8 hotkey to normally continue execution."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat's how we can check this code.",
            "If we change the price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will see the Same I press F10 I."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHave another commission F8.",
            "Okay, we can make more serious price.",
            "--- Page 137 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor an apartment."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd obviously we'll have more serious commission.",
            "So that's how you can debug your code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso, if your code has something has some obvious mistakes and causes runtime errors."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou will also see such runtime errors in your sources tab."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will also see your console which."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWill be full of red messages.",
            "So in case if your code fails."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn runtime of course you should take care about it and look at your console tab and check if everything works well or \nnot."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWhen you finished your debugging you should."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nClick on wine number again removing your breakpoint and then your code will run without stops.",
            "--- Page 138 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt's interesting to see what value we will see in case if we will clear overtype."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow let's check.",
            "You see that percent is empty so percent is null.",
            "Trying to multiply null on price results in zero."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo that's how we will clear."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, when we have some valid percent, we can move on with F8 and you see setting is done."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIf you have any questions related to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis debugging, please tell me.",
            "As you can see, debugging can be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nReally effective if your code is more."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nComplex, if you have sub functions, if."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 139 ---\n\nYou are not sure what values you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFinally get from your code so you can check it out with the help of browser developer tools.",
            "Okay, probably we got an \nhour of."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOur session, so let's make a few."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFive minutes break and then move on."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWith next topics related to programming.",
            "I also plan to show you some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExamples of programming of validation.",
            "So I plan to show you validation and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDifferent validators.",
            "So different clones will be used for universal validation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also I plan to show you some examples of so we already displayed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDebugging but also you need to know a bit more about logging."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 140 ---\n\nOkay, so let's make a five minutes break foreign."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo today I want you to see."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome more technical things about how client."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSide works and how we can do."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSome technical steps with it.",
            "So we already know how to debug our code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI would also like to you to see that we have quite developed logging.",
            "So I will show you login mechanisms."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThat are available on Creature Platform."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is our installed app and this is our folder with installed application."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe go to terrasoftware web and you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 141 ---\n\nAlready know that Creature uses analog libraries to provide the different logs and save them in Creature web server."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThe most important log file for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs invoke targets config because here we can change default file to save our all default folder to save all our logs."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou may be interested in the way."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHow we can do some logging.",
            "So we have so called appenders and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTargets and probably have to start from appender first."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo analog config I should use analog config first."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd we have a lot of loggers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs well appender so they are synonym.",
            "Logger or appender they are synonyms.",
            "--- Page 142 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo you can see a lot of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDifferent loggers registered and appenders are settings that will collect log messages."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd finally appenders will be connected with physical files.",
            "So you see we have more than."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n100 different loggers and logger is a logical thing that you can use in your program code.",
            "Appender is a place that is \nused to collect your data and save it.",
            "So we have a lot of loggers, a lot of targets."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOf different logs that are saved here.",
            "And you can see different messages, different settings.",
            "So what do you need to \nknow about this?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo Croatia has a lot of default."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTypes of logs and all of them will be saved in a folder which."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe specify when we install our application.",
            "So in Analog Targets config line number three we have setting to save \nour logs to."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd log folder which.",
            "Which."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt has no customizable items that will."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBe interested for us to.",
            "Interesting for us to see."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo Loader is very technical and we have just several log files here, nothing very spectacular.",
            "And zero folder is what \nwe really need because it's a log set of."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLogs for our main application.",
            "And then we go inside, we see."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLogs for each separate date.",
            "So you see for different days you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHave logs in different folder which makes it easy to find.",
            "And then you see different logs here.",
            "In total we have more \nthan 50."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDifferent files with logs saved here.",
            "So a lot of different logs, a lot of different files."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 144 ---\n\nAnd what is the most important for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou from the maintenance point of view?",
            "I think the most important is error log."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOf course you should take care about."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt because usually it is important and sometimes you may find some errors which are not related to your changes.",
            "So you may simply speaking find some errors from base product like this one."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nError parent schema is now parent ID."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSets to empty and so on."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut it looks like nothing very critical for our application.",
            "You see the same error many times."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd it looks like not very important."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut if you will get some error messages here related to your functionality and your users will start to complain about.",
            "--- Page 145 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSomething is not working.",
            "Of course you cannot ignore this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou may ask me why we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome errors in a wait production release software.",
            "The answer is that Croatia is quite big and we have more than \n200 libraries.",
            "We have millions of use cases that."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCould be checked and used."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's really hard to test everything and to polish any line of code, so it should show it so it could not fail in any way.",
            "So in real life, in any big system, some errors usually happen.",
            "But in our case it's not so."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCritical so you can simply ignore."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if you will find another errors with some user complaints, of course you should take care of it.",
            "So from \nmaintenance point of view, I think looking at such error log is quite important.",
            "And this is something that you should."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDo regularly if you support some big creation implementation by your own.",
            "In cloud conditions, looking at such logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 146 ---\n\nIs complicated because you will not be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAble to directly go to cloud based file system to get it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you only can ask for help at support team.",
            "By the way, you should know Support team lives here support \ncreation.com so they work 24, 7.",
            "It means you can ask them any time, anytime you need, even on weekends."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd if you ask for example for a yesterday logs for a searching website."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThey can give it for you.",
            "But it will be more efficient for."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou if you can collect Logs by yourself.",
            "And that's why I plan to show."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou some special tool which makes it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nEasier if you need to collect logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFrom cloud based environment.",
            "So I will show you Now I'm."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 147 ---\n\nTalking about telemetry log for creation.",
            "This is a special add on which."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can get from Application Hub New application Marketplace powered."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThen we can just search for the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWord log and we will easily find this Hokku app or telemetry log for creation.",
            "So Hoku is a company physically this \ncompany is like founded by our creation employees.",
            "And this is something just so you should consider it made by \ncreature and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou can install this telemetry log."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is for free.",
            "Agree."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nConfirm."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see it was just updated 2023 November."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay.",
            "And install it.",
            "--- Page 148 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt takes just almost no time, maybe 20 seconds.",
            "And you will see that new app."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIs installed to our system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you'll be able to collect vlogs, but you'll be able to collect only runtime created logs."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo it's like listener for logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will not be able to collect."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYesterday logs, but if you do some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExperiments and you need to see how logs look like when you do your experiments in cloud.",
            "So this app will be \nextremely helpful for you because it shows you all the messages all the log messages that."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAre saved on disk."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can listen to any logs saved on disk.",
            "--- Page 149 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet's patiently wait for its installation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSurprisingly it takes a bit longer than I expected.",
            "But it's okay now it's not so critical."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nMaybe we can look at browser developer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nConsole here, but usually no trouble should be present.",
            "Okay, wait for a minute.",
            "And I'm also curious about what is \nhappening at my website."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOh, dotnet exe was running so it looks like compilation was done."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo system decided it needs to compile and that's why it was so slow.",
            "Okay, finally our compilation finished.",
            "We can \ndownload installation log to see what it took so long and what."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOperation took so long to install."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you will see results.",
            "Okay, great."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 150 ---\n\nHere's our installation logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nStarted 26:58, so almost 27, finished 29."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt looks like 2 minutes and 3."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSeconds and yeah, it's a bit longer than usual."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd 27:15, 28:56 so it looks like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFull configuration compilation was performed.",
            "That's why it took so long and okay, no problem, we can live with it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo now you will see one more app here in this list."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTelemetry and you can reload this tab."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow you will see one more item at our settings page.",
            "--- Page 151 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPreviously called System Designer.",
            "Currently it's called Settings."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo I will show you how you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCan use this telemetry log here?",
            "Yes.",
            "Now let me show you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLogs in order to get some error."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMessages for the certain, let's say subject or certain area of functionality.",
            "And you can also listen everything like \nthis, which will mean that you look and get every message."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSQL."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, so it's called JSoft Core DB executor SQL log appender.",
            "Okay, will it be DB executor?"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd we're only interested in for example errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 152 ---\n\nSo I plan to make example of listening of DB execution errors."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd I especially will do some example which makes such an error.",
            "Let's go to customer360, find accounts and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet'S try to remove some account.",
            "Obviously we will not be able to do this because it has some connections with \nexisting contacts.",
            "So I try to delete this account."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow you see no messages here.",
            "Try to do this.",
            "Of course I see error messages and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere I expect to get."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI expect to get error messages.",
            "Oh, I should subscribe.",
            "I should remember to subscribe."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's try to delete once again.",
            "Yes, error message appears logger pattern."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt was not an error, it was just a warning."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo like yellow color, which means this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 153 ---\n\nIs not an error, just a warning."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd okay, so I got some text message from our DB executor and you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSee that my message has an error.",
            "So exception occurred, statement terminated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you see that we get some."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nText messages and logs.",
            "You can also get the same logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you go to your files, you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWill find SQL JSON.",
            "Here we will have similar information."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see my delete statement failed, so it conflicted with foreign reference constraint."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd it's interesting that for the SQL.",
            "--- Page 154 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nErrors, system logs only queries that were failed.",
            "So only queries that failed to be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nExecuted at the database.",
            "In my case, I intentionally made an."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nError for the database level and showed you how you can handle it and how you can track it.",
            "You can also use all \nexisting loggers for all messages subscribe.",
            "You will have plenty of different messages here."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nJust when you go to any part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf your system, when you open any."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSection, you will start to get more and more logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause system usually writes something to logs and it has quite verbose logging.",
            "So you will have more and more \ndata.",
            "You see more messages appeared, some of them are useless for you and so."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou have to play a bit with it.",
            "But finally you will be able to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo the same as you can do with log files.",
            "--- Page 155 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo this telemetry log for creation will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBe extremely helpful in case if you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNeed to make some experiments and get."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLogs directly in online mode from your cloud environments, including even production systems.",
            "So this can be really \nhelpful for you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAs you can see we have some help message explaining how to use this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome button which shows or it runs and stops a listening of logs.",
            "So green means run, red means stopped and \nthat's how you can also use it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo listening all of the logs will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProvide you a lot of verbose noisy messages."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 156 ---\n\nIt's up to you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo maybe this will be interesting for you.",
            "So just remember the name of the tool is Telemetry for Creatio."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBefore we doing this I need to explain you how to do validation.",
            "As you can see my previous program."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWas a bit more oriented on classic ui.",
            "So sometimes I jump from topics topics and that's why we are not following \ndirectly from this schedule."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo let's move on validation.",
            "What it is about and this is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCheck of data before it will be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSaved at server side.",
            "Let's return back to our reality section and let's look at our data value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when we add new values it may happen that user may save some very incorrect values.",
            "For example, we can try \nto save negative price.",
            "As you can see as a result we have negative commission."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 157 ---\n\nIt's also possible to save negative area and also system does not prevent us from doing such things."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can save it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd as you can see from system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPoint of view there is no troubles, no errors."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut of course we have trouble from."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBusiness point of view because we can't."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNormally summarize values, we can't normally calculate commission."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have to make some kind of protection for our data input.",
            "And luckily we have this on the platform level as \nexisting validation tools.",
            "Let me show you how to use it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe also need to Program this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 158 ---\n\nUnfortunately validation is only available when you do programming, so it's not a no code setting."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut we are not afraid of this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's go to our configuration section, find our form page again, open its source code again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd I need to show."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou some examples at our Academy documentation."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWhich will really help you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have some architectural SDK things."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAt front end documentation, but we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nA lot of useful examples in platform customization area of our academy.",
            "And we have examples for Freedom UI for \nfields examples and we have examples of population of fields."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd we have example of validation of."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nField which we are interested right now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will share useful links for such articles.",
            "I recommend you to read it or just maybe look at it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo let me explain how we plan to move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have special area in our code named validators.",
            "Let me show you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo we have handlers and we have validators."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's a special designed place for."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nUs to program special functions that will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 160 ---\n\nBe used for checks of data during input.",
            "And luckily we have examples at Academy."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich will help us to make it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSmoothly without spending too much time.",
            "So validators is a collection, this is not an array."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you see, this is a collection."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nEach collection item should include its name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd implementation and validation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nImplementation includes validator property which is a."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFunction that finally should return something set of parameters and async property.",
            "Then when we finish with this \npart, we will connect our created validator with set of columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCan do this and I already have.",
            "--- Page 161 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAn example, we will not spend too."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMuch time on it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you will see how we can do this validation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nFirst of all we go to validators area and we will provide some code here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI already have example, no difficulties.",
            "So Freedom UI validation example and I need to provide this example of code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let me copy and paste for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is example of our validation.",
            "Okay, no need to use cameras to show.",
            "Okay, so this is example of code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd I will also implement it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's my own validators area.",
            "So copy and paste.",
            "--- Page 162 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhat do you see here?",
            "So we register my validator with a specific name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is a kind of type or maybe validator type, let's call it so.",
            "And we can declare different numbers or unlimited \nnumber of different validators.",
            "This validator includes three major properties, whether it validator, function \nparameters and async property."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo probably we have to start with parameters first, because parameters are values that we can provide for each \nvalidated column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for different columns, we can provide different parameter values."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHere we have to declare what parameters we will have."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIn my case there are two parameters."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMin value and message parameter."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nValidator function has a bit complex structure.",
            "This is one function, it returns another."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 163 ---\n\nFunction and first function requests config, Another function requests control inside of control.",
            "Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it makes it universal."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we have value, we don't know exact column.",
            "So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us.",
            "So we can take value and from."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe config we know what parameters to expect.",
            "So we have min value parameter and we have message parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur check is quite simple."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe get value and then compare with min value.",
            "And in case if our value is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGreater or equal than min value then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe think that data is correct and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur returned result will be null which.",
            "--- Page 164 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMeans no warnings, no messages, everything is okay.",
            "But in case that value is not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCorrect we have to return special type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOf result which is a JavaScript object with a specific name, the property inside and with the message property inside \nof this property."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's kind of nested JavaScript object."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd our message here will be text."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt should be displayed nearby problem control."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd also this message will be explained."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDisplayed when we will try to save our page.",
            "So we will say try to save data system will check all the validators and it \nwill find that some columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 165 ---\n\nAre not correct and it will not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAllow to save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo this is our example of a."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nValidation, but it's not applied yet.",
            "So we have to set up some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumns which will work with this validator."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOtherwise our validator is useless because no."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn expect checks with it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo I do not need to change anything here.",
            "This code is universal as you can see.",
            "No any hard coded column names."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOnly one hard coded thing is a validator type name.",
            "Next step is connection of validator with.",
            "--- Page 166 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCertain columns or it's better to say with attributes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will show you examples."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHow we can connect."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe I should do it here.",
            "How we can connect validators to columns.",
            "I will put example so I have to find my price \nattribute."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAfter module config I have to provide."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nValidators setting so I should carefully copy."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd paste it here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 167 ---\n\nAnd that's."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHow I will put it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo here's my price attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is my validator.",
            "The type of validator should be matched."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWith what we created and parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the minimum value for the price."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think it will be 50."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo we will not allow to save."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAny reality object with the price less than 50 bucks.",
            "--- Page 168 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, and also we can use message, not just a plain string constant which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs also supported, but also we can use localizable string.",
            "Here is an example of a macro that you can use for \nlocalizable strings.",
            "And localizable strings are saved separately and can provide translations into other languages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you what localizable strings I plan to use.",
            "I will put it for you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI go to localizable strings.",
            "Probably we can save it before modifications."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now I will modify non localizable."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nStrings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTake significantly longer than usual.",
            "As you can see, my worker process consumed quite a lot of ram.",
            "It's more than \nusual."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, we can try to create localizable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 169 ---\n\nString with the code price can't be less and the value is price cannot be less than something.",
            "Okay, try to add and \nthen I expect some troubles here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat's why I will try to save now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf it saves correctly, okay, no problem."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut in previous versions I experienced some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTroubles with localizable strings here and it turned out to save it.",
            "So when I added once, it physically."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAdded it twice and then denied to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave because it tells that such localizable string already exists.",
            "In case, if you face this kind."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOf issue when you add localizable string."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTry to save and then get error message about duplicated localizable strings.",
            "You can just remove that visible one \nthat you created."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 170 ---\n\nAnother one which is invisible will be still saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can bypass this bug."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAs you can see, Creature also as."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny software, it has its own bugs.",
            "Sometimes bugs are detected, fixed new bugs appeared."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it's normal, more or less normal for any software.",
            "Another localizable string that we will need is about area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nValue here, save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nArea can't be less.",
            "Let's try to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt looks like in this version this bug was finally fixed.",
            "--- Page 171 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's nice.",
            "So for the price we already set."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSettings, now we do the same for area.",
            "So let me show you what we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo for area we will set validators setting for one column.",
            "We can use multiple validators so it's possible to make \nchecks with different criterias."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd in my case for the area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will use the same validator but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMinimum value will be 100 square feet."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's close to 10 square meters."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe think that we will not input."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny kind of realty less than 10.",
            "--- Page 172 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSquare meters or 100 square feet."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's our limitation here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd we will use localizable string that."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe already successfully saved.",
            "Okay, now we have this example, save."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt and then it's our turn to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTest and check out how our data were saved.",
            "How well it looks, we can close."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOur editor, go to main app probably."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet'S reward it just to fight with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 173 ---\n\nAny potential impact of browser cache issue.",
            "Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you see that once we finished."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd moved focus out of control, you see we have some checks and this checks displays error message."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nPrice can't be less than 50 bucks."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nArea can't be less than 100 square feet.",
            "If we try to save such data, system will reject it tells us we."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHave problems and we have to fix them."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's fix only price try to save."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe still have trouble with area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we fix area then our troubles are over and system saves it normally."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 174 ---\n\nPlease note that if you do something."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike this and try to save your."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nData Validation works at client side so it doesn't send any messages to server side."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see nothing appeared in network tab until we will fully fix our rental price.",
            "In this case you see update query \nexecuted.",
            "So physical data was sent to server."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSide only in case of successful client validation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this validation may help you to improve your logic to make it more protected to get rid of like silly."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nMistakes made by end users."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd I think that this is something that will be quite important in your future projects and implementation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow I plan to show you some.",
            "--- Page 175 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSimple topic and it's simple but it's very important because such topic will be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nQuite often faced in your projects.",
            "It will be not really directly connected with programming, but it's something that \nyou definitely should know about."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI'm talking about typical settings of columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat you need according to some conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, some column must be visible."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOnly in case of a certain condition and otherwise should be hidden or another."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn must be required according to some conditions and otherwise should be optional.",
            "And also you may need \nsome like talk about visibility, about required settings, or about read only columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo such typical Settings for columns are."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFrequently faced in requirements from business owners.",
            "--- Page 176 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd that's why such functionality was decided to implement as a no code Tools."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd developers code such functionality.",
            "Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples.",
            "We can go to modify our page so edit page then we go to special button \nbusiness rules Please note we have two types of business rules."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage business rules mainly used for controls."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nVisibility, maybe required property, read only property and also we have object business rules.",
            "Here it's called realty \nbusiness rules but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou should understand this is about object.",
            "Object business rules also offer us possibility."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo make some filtering and depending on the type of business row, it will be physically saved into metadata of a."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage or into metadata of an object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 177 ---\n\nLet's imagine our task is quite simple."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo show comment only in case of type is not empty."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo when we add new data, type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCould be not specified.",
            "In this case, comment should be hidden.",
            "Let me show you how we can do this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe can use page level business rules."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause it's about column visibility add new rule."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis rule will have automatically generated title."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo be applied to the page and it has triggering condition, page is open or some condition changed."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we have if scenario and then action.",
            "Okay, let's start with if and now we will think of something like.",
            "--- Page 178 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI should do it a bit better with initial status.",
            "Okay, so if our type is not empty, then comment should be visible."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's try to do this attribute or."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData field realty and our type okay, if type is not empty so we can use condition is filled in.",
            "If this condition is true, \nthen we will use action show elements on the."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage and we can decide what element."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill be shown to be.",
            "Input column of a comment Text comment Okay, so if type is filled in comment will be visible."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSave our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow and let's check how it will be physically working for us."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAs you can see, each time you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDevelop something, this is very important to immediately test it when it's ready and.",
            "--- Page 179 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhen you make many different changes you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMay think of okay, I will do many changes, then I will test them in total."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI do not recommend you to follow this approach, so it's much better and more safer.",
            "If you will do some small step, \nthen you go to your system and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nStart to test it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen you do another small step, then you do another test."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe reason is that creature client side sometimes could bring you Surprises and it will be not so clear according to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe error message text in your browser console to understand what exact part is gave you such a surprise."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's better to make small steps and to test it frequently.",
            "So once you get and start to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 180 ---\n\nGet some error messages and you will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEasily understand that it was caused probably the most latest recent changes and you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nShould take care about it and maybe."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRevert them maybe to look carefully and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou will find some errors.",
            "So small steps and frequent testing.",
            "This is what I recommend to you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's open any record type is set, Comment is visible.",
            "It's clear the type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you see it's a bit uncertain."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's not cleared and let's set it again.",
            "Okay, if you clear it doesn't work."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think that we have a problem because of initial state of the square column.",
            "Let me show you how we can fix it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 181 ---\n\nInitial state should be aligned with our business rule and in case if we check some condition and turn this column \non.",
            "So make it visible."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd according to the business rule, it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill be enabled if type changed and became not empty.",
            "Let's check it out."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe need to reload."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFighting with browser cache Clear.",
            "Now you see our comment disappeared.",
            "If we set some type, it appeared again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIf we change type, it appears again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you clear, it hides.",
            "Hides?",
            "Yes."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo that's how you can manage visibility and such setting.",
            "As you can see, it's a no code setting."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can make all the settings with your mouse.",
            "It doesn't require any programming.",
            "--- Page 182 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI would like you to see another example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can also see visibility, editability and required property."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd one more thing which is interesting."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI think is about selecting values in lookups."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow we have selection of manager from contact.",
            "We can display additional columns here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, contact type.",
            "Okay, I'm too lazy to scroll.",
            "I will type this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow you see some contexts have customer type, some contexts have employee type, and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFinally, my contacts list will include many."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDifferent persons and only some of them.",
            "--- Page 183 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill represent my company employees."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWhen I want to specify manager here, I definitely want to specify someone who."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs company employee and not just a random contact."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo I want to make some simple."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFilter here which will help me to select only context with a certain type.",
            "And we can do such filtering with."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThe help of business rules."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go back to our page, go to business rules Now I plan to use object level business rules.",
            "So here you see real \nto business rules which means realty object business rules."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHere was page.",
            "Now here is object level."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay and first of all I will check available action here.",
            "--- Page 184 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd in comparison with page level we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHave more options here and I plan to use simple static filter Business rule Static filter will not require any as you can \nsee, static filter will not."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nRequire any special conditions I mean for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTriggering so it will be applied always.",
            "That's why it's called static."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd I will have a column which."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn I plan to use for filtering.",
            "This will be manager column and what."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nFilter I plan to use I have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo specify it with additional condition.",
            "Please note here those of you who use Windows Home probably you may \nexperience difficulties because it was found that users with Windows Home experienced troubles opening this tab \nand it was simply not possible if you use Home Edition."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 185 ---\n\nI can make condition here.",
            "Contact."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nType equals to a constant employee.",
            "So if this filter will be constantly applied on my lookup, save it and then save it \nagain.",
            "Now I save page and I will reload my main tab and you will see how this manager filter will work for us."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow let's try to select values."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere you select data.",
            "Now you see only context with employee type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's make more examples, better examples."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd let's go to customer 360 add more contacts to make it representative and let's make a contact name something \nlike James Bond and type will be customer.",
            "Okay, one more Bruce Lee will be our employee."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd Bruce Willis will be also our employee.",
            "So you will see we have some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDifferent contexts, different types and let's go back to our realty, try to select manager system only shows us only \ncontext with a certain type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 186 ---\n\nThis is very simple filtering tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see we just used only mouse to set up this type of customization."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it's very efficient and that's why I think it's important for you to know about it.",
            "Because even if it doesn't require \nprogramming, but if you did not attend our."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCustomization course, you still need to know."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat such type of filtering is supported.",
            "Also I can quickly show you another filtering of connected fields like filtering \ncities by countries."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo or maybe if we focus on us only.",
            "For example we can filter cities by States.",
            "But maybe for countries it will be \nmore clear and understandable."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo let's go again to our page.",
            "In order to filter something by something."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course we need to have connected lookups."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 187 ---\n\nLuckily in base product cities and countries are already connected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEach city has corresponding country reference.",
            "Let me show you cities lookup already has connections with country.",
            "Let me select fields to display.",
            "We have names.",
            "I don't need time zone at all."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably we have to start from country."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause we plan to input data starting from country providing country value and then USR country copy and lookup.",
            "We will use standard lookup.",
            "Country that is already present will be drop down list.",
            "Okay."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThat will be based on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's also CT drop down list."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd here we can name something like city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will be enough.",
            "The most important is uniqueness of this column.",
            "But city is good enough."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 188 ---\n\nGood unique value for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay.",
            "Is it okay?",
            "Should be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSave it first in order to apply."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nChanges to the object level."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd so to fully modify our data model properly to take maybe less than a minute our time it okay, saved.",
            "Well, now \nwe go to business rules."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThis is a special type of filter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhich is I think originally designed for connected lookups."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd we can specify what column to filter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nObviously we will filter cities by what another column by country.",
            "--- Page 189 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd this editor will automatically detect connections between cities and countries.",
            "So it will show us where city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCountry which means country value inside of city Lookup equals to value of country."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProvided in our realty page and also automatic settings for clearing when country changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nClearing cities when country changed or automatically."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSet country if city was set and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example country was empty.",
            "So you can do this also then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCountry will be automatically populated.",
            "So this rule will work good for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut what I need to add here is triggering condition."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 190 ---\n\nWe need to Change such filter each time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen country changes so page is opened or some changes and when country.",
            "Okay, we can select here is filled in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWorking with this filter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSometimes it will work, sometimes not."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo you should not forget about this condition.",
            "Let's save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave page and then we will test it.",
            "You will see how it works."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's test.",
            "We need to reward it.",
            "And now let's check it out."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's say Miami and you see."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCountry, you see city.",
            "--- Page 191 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, Country, States, United States."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCities.",
            "As you may see, cities are filtered by country.",
            "You only see cities."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, Hartford, Frankfort."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLooks like only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUS Cities I think.",
            "Okay, so now you see it looks."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLooks like."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWell, okay, let's take another example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo country, you see all cities from different country.",
            "Ararat Astrakhan, Baghdad, you see Bishkek, you see Bratislava."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo from different countries from.",
            "--- Page 192 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so if you set some city."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCountry will be populated automatically in this case."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if you clear country, city was cleared automatically.",
            "So if we provide some country like Bangladesh, you will see \nonly filtered cities."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's go to our states."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we have to search for Seattle."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYes, you see it finds and filter works well.",
            "So this type of filtering can be."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDone not only for citizen countries.",
            "For example, you can make two connected hookups.",
            "One is type of document \nand second one is for example subtype."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd subtype should have a lookup column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 193 ---\n\nReferencing to corresponding type."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd in this case when user specifies."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nType, it will be technically possible to filter subtypes according to selected type.",
            "But this canonic example with \ncountries and cities, I think it's the easiest to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nUnderstand examples so you can also use it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDon't forget about business rules triggering by changing country.",
            "So save it.",
            "Probably that's enough for today and \nwe."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHave one more session tomorrow that will be dedicated to our client side.",
            "I plan to show you how to make details \nand also probably answer your questions if appear."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you ask something about some cases with programming inside of our pages in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nFreedom UI later we probably will also."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInvest a bit of time into classic.",
            "--- Page 194 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nUI examples and I think you'll be."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInterested in migration from Classic UI to Freedom ui.",
            "It will be only client side, so objects will be the same."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nToday, our session is over.",
            "In case.",
            "If you have any questions with your."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEnvironments, with your homework, tell me please."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt's important for me to know."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo you have any troubles or other notes, any questions?"
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nI have one.",
            "Did we go over.",
            "I could have just missed this now.",
            "It could have just been me.",
            "Did we go over the \noverriding."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou probably asked about something that you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 195 ---\n\nAlready saw in Classic UI with overriding of methods or this is something else.",
            "So can you explain the business \nexample?"
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nNo, sorry, I just saw it on the list on.",
            "So you know you have the list of the breakdown of each day."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, you mean this one?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYeah, yeah."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo this schedule is a bit outdated unfortunately."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, try to find some time and yes, there are some topics that are not so applicable to Freedom UI and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou may find something like.",
            "Like alternative JavaScript editors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, I can explain you something and overriding of methods.",
            "--- Page 196 ---"
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nThat's it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui.",
            "In Classic UI you \ncould rewrite or."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nInterfere into some life cycle stages of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPage by replacing its like critically important methods.",
            "In Freedom UI you can write your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOwn methods, but system does not allow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou to significantly change this life cycle.",
            "So it looks like I tried and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt looks like when you have for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExample some handler and you already know that there is a base product handler which is declared somewhere in \nparent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 197 ---\n\nTemplates, you cannot replace it with your own rejecting execution of all parent implementation.",
            "So in Freedom UI \nyou can write."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYour own part and it will be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nJust part of all the steps executed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol I think so in Freedom UI we have different conditions for programming.",
            "I plan to update this program for."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOur sessions and it's a bit outdated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural.",
            "So \nwhen you do simple settings then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou do a bit more."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMore complex and so our flow of real topics that we study, I think it's quite optimal for current version."
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nThanks Mario.",
            "--- Page 198 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Paddy for questions and any."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAny, any difficulties with your homework, when you do examples, when you make."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYour sections, maybe you have something to say.",
            "It happens that most of our participants watch videos like you now \nand then."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThey decided to process video files much."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLater than finishing of the sessions."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo I recommend you to invest some time between the sessions to watch videos and practice."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause in this case you will easier."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nUnderstand our next topics."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 199 ---\n\nYou will get more experience at that topics and think it will be in."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nGeneral faster for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be faster boarding faster, let's say getting necessary expertise for you as developers.",
            "So at the end of the \nsessions."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou'Ll be able to pass an exam."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe call it Fast Track certification, which."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIncludes homework very similar to what we do here and test.",
            "This test will require some time for you to prepare.",
            "So \nat the end of the sessions next week, I will explain you some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDetails how we will prepare for the exam, how it will be organized and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThis is optional thing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you feel confident, you may apply for it.",
            "If not, you may use Academy website and apply for certification much \nlater.",
            "--- Page 200 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo if interested in preparation for the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExam, also keep it in your mind."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd if you have some questions, feel free to ask.",
            "Also maybe you will want to write me some messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is my email.",
            "I will be happy to answer you and support you during your practicing with."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nExamples in our sessions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you for your time today."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSee you tomorrow as usual."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd as usual, you will receive videos of today's session very soon, maybe 40 or 50 minutes to get this video."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThank you and goodbye.",
            "--- Page 201 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSee you tomorrow.",
            "Bye."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt.",
            "--- Page 202 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items.",
            "And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui.",
            "So what I need \nto tell you first today, this is about details.",
            "Because this is a very important piece of Creature configuration and you \nwill face it almost everywhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you can see that for one main account record we can save unlimited number of addresses.",
            "So we can put \nunlimited number of addresses here and they will be usually displayed in a list.",
            "And the reason why Creature has \ndetails is need to save additional data in connection to our main entity.",
            "So our main entity is a single record and then \nwe need to keep information for example about different types of addresses for our customer or different emails."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo one account connected to as many detail records.",
            "And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records.",
            "Vikrat, thank you very much for confirmation.",
            "Thank you for working \nwith your redis and I'm really happy that you finally made your system working correctly.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have contacts list, we have also emails or sorry, we have probably it's better to say communications.",
            "If you go to \ncontacts open any record, you will see communications detail.",
            "So here you see we have mobile phones, email, \nbusiness phone, but in general we have plenty of Supported communication options and communications are saved \nas a detail connected with main entity in context.",
            "We also have detail named job experience."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's how we can select a company and to see all its connected contacts.",
            "So usually connection is one too \nmany.",
            "Maybe some of you will ask about is it possible to make a connection one to one or data connection many to \nmany.",
            "Physically this is possible, but you should use for one to one you still will have to use separate object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details.",
            "So this is nothing special for you.",
            "But some of you who never attended \nany of creatio training sessions, so you need to know what detail is how to build it because it's almost the same \nimportant as knowledge how to build sections.",
            "So I will show you step by step example of building details and I will \nexplain why we need it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn our realty business, we definitely need to speak with potential customers.",
            "We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental.",
            "And we need to organize these actions.",
            "So we need to \norganize such visits, such conversations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object.",
            "So new object requires new good working friendly code.",
            "We can call \nit something like realty visit title will be also good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required.",
            "We have no default values here, but we have a special lookup behavior."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted.",
            "So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 204 ---\n\nSo here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically.",
            "This is performed by help of foreign key at the database and with option cascade on delete.",
            "So physical delete performs on the database level, not at application level.",
            "Unfortunately you can't handle you \ncannot handle such delete at application level because it will be triggered and made by database foreign key tools."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can call this colon visit date time.",
            "We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord.",
            "And it makes sense especially if you want to change for example till tomorrow.",
            "But having similar time \nsetting automatical value here will be quite good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo potential customer is a person who probably will buy a house or will rent an apartment.",
            "So potential customer, we \ndon't know who it is.",
            "So sometimes could be empty.",
            "And lookup is contact object which is a very typical way when \nwe need to get some kind of personal reference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have an option do not control integrity which means please do not create foreign keys by default.",
            "When you \ncreate a lookup column foreign key is created automatically.",
            "But if you enable option do not control integrity it \nmeans that foreign key will be not created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal.",
            "But it's very rare case when you remove contact who \npreviously was a user of your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity.",
            "So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company.",
            "And then you have a table in this database contacts table which has 2000 foreign keys on it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why they decided to make it with no foreign keys.",
            "For created by and for modified by and such behavior \nwas inherited from base lookup.",
            "Oh sorry.",
            "From base entity.",
            "If you will search for a base entity in our packages, open \nit."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source.",
            "So here we have just standard situation \npotential customer based on contact.",
            "We have all standard settings and the only change was selection window.",
            "So \nfull scale selection window selected just to make it more comfortable to select potential contacts potential \ncustomers as a context from big selection window.",
            "Okay, what else?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo comment after a visit could be really helpful if you want to proceed with this realty.",
            "So we can have a comment \nas a text field, very simple, not required and just text value.",
            "Okay, so now it looks like our simple detail object is \nalmost ready and we have to save and publish it.",
            "Clicking publish as you remember will automatically perform save \nfirst."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you can see pages tab and we have to specify edit page for our reality visit.",
            "Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page.",
            "Our column set is not so big \nand impressive so we can just take some mini page example which will also look good if you have not so many \ncolumns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo reality visit form page Its parent packages realty template is mini page.",
            "Great, now we have to use existing \ncolumns.",
            "As you can see we can add new columns but we already have data model attributes already designed in \nour object so we can just show it up.",
            "So what we need here is visit date and time.",
            "Probably the first important \ncolumn that we need to display."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user.",
            "So we can hide this column so we cannot show it on the page.",
            "And in case of \ncreating a record detail or in case of Updating new record or update an existing record or editing record."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be just hidden, it will be not shown on the page and our reality visit page will look like this.",
            "We can see why \nis there a red asterisk beside visit date and time and parent realty.",
            "It means the column is required system will not \nallow us to save data if required column is empty.",
            "Okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is very common for details and creature to hide parent column from the page at all.",
            "So we can save our page \nnow.",
            "So save it fully.",
            "No business rules, no code, no any special settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen you edit, you want to specify totally another set of columns.",
            "It could be used.",
            "And also we have an option for \ndifferent pages depending on some specific field value.",
            "This can be helpful in case if your entity is quite big and \ncomplex."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why we have this Option multiple pages based on specific field value.",
            "So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting.",
            "And depending on this column we can use \ndifferent pages.",
            "And when you look at activities section, for example, you select an email, try to open its page based \non this information system will show you email edit page.",
            "If you do the same for a call, it will open you call edit page \nfor activity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, finally we finished and we can publish our object again.",
            "As you can see, we have to do it twice.",
            "First to create \nit, second to finalize assigning of a page for the object.",
            "Okay, great.",
            "Now our object is ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not.",
            "In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object.",
            "So we don't need to modify it.",
            "Attempt to modify.",
            "We should not remove it \nfrom the system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have another options like finding your corresponding form page and open it from configuration section to be the \nsame result.",
            "Or you can achieve the same result if you go to settings page physically system designer.",
            "Then you find \napplication hub.",
            "Then you find your realty application.",
            "Switch to pages and find form page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it.",
            "That's why it's called expanded.",
            "I would say it's \nexpandable when it's necessary to see some data from it.",
            "So let's use this expanded list component carefully drag \nand drop it on our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail.",
            "It immediately shows us set of columns.",
            "So possibly we have to take care of set of columns.",
            "And I would like \nto show here first to be date and time potential customer, maybe comment and then create it on maybe just for \nreference.",
            "I would also display parent reality."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd there is no horizontal scrolls in classic UI and only 24 available columns to be displayed.",
            "So freedom UI is more \nflexible here.",
            "Okay, so we have this list of data, but what we need.",
            "How did you add the columns again?",
            "I just missed \nit."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if it has some data, they will also see corresponding data and they will see what they expect.",
            "So here is our list.",
            "But also we need to do some additional settings in the right part.",
            "This is detail and detail must show us data only \nconnected to his main entity record only for currently selected realty and not any other realty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this.",
            "So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty.",
            "That's how we will filter our data and show only visits for corresponding house, not for any \nother another house.",
            "Okay, this filter is mandatory, so you must do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can also program bulk actions for list.",
            "So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions.",
            "For example, you can program additional actions here and that's how you can do some \ncustomization and additional functions that will be running for selected data.",
            "They are called bulk actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically.",
            "But here we have important setting which column values to set.",
            "As I told you, when we create new \ndetailed data, we must take care about parent reality value.",
            "So we have to set here some default value for parent \nreality.",
            "Parent reality will have its default value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo please remember this is filling of a column that is used for connection between visits and our realty.",
            "Okay, great.",
            "No any additional settings.",
            "So you just have to remember when you build your detail, you should set up your list and \nthen take care about plus button.",
            "That's all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 209 ---\n\nIf other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails.",
            "So let's make a quick test of how our detail works.",
            "Let's try to add new record.",
            "You see default value \nof your visit date and time was set.",
            "Okay, let's set it for tomorrow the same time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can copy this data, save it, check it out.",
            "You see the parent reality is copyable.",
            "It's very important to keep it \ncopyable.",
            "So in this case creating a new record was correctly copied previous parent realty.",
            "And obviously we can do \nit one more copy."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe it will help our system to work more correctly.",
            "Something unusual happens with my browser with my app.",
            "So \nlet's check about its CPU and memory.",
            "Okay, I will reward the page fully.",
            "This is not a result of adding details, so it's \nprobably some kind of crash but not related to our detailed data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid.",
            "Without being afraid of something can be lost in the middle.",
            "So I recommend \nyou to do such comments in version control because it helps to keep all your history.",
            "And also if something happens \nwith your environment, having such history will be a great help because you'll be able to recover anything that you \ndeveloped.",
            "So in my case, now everything was saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we will sync changes which means pull and push to common repository.",
            "And now it's okay, it's done.",
            "So we can \ntrack our changes at our GitHub repository 7commits.",
            "You can see all the history, you see how many files were \nchanged and so on.",
            "Each time we do this, you'll be able to track all the history and make control over what is going \non here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also you can use business rules if you want to do some kind of filtering or simple fields hiding or showing you \ncan use all the features.",
            "So you should remember that our page for detail is based on a separate client module that \nwas created today.",
            "It was a reality visit page.",
            "So this reality visit form page, as you can see it's a separate client\n\n--- Page 210 ---\n\nmodule.",
            "We can even look at its code if interested."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo inline edit should be disabled.",
            "So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user.",
            "Read only details are helpful, \nespecially if you use some kind of integration with third party systems.",
            "And you can read data from third party data \nsources using for example some database to database connection if it's on site and then display such data as a list \nyour pages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications.",
            "So let me explain what I plan to do right now.",
            "Let's imagine this is very typical by the way, this is a very \ncommon scenario."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it.",
            "So we need one more extra column at our accounts section.",
            "And simply speaking, we need to add some \ncolumns into existing entities.",
            "We can do this easily with no code approach.",
            "Let me show you how it's possible to \ndo."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou may now see some very strange package automatically created.",
            "And system does not allow us to change it.",
            "And this strange package will be used.",
            "So it will be created by system automatically.",
            "And when we customize \nsomething, system will save our changes into this package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut you need to know how technically this is done and where it will be finally saved.",
            "And how to for example, turn \nyour system back to its previous step, previous stage.",
            "If you realize that such change was not designed, was not \ndesired anymore.",
            "So when you change like this, you can save it.",
            "Also you can hide existing columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow I should pay your so I attract your attention that we will finally receive new package.",
            "Our customization will be \nsaved as a special type of item into this new package.",
            "So let's try to do this and then let's see what finally will \nhappen.",
            "This is a fully valid flow that valid algorithm how to customize existing tools.",
            "You could also customize it \nthe same by going to application hub, finding Customer360 app and then making changes for a page from there."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, it's saved correctly.",
            "So everything's good.",
            "We can even edit, inline edit.",
            "We can even do like this and save our \nchanges.",
            "So then open it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it.",
            "And such items are not so easy.",
            "Let me show you properties.",
            "We have special type \nof object which is called replacing object.",
            "It's not usual object, this is replacing object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's open it.",
            "Maybe we'll understand it better when we open it.",
            "First of all, it's interesting that replacing object it has \nreplace parent option on which clearly states that this is not a usual regular object.",
            "Replacing object is used when \nyour original object is present and your task is to customize it.",
            "But original object is not in your package and the \noriginal package is not editable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nParent object is account and replacing object code is absolutely the same.",
            "This is important rule of creature \narchitecture.",
            "So when you replace some entity, its name remains the same, you can change its title.",
            "Moreover, it was \nused in base platform bank software products where original account was replaced and sorry, it was renamed with a \nanother name called legal entity.",
            "But physically it was still account entity and it's still the same table and the same \nlogical name at program code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes.",
            "So I think that this editor should not \nallow you to modify code in case if you work with replace an object.",
            "Okay?",
            "So code must be the same as original \none."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range.",
            "For example, if original type was text 200, then potentially you can extend it to text 500.",
            "But \nI do not recommend you to do this because you will face some additional unexpected difficulties.",
            "So it's possible, \nbut I think not so feasible.",
            "So it's better not touch types of columns when you make replacing objects."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we cannot rename inherited columns.",
            "We can only change its title.",
            "Our custom columns are shown here in \ncolumns list.",
            "And usually the reason why developers create replacing objects is need to add your own columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases.",
            "You can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis can be done.",
            "You can see it clearly if you go to configuration section.",
            "Let me explain.",
            "Let's go to all packages, \nsearch for objects and look for account object and make it strictly searched by equals condition.",
            "So only if object \nname equals to account it will be shown here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 213 ---\n\nBut then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently.",
            "So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it.",
            "Finally, our last addition will be from our customer, so from our editable package and it \nwill be like a final layer of all the settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles.",
            "Final structure of account is formed by its origin plus all the replacements.",
            "It's interesting to \nmention that at the database level we have just only one data table.",
            "Let me show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nReplacing object uses existing table and adds new columns there.",
            "If you will remove replacing object from your \nsystem logically your new column will disappear physically.",
            "It will be present in the database as a kind of leftover.",
            "But it will be not so critical, not so important.",
            "And I think that end users will notice it at all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd Adrian is asking very interesting question which I plan to move on here.",
            "So you work with some account page \nand you would like to keep your settings saved in a proper place.",
            "Yes, Adrian, I will show you now and I'm just going \nprobably not so fast with explanations here.",
            "So now we have Customer360 app and for this app system created \neditable package.",
            "And we have some contents in this editable package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy default system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app.",
            "But obviously you may not want to work with such many packages.",
            "Also you may not \nwant to work with packages with ugly names.",
            "Let me explain what I'm talking about.",
            "About let's reload our data, go \nto all items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 214 ---\n\nSo your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system?",
            "And the answer is yes, we can manage this.",
            "This is not obvious and you have to \nperform additional steps to enable such management.",
            "So let me show you how you should do this.",
            "Let's go to \nlookups or we can go to studio lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will enable it of course, package installed application and we will provide the same name for our lookup and \ntry to save it.",
            "Okay.",
            "This is only developer tool so we do not need to transport such registering of package to test and \nproduction.",
            "We can open contents.",
            "And now you will see all installed applications, all existing packages and you will \nsee settings for all packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe don't really want this, so we want probably to remove this package at all.",
            "And maybe we would like to use our \nexisting new package which is a dev package.",
            "We have it Dev Classic package.",
            "So we would like to use dev Classic \npackage for this.",
            "So we can try to do this replacement instead of this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd now you see our dev Classic package is connected to this app and we can see properties of this package.",
            "Let's \ncheck.",
            "What about dependencies?",
            "You see that System automatically added Customer360 app as a parent \ndependency to this package when we made changes, when we customized this stuff.",
            "So we did something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we will continue customization of Customer360 in our classic package.",
            "Andreen, is it what you were asking for?",
            "Okay, great.",
            "Thank you, Adrian.",
            "So now we have multi action move to another package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see, this transfer takes significant time because it looks like system performance performs a lot of\n\n--- Page 215 ---\n\nchecks of items that we process and it makes sure that we have no other connections to this item.",
            "So it does \nsomething like probably some excessive work.",
            "But okay, it makes it successful.",
            "Now you see, our customization \ntraveled to this Dev Classic package.",
            "Now if we go here, you see our customization should be present here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow it's empty.",
            "It should not take a lot of time.",
            "Yes, successfully deleted.",
            "So we have no ugly package anymore.",
            "We \nhave some correctly created packages, good names."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course, you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool.",
            "If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor.",
            "So you should consider yourself before making changes here because it's like architecture but you can manage.",
            "Thank you Adrian for your questions.",
            "Okay, it's time for us to have just a short break, probably five or seven minutes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, thank you for all of your active questions.",
            "Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHi."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, hello."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a. I have a small question I have.",
            "Yeah, so I said we use the two lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 216 ---\n\nOkay."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nFirst one is for country and second one is for city.",
            "Right?",
            "So in the drop down button we have one plus icon is there if \nyou remember."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo what about which lookup you're interested?",
            "Is it the main realty or."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, main reality.",
            "We have country and city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDrop down type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNo country and city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one.",
            "So I can't hear."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, yeah.",
            "So we have a plus icon over there, right?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you ask about if it's possible to manually create new city for this.",
            "--- Page 217 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, Can I, can we hide that button?",
            "Disable that button if possible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis.",
            "Yes, sure you can.",
            "I just forgot to do this.",
            "Yes, let me show you.",
            "We can go to edit page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects.",
            "So you need to get some basic understanding of how classic UI can be managed.",
            "And before \nproceed with classic UI customizations, we need to make some preparation that is necessary and very important for \nclassic ui.",
            "So in order to create new section in classic UI you need to prepare target package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, I'm not sure because it looks like this is hard coded thing.",
            "So possibly you may find somewhere in CSS value for \nthis color, but it looks like this is an image designed somewhere in the app.",
            "So it was not supposed to be \ncustomizable, I think.",
            "Let me show you with CSS it's not possible.",
            "Probably it's because of this is an image."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see the current source, so you may try to replace actual storage of this image and you may design your own and \nthat's how you will finally make corresponding change.",
            "Rakhi, is it clear?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is part for core which is not designed to Be changeable by configuration changes.",
            "But if you really want, you \ncan replace files on disk with another ones and that's how you can do this.",
            "Thank you Rakhi, Very interesting \nquestion and let's move on.",
            "So I just wanted to explain you that in case if your plan is to use classic UI \ncustomization, then you will have to take care about current package system setting."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session.",
            "In the current example, current package is not cached, so we may change it without logging out.",
            "Okay, \ngreat.",
            "So we can change save it then.",
            "One more tip that you need to know before starting Section Wizard."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache.",
            "So we need to do this restart.",
            "In this case everything will work.",
            "Okay, good.",
            "Now we \ngo to settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have to be very careful with the code because code will not be able to change if we finish its input.",
            "And that's \nwhy we have to type it correctly from the first attempt.",
            "Realty Classic.",
            "So this is our code.",
            "Once we move our focus \nout from this control, you will see system will think for a bit and then we will not be able to change this code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will only change something like a name column.",
            "I will provide some minor change copyable setting, no any other \nsettings.",
            "So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue \ncustomizing of my section.",
            "But in case if it fails to save and it will be obvious that I need some more steps to \nprepare my system, then I will not lose time for setting up columns.",
            "So saving objects is the most critical step of this \nprocedure."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we can edit it.",
            "And editing a section is much safer than creating it.",
            "So we can go to edit page.",
            "Now we can \ncustomize it.",
            "And I will quickly add similar columns as we had for Freedom ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday's Friday and probably tired a bit.",
            "So copyable value type based on existing lookup realty type or Classic UI \nDrop down list block behavior, no redundantly, no hiding titles.",
            "Everything is okay here.",
            "Save it.",
            "Great."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui.",
            "Comment here in their name is comment.",
            "But what is interesting here we can make a special option called multiline \ntext.",
            "You will see what will turn it into the column.",
            "So multiline text has a very interesting feature which is not \nimplemented in Freedom Live."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary.",
            "And \nlet's go back keep it simple and save the changes.",
            "So I want you to see how Classic UI section looks like.",
            "In Classic \nUI we have much more objects created for a section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have much more objects for Classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects.",
            "And we have more tables for this for the database.",
            "And in Freedom UI such tools are \nincorporated into commonly used objects for tags for files for folders and it makes it more efficient storage.",
            "Okay, so \nlet me show you how Classic UI section looks like.",
            "We will have this realty classic section but it probably will fail \nwhen we try to open so we have to reload because of Classic UI is much more sensitive to cache issues."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's go to another page.",
            "Go to reality Classic page.",
            "Yes, we have some minor issues here, but in general it \nworks.",
            "Okay, Try to add new record.",
            "Here you can see how Classic UI edit page looks like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 220 ---\n\nSo okay, let it be Paris Ren.",
            "The type is apartment.",
            "Offer type is not filled in so far.",
            "And here is what I wanted to show \nyou.",
            "This is voice input and speech recognition piece."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package.",
            "So this is important step because such data also should travel to our test and \nproduction.",
            "Now if we go to Reality Classic you can see that offer type can be selected and we can save it.",
            "Okay, \nlooks good.",
            "Some minor steps, minor preparations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one will be about position of a module in Workplace.",
            "Let's check Reality Realty Classic.",
            "Great.",
            "Third one will be \nabout access rights.",
            "That's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's also browser dependent and you should check and test it before you advertise this for your customers \nbecause it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this.",
            "So \nsome browsers does not.",
            "Some browsers do not support this and that's why you see it's not in any browser.",
            "Okay, \nthank you, Rahi.",
            "And what about languages?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo finally we had an example of Classic UI section.",
            "We can set columns for our section list set fields to display in \nClassic UI we have different approach for setting up columns.",
            "So we can provide column settings type, maybe you \nneed price offer type.",
            "Okay.",
            "And finally we can have a menu comment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you should save for all users and such default profile will be saved as data item to our package.",
            "You can find it \nhere reload and that's how we can change and transport Classic UI columns setup to test and production.",
            "This one\n\n--- Page 221 ---\n\nis saved in sysprofile data at the same with details.",
            "Okay.",
            "Probably today's Friday and it's enough for today."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut we should do the same code here and here.",
            "We should do it very carefully.",
            "Save it.",
            "Now we will have better \nnames for our client module.",
            "Also it will be renamed on disk in our dev classic package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's why we have to do it once again.",
            "Okay, Price type, offer type, maybe comment.",
            "Then we save it for all users \nproviding so called default profile.",
            "This is important.",
            "After we do this we can bind columns to our package creating \none more data item in our classic section data was bound successfully close it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt doesn't represent any useful data for us.",
            "This one is correct data with new client module.",
            "So when you rename \nclient modules because of ugly names, take care about quest API column settings because you will probably have to \nreview them afterwards.",
            "Okay, so final quick brief look at our client modules in Classic ui.",
            "So in classic UI section \npage looks like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's why we have a lot of common functionality and no need to implement this functionality each time in each \nseparate section.",
            "So our functionality is now in parent one and all the buttons for classic UI section, like new actions, \nview buttons, grid folders, feature tag, everything is inherited.",
            "That's why we do not need to customize it and that's \nwhy this code is so small."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually.",
            "And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you.",
            "Okay, that's all for today.",
            "We just briefly mentioned Classic UI and we probably need to pay some \nattention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers \nwho started questiqi Solutions and unfortunately such migration is not automated yet."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs a final step for today, it looks like I unnecessary caused it.",
            "I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history.",
            "And any of you who wants to keep how our \nsession proceed, you can also watch our repository at GitHub.",
            "Thank you for your time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number six of our development on Creature Platform Guided Learning.",
            "Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration.",
            "And then we will fully switch to work \nwith server side.",
            "So recently we managed to create a fully separate Classic UI solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui.",
            "And most development is focused on Freedom ui.",
            "And you also remember some interesting feature, \nsome feature for voice recognition, you remember we still missed it in Freedom ui.",
            "And you also can do details, you \ncan program buttons or actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen you can create a handler as a function add methods section.",
            "And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data.",
            "I will show you more \nexamples later.",
            "And this is just a quick brief introduction for you.",
            "If you will work with some Freedom Classic UI \npages in this case, this possibly can help you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUnfortunately we don't have any automated procedures for this.",
            "And especially this becomes additionally complex if \nyou have some programmed code in Classic ui.",
            "So I will show you the most practical way how you can switch from \nClassic UI to Freedom ui.",
            "I will also show you some settings and system settings for this which impact on how you \nsee your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch items which have section in their name or page in their name, they usually designed as Classic ui.",
            "If you look at \nthe pages and you see form page or list page, it's a Freedom ui.",
            "Of course, physically they are totally different."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 224 ---\n\nAt the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes.",
            "So server side part will remain the same.",
            "Data, items, \nlookup contents, everything will be the same.",
            "The only change we expect to do will be our user interface area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be possible to switch.",
            "First of all, I need to tell you about some important settings related to such view.",
            "And \nI would like you to see this background like frame."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you system settings and this system setting is called like Freedom use Freedom UI interface.",
            "This \nsetting generally turns on or off this background frame stuff.",
            "And if we just for test purpose want to turn it off so use \nFreedom UI interface was originally on we turned it off and it's cached.",
            "So in order to apply this we will need to log \nout and log in again.",
            "Now you will see how system will look like with the Classic UI set of section and the top search \nbar."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we can also go to Workplace Management System Designer.",
            "This page go to Workplace System Setup.",
            "Let's \ncheck our customer 360 workplace and you see use only in shell in like in usual words.",
            "If we want to translate it into \nsomething that you can easily understand, it means that use only in Freedom UI background settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections.",
            "It's still supported.",
            "You see, \nwe have Freedom UI background, but we have Classic UI stuff inside of it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, some users are really stick to some Classic UI solutions.",
            "They are not ready to switch to Freedom ui.",
            "They work with some basic UI sections and it's critically important for them.",
            "So you can manage this stuff for\n\n--- Page 225 ---\n\ndifferent users."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is a page which will be temporary important for you, so it will be not forever for you.",
            "And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it.",
            "So you will not \nreally need to switch back to Classic ui And that's how I recommend you to follow this personally."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way.",
            "So let's go to Settings, then go to Application Hub so we can create new app.",
            "As you remember, application is like a \nnew top level setting or like application entity which may include one or several packages inside.",
            "We already have \nFreedom UI reality section, but we don't have any classical representation for it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can compose kind of icon for it.",
            "And we will use this very important feature link to an existing object.",
            "This is very \nimportant.",
            "So this is a key feature of all this migration idea.",
            "We will use existing realty Classic UI main realty classic \nentity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt only uses existing object and then creates several client module.",
            "So I don't expect it to last longer than 20 \nseconds.",
            "So let's see how it works for us.",
            "And then you will see the main idea of migration.",
            "So Generally it's pretty \nsimple."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can hide unnecessary columns.",
            "We can add the columns that we need you.",
            "Now you see all our classic object \ncolumns are here.",
            "So we can specify say okay, we want to see name, price, type, offer type and comment and then \ndate of creation.",
            "Order of selection is important here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools.",
            "So I always want to check what is going on there.",
            "And that's why we go to \ncorresponding new created package.",
            "You see this package must have dependency from dev Classic.",
            "Yes, has it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nForm page is Freedom UI edit page for a section for an object.",
            "And as you can see it has its own properties in our \npackage code title.",
            "Great.",
            "And we can specify columns as we wish."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it.",
            "Okay, so in \ngeneral it looks like this.",
            "We can also try to specify drop down for types."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui.",
            "So if such logic exists, you will have to reprogram it Working at code source code part of the client module.",
            "So I \nalready saved it.",
            "You can close it.",
            "Now you see some changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is a result of some browser cache issues.",
            "Okay, let's cancel this log out, log in, go to Freedom UI section.",
            "Also I \nwould like it to be present in my.",
            "Let me show you in my studio Workplace.",
            "So let's go to Workplace Studio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 227 ---\n\nNow let's go to Studio Realty Classic and Migration is somewhere at the Antifa world.",
            "I expect to see my sections on \ntheir places.",
            "Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff.",
            "And migration \nis our Classic UI data shown in Freedom UI user interface.",
            "Trying to open the edit page shows us Freedom UI page \nfor migrated stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages.",
            "But having the data stuff the same.",
            "It's so doesn't take too much time because your data is data model is ready.",
            "And \nwhat is interesting, we have special parts of section like folders like tags and notes.",
            "So nodes will be taken correctly \nfrom Classic UI part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's really hard to.",
            "Now we switched to Freedom UI and that's why Classic UI edit page is not working normally.",
            "But for different users it's possible to set up.",
            "So Classic UI open the page.",
            "As you can see in Classic UI I open the \npage and I see Freedom UI edit page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo finally when you do migration, you will use this help of Application Hub.",
            "You will get new package for your \nmigrated stuff.",
            "From Classic to Freedom we will have set of client modules and all logic that you miss."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo server side part of your migrated stuff will be the same and you just need to check that it still works as expected.",
            "In case of any questions, I would be happy to hear.",
            "As usual, video recording is performed."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 228 ---\n\nYeah, I have a question.",
            "Is realty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it.",
            "So \nit's like you have an old PC and new PC and you think about installing some program.",
            "Of course it makes sense to \ninstall it on UPC unless you have very serious reasons to use Classic UI for it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause in Freedom UI you have in like in several times more available.",
            "No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on.",
            "Classic UI is now supported only for existing \ncomponents.",
            "No new components are created for Classic ui.",
            "We still have thousands of customers with running \nClassic UI solutions and it is quite good."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThanks Amelia."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Paddy.",
            "Thank you for your question.",
            "Okay, so now you know how to do first steps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have some tools as I showed you that intended to help you with it.",
            "But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui.",
            "So not to be \ntoo long in this intermediate stage where some users are working in Classic, others are working in Freedom."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have.",
            "Probably so anyone I\n\n--- Page 229 ---\n\nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios.",
            "So if you will have something unusual, just tell me, I will try to help with it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo probably I have to start that in any package now we see we have some set of items of different types.",
            "So we have \nitems with different types.",
            "If you try to add an item manually, you now will see we have objects and we also studied \nwhat is replacing object.",
            "We have pages, so client modules of different types.",
            "And also we have replacing if model \nwhich means replacing client module specially designed to extend and modify existing pages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo object is a server side item, but its changes are applied easily without need to compile.",
            "So generally C Sharp code \nis not so let's say heavily used for objects and replacing objects.",
            "Of course, C Sharp source codes, if you design it \nseparately in source code item will definitely require some configuration."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFinally to compile and get executable DLL libraries and then use such libraries at its website.",
            "So C Sharp sources \ndefinitely require compilation.",
            "All JavaScript part this all this JavaScript part obviously does not require compilation \nbecause it's a set of JavaScript files.",
            "They are executed as interpreted code at browser side.",
            "So when you save and \napply any change in JavaScript part in client module part, it also does not require any compilation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn general, it's recommended to have as less as possible for code in your processes.",
            "Because processes are \noriginally designed to be a no code tool and possibility to code into it.",
            "It's not its primary purpose.",
            "The primary \npurpose of a process is to make your business logic a set of steps that you can easily construct with using of your \nmouse and which will not require programming and then you can get your business work done."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData is also metadata, not compiled and import.",
            "We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff.",
            "So if in general such DLLs if we import them are included into \ncompilation, so we can consider this stuff as involved in compilation.",
            "Now you see only four types of items that\n\n--- Page 230 ---\n\nsomehow touch the compilation and in general that's how we can say that creation has compilable server set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into.",
            "Let me show you what they are turned into DLLs that you can find in Bin folder here.",
            "Or you can also \nfind DLLs as a result of compilation in many packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it.",
            "I \nintentionally avoid making our own C Sharp sources at the beginning.",
            "So first I plan to show you how we can make \nprocess with some piece of programming inside of it.",
            "We need some package for this.",
            "I prefer to do it in my realty \npackage."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr maybe it's better to say lookup package installed application.",
            "It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have.",
            "And we \nalready did it avoiding creating one more package for Customer360 customization.",
            "So this is something that we \nalready studied."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system.",
            "And in general business \nprocesses are interpreted.",
            "It means you construct such kind of diagram and then ask system to run it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items.",
            "Okay, let's start.",
            "So I need \nto provide a code usr and I need to explain the business sense of my future process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my business sense is to make a process which will do some calculation at server side.",
            "And my calculation will \ninclude selecting some data and calculating average price for realty record.",
            "So my process name will be something \nlike Coke Average Realty Price process and the title of the process will be Calculate Average Realty price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf not just type Minus which means you are only watching and I can do it faster.",
            "Okay, thank you.",
            "Thank you.",
            "Monica, \nAdrian, Eddie.",
            "Thank you to share."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if your process has no incoming flow, it means it's the start of your process.",
            "So take care.",
            "If you accidentally drop \nitems on your diagram without incoming flows, it will be treated as a beginning.",
            "So please be careful.",
            "Okay?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn general, you know that Business Process Editor has two types of items that you can add.",
            "System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side.",
            "And \nwe have items called user actions.",
            "User actions are designed to show some page for a user, usually waiting for \nsome feedback after it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can also consider going to our customization course where my colleagues teach how to manage processes.",
            "So \nwhat my plan is I user.",
            "I use system action script task, the only item in all business process which requires coding in \nthis diagram.",
            "So this item should be carefully put on the diagram.",
            "I can intentionally show you how you can do it \nincorrectly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see when you slightly move it then you correctly put it on the flow.",
            "So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly.",
            "Now this item has incoming flow, it has its own C \nsharp body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method.",
            "It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation.",
            "So I already have some example which will work for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so I copy and paste this code to the editor.",
            "We can also expand this editor to see like in more comfortable \nways.",
            "And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code \nto type code like this.",
            "Unfortunately for business processes it's not intended to be used so it's not supported."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou.",
            "Then you can just make corresponding setting and run corresponding methods.",
            "That's how you may keep this \ncode quite small sized and do not need to create very complicated logic just here.",
            "So it was not intended to be used \nfor complicated logic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so I will save my code example.",
            "It's not finished yet.",
            "I will just show you what happens if you try to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you a bit more examples like apartment in will be an apartment for sale.",
            "Okay.",
            "And yeah, it should be \nreloaded probably.",
            "I just feel okay, it's apartment and this also is an apartment for sale.",
            "So what I wanted to show \nyou we have different types of realty like houses and apartment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need to take into consideration only records with a certain type in order to split apartments from houses.",
            "And \ndefinitely we have to filter data according to offer type splitting sales from rentals.",
            "So when we do this average price \ncalculation we will need to have filters or offer type to include only rentals or only sales and general realty type to \ninclude only apartments or only houses.",
            "And then we will calculate total Amount of all selected records, total price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd physically how we do this is the C Sharp code written in this editor.",
            "And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes.",
            "So if you type some code here, if it has mistakes, \nsystem will not show it immediately for you.",
            "For example, if you write something like this with a missing name of \nyour method, so if you do some mistake with spelling, then you will note about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so let me explain in general what is happening here.",
            "I plan to operate with creation database.",
            "We have two \ndifferent ways to operate with the database.",
            "And now I'm using the approach which supports entity data model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnother approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model.",
            "So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model.",
            "But now this approach shows you this possibility with \nsupport of object model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso Entity schema query supports caching at server side.",
            "If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient.",
            "So entity schema query supports caching."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEntity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database.",
            "It has some arguments when we run its constructor.",
            "We have several overloaded constructors \nfor this class and it has arguments.",
            "One of them is quite standard so you will always use it.",
            "And second argument is \na text representing our object code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso you may ask me if we type this code like this how we know about present functions, methods properties and so \non.",
            "We have some Academy server side documentation.",
            "Let me show you backend development.net classes \nReference Go here and we have set of cluster libraries for creation.",
            "Server side you can search for entity schema \nquery class.",
            "Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four \ndifferent overloaded constructors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here.",
            "So let's look at our reality Object just to match our columns we need to select price and area.",
            "Here we \nhave USR price USD column and USR area.",
            "Okay, so it looks like the same."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's better to always add only columns into your selection which you really need to analyze later.",
            "In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns.",
            "So the part of our selection statement that we will finally start at the database overcrowc select then set of \ncolumns that we do from our realty table.",
            "From this table is called root entity which is the first one which will be \nused for construction of our query."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it's possible you can use this argument as a special column path expression.",
            "Column path may include joins if \nyou use lookup columns of your main entity.",
            "In this case it's called direct join or if you use lookup columns of join the \nentity.",
            "In this case construction will be a bit more complicated and it's called reverse joins."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 235 ---\n\nSo we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to.",
            "Or in this case it looks like \nyou select cities and you would like to join all accounts from this city.",
            "And this article will let you know more about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI plan to get corresponding values for my filters with the help of no code tools.",
            "So I expect to get such values.",
            "I will \nshow you how to operators process parameters a bit later.",
            "Now we consider we getting it with a special get \ncommands from process parameters."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause we know for sure that by default our ESQ filters has end logical connection logical conjunction operator.",
            "That's why we have it without any special setting.",
            "So if you want only for debugging purpose, you can get SQL text \nfrom your query, so it's possible it's supported."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data.",
            "This is getentity collection method, which finally returns \nas some collection.",
            "Also you may notice that we use special arguments here and here.",
            "And this argument is called \nuser connection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database.",
            "So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select.",
            "But user connection is an important argument which tells the system who exactly is running this \nquery."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 236 ---\n\nAnd as we get this collection, we have to process it line by line.",
            "So we can use for each statement or there are other \nways to process collection.",
            "In my case I prefer to use for each and we use it for each row or as many rows we have \nin collection.",
            "We will have as many runs of our cycle body inside of our cycle."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo simply speaking, this is the line how we get exact decimal price from our data.",
            "And next line is getting the same \napproach for getting decimal area.",
            "We have some counters here which we use to collect all the prices and all the \nareas."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently it looks like our code is ready.",
            "We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish.",
            "But it looks like we need some like say five or ten minutes or break.",
            "So let's \nmake it break and then we will continue this stuff and you will see that finally it's not so boring.",
            "And I will also show \nyou how to debug such code today."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nC Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part.",
            "The best way to do this is to use parameters.",
            "So parameters can be \nconsidered as a variable for the process and process.",
            "Items also may have their own parameters.",
            "So in general we \ncan think of parameters as global variables for the process or for certain values of process items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type.",
            "So I copy its name \nshow it for you Go to process parameters.",
            "Also I need to explain if you click on some process item it will show you \nselected item properties."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal.",
            "So add decimal parameter and I will do it like this.",
            "Okay, I hope you are quite good \nin doing it.",
            "So my question is for Monica and Paddy.",
            "Please confirm when you finish this part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my plan is to Use as much as possible of no code here.",
            "And for example we can select a source certain record or \nwe can open certain page.",
            "Then I plan to make a button which will run the process, but unfortunately we can only \npass one single data value as argument when running no code parameter processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will be also unique identifier so we can call it realty ID parameter and here its title will be reality id.",
            "Title is \nimportant for user display and code is important for programming.",
            "Okay, and we can set this parameter as input \nparameter.",
            "Input parameter will be designed as read only.",
            "So process expects this data to be set at the beginning of \nthe process when process is called and it's not expected to be changed it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhat we will do with this id, I will use a bit of no code tools.",
            "Read read data item carefully placing it on my diagram.",
            "You see there is a special display when you put it properly.",
            "Okay, my read data item will be used to get ID of type and \noffer type.",
            "So read first record of separate selection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis filter will be enough to make read data to select just single record from my database and we can name it read \nreality.",
            "Read reality will be its title and it will be also shown here.",
            "In general, it's good idea to provide corresponding \ntitles for all of your items and no need to sort if you have just one record and reading all columns.",
            "I do not \nrecommend you to use this option."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe are interested in type and offer type.",
            "So originally we expect to get only ID of the certain reality record.",
            "Then we \nwill look into database to get its type and offer type and then we will use read data item to get such type and offer \ntype.",
            "Once we obtain it when process is started, results of such data records will be saved somewhere inside of this \nread data item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we will use getting data from read data into process level parameters and we can do it easily with formula.",
            "Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id.",
            "So parameter target parameter is offer type ID and form of value takes data \nfrom process elements.",
            "Read data offer type double click and then we have this macro save it.",
            "That's how we save \nthis offer type ID here this item.",
            "We can call it calculate average price or calculate AVG price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if anything should be shown or explained, tell me please if it's not clear what we are doing also please ask thanks, \nBetty.",
            "Thanks Monica.",
            "If you have any questions, don't.",
            "Don't be shy, don't hesitate to ask.",
            "I'm here to help you \nunderstand that listening and doing examples at the same time, it's really harder than just listening."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo Monica, if any assistance needed, just tell me that we know.",
            "Now.",
            "You see, I saved my process and I did not \nexplain what is happening here.",
            "So when I saved it system.",
            "Oh, thank you, Monica."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou saw dotnet Xeno you see.",
            "So here we have parts of.",
            "NET core framework which is used for creation and it's \ncompiling our assembly in a dot NET library.",
            "As a result, we extract expect to get set of DLLs and our package is set \nto be compiled as a separate assembly.",
            "Let me explain now, probably I will be not happy."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you see our realty package has initial setting compiled into a separate smart.",
            "This option means that our\n\n--- Page 239 ---\n\ncontents that we did design in our.",
            "Oh Monica, you have to leave.",
            "Thank you.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we have method inside of it and you can see oh, this method is a constructor.",
            "Okay, not so interesting.",
            "This \nmethod is implementation of our script task.",
            "As we did not name our script task into something useful, then this \nscript task has named Script Task 1.",
            "Let me show you our process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code.",
            "But you may just trust me that finally this code includes business logic and our class stuff here.",
            "Okay, so \nfinally we compiled our solution.",
            "It turned out into a DLL saved on disk.",
            "This DLL is used as part of our application \nwebsite."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have this set of C files and bin folder here turns into this DLL.",
            "So now you see 11 megabytes of executable \ncode, which is quite a lot.",
            "And this is result of compilation of big number of base product packages that finally form \nthis dll.",
            "So recompilation of such DLL takes much longer, probably three or four times longer than compiling of \nseparate assembly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, I understand this idea, but I Do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value.",
            "So possibly we \ncan do this.",
            "You can try.",
            "And each time when your read data changes or it gets new results, your parameters should \nhave corresponding mapped values from read data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWith this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed.",
            "And so I think that our example will lack obviousness and lack visibility of what is going \non.",
            "And is it more secure to use formula?",
            "Oh, I think it's the same.",
            "So it should work when you map parameter \ndirectly, but mapping parameter directly."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a quick question about the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDLLs, if that's okay.",
            "I do."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs it possible when we're creating them this way that we can call other DLLs maybe outside of this package?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, we can.",
            "Sure it's possible.",
            "Let me show you.",
            "We have also process level methods."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this will be normally compiled and executed.",
            "So it's quite common thing how you can add other libraries and \nnamespaces with usings and these usings will form into Let me show you pkg configuration pkg Then your package, \nthen your source automatically generated source.",
            "Here you can see on this table standard set of usings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in real life when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally.",
            "Please note if your system is saved in a state, that means you \nhave compilation errors.",
            "You will not be able to apply any changes in compilable area until you fully fix your issue \nwith compilation.",
            "So it's better and it's like strong advice for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors.",
            "So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully.",
            "So we already have some part of our process which finally performs some \ncalculation.",
            "We can register our process at our section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more.",
            "So \nthis is our page design.",
            "My plan is to run my process by a button, but I predict that I will have a bit more different \nactions, so possibly I can use a button with sub menu.",
            "Let me show you how we can do this.",
            "For example, we can \nPut a button somewhere here, modify its size, style and title like actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price.",
            "And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument.",
            "This is good for us.",
            "And also we have new mode which appeared recently the selected records in list it \nwill get list argument."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff.",
            "So realty will be recipient of our ID of currently edited record.",
            "And as you can see this is a no code \nsetting so it doesn't require any special coding for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do.",
            "Let's go back to actions list and we can check how it \nworks.",
            "So action will be always available.",
            "We can just save this page.",
            "Also in recent version we had an unique option \nto run processes by for list for selected records in the list."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's make one more bulk action like cultivate average price Our action will be again run process where.",
            "Oh, it's my \nfault, I do it incorrectly.",
            "Sorry for this.",
            "Not.",
            "Not this Way."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's just start to test it.",
            "So we can close the editor.",
            "You can also close this one.",
            "Maybe let's reload just to fight with \nany possible occasion of browser cache.",
            "So let's calculate something for houses for sale."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSort by date of start.",
            "Read set formulas, calculation finish.",
            "It looks like everything went correctly here.",
            "We do not \nknow exact values, exact numbers.",
            "We will study debugging of it tomorrow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so this one is our list Selected data Calculate average price successfully started.",
            "I expect to run only one \ninstance of a process here.",
            "Yes, it was correctly started seconds ago.",
            "We can see all the steps were done.",
            "We can \nalso see execution diagram which will show us these steps executed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations.",
            "I just wanted you to see how we can run this calculation for \nmultiple scenarios.",
            "For example, houses for sale, houses for rental and apartments for sale.",
            "We have three selected \nrecords.",
            "We can run this process and I expect to run three instances of processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see start and end date is status.",
            "We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance.",
            "So today's session is over.",
            "The most interesting part will be tomorrow when we \nwill run this process and display some data and also how we will debug this process.",
            "Thank you very much for your \ntoday attention and education case."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a quick question, if that's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, yes, please."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt's just about business processes.",
            "So at the moment we're tying them to.",
            "We're binding them to buttons."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's possible, sure.",
            "But I try to keep it simple and use it as possible of no code.",
            "That's perfect."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI understand."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI'm just curious manually.",
            "But yes.",
            "Later I will show you how we can trust trigger some business logic that will start \naccording to data change.",
            "So we will do data change and for example insert of new reality.",
            "And then we can run \nsome business process that will start only in certain conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can do it in much more complicated way and trying to keep it simple.",
            "Because we are studying."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 244 ---\n\nThanks a million."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you.",
            "See you soon.",
            "See you tomorrow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nForeign number seven and today we will continue study of our server side of creation and we will continue to do our \ndevelopment.",
            "And let me show you where we finished at during our last yesterday's example.",
            "So we worked with our \nFreedom UI package.",
            "We made business process to make some calculations and we tried to.",
            "So we used a \ncombination of no code items and coded stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProcess Library on the top position here.",
            "This is a special section also available in Studio Workplace.",
            "Process \nLibrary we have a lot of existing designed processes for base product and also we can create our own processes.",
            "Process library has some advantages in comparison with just opening diagram from configuration section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this tracing will help us to keep parameters values.",
            "We will be able to check how parameters are changed \nthrough process steps.",
            "And in general this is really helpful in case if you investigate why your process is not working \nas expected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur process is active and it's also possible to deactivate it.",
            "So if you don't like some process, for example you have \nsome base product functionality that you really don't like, you want to stop it, you can deactivate any process you \nhave in your system.",
            "This process will not be able to start regardless of the way how you expect it to start with a \nstart signal or with the Start simple event."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut while you are developing it will be not ready for end users and you still want to save some intermediate progress.",
            "Once you start to develop version two, you still keep version one as actual.",
            "Version two, for example will be under \nconstruction.",
            "And once you realize that version two is okay, it's ready.",
            "Then when you save a process you can make, \nyou can run an action set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo managing of processes versions is good if you develop directly on production, but if you have a separate \ndeveloper environment, if you have separate test environment and so on, it probably will additional difficulties for \nyou.",
            "And that's why I prefer not to enable this versioning or processes.",
            "And each time when system asks me to save \na new version for process, I usually reject and overwrite existing version."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou should take care and save some items as exported metadata here, then recover it.",
            "So it's something that looks \nlike unnecessary difficulty.",
            "And it's better to avoid if you have a standard transition of your solution from developer to \ntest and to production.",
            "So I recommend you to keep your version only one single version.",
            "It will be easier for you to \nhave to control all your situations with your business processes, but it's up to you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd compared to what functions and what features it shows us.",
            "So usually we sacrifice a bit of performance here \nand enable this trace in case.",
            "So it really happens.",
            "Helps in case if we need to debug our process and to see how \neach step was executed.",
            "And to see process parameter values at each step."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTrace data can be extremely helpful because it helps us to see our input parameter data which we had at the \nbeginning of the process.",
            "Then we have parameter values of selected item.",
            "And finally, when we will move on.",
            "Unfortunately, not all of the items keep such trace and allow us to see it a bit later.",
            "I will show you how to see final \ntrace data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's display duration in milliseconds.",
            "This works good for system actions.",
            "And milliseconds are perfect for this.",
            "And also we can display the same duration, but in minutes.",
            "It will be useful in case of debugging, in case of some \nuser actions used and some display messages shown."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 247 ---\n\nAnd also we can set duration in minutes just to see some processes which were executed.",
            "Quite slow.",
            "So.",
            "So now \nyou can see that we have total 130 and we have some items and you should be ready that it will never match."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can see what items are fast and what items are slow in this list.",
            "Even in case of such numbers will be not \nreally representative.",
            "And our total process execution is a bit more than 130 milliseconds.",
            "So it looks like 100 \nmilliseconds were spent on process start and finish.",
            "But this is in general which will give you general understanding \nif the process is fast or not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see second execution in even though it processed more records, but it was faster because of so called \nwarm up effect.",
            "First time when you start process system takes a lot of resources to deploy process engine service \nin memory to organize and allocate all necessary class instances.",
            "So prepare everything to work with processes \nnext time when you start a process system uses a lot of allocated classes and a lot of allocated objects in memory.",
            "So it takes much less time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you still see that formulas are quite fast and takes almost no time.",
            "So that's how you can analyze performance \nof your processes.",
            "And you may think that it looks like everything is very good.",
            "So like 10 milliseconds, 15 \nmilliseconds, even overall hundreds of milliseconds is very good time.",
            "Yes, I agree for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will exactly and easily and clearly see what items take the most of system resources and you may think of how \nto improve it.",
            "Okay, so that's how you can in general check your process execution and analyze its speed.",
            "But now \nwe will come back to our code.",
            "So we are interested in real debugging of this code.",
            "So we need to see how the C \nSharp code is executed line by line and happily so we will be able to do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt is generated by creatio and then used by compilation.",
            "So this class is saved on disk.",
            "You probably think of oh, we \nhave C file.",
            "Possibly we can edit it.",
            "Unfortunately not here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere, this is Microsoft Visual Studio.",
            "I installed it recently.",
            "It's a community edition and 2022.",
            "So this is community \n2022 version.",
            "You can install it almost for free from Microsoft website and download."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAfter you install Microsoft Visual Studio Community Edition, you need to perform some settings into it.",
            "If you do not \nperform such settings, if you skip this step, you will not be able to debug.",
            "Your breakpoints will not work.",
            "Let me \nshow you Tools options here.",
            "Visual Studio usually hangs for some time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is important.",
            "Just my code was originally on.",
            "It's recommended to keep it on.",
            "But unfortunately Edit and \nContinue is not supported.",
            "So we can shut it off and so we can turn it off."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is about development tools external IDE basics.",
            "Scroll down till we find Visual Studio screenshots here and \ncopy links.",
            "So now you see Suppress Git Optimization module Wallet must be on the most critical setting that you \nmust do if you want to debug with Visual Studio.",
            "Okay, the corresponding link is in your chat.",
            "Okay, looks like we did \neverything that we need."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 249 ---\n\nOf course we will not modify it, we only open it.",
            "Visual Studio will create automatically generated solution for this.",
            "It's okay, we can go to its inner code and put breakpoint in order to stop execution of our code at this point, at this \npart, when we will finally run to this line.",
            "But now it's very tricky ways because as you can see, we only made it \nbreakpoint.",
            "But we need to attach to our worker process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is the way how you can select the proper worker process.",
            "W3WP .",
            "This is your worker process from IIS and of \ncourse we have to select it.",
            "And if you don't see it, you may try to show processes from all users.",
            "Here you will see \nmuch more processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to restart application button.",
            "This button appears as a result of installation of maintenance tools from \nMarketplace.",
            "Okay, we'll be restarting.",
            "Great, let's continue.",
            "It takes just 10 seconds to restart."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we will run corresponding business process.",
            "Okay, let's calculate average for apartments for sale.",
            "We have two \ndifferent departments here.",
            "Calculate price and what.",
            "Let me check process log."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause you need access to file system, you need Visual Studio to attach to your worker process.",
            "So this type of \ndebugging can only be performed in local environment conditions.",
            "Unfortunately when you work in cloud conditions, \nyou will not be able to do this kind of debugging.",
            "Okay, so let's start.",
            "We can run lines one after another with the \ncommand F10 step over."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 250 ---\n\nNow you see SQL text changed.",
            "We can view it.",
            "Here is our actual SQL text which will be running in the database.",
            "So \nthis is important possibility for you.",
            "If you make some more complicated scripts, more complex filters, maybe some \nparameters that you don't know how to work with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we run the most important line in this code.",
            "This is for getting collection data.",
            "You can see that we have \ncollection number, collection records number two.",
            "We have two records there.",
            "So let's go to start our counters run \ncycle for our data records so we have only two apartments for sale."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me spend a minute on this C Sharp script task has options to inform process engine about is it successful \nexecution or not?",
            "In case if your script task finishes with return true, it means that process engine is ready to \nexecute next step immediately and no errors detected.",
            "If you return false, it means you tell to the process engine \nthat your execution experience serious errors.",
            "So you have to stop process execution fully and process will be \nstopped with the error state."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut also it will tell to the client side some exception text.",
            "And that's how you can provide some reason for stopping \nof your process.",
            "So you can throw exceptions with some error message text and user who started process step will \nsee this error message.",
            "In our case everything is okay.",
            "Process executed normally."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd as you can see, our read data executed more or less according to expectations.",
            "But our coded part took \nenormous time of six minutes because of our debugging session.",
            "So you can check what steps take too much and \nyou can think of how to improve it.",
            "In my case, you see, debugging definitely made it longer.",
            "But it's just our, let's say \ndesign and development attempts in real life it will be not so slow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you may ask about is it possible to debug no code items?",
            "Unfortunately no.",
            "And they will just execute it without \nany stops.",
            "But.",
            "But if you want to intentionally stop your process at some step in order to investigate status \nparameters, variables and so on, you can additional temporary items into your process that will display some data\n\n--- Page 251 ---\n\nusing any kind of show message, any kind of messaging like pre configured page or automatic auto generated page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh yeah, it's already finished here.",
            "So just my fault.",
            "Okay, running in, running it again now you see all the decision, all \nexecution goes.",
            "We can see this SQL text conditions parameters are saved separately.",
            "Selecting data again we have \ntwo records but different records."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can see that all of your execution or your processes is tracked and also you can handle and check process \nparameters.",
            "Unfortunately this trace data is not shown for any item.",
            "Personally I have a question why?",
            "But possibly \nit's somehow connected with the type of executed item.",
            "And we still have good enough options to look at parameter \ndata and to check it out during debugging."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now we have process which only calculates data and saves its results into page into process parameters.",
            "We can \nuse some items to make a good looking display of such data and I plan to user actions for this.",
            "Meanwhile, we \nalready do not need to debug.",
            "So it's better to avoid unnecessary system resources spending.",
            "As you can see, 1.3 \ngigabyte of memory was allocated and for my app and visual studio can track it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay.",
            "The most important is not to change the code in C sharp part.",
            "In this case, system will allow us to save our \nprocess without any questions and without asking to recompile only if you change code here.",
            "System will detect this \nand ask you to perform compilation again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo open edit page can only show you pages connected with existing objects and pre configured page can show you \nany random page designed in your system.",
            "So let's use this option reconfigure a page and carefully put it on the \ndiagram.",
            "Pre configured page is designed to show some pages for user according to process execution.",
            "Obviously \nthis page will appear at user side.",
            "But you need to remember that in general business process is a server side \nfunctionality."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI think one of the most recommended features for this task.",
            "Pre configured page will show some page for user at \nuser browser which page to open.",
            "We don't have any suitable.",
            "We have a lot of out of the box pages, but they are not \nsuitable for our task.",
            "And we want to display average price decimal value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course this is too big page for our purpose.",
            "But this is a simple example.",
            "In real life you may need a process \nwhich will ask user about some parameters, about some arguments.",
            "And in general business scenario it may \nhappen that you will have quite a big list of some data for input.",
            "So in general you can create pages with unlimited \ncomplexity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd as this is an output value, I do not want user to modify this.",
            "So I'll make it read only.",
            "It's quite obvious.",
            "You see \nit's no code settings, so very easy to do.",
            "Next parameter that I want to use will be a text."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see very rich possibilities to build your page.",
            "In my case, SQL text will be also read only because this is only for \ndata output.",
            "So my SQL text is for data output.",
            "That's.",
            "That's it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will use something like average price output page and we can also use the same title just to make it good \nlooking at our configuration section.",
            "So it will be named and coded properly.",
            "Save it again.",
            "So now you see our page \nis ready well named, we can save it again, saved correctly, close it and then we can use this page.",
            "As you can see it \nstill shows us a bit old code, but we can probably select this one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 253 ---\n\nThere are other options like someone's manager or a role some member from a role.",
            "In my case, user is like simple \nand easy because server side will detect exact user session based on the contact value we provide here.",
            "So here we \nhave to provide a contact of a user who we plan to show this page for.",
            "And current user contact is very like frequent \ntypical value here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, show page automatically means that once this item will be executed page appears immediately you can hide \nit.",
            "So do not show page automatically.",
            "In this case, this item will be still pending, so it will still wait for user to start to \nshow it.",
            "And user will see this item in this notification panel in business tasks list.",
            "So user will be able to find the \npending item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's important to understand that when some page is shown for a user as a business process item, then this page \nwill wait for a time user decision.",
            "So page will decide when its work is done.",
            "And in our case we can do it by buttons.",
            "If we do not press any button and we Just switch focus to another section and go on to work with another data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd such options are important to specify how we plan to continue our execution.",
            "Okay, at the end this item has \nparameters page parameters.",
            "We need to load here data from our process.",
            "We will use parameters mapping here \nand it's very easy.",
            "We will just click on this lightning button, select process parameter, select corresponding \nparameter and click select."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is important for you to understand that data will go from process parameters to our page parameters.",
            "Now \nwe set SQL text parameter and then average price for the page.",
            "We'll take its value from corresponding average price \nof a process.",
            "So in process parameters we have this select and this is called parameters mapping.",
            "And when this \nprocess item start, according to this mapping, SQL text will load data from SQL text parameter and average price \nUSD will load data from corresponding average price process parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you do not save, your progress is only in your browser and will not work until you save it.",
            "So it's obvious I think.",
            "--- Page 254 ---\n\nOkay, so now we made this item to display some results.",
            "If you work in classic UI usually so it's mandatory to reload \nthe page in Freedom UI sometimes it's not mandatory, but I just want to make sure that everything works well.",
            "That's \nwhy I just reload the page for sure."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you didn't finish this page, you went to another section, you started to work with different data.",
            "You almost forgot \nabout your process.",
            "But if you go here into notification panel and find business process tasks list here you will see \npending items.",
            "You will see items that are waiting for your response and they will be hanging here until you finally \nfinish them.",
            "So that's how system reminds you about items that current users should do."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt took 1.4 minutes and now you see that most of the time system spent on showing page and waiting for user \nresponse.",
            "Such analyzing of duration may help you to understand how actually your process is used.",
            "Where there \nare some tricky steps which make users to work longer to spend more time.",
            "So it will be helpful for you to \nunderstand your business and your level of automation and you will finally see what can be improved here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere we have calculated offer type and so we have type and offer type input data is here and as a result we have \naverage price and we have SQL text for debugging purpose.",
            "In case if you have any questions feel free to ask \nbecause we almost finished this step and now you see we made a process which is able to show us some data and \nalso I need to explain you some side effects and the side questions.",
            "So for example user started our process but \nthen okay, process can be quite long and the user had previous steps there."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUser can easily go back to the process by looking at notification panel business process tasks show corresponding \npage, save it and that's how the page will be fixed.",
            "I mean the process will be correctly finished.",
            "And you see now \nuser has no items to execute.",
            "It's possible to include many different users into one business process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo user can look at any time even if user accidentally closed the page at all.",
            "User can go anytime here and see what \nprocesses are waiting for the feedback.",
            "So this is quite efficient way of making your process interactive, making your \nprocess able to input some complex data to display some intermediate or finishing results of calculation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have send email item which will show you some email text before sending it and approval tool which can be \nhelpful in case if you need to automate some kind of approval logic.",
            "When one user creates something and needs \nconfirmation from another user or even set of users that everything is okay.",
            "And usually it's used for something \nwhich makes commercial importance like contracts, invoices or some other types of documents where some other \npeople must confirm that everything is okay in some documents or data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut our sessions are intended for developers.",
            "That's why we focus on coding.",
            "That's why we see how we can get \nparameter values, how we can save them and how finally we can merge this coded development approach with no \ncode stuff which can be designed with no programming.",
            "In case if you have any questions feel free to ask."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you three ways to handle object events.",
            "But before it makes sense to download everything to file \nsystem to commit it to version control.",
            "Because it's our next step that we successfully did.",
            "We will save everything \non disk in case if you have any questions, feel free to ask.",
            "So we save all of the changes we recently did at file \nsystem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have three different ways to handle events at creation objects.",
            "Let me show you free handle handling object \nevents.",
            "First one is very easy.",
            "This is no code solution.",
            "And using business process start signals, I will quickly made \nan example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we insert a new reality record into our data model.",
            "And if we do the such insert, we want to create several realty \nvisits automatically.",
            "Let's imagine we want to do this task.",
            "So once insert happens, we want system to automatically \ncreate some visits for us.",
            "This is possible to do and even with the easiest way of doing this, with the help of start \nsignal, we can do this easily and make it using business process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo go to settings and you see target package is dev classic.",
            "So you should change it for usr realty.",
            "Yes, modify.",
            "Also \nthere is some side effect which I can't easily understand and explain here.",
            "Now you see some strange packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it looks like here we have something artificially created, possibly used for future customizations of some apps, \nbut we don't have it now.",
            "Okay, so we will select only one package here and our code will be USR2 Add Reality Visits \nprocess.",
            "So now you see Auto add realty visits process and you see we have code and title.",
            "Great.",
            "So the main idea \nof handling object events the help of start signal."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTechnically you can use custom programmed signal, but object signal is the most commonly used and we have to \nspecify object which we want to listen for our event handling.",
            "Of course, this is our reality hidden UI object, this one.",
            "And we have only three supported events so far."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut for added and modified it's definitely after add and after modification because when we do selection from the \ndatabase, it shows that data was already added or modified.",
            "So in my case I plan to handle insert event.",
            "So record \nedit and in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you run your process with no background option, it means that from user point of view, insert or update will take \nsome time plus time for running of your process because it will Be started at the same scope at the same thread.",
            "So \nwithout background perceived speed of your solution will be not so perfect."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 257 ---\n\nWe can name this signal realty added which means that once the signal is triggered, it means that some new record \nwas added.",
            "Okay, so we can start the process with the help of signal.",
            "But what we have at the moment of start, \nunfortunately we don't have so much.",
            "We can switch to advanced module advanced settings and we only have one \nsingle parameter unique identifier of record which triggered our signal.",
            "So this record triggered this signal."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo insert a visit we need parent realty and some additional columns.",
            "So let me use add data item which object to \nadd data of course to the visit.",
            "Be able to visit one record.",
            "Okay, and we can specify columns of added visits.",
            "Of \ncourse it will be parent realty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, and visit date and time can be something like current date and time and then we can go to formula.",
            "So for \nexample, we can add some days, add days and let it be just one day forward.",
            "So one day into future from current \nmoment.",
            "This is just a simple example.",
            "We can name it add visit."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you go to realty section, try to copy data, save it, look at it.",
            "Now you see new visit was automatically \nadded.",
            "Automatically added and visit date and time is somewhere in future.",
            "So you see that it works.",
            "We can make \nmany visits as one operation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMonica and possibly Paddy, are you following me today?",
            "Should I make poses for you?",
            "Please confirm if everything \nis okay with speed of our solution.",
            "Thank you Monica.",
            "Okay Adrian."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 258 ---\n\nThis condition will include double click on n parameter then comparison greater than zero.",
            "So if this boolean \nexpression is true, then my conditional flow will work and will be used here otherwise.",
            "So this is another sequence \nflow.",
            "I will turn it into default flow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo while n is greater than zero, we go back, we do one more insert and then we go back to this formula and \ndecrease N Again here we have N equals to zero.",
            "This is just a title, but it will show us that it's the end.",
            "Here it will be \nlike finish item.",
            "Okay?",
            "And as you can see, it's very easy process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOnce I save it, this process is already actual.",
            "So I do not need to start it with a special button.",
            "Then I will go and \ncheck it again.",
            "For example, we have an apartment in Florida.",
            "We have no details, okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo execution diagram sometimes may help you to understand how exactly your process started, how it worked.",
            "And \nthis can be helpful if you go to process work details.",
            "You see we add visits, add parameter and again if we enable \ntrace, then we will see all the values of the parameters at each step of our process.",
            "You can also see duration in \nmilliseconds.",
            "And you can analyze and understand what is the slowest part of your process, what is the fastest part, \nwhere you spend the most of resources."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen I say about low speed, you see point two second.",
            "It means 200 millisecond for execution.",
            "It's probably not so \nmuch, but if you work with multiple records.",
            "If your task is to process data with as fast as possible way.",
            "So having \nsuch time spent on it probably will be not the perfect, not the best idea."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd once you start to use it, for example before insert you see system generated some code, we can copy it.",
            "Then \nwe can look at open process button.",
            "So it's important to mention that any creatio object has its own unique \nindividual embedded process.",
            "This embedded process is designed only for one process purpose only to handle\n\n--- Page 259 ---\n\nobject events."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo with your current entity with its data row, you can use entity methods for it.",
            "But there is a very strong \ndisadvantage of using this approach in general, and this disadvantage is quite serious.",
            "This type of event handling \ndoes not work in packages compiled as separate assembly, simply speaking for all.",
            "So for any modern package \nwhere this option is turned on in order to make fast compilation, your event handling with embedded process will not \nwork.",
            "And it only works in old styled packages where you have no compiling into separate assembly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCrtui let's check or maybe base something.",
            "CRT core base package.",
            "Yes, CRT core base this one Contact object if \nwe open it, as you remember Creature has open source for base product configuration.",
            "We can see events."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSorry, quite obvious.",
            "So methods include Decoration of the class fully and including methods that you need here.",
            "And the using can be also typed manually if you want.",
            "But this stuff works only in this package because we have \nCRT core base package which is not compiled a separate assembly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe answer is third answer is Object events layer the most, let's say the most modern and like the most \nrecommended way to handle object events.",
            "It also still needs coding.",
            "So it means we will have a compiled code and \nit has a bit less events.",
            "Only eight supported events, but it is the most flexible and I will explain why.",
            "So now you will \nsee this example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also we have very interesting and unusual event called saving before and after save.",
            "But what is save?",
            "It's \ninteresting that save was used in order to make the same handler if you want to organize the same logic for adding \ndata and for updating data record.",
            "So saving is triggered in case of insert and in case of update.",
            "And here we can \nsee the exact order of execution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you.",
            "So here we have a set of events for creating record, set of events for updating and obviously for delete.",
            "Thank you, thank you.",
            "So eight supported events and I told you that it's very flexible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can listen any existing system object, no matter how far it is developed inside of our package hierarchy.",
            "This \napproach does not care about package dependencies at all.",
            "The only condition for it to work is presence of \ncorresponding object at our environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd it's important to mention that this kind of event handling will be performed as well at server side.",
            "So no matter \nhow technically this insert will happen.",
            "Like we add data from user interface page or we add data with the help of \nbusiness process, or we add data with the help of API calls, processing it at server side will trigger this event \nhandling.",
            "So this event handling is inevitable for server side and there is no way how you can suppress such event \nprocessing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo okay, it's not correct too much.",
            "Yeah, you see we have some limitation here.",
            "Okay, what about this?",
            "Okay, looks \ngood.",
            "So here you see our commission, our huge price with 9000 of three dawns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's do this, select our package add source code.",
            "This is a special type of item which is designed to provide a \npure source of a C Sharp which we can develop inside of creature.",
            "Or we can create it separately using powerful \nexternal editors.",
            "But creating of C source should be done from this editor.",
            "Adrian is asking when do we use the \nserver side validation instead of client side?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 261 ---\n\nOr we can make a hack now trying to edit data in our list utilizing our editable list features.",
            "And when you see that if \nwe have no any event handling and we did not care about the handle, by the way, we don't have any no code options \nso far to make a custom handling of list edit events.",
            "So now you see we easily bypassed this.",
            "So I just wanted to say \nthat client side validation is good, but it's not perfect."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is only for page and it's limited on the page.",
            "So if data comes some other way not from your page.",
            "So your \nvalidation will not work if you do it in client side.",
            "Server side is much more reliable.",
            "It will work anytime when entity \ndata model is used."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI'm too lazy to compose a different title, so I will make the same title because it's technical thing.",
            "No one will be \nselecting it from any list.",
            "So let it be my package no description because I'm lazy again.",
            "And we have this example \nnow you see all we have here is list.",
            "So just small set of properties and no localizable string and here we will have C \nSharp code here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will finish probably in 10 minutes, so it's not so hard.",
            "Thank you for your time.",
            "You will watch videos.",
            "So I will \nshow you how to integrate it with Visual Studio because it's much more efficient than typing your code manually \nhere.",
            "So we can save our new created source code schema source code item into our package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's why having a friendly name is important because it will be good looking at our disk and also at our version \ncontrol.",
            "So here we see some bit of metadata.",
            "We do not care about it too much, but a real T events CS file.",
            "It's a \npure C Sharp code that we can develop into and we can develop with Visual Studio.",
            "So let me show you how to use \nVisual Studio for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo inside of a package folder we have files and we have csproj file.",
            "This project file was generated by creatio.",
            "It has \nseveral sections of libraries with references which makes it possible to add the custom libraries if you want to \ninclude them into this project.",
            "But the most important is that this csproj file is used to get your compiled library of\n\n--- Page 262 ---\n\nyour package.",
            "So what you need to know that all necessary for your Visual Studio to run and to work with your code \nis already created by creation by its own."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then I have to open this C Sharp project file CSProj open it.",
            "Studio will think for a couple of seconds, but it will be \nstill very quick.",
            "And if you want to do the same with a package which is not compiled as separate assembly, you \nhave to look at special part in terms of configuration.",
            "SLN solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if we can find this C sharp file C sharp code of course, I already created an example, it will not take too much \ntime.",
            "Entity event listener so my code is ready.",
            "I only have to copy it for you into chat.",
            "You'll be able to download chat \nmessages along with video files."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is quite powerful editor with intellisense and Autocomplete we have to perform a class with couple of usings \nand inside of some namespace.",
            "There is a tradition to keep your configuration code into terrasoft configuration \nnamespace.",
            "But in general you can decide yourself and you can create and support your own namespaces if you \nwant.",
            "So here we have terracelot configuration just because of tradition using some system namespaces."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this line number seven is very important because it shows what object we plan to listen.",
            "Very important.",
            "We can \neasily make a mistake here.",
            "If we do, then nothing will happen and we will have no listening at all.",
            "You have to \nspecify name of existing object here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAccording to our documentation we have some arguments here and for before events we have reference to our data \nrecord which is an instance of an entity class and also we have some before arguments.",
            "Such arguments are quite \ninteresting and important."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo for example, if user tries to add new data and provides too big price then system says okay, no error messages.",
            "But when user will start to check it will turn out that corresponding record was not inserted or updated.",
            "So this \nsilence sometimes is not so desired and we can make our operation like with some noise and it will be quite rude \nloud noise with throwing exception."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe already saved our code, open it from embedded editor and we can create localizable strings and our code is \nvalues too big.",
            "We use this localizable code and our localizable text message is here.",
            "Prices more than certain limit \nare not allowed.",
            "This text helps us to get localizable string from properties of this schema.",
            "Then we use String \nformat to replace some pattern with a certain number with a certain string and then we show this message for user."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd user will see that operation was not done and there is a reason why it failed.",
            "So we will see this error message.",
            "Okay, sorry, not ready.",
            "Just a second.",
            "It okay, so we can save our C sharp source code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can compile our package the first time we have to manually to do this our package and compile action \ncompilation takes some time and first time probably it will take maybe 30 or 40 seconds.",
            "Next time for the same \npackage it may take just 10 or 20 seconds.",
            "So it's quite good performance and it will be way faster than compile all \nof your system.",
            "So now you can see it probably took 30 or 40 seconds to compile and it finished with no mistakes, \nno errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have definitely greater than 1 billion.",
            "So our logic, our comparison condition here checks.",
            "I did not explain how \nit works actually.",
            "So sender is an argument object.",
            "We can run some parent implementation of the same handler if \nnecessary."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 264 ---\n\nSo it will show me some error message now because can also enable browser developer console control shift I in \norder to make so and go to network tab in order to see all text or requests that will happen here.",
            "So this value is \ndefinitely greater than 1 billion.",
            "So let's try to create new record.",
            "Now you see that insert failed prices more than 1 \nbillion are not allowed.",
            "And you see that insert query finally finished with error 500 internal server error."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEverything is quite obvious that something is wrong.",
            "So we can fix our data.",
            "Let's make it not so big like this.",
            "When \nwe save it's okay.",
            "And you see that insert query now executed successfully."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see we cancel such attempt only if we will edit it in a value that is below our limit.",
            "Then we can save it and \nupdate will work normally.",
            "Data is processed normally and it works efficiently.",
            "The same business logic will work in \ncase if insert is performed from business process or if insert is performed with the help of API calls.",
            "We will study \nAPI calls and integration techniques."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave everything to file system because we had changes at our localizable strings business processes.",
            "So save \neverything and then committed to version control.",
            "Thank you very much for your time.",
            "Our session is over.",
            "In case if \nyou have any questions, feel free to ask."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number eight of our development on Creature Platform Guided Learning and we will continue to \nwork with server side features and functionality.",
            "So today we will focus on the web services, making our own \nclasses at creation server side and make it work at the web service, write C Sharp code and practice with calling of \nweb services from Creature client side and from third party applications.",
            "So today is quite big plan.",
            "I hope we will \nhave enough time for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when you look at your network tab, for example, when you open any record page, you see plenty of different web \nservice requests, different HTTP calls that were executed from server side.",
            "So from client side to the server side \nwith different request body with different responses and in general all our website operation is set of different \nqueries, different HTTP requests and then getting some responses at client side.",
            "Creature has a lot of embedded out \nof the box web services.",
            "Some of them are system web services, some of them are developed at configuration."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo client side definitely is not the place where you would like to perform some sensitive data operations or \ncalculations.",
            "So server side is a very natural place to do some complicated business logic like doing some \ncalculations, data processing, file processing and so on.",
            "So web services can be created in configuration and if \nyou're interested you can look at existing examples."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUsually it's written in C Sharp and today I plan to explain how you can create your own web service, how you can \nmake it run and how it can be useful for you.",
            "So we have a lot of existing examples, but the most important you need \nto remember that web service is a special piece of functionality that was specially designed to be called from client \nside."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general web service is something that we can call from client side which works at server side, usually gets \nsome argument data, usually returns some result data and also makes some useful work etc.",
            "Side and that's why we \nneed it.",
            "So it's a very common functionality to use to run different business logic.",
            "We have a lot of standard based \nplatform web services like web services to get data like this one.",
            "This web service is called data service."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIs it a freedom user interface or if it's a classic UI so you can use web services?",
            "Absolutely the same because server \nside is on the single item and requests and payload and response data will be parsed and will be processed \nabsolutely the same way.",
            "So we will study how to make our own web services."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you randomly select then you probably will face unnecessary complex examples which will be hard to use it for \ntraining purpose for your study.",
            "So that's why I recommend you to use couple of very useful and simple examples.",
            "First one is a cryptographic service located in CRT base package.",
            "So it's a base platform item and it will be found in \nany creatio system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it means that contents of this package will be compiled in all terasoft configuration sln and you will have terse of \nconfiguration DLL as A result.",
            "Okay, so this is a simple C Sharp code as I told you at the beginning, just expected but \nthat creation developer has some experience in C, in JavaScript and also in SQL scripting.",
            "So here your C Sharp \nknowledge will be requested to be important."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe use set of standard base platform and system namespaces that are necessary to declare our class to use some \nof functions that we need inside of it.",
            "And mainly all these stuff is made possible thanks to system service model \nnamespace and I need to say that creatio uses.",
            "NET framework backed tools to create web services based on WCF \nWindows Communication foundation web services.",
            "So there are several conditions how we can make such a WCF \nweb service."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then inside of this class you should make at least one method to turn it into endpoint something that we can \ncall and this endpoint must be decorated method.",
            "This method must be decorated with operation contract attribute \nand some additional web invoke attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 267 ---\n\nSo after compilation this web service will be fully operational and it will be ready for calls that will be done from \nclient side.",
            "It could be done from creation client side or even from third party applications client side.",
            "We will \ndemonstrate how you can use it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we will have some business logic functionality that also can include access to database, operating with some \nfiles, running other web services and so on.",
            "So we can use some useful method body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it can happen that you will need more complicated arguments like structures like instance of classes, objects \nand so on, and you may need to return some complex responses and complex result data.",
            "As example, you can see \nwhen we run some query at our creation list page, you see some request and response which usually includes a lot \nof properties, a lot of different values.",
            "Definitely for such complicated request body, we need some classes and we \nneed to organize it in more or less structured way."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhy I'm saying about serializing because server side will be a dll, a library with a runtime code which will be capable \nto operate with some data with a certain data type.",
            "When client side calls a web service, it usually packs so parses, \nmaybe encodes your arguments into a string.",
            "Here you can see an example of a big JSON string."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe same task will happen when server side already finished execution of a method and needs to return some data.",
            "So server side returned data also represents some class with some properties, and then it's necessary to serialize it \nback into a string because originally HTTP query will transport some string for you as result.",
            "So serializing and \ndeserializing is important part of any web service call.",
            "And in case if your data is complex so system will fail to \ndeserialize it without additional information, you should use special classes such as data classes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nVisa data service web service is a good example of a web service which is designed to get some arguments and\n\n--- Page 268 ---\n\nreturn some results using complex data type.",
            "In this example, Request options is a complex argument that is \nprovided as an argument for your method."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if you need it, so you have a lot of examples how to do this.",
            "You have samples in Creature, you can easily open it \nand find it.",
            "So don't forget about this Visa data service a bit more complicated example, so it will really work well for \nyou.",
            "Why you need such examples?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow I will show you how to make our own web service.",
            "How to use Visual Studio for its development, to make it \nmore efficient and to make possible development of complicated functionality with a powerful editor.",
            "So let's do our \nown example and also later I will show you how to run it from Creature side, from Freedom ui, from Classic UI and \nalso from third party application like post one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo having this name well spelled is a good idea in general.",
            "So let's call it realty service and we can make the same \ntitle for this source code item saving our package no description and just apply.",
            "So as you already remember from \nyesterday example with handling object events, C source code item is just a big set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my plan is to create a web service that will work at server side and will be capable to calculate maximum price of \nreality objects filtering them by type and offering type.",
            "This is important because it's not good idea to mix \napartments, houses, parkings and so on.",
            "And also it's a good idea to filter by offer type because it's definitely not \ncorrect to mix rentals and sales.",
            "So the business sense of my web service will be to do some database calculations \nto do some operation with database.",
            "And also it will work as a good example for you how you can use alternative \nways to operate with data without use of object model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can as you can see we have a star here which means not all the items were fully saved on disk.",
            "So let's do this.",
            "Download packages to file system.",
            "This usually is a safe action.",
            "It helps us to get all things right at the database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI strongly recommend you not to modify Anything manually here and C sharp file which we will fill in now with the \nright good looking code.",
            "As usual I prefer to use local environment advantage and one of them is use of file system \nand use of external editors.",
            "So we can use Microsoft Visual Studio.",
            "I'm using Community Edition to operate with this \ncode using external powerful editor."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI already have an example which implements all this logic and that's why probably it makes sense to do it faster.",
            "So \nlet me show you.",
            "Here is my example of code.",
            "It's too big to fit into one zoom message in chat.",
            "So we try to fix it in \ntwo messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is a tradition of creature developers to name classes which represent web services with the help of service \nsuffix.",
            "So if you do something when you develop C sharp class for the service of it will be do something service.",
            "And \nit's quite common tradition.",
            "You may find a lot of examples in base product logic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut thanks to decompilation features of Visual Studio we can see some code from it at least interface part of it.",
            "And \nit has a lot of useful things.",
            "And the most important I think is property that is named user connection.",
            "Let me show \nYou a lot of libraries abstract class service."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you here you can see examples.",
            "So we have HTTP context usually like this, and this works only for.",
            "NET framework version.",
            "But also this code and this application may run in.",
            "NET core conditions in for example Linux \noperating system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now you should remember that inheriting from base service helps to get user connection and helps to get it \ninitialized properly.",
            "When your method started, your user connection property of your class will be already initialized.",
            "This is important also."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general, declaring of support of this interface costs you nothing because you have no methods to implement \nfor it.",
            "But it tells IIS that it can process your web service calls with the fastest possible way.",
            "So in general it is a good \nresult for high load conditions and for situations when you have performance issues at IIS because of multiple calls \nor the same service and not so fast processing inside of these calls and just for better performance."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now I'm searching through C files which include service contract attribute and I will find approximately 200 web \nservices created out of the box in creatio based studio product.",
            "Okay, 157 files and possibly a bit more web services \ninside because one file may include more than one web service, but in general.",
            "Okay, so 157."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so this is only for better performance.",
            "What we have inside we have some method, but probably I have to start \nwith this.",
            "This is a simple method which is just gets no argument, returns some string and is organized as a web \nservice method because of operation contract attribute.",
            "So it tells to WCF that we have to turn this method into \nendpoint and register it at our website."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can create a lot of other methods in your class and some of them maybe will be decorated with operation \ncontract.",
            "If method is decorated with operation contract it will turn into endpoint.",
            "If it's if you have just a single \nmethod which has no decoration, it means that it will be just a regular method that can be called by other methods, \nbut not by HTTP query, not an endpoint which is registered at our web server."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne of them is very easy get example so this is just an example of a method which will return us okay string and if it, \nif we get it means that our web service is present Normally compiled and fully operational, this method get max \nprice by type id.",
            "So I decided to name this method like this will go to the database and search for realty records with \ncorresponding type offer type and also I plan to make it more universal and to call my service from different \nsections."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why I will use the same selection statement to work with different tables inside of my code.",
            "At the \nbeginning it makes sense to make a very simple check of our arguments and if any of them is empty then we will \nreturn minus one."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, we have several arguments, we check it out if they are empty or not and then I will show you another approach \nto get data.",
            "Previously you probably remember we used entity schema query approach to get data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow I will show you another approach to operate with data which will not use data model at all.",
            "So this is alternative \napproach to operate with data, but of course we need to know source table name.",
            "Here entity name is used as table \nname at the database.",
            "Of course we need to know exact column names and also for lookups you need to remember \nthat at database Corresponding columns have id suffix, but @ your object level such columns have no ID suffix."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd as you can see, no ID suffix at column code.",
            "But when you go to the database.",
            "Let's go and check our database \nD1 you can make filter for tables contains USR.",
            "Now we'll have just a little set of tables USR realty columns.",
            "Now you \nwill see the type column as suffix id and you may also notice such suffix ID for offer type, for city, for country and \neven for created by ID and modified by id."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 272 ---\n\nAnd you should expect exactly the same data columns of your tables.",
            "And in general, when you operate with \ndatabase like this, you must go to the database physically to see corresponding table, corresponding columns, just \nto make sure that all your columns that you work with are present and so they represent what you expect from them.",
            "Okay, my case I'm using direct database operation with select statement.",
            "It's also possible to use insert, update, \ndelete and even stored procedure classes which will operate with the database directly without use of object model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can use Visual Studio or Total Commander.",
            "Or in my case I'm using far manager tool inside of JSoft Web folder, \nmaybe even inside of JSOP configuration.",
            "We can use search for all C files where we have for example new select \nclass usage.",
            "We will find more than 200 of examples, maybe even 300 examples, almost 300 examples."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd sometimes you will notice that use of direct database approach gives you More flexibility and more powerful \ntools than using just entity support and using entity schema clearer method.",
            "So depending on your task you can \nchoose proper tool.",
            "And this select class works a bit faster because it doesn't include entity data model, it doesn't \ncreate corresponding instances for working with entities, and in general it consumes less memory.",
            "And I think it will \nwork a bit faster than entity schema query."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also it's important to mention you create class instance and then in order to set it up you use different methods \nlike top method, column method, maybe many times from method makes to run it one time where method is equal \nmethod and a lot of others.",
            "So finally running such methods will configure your class to read corresponding columns \nfrom corresponding tables.",
            "You can use joins, you can use different conditions and types of filters."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt means get one of the three database connection threads from thread pool from connection pool because \nconnection to database is pooled and you have like set of available threads for it.",
            "Then you take it and this is DB \nexecutor reference and then you run your select statement with the chosen DB executor and finally you will get data \nreader.",
            "This data reader holds your data and offers you possibility to process it row by row."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo while read returns you true, you can try to get some data and you can put it somewhere in order to analyze in \nfuture.",
            "So this tool is helpful to get data selection with many columns, as many data rows.",
            "And also you may notice \nsome strange things here and here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's how that's why you need to handle memory yourself.",
            "So when this method was executed, some memory \nwas allocated and in order to properly release it you need to dispose created class instance, you need to dispose the \nSTB executor or you need to use special using operator which will do this dispose automatically when this code \nfinishes its work.",
            "So you need to correctly dispose memory from ensuredb connection and also connect dispose \nmemory after executing reader."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you see 1 gigabyte, so 900 megabyte it's more or less okay, but you may see much more memory up to all of \nyour available virtual memory and one it will come to a certain limit.",
            "IIS will suddenly restart your website and you \nwill not know why this happens.",
            "So it will be very unusual for you.",
            "And the reason is that non allocated so not \ndisposed memory will be leaked and so you have no way how to fix it until you will make this using operator \nprotection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in my example you may notice that we don't have using protection, we just use execute scalar method which is a \ngeneric method and it accepts expected data type of our result.",
            "And execute scalar is useful in case if you plan to \nread only one data row and you expect to read only one column value there.",
            "So execute scalar returns you first row \nand first value of the first column that you select."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can try to see it would possible to decode scalar async probably no, but let's see, you see decompiled stuff DB \nexecutor you see using yes so first using is already used here ensure special DB executor then internal execute \nscanner sync probably here failover execute and somewhere so you probably may find another using here in this \ndecompiled code.",
            "But you can just trust me that execute scalar performs all code correct operation with memory so \nyou do not need to handle and to care here with additional protection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my example here is not only how to organize your web service, but it's also how to operate with the database and \nhow to use alternative data selection approach with some data that we expect to get and return.",
            "I try to make it \nsimple without need to collect many data records with many data columns inside of it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe get this user connection as a property and this property is ready for use when at the moment when our method \nis called so WCF and our base service class makes all that is necessary to initialize user connection at the moment \nwhen our customer runs this HTTP post method.",
            "By the way, we used post because it's very common for creation.",
            "You may find that for example we can search for all sources where we have just get method information."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause this is very traditional, very typical, difficult to create for creation to use post.",
            "It offers us quite comfortable \nway to handle data.",
            "You can serialize almost anything as a post request body.",
            "So post request data, that's why it is \nso comfortable and also it's well protected.",
            "It's better protected with security settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can also see our recent reality service item.",
            "It has all this code already, so it was loaded from the file system and \nwe can compile it.",
            "Compiling package makes collection of all of its sources including automatically generated items \nand like process code.",
            "If process includes C sharp tasks and then it performs compilation of our CS proj C sharp \nproject."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in my case compilation was successful.",
            "And in case if you have compilation error, you will see a big error page \nwith information about lines of code, type of the error and you will be able to look at it.",
            "Even after you close this \npage, you will have a special button in this list compilation error.",
            "So developers tried their best to support you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need to get our browser URL copy go to separate tab paste.",
            "So this is my web server address including zero \napplication alias.",
            "This zero is very important.",
            "Let me remind when we registered our application our website at \ncreation at iis.",
            "So I have a structure of default website which uses port number 80."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn net core we have all the stuff placed in one root folder.",
            "So it's a bit different, but all creature configuration will work \nabsolutely the same.",
            "So we have functions that Return main application URL and for Linux it also returns everything \ncorrectly.",
            "So don't worry if you write something and run it on Windows there is a very high chance but it will also \nnormally work on Linux.",
            "Okay, so let's move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you use URI template your method name may be different.",
            "I mean your code URI will be different.",
            "But in my case \nit's very simple.",
            "I will just use this get example method name.",
            "I'm lucky to have no arguments here so my query will \nbe not so hard to do."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is a very easy and quite practical way to check availability of your web service.",
            "For example, if you have \ncompilation issue your web service will not be hosted at creation web server and your query like this will return you \n404not found.",
            "So it will show you that there is no registered web service with this address.",
            "So in my case it looks \ngood and it was get query which is very easy to get from your browser."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's make a 7 minutes coffee break and then we will move on with calls of our web service.",
            "We will make call of \nweb service from creature page and also I will show you to make how to make it from Freedom UI page, from classic \nUI page and from third party applications.",
            "In case if you have questions please type in your chat and we'll answer so \nlet's make a quick break right now.",
            "So today, now our task will be to call creature service from our client side page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd now we have to write some code at our creature client side in our browser JavaScript in our browser page \nJavaScript part.",
            "So let me show you.",
            "I already had all of the examples.",
            "It will not take too much time today.",
            "So I will \nshow you how we can call the web service from creation client side."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut okay, I will recover closed page.",
            "This one go to front page.",
            "Okay, this one.",
            "Let me show you what we need first.",
            "So we need first some button that will start our code and then we will implement it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo and then we have to save this.",
            "Our menu item will appear in actions menu and then we go to its code part.",
            "So \nlet's go to open source code.",
            "You can close this editor so not to accidentally resave anything.",
            "Let's search for our \nmax price item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this code will be quite big.",
            "I will copy it into parts for you.",
            "But first of all let's pay attention on the definition of our \nmodule.",
            "I copied it for you, so you'll be able to reproduce the same in this line where we define our module, we \nstarted to request one more additional module named Creature Dev Kit command."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if you forget about line number one here, your next code samples will not work because you have no these utility \nmodules.",
            "Okay, we have this SDK now and it's time to implement our handler for our menu item.",
            "I will copy and paste \nit in parts for you because Zoom has limitations on size of code that is possible.",
            "So size of chat messages.",
            "Okay, \nthree parts."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this handler has its own request property.",
            "So it's like handler name.",
            "And you see, there is a tradition to name \nyour own custom handlers with usr Prefix and base product handlers are usually provided with crt.",
            "Okay, we can \nname it as we wish.",
            "Then we have a handler implementation asynchronous function."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we plan to get type from our page, but when we operate with it, we will get an object in JavaScript.",
            "This object \nwill include several properties and if we need ID of selected data record we will look at value property.",
            "If you need to \nlook at display text of a lookup value like this apartment, you have to operate with display value property of this \nobject obtained from a lookup column.",
            "I also need to make sure that I'm using correct names here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nType represents this attribute name so I have to copy it, find my handler and paste it this one so PDS usr type and \nthere is a unique name for this attribute.",
            "So that's how we will get with await operator we will get our type lookup \nvalue which represents an object and if this object is not empty so it includes something then we will try to get value \nproperty in case if it's empty we will keep it clear so we will not use it.",
            "The same with offer type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we will use our dev kit library in order to get HTTP client service out of it so we can ask SDK to create one and \nthat's how we get this JavaScript class instance in our code.",
            "We have to combine and collect correct viewers URL \nfor our web service.",
            "I'm using Terasoft base product client side JavaScript framework."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI have to fix it in my code here get max price by type id so it was mistake because I renamed this method recently \nand finally my endpoint URL will be combination of the base URL/method name slash this rest like template part \nthen class name then method name.",
            "Okay great, my endpoint is ready and here you can see some example of brick \nof my endpoint.",
            "I will name it better here something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also I have to fix my code because this one already changed its name so my object is named usr reality.",
            "Okay, \nthis is important part and parameters will be passed as a part of our request HTTP request body.",
            "So parameters will \nbe encoded into a stream and thanks to this SDK library it will be done by this method post method, not by us.",
            "So we \njust wait for getresponse running post method.",
            "If you need to run get method you will have a get instead of post \nhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you should understand that even if it looks like easy thing and line by line execution, physically it is asynchronous \ncall which means we send request, then browser waits, then we get some response.",
            "Okay, we got response object \nwhich is a JavaScript object instance.",
            "We can look at its properties."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you plan to perform your own examples of the same then we have to save this carefully because if you have \nmistakes of course you will see it doesn't work.",
            "And also let's remember about our your request name and return\n\n--- Page 278 ---\n\nback to line number 115 or something like this.",
            "Let's go.",
            "Here we have our menu item, our action item and we have \nclicked event with the request name.",
            "Originally we set it to some random save request, but of course we will replace \nit with our own code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then we can save it.",
            "Great.",
            "Everything saved correctly.",
            "We can close this editor.",
            "Probably can just close and \nopen the page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we have response with some number correctly calculated by our server side and returned and some timing \ninformation.",
            "Now you see it's quite fast execution.",
            "So it took only 31 milliseconds to run.",
            "It's very good speed.",
            "Okay, \nlet's look at another example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo our Freedom UI page calculation worked well.",
            "In case if you have any questions, please ask.",
            "I'll be happy to \nanswer.",
            "Now I want you to see the same call how it can be done in Classic ui.",
            "Some of you probably will do some \nClassic UI customizations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now I will show you how to program some buttons in Classic ui.",
            "Go to view and open section wizard.",
            "So this is an \nalternative of what you get used to work with edit page in Freedom ui.",
            "So open Section wizard from this edit page \nwill open as an editor for a button.",
            "Unfortunately you can't easily add a button using this page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in case if you want to call third party application from Creature.",
            "So Creature will initialize this call and do it.",
            "It's \neven possible to make it no code solution for this.",
            "We will study it a bit later.",
            "Probably tomorrow I will show you how \nto make integration with third party apps and how to call third party web services."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see this is area and somewhere here just nearby I plan to put some code for a button I need to steal some \nbutton definition from Academy.",
            "So so I will show you how you can find it.",
            "Go to guides.",
            "By the way, our training \nladies will write next.",
            "So current 813 release highlights with a video that will be released in a week."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course I will have to fix it.",
            "I will have to make it look correct.",
            "So comma is missing here.",
            "Here's my button \ndefinition and I. Oh, I have to exclude unnecessary stuff here.",
            "And yeah it looks like I have a lot of extra things \ncopied."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen I will have row three because I want to put it a bit below Parent name is the same button.",
            "We can call it Run \nweb service button.",
            "It will be our button name button title button caption should be localizable string.",
            "This editor \ndoes not allow me to do this.",
            "Okay, red color always enabled so I will do it always enable it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably it was not the best idea because I need to implement method for the button.",
            "I also need to make my in my \nclassic package.",
            "I also need to make localizable string for the page.",
            "So let's make localizable string.",
            "I called my \nbutton action could be run service okay and try to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo here is my own run web service button click.",
            "Okay, and also I need to have a callback function here.",
            "So we have \ntwo methods and that will fix it.",
            "Okay, so when I need to do this is my method name.",
            "I use it for a button and method \nis in classic UI it's easier way to call some functionality because it just implements some function in your JavaScript \nobject."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we need to provide callback method to accept our result because in Classic UI we don't have so fancy stuff like\n\n--- Page 280 ---\n\nawait.",
            "And so it's because of the tools used here.",
            "So your JavaScript of course will run Await normally.",
            "But the tool \nthat we use to call service expects to get this callback function and parameters should be executed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's a value of that enumeration item that we found in our article.",
            "So item type.",
            "This one turned to be a constant, \nwhich means five by the way, you can also study your client side framework.",
            "So you can just do terasoft.",
            "Then you \nsee a lot of properties like item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we will do some console output and show us returned data.",
            "Okay, finally we can save it.",
            "In Classic UI we \nhave to constantly think of browser cache.",
            "So we have to reload the page in order to fight with cache.",
            "Now we have \nhouses for sale."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo perfect time.",
            "Very good speed.",
            "Okay, great.",
            "We're almost done.",
            "And now we already practiced with Sending of \nqueries from client side."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPostman is on first position but we have Thunder client.",
            "You may use Advanced Rest client, Rest, Wet Insomnia and \na lot of other names.",
            "The recent one was Mako Kuhn and Talent API Tester.",
            "Or you can use hard code old tools like \nFiddler Swap UI or Wireshark.",
            "So it's up to you what to use."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTry to run this button here.",
            "We can steal all necessary parameters.",
            "So this is our request URL.",
            "Okay, copy it, go to \nPostman, paste it here carefully.",
            "So this is our request URL."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you need to know that if you want to call Creature Services from third party apps, you have to pass \nauthentication.",
            "Creature has different ways of authentication.",
            "Now let's go to our documentation about integration \ntopics.",
            "We have authentication articles, basics and overview.",
            "So we have different authentication types."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo, no, no.",
            "I need to reference for our service.",
            "So we need to run special web service providing request body with our \nname and password.",
            "As a result, we will have set of authentication cookies.",
            "And such cookies will include necessary \ndata that will work like a temporary ticket."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo what we have here, this is our web server address.",
            "This is our root folder pass to our web service.",
            "Let me show \nyou this.",
            "My is my web server folder service model O service.",
            "You see some definition of this web service class and \nsome technical information from it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd obviously we will not get full set of cookies.",
            "So we are getting only just one temporary cookie, which is not \nenough, of course.",
            "Okay, let's provide correct value.",
            "Now you see 200, which is okay.",
            "No error messages in response."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this query we already have set of cookies thanks to postman sharing cookies with the same sites.",
            "And then we \ncan run our query.",
            "And it looks like we have one more error 403.",
            "But this time this error is not because of \nauthentication.",
            "This is because of additional protection from CSRF attacks."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in order to run post queries you have to make a header in post query named BPM CSRF and the value for this \nheader must match the same cookie BPM csrf.",
            "So I take cookie value carefully put it to value of our BPM CSRF \nheader and in this case my calculation is correct.",
            "Response is 200 and I have some response data.",
            "So now I \nsuccessfully called creation method from third party app from my Postman application.",
            "That's how you can do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you see original value was 60, which means 60 minutes 1 hour.",
            "I've already changed this timeout to 600 which \nmeans 10 hours.",
            "The maximum value here is 720 which means 12 hours and minimum value is 10, which means 10 \nminutes.",
            "So this is user session timeout."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in case if you plan to do some integration, of course first you will do authentication, then you Will do some \nintegration steps and also you can check how it goes and you can check current user sessions.",
            "If you go to system \nusers, find your user, go to access rules detail, then sort by start of the session.",
            "Now you see two different sessions \ninitialized by our supervisor user.",
            "And one is browser based by our Chrome, another is made by Postman."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you do something like this in your database, you will see all user sessions created initialized by any user in your \nsystem.",
            "And you will see session end date, session start date.",
            "You can calculate how long your users were working, \nwho worked and who did not work in your system.",
            "So this may be really helpful for you.",
            "And you see we have \ndifferent session end methods."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause anonymous web service is simply a back door or kind of place which could be utilized by anyone without \nany credentials.",
            "So potentially making it possible to do some kind of DDoS attack on your website.",
            "So generally it's \nnot safe.",
            "You can read more data about anonymous web services at our documentation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 283 ---\n\nBy default it's supervisor, but you can change and this user will be used for this Background Started and created user \nsession used only for system purpose and running anonymous services is also based on this approach.",
            "So if \ninterested in running anonymous web services, here is the article."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in order to implement anonymous web service, you have to perform a lot of changes in file system, which is not \na problem if you deploy your anonymous service at on site environment, where you have access to file system, but \nwhich will be a trouble if you deploy it in cloud conditions, because you simply cannot modify such files in cloud.",
            "You \nonly can provide manual for support team and ask them, hey guys, please, I need to deploy anonymous web service \nat cloud environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you may know that we have already a lot of base product anonymous services.",
            "You can find it inner web config \nfile.",
            "Let me show you Inner it means inside of terrasoftware web config search for allowed locations.",
            "And you'll be \nsurprised how many anonymous web services we already have on board."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd I will just show you a quick example of a web service which may work anonymously.",
            "The biggest difference is \nthis.",
            "If you have user connection, you can just get it.",
            "If not, you can get it from app connection, system, user \nconnection.",
            "That's how you use this user connection obtained with this code and can just copy it for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDimitri, I have one question, if that's possible.",
            "Yes, yes, please.",
            "It is a bit off topic, but we have an opportunity where \nwe can also leverage the business to business portal users.",
            "And we would actually like to apply row level security.",
            "Is \nthat possible?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's possible, but I would not recommend you to make such strict restrictions because your end users usually work \nas a team.",
            "And if one created a customer, someone else may need to look at it.",
            "But in general it's possible if you plan \nto implement couple of competitive teams or competitive users, so they should not see data from each other.",
            "It's\n\n--- Page 284 ---\n\npossible to implement with the help of default record level permissions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo they will see all the data.",
            "Okay, that's clear.",
            "Let's try that.",
            "Thank you.",
            "Yes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in my practice we had successful examples where two different creation systems were communicating with \neach other using no code call web service tool.",
            "So it's possible.",
            "And what's the difference between implementing a \nbutton handler and launching web service from business process?",
            "There is a big difference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's look at our call again.",
            "Now you see this query, but if you look at headers part you will see that we have \ncookies.",
            "So this is our cookies parameter and such cookies were provided by our browser because we are running \nour creation page in a browser that was authenticated to work with this website.",
            "Browser supports all queries made \nfrom client side with cookies."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we will steal all this data and try to make it from another browser without cookies, of course it will fail.",
            "And it was \nshown by postman, we will have 401.",
            "So Adrian, is it clear what we're talking?",
            "Okay Adrian, thank you very much.",
            "Thanks all of you for today."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAt the end of tomorrow session I'm going to show you Clio tool, explain why you need it, how you can do some \nsystem maintenance with it and how you can organize delivery with help of Clio.",
            "So thank you for your time today \nand see you tomorrow.",
            "Please prepare questions because we will have Thursday and Friday sessions.",
            "You have \nchance to ask your questions related to development organizing or architecture of Croatia."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number four of our development on Creature Platform Guided learning set of practical sessions \nthat we do for developing different features and functionality that requires some programming on Creature Platform \nand previously we finished with building our own section named Realty and we managed to set up List View, we \nmanaged to make a form page for it, we also added some default values and we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMade some required fields and it was."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPretty much easy and we used only."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNo code customization tools for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we managed to make a button which had a custom handler."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we made a button push me button and this custom handler shows some console output.",
            "We can also display \nsome pop up."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMessages and also we can do any kind of JavaScript code behind this button.",
            "Today I will show you a bit."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMore complicated examples of how you can.",
            "--- Page 286 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo some programming and coding and also we will discuss debugging.",
            "So you will see how it's possible to stop \nexecution of your code and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMake it executed line by line."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy line and to see all the."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nVariables and to see all the conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo so to make something that you probably get used to do when you operate with any like modern version, modern."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDevelopment environment like Visual Studio or other so today question today's session I would."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike to warm up with Simple Question."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich is about organizing of your sections.",
            "It's probably not so obvious so I."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill tell you all apps it's like Synthetic Workplace which includes all registered sections in one list.",
            "--- Page 287 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe have Studio out of the box."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorkplace, we have customer360 because it's a result of loaded contacts and accounts."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo our loaded customer360 app also caused creation of new Workplace.",
            "Such workplaces also can be created, you \ncan manage them and you can put your sections into it.",
            "You can also create data items for workplaces if you want to \ntransport them between environments."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI would like to show you something."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat I think will be useful.",
            "It's about organizing of Workplace for your users and for my developer purpose it will be \nquite often when we will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNeed to switch between our created section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd some system sections like Process library, process logs or lookups and system settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I plan simply to put my new Created Reality section into this Studio Workplace.",
            "That will be very easy, but I need \nto demonstrate it.",
            "To show how you can do this, go to Settings."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 288 ---\n\nThen find Workplace Setup.",
            "Workplace Setup helps us to create new workplace or to manage existing workplaces.",
            "As you can see, some workplaces are."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPresent but not shown even if we are administrators."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo that it's very interesting because it's one of not so many places where."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUser permissions Are still matter when we run system under administrator privilege."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now you can see I see only four workplaces."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in total it looks like we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHave at least 5.",
            "And productivity workplace seems to not showing anything and not having any permission settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's probably why we are not seeing it.",
            "Okay, let's go to studio workplace."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 289 ---\n\nWe have set of sections for a workplace.",
            "Also it will be interesting for you to know that sections have positions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you columns set up for sections list.",
            "We can arrange and add the position column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you will understand why I display this position.",
            "Any section in a workplace has its position and position \norganizes order.",
            "So it is used to specify order of sections in a workplace."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we rearrange such items such sections."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPosition will be changed.",
            "And finally your sections will be displayed in a different order."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSometimes this order is not so consistent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou see UI management and message templates, they have the same position."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd sometimes UI management will be on top."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSometimes message templates will be on top."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 290 ---\n\nDepending on how data will be loaded at a certain time.",
            "Because sorting by this position it makes some ambitious \nresult.",
            "Okay, so what I plan to do."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI plan to add one more section in the list system will show me only sections that are not listed here.",
            "And it's \ninteresting to see here that we have couple of accounts section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's very unusual."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCouple of calls and couple of contacts.",
            "One of the possible explanation why we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHave two different account section is that."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOne of them is section for Classic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUi, another is Freedom UI section.",
            "We can also display columns here which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill let you understand what we are looking at."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can just squeeze a bit title display e.g."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 291 ---\n\nCreated on column save column settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow when we try to add you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill see title, you will see created on and one of them is 19, another is 24."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd it looks like first one is classic UI, second one which is younger."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is freedom UI."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can detect which one is necessary for you to add."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn my case, I plan to find realty section created recently and we can see it at the end of this list.",
            "You see, its position \nis also not so consistent."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it guarantees that it will be at the end."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it's not so comfortable to see this item at the very end of this list.",
            "So possibly we would like to move it upper.",
            "--- Page 292 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to do this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou can move it even on the first top position.",
            "Unfortunately we cannot move it upper than home."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt if you want and realty will be position zero.",
            "So when we save it we can."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAlso reward this page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably we will see our reality section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDirectly at Studio Workplace at zero position.",
            "But it's also important to say that other items were changed so they \nchanged."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTheir position because reality shifted them."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo if we want to transport such change, we must make a corresponding data item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr we can use help of data binding tool.",
            "--- Page 293 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis data binding tool helps us to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRemember positions of O sections here and we can just click Bind Workplace, specify."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTarget package and click save.",
            "Then we can see what was created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we for example try to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nActualize data and save it, we will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSee warning and this warning will tell us that such Studio Workplace was already."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nRegistered somewhere in parent package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd even more it was registered one more time in another parent package."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 294 ---\n\nBut it's not a big mistake.",
            "So it's not a mistake at all.",
            "This is warning that tells us that."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch data is already present somewhere in parent packages data items.",
            "So maybe we are doing it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt'S not a mistake.",
            "Another one is sys module in Workplace.",
            "This is a system table which keeps information about \nsection which is called module and workplace."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can see data and you can see all the sections in Workplace."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nStudio were listed here.",
            "And also it's important to mention that forced update option must be applied for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPosition column because otherwise update or position."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill be not performed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou probably remember from our Tuesday session that when you create data items, it's."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nPossible that you will make data item that will perform update, not an insert.",
            "--- Page 295 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn case of update in case of."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTarget record was found."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy the way, I prefer to make it not by this key."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI prefer to make it by this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nKey and found by id."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo if record was found by ID."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd then it will update target database."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAccording to loaded data and in our case only position will be updated.",
            "Okay, we can save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you can see that save was.",
            "--- Page 296 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuccessful, but we have a lot of warnings related to parent data that was already registered in base product.",
            "And \nthis is valid set of warnings because our change caused the change of position of all previously registered sections \nin Studio Workplace.",
            "So simply all of the registered sections had different position because we moved our reality to \nthe top and we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHad a warning that tells us that you're trying to Change the data which was originally declared somewhere else."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo maybe you're doing it wrong."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo please take care.",
            "Here is your warning."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut this warning is still so we can ignore this.",
            "And last one is admin unit in workplace."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is about access permissions.",
            "System administrators have full access to Studio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorkplace and probably this data is also."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPresent in our database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 297 ---\n\nYes, so maybe not so necessary to save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it's warning, not an error in case if you have an error.",
            "For example, you save the same data twice in the same \npackage."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case, save button will show you error message and save button will not disappear.",
            "If save button was \ndisappeared, means your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nData item was normally saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf save button did not disappear, it means an error.",
            "It's like serious mistake and the system."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill not allow you to save such data.",
            "It happens only when you save the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSame data twice in the same package.",
            "Okay, so it was set of client modules of sorry, set of data items."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAutomatically created by help of data binding tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we registered our reality section in a studio workplace, now we have comfort.",
            "Here is our new created section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHere we have lookups which we also often look at."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we'll use it and some other."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSystem sections that we may need."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we now have very comfortable conditions and easy transitions between different sections.",
            "So it was just a \nsimple example how you can organize your workplaces in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMore complicated based products like sales, service and marketing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will see more workplaces, more sections inside."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd you also can create your own workplace with sections that you think will be necessary to use for your end."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUsers with particular roles."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 299 ---\n\nAnd you can provide permissions for such."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSections and for such workplaces."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd what is important for you to understand that you can create many different."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWorkplaces and include the same section many times.",
            "So if you added some section to some workplace, it doesn't \nmean that you can't do it with another workplace.",
            "So one context section can be added."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn different places with no limitations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn my case, I have my applications."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWorkplace with real T section and I also have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJust a second.",
            "So what I wanted to show you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe can use the same section in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 300 ---\n\nDifferent workplaces and it's not a problem if we specify the same section in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDifferent workplaces many times.",
            "So physically this is the same section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe same data shown in different places.",
            "Just a second.",
            "Okay, so what we will do today, it was a warm up example \nthat."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think will be interesting for you to know.",
            "So let's do something more serious."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can do some more serious programming."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nInside of Creature client side page using."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome JavaScript and using creature tools and let's say data platform.",
            "First of all I will explain you some business \nideas.",
            "So what we plan to do, my."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPlan is to show you some recalculations and it could be a good example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 301 ---\n\nIf we for example create one more column, call it commission.",
            "So it will be our future profit from the deal."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd also we have to take care."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAbout the type offer."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo for sale we have one formula."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for rental we will have another formula."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's do it step by step.",
            "So first of all we need new column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNew column can be added to this very easily.",
            "We can just go to modify our page.",
            "Then we can add new number \ncolumn."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCarefully dropping it here it will be named Commission.",
            "And as we have a price in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUS dollars, so let it be a commission.",
            "Also in the same currency, the inner column name will be USR.",
            "--- Page 302 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCommission."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we confirm such code for this column.",
            "The data format will be decimal with two digits."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo manually change it.",
            "That's why I will set read only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOption on I temporary hide place attachments tab.",
            "So my commission will be read only."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd also just to make it easier."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo find in div array, I will name its element code so we can type it as we wish Commission USD.",
            "Let it be our element \ncode."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThis element code will be used in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nView config, div and also physically it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 303 ---\n\nWill be used for building real page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHTML markup with set of divs inside."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this code will be used."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo name set of items and div HTML tags inside of our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo element code, it's about physical component."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nRepresentation on the page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, you already know this and that's all I can just save System will."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAutomatically modify our object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will save changes to our page code which we can find here if."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 304 ---\n\nWe click open source code.",
            "So now let's just click save and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat'S probably will be enough for the beginning.",
            "So this change will be made in objects and in our client module.",
            "Okay, finally it's saved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, we can move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd now we can close this page editor.",
            "Go to main page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAs you can see, I did not even reload it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can just open it again and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably we will immediately see our new column and it's read only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see this lock sign which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTells us that column is read only.",
            "So now we need to think of.",
            "--- Page 305 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nImplementing read calculation and it will be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTriggered by change of price.",
            "And also we want to make it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDependent on offer type.",
            "So for the sales offer type it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWill be more or less okay if."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe make commission like 2% from list price from our price of realty shown here.",
            "So to be quite fair and good \nenough commission for our business and for."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSales it's totally okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow let's create some sample for house for rental."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOur rental price will be 1200 bucks."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor some house in Miami.",
            "--- Page 306 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI'm not sure that can we find."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo cheap houses in Miami for maybe it's not like not in a high."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSeason and some area.",
            "And as you can see, commission will be recalculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n50% from monthly payment price if this is a rental."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo for rentals we will have another percentage.",
            "So for sales it will be 1% or 2% value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for rental it will be 50% from price value."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo when we will do some calculation we have to take care about it.",
            "But also you should be mentally ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat in real life business it really."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 307 ---\n\nOften happens that such ratios, such formulas."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCan be changed from time to time."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd once we introduce hard coded value like 2% a month later our customer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMay call us and say, you know."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow conditions were changed so we need to modify this percent and now it will be 2.5.",
            "Could you please change it?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be really expensive."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo make such changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd our customer will be not ready."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWill be not really happy if we.",
            "--- Page 308 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAsk for example for half, maybe for a couple of hours of work to be paid.",
            "If we want to change just one number."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIdeally customers should be able to change such ratios themselves.",
            "We have several options to do this.",
            "For \nexample, we can make a separate."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTable which will keep necessary percents."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOr we can use some system settings for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr as you can see, our ratio is really stick to offer type."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo probably we can add new column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo offer type lookup in order to save one value in percent for sales."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd another value in percent for rentals.",
            "I will show you how we can do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 309 ---\n\nIn this case you can do the same if you.",
            "Oh, I did not save it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nGreat.",
            "So if you prefer to focus on application, you can go to Application hub, you may find your realty app, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMight check your data models and that's."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHow you can find corresponding object.",
            "Or you can switch to advanced settings to see all the contents of your \nsolution.",
            "So you may practically do almost the same as you can do it here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I just get used to work."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWith this configuration section."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAlso it has some useful actions like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave packages to file system.",
            "So that's why I stick to this."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nApproach and I feel more confident when.",
            "--- Page 310 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWork here because I have full available."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSet of tools to manage my system set my system configuration setup.",
            "So we opened corresponding object, we have \ninheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo for each reality offer type for."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nRental or sale, we can add one more column to be number.",
            "Maybe we can do it with quite high precision."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, two digits after decimal point."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe can call it something like commission percent."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can even specify what is."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThe available range of our data values here just to make it clear for any user what type of value should be put here.",
            "So if we specify from 0 to 100 it means from 0 to 100%."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 311 ---\n\nAnd it will be clear how to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPut some value here if you want."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nTo save for example 2%.",
            "One more column is not a big deal, so we can easily add it save and publish."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut after we do this we may."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nStart to get some additional unexpected difficulties.",
            "Now I will show it.",
            "Probably sometimes I get it, sometimes not.",
            "But anyway I have to tell you about this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for example lookups."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet's go to reality offer type lookup and let's try to see its data.",
            "Now we have name and description.",
            "Okay, let's try to \nset up columns to display.",
            "Name is okay here description is also okay and we can try to display one more column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWith some initial values for calculations.",
            "--- Page 312 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd we agreed that for a sale it will be enough for us to specify 2%.",
            "According to this helpful message, 2% will look \nlike this 2.00, so it means just 2.",
            "And for rentals we expect to earn 50% but from monthly payment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOffer type object."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo not object data item for this.",
            "Let me find it.",
            "This one Offer type.",
            "It looks like it was created by data binding tool, so \nwe could also.",
            "No, no."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt looks like we still did not need to do any additional steps related."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo adding new column into existing object."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut some of you may start to feel some difficulties and such difficulties are connected with the way how server side \nsystem remembers information about objects.",
            "And unfortunately it may happen that your kind of difficulty which you \nwill finally face will be inability to display data here or inability to use new column a bit later.",
            "In order to fix this, you \nmay need maintenance tools for creation so which we already installed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 313 ---\n\nSo let's go.",
            "Now we have offer type which also has additional data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe top where we can easily use such data columns."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow I plan to show you how to get data out from a lookup.",
            "We will use again page editor."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow you will see this trick how we can make data out from existing lookup.",
            "We have new fields here, but if you add \nany it will add new."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn to your object and it will."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAdd a new control to your page.",
            "So such columns I would like to call data fields and data fields represents \nconnection between controls and real life data column of your main object that this page works with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave data from them or at least.",
            "--- Page 314 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNot save into main primary object with the standard tools.",
            "So maybe you will save it somewhere somehow else.",
            "Let \nme show you how I can use this for our task.",
            "I need number control.",
            "So I will take number and carefully drag and \ndrop it somewhere on my page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt will show us all existing lookup columns in our realty object and then we will find offer type extended and system \nwill show us only suitable on the compatible field which will be you can be used within decimal number control.",
            "This \nis our commission percent so we will select it and here now you will see some changes.",
            "Title appeared the same as \ntitle of your column inside of your offer type lookup Code appeared and cannot be edited."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo simply speaking we made read only column that will be automatically loaded each time offer type is set and each \ntime offer type changed or cleared.",
            "Let's save our changes and we will see how it works.",
            "By the way, please confirm \nwith plus in our chat if you follow me directly during the session.",
            "So I need to know, should I allow you some pause \nto do some steps after I demonstrate it?",
            "Marcel, thank you, Andre."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nA while, tell me please."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay, Monica, thank you again.",
            "Secret and Rakhi, thank you for mentioning.",
            "Great.",
            "So we saved our page.",
            "Then we \ncan go to our page close, open it again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 315 ---\n\nWe can read it from the database if we use related objects, if we use offer type and if we display commission \npercent and this commission percent will be obtained from corresponding record from our offer type.",
            "But you see, \nnow we have some troubles.",
            "We have some troubles and system does not recognize commission percent column \nfully.",
            "Probably it also shows us some error messages, I believe.",
            "Let's try to reload it and see what happens."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut if you click there and back to sale now you see this value is okay, save, close, open and still it doesn't work.",
            "So \nwe still have some problem with this additional column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this problem unfortunately cannot be solved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBy logging out and logging in."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you.",
            "I try to log out."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMaybe thinking."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is something like a user session cache issue.",
            "Then I try to log in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhen you work with client side, it's."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 316 ---\n\nBetter to keep your browser console on."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably you will see some interesting messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere or a lot of red messages."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIn case of errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's important to see it quick."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, opening our realty section, ignoring all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWarnings here, open it once again and you see no, it did not help us.",
            "So unfortunately logging out and logging in."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDoesn'T help you and the only solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhich we can do is restart our app or shut it down and start.",
            "--- Page 317 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt again for example with the help of IIS Manager.",
            "But it will take more than minute for us to normally shut down and \nstart.",
            "So we have a quick solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is restart our app and we."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHave a maintenance tools for this restart application.",
            "This is the only way to quickly fix this issue."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see we have some."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nErrors in browser console, but it looks."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLike not very critical."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now restart is being performed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe can check what's happening with our memory and with our processes using task manage."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 318 ---\n\nW3WP .",
            "Looks like we have the same worker."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nProcess, but it has a comment to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRestart so possibly to rewards some of its assemblies."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, so we restarted our app."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe go to reality section."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow we already will see the difference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see that commission percent here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWas normally displayed in this list previously it was not normal."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if we open any record now."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 319 ---\n\nCommission percent will be fully normally loaded."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we just open the page.",
            "So you see commission percent loaded correctly if you take any other value."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now we fixed it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why I had to use this add on called maintenance tools for creature."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSuch add on helps me easily restart."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe app with just waiting approximately 10 seconds.",
            "And it's much easier than restarting my app by shutting down \nand starting again."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMy worker process or recycling worker process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's possible, so it will take significantly longer."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, so we fixed this question with.",
            "--- Page 320 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe commission percent and now."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOur task."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo make actual calculation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo now we can think of how."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo trace changes of price or commission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLuckily commission percent will be available for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUs the same as any attribute for a real column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo commission percent will be also an attribute for us.",
            "--- Page 321 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if this value changes or if."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis value changes, as you can see."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will be changed in case if you clear in case if you set."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSome offer type or if you change to another offer type, commission percent is changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo price or commission percent should trigger recalculation of commission."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI will show you how we can do this.",
            "Let's go to our configuration section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFind client modules.",
            "We are working with form page.",
            "So when we look at this stuff you can see this is a real T form \npage.",
            "That's why I know where to open corresponding code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAndrean is asking is it possible to use this add on in a cloud environment?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 322 ---\n\nYes, all creation apps from Marketplace can be installed on cloud systems."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAbsolutely the same as you can install it locally.",
            "When you install any add on, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUse only web interface."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it will work absolutely the same."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet me show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you go to Settings, you go to Application management, Application Hub and then you click Install or Add new \napplication."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd you can select something from this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nList or you can select Marketplace Powered."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd it will work absolutely the same.",
            "--- Page 323 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you run it in cloud.",
            "Thank you Adrian for your interesting question."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe decided to open directly its source code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we open this tab."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe can try to find our commission diff part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can see this our commission column.",
            "It was added by help of page editor."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo practically we should not modify this.",
            "But it will be interesting to see how it will be connected with the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData attribute PDS USR commission USR so."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is our attribute name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, we can collapse temporary all such things.",
            "--- Page 324 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI will only show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo price.",
            "Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config.",
            "So attributes of view model config represent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSet of variables that can be saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOn the page level."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd we already started to work with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt yesterday I just tried to explain you such attributes and now we will work with them.",
            "So for the price column we \nsee this attribute name."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe have this attribute name and finally."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will save our data into commission."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 325 ---\n\nAttribute which has this name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is important.",
            "Okay, I will collapse anything else to make it clear and quite compact for you.",
            "So we are interested \nin price attribute."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPercent attribute and commission attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay?",
            "Nothing else."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nModel config is not interesting.",
            "And then we will do something with handlers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI already have an example which will."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nMake it possible for us to do it quickly.",
            "So let me show you this example of the code examples reading UI and then \nwe need calculated field example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nField example.",
            "So now I will use a special."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nPre designed handler name.",
            "Probably we need to look at Academy.",
            "--- Page 326 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo explain all possible handler names."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo let's go to Academy, let's go."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo go to guides development."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nFront end."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFreedom UI and somewhere we will see some client schema references handlers."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYes, this is an article explaining handlers and their definition.",
            "So we have some set of standard names for handlers \nand they represent some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nImportant steps of page life cycle.",
            "In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAt our page changes the attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 327 ---\n\nSo this handler is called handle view."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nModel attribute change request.",
            "Let me show you my example.",
            "Handle view model attribute change request."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo simply speaking, this handler will be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCalled each time when any column value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nChanges at our user at our client."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSide page in our browser.",
            "So this handler will be triggered quite often.",
            "We copy this code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will also."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nPaste it for you and we will copy it and put it to our examples in our handlers area.",
            "So this is an array, we have to \nkeep syntax well.",
            "And that's why I try to paste."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt like this, keeping commas, brackets and so on."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 328 ---\n\nSo now you see, this piece of code was just simply added."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis piece of code was added and let's check what we can do with it.",
            "Of course we have to take care about attribute \nnames because they are always unique.",
            "Each time you do the same example again, you will see different unique \nnames."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo how we can check it?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis handler will be called quite often for each column change."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd in order to make it efficient."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need to check if some column."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat we are interested had changed or not.",
            "If yes, then we do our recalculation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf not, we should do nothing in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOrder to save system resources.",
            "So we check request property here and.",
            "--- Page 329 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have attribute name.",
            "And if this attribute name is our price, then this is logical or attribute name is our \ncommission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen we do some calculation, but we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHave to actualize our names so you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCan see our list of attributes for the price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is our attribute name.",
            "Let's copy it and carefully paste here.",
            "And also as we already have it in our clipboard here \nwhen we need to read it, then the same for commission percent.",
            "Let's make sure this is our attribute name.",
            "Let me \nshow you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo how we do this?",
            "I already showed you yesterday."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to use operator await.",
            "Then request is our argument dollar context and then we have access to our certain \nattribute."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we have just a variable in.",
            "--- Page 330 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur JavaScript code for price for percent.",
            "Then we do calculation of commission as result of multiplication and don't \nForget to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nDivide by 100 because commission percent represents."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPercent, not just a decimal value.",
            "Okay, and then we will save our commission percent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIf we do it incorrectly, we will fail."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is important.",
            "Our commission value will be finally saved into this.",
            "Okay, now it's ready and we can check how \nit works by saving our code."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI provided an example for you, so you can also check out your example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJust a second.",
            "Okay, saving was successful and we can move on with our checks."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably it's because of cache."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 331 ---\n\nSo let's reload the page.",
            "Reloading helps to fight with browser cache effect.",
            "Open again, try to make changes."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you can see that recalculation works well."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have our price for rental of our apartment."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd you see our commission is correctly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRecalculated and we can save our data."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCommission will be also saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can see it here.",
            "Commission is our legal valid column, so it will be saved."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's open some sale example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you can see.",
            "--- Page 332 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, price was not changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCommission is already calculated.",
            "Let's check if we switch from sale to rental."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou see, commission was recalculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we switch back to sale, it's."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAlso quite well calculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you see that our commission is quite fair for this amount of price for the house."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo our recalculation also works well and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt shows even when page is opened.",
            "It looks like when page is opened our data filled in client side.",
            "So it triggers \nrecalculation even if we."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 333 ---\n\nDo not change anything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut just open the page.",
            "Yes, we'll see."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it looks like our calculation is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlready done and works quite well."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd of course everything works quite smoothly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we have a pre programmed examples where everything is correct."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut in real life you will do."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYour own examples where some errors or mistakes could happen.",
            "So you will need to know how to debug this code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI will show you how to make."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch debug and you will see that's not so difficult.",
            "One of the easiest ways to debug.",
            "--- Page 334 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs to put a special debugger breakpoint into your code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLike this, the word debugger.",
            "If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code.",
            "And if your browser has opened browser developer console."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo if browser developer console is on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen your debugging will work for you.",
            "But this approach has also disadvantage."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd when you finished your debugging, you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nShould not forget to remove all your debugger lines."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSave your changes again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd ideally you have to run your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 335 ---\n\nLogic again just to make sure you did not accidentally damage anything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause when you save, you have chance that something will be incorrectly saved.",
            "Something will go not so well.",
            "Okay, so let me show you how we can do this type of debugging."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI need to explain and I need to show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can go to this is easy."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWay to put debugger word.",
            "I will show you a bit more professional way to debug.",
            "We can go to our section open \npage which we plan to debug."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we enable browser developer console."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou can do it by F12 or control shift I."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when you do this, you then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGo to Sources tab.",
            "You see, we already opened some set of scripts here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's close everything and then we can."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nJust search and you see we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nA USR reality form page part of the URL."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo it's a page, it's a name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf client module and we can try to find it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nControl p Open file."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's try Control p open file.",
            "Which one?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, if you do not want to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGuess which one is correct, we can go back reload the page.",
            "--- Page 337 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we will suppress any kind of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCache and then we will open it again.",
            "And we have just one option, single option to select corresponding file Control \nP .",
            "Okay, open the page, then control p open file and press ctrl P realty."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd you see only one form page here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo no any cached, no any duplicates that will make you confused.",
            "And you probably may select Incorrect 1.",
            "So let's \nopen the only one you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSee set of equalizable strings here.",
            "But the most important of course is our code.",
            "And you will see our module text \nhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBig part with view config div some."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPart view model config.",
            "And finally you will have your header handlers.",
            "Part we are interested in debugging \nsomewhere here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, we can click on this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 338 ---\n\nLine number which will make a breakpoint for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's the same as debugger, but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt doesn't change the source of our client module."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can use browser debugging tools for this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nClick on the line number."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's how we activate breakpoint.",
            "So here we have one breakpoint that we just clicked here.",
            "Then when your \nbrowser developer console is on and execution comes to this line."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nExecution will be stopped.",
            "Let me show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you change for example offer type from rental to sale, you see These."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 339 ---\n\nLines are executed and now code stops and we can go line by line."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we have to use tools that."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWill help us to proceed with this piece.",
            "The most popular, I think the Most."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEfficient is F10 which is a step over running of a line without going into sub functions for it.",
            "So I will press F10."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen you can see commission was recalculated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you will see commission will be set here.",
            "So my commission is now 26, so I expect it to be saved here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYes, 26 and then we move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo here we can use resume F8 hotkey to normally continue execution."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat's how we can check this code.",
            "If we change the price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 340 ---\n\nYou will see the Same I press F10 I have another commission F8."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, we can make more serious price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor an apartment."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd obviously we'll have more serious commission.",
            "So that's how you can debug your code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso, if your code has something has."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSome obvious mistakes and causes runtime errors, you will also see such runtime errors in your sources tab.",
            "You \nwill also see your console which will be full of red messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow let's check.",
            "You see that percent is empty so percent is null.",
            "Trying to multiply null on price results in zero."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo that's how we will clear."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, when we have some valid percent, we can move on with F8 and you see setting is done.",
            "--- Page 341 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIf you have any questions related to this debugging, please tell me.",
            "As you can see, debugging can be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nReally effective if your code is more."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nComplex, if you have sub functions.",
            "If you are not sure what values you finally get from your code so you can check \nit out with the help of browser developer tools."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDifferent validators so different clones will be used for universal validation.",
            "And also I plan to show you some \nexamples of so we already displayed debugging but also you need to know a bit more about logging.",
            "Okay, so let's \nmake a five minutes break."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nForeign."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo today I want you to see."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSome more technical things about how client side works and how we can do.",
            "--- Page 342 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSome technical steps with it.",
            "So we already know how to debug our code.",
            "I would also like to you to see that we \nhave quite developed logging."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will show you login mechanisms."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThat are available on Creature platform.",
            "Here is our installed app and this is our folder with installed application.",
            "We \ngo to terrasoftware web and you already know that Creature uses analog libraries."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo provide the different logs and save them In Creature web server."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThe most important log file for us is invoke targets config because here we can change default file to save our all \ndefault folder to save all our logs.",
            "You may be interested in the way how we can do some logging."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs well appender so they are synonym."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLogger or appender they are synonyms.",
            "So you can see a lot of different loggers registered and appenders are \nsettings that will collect log messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLogical thing that you can use in your program code.",
            "Appender is a place that is used to collect your data and save\n\n--- Page 343 ---\n\nit."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo we have a lot of loggers, a lot of targets.",
            "Sorry, targets.",
            "And you see we have so appenders it means it's a setting \nthat represents physical file.",
            "Also targets are synonym and appenders shows us that we also have a lot of different \nlogs that are saved here."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBy default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we can find logs \nand as you can see we have zero which means main application logs and log folder which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSorry."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nA log folder which means loader part is not so interesting because it has no customizable items that will be \ninterested for us to Interesting for us to see so loader is very technical and we have just several log files here, \nnothing very spectacular.",
            "And zero folder is what we really need because it's a log set of logs for our main \napplication.",
            "And then we go inside, we see logs for each separate date.",
            "So you see for different days you have logs \nin different folder which makes it easy to find."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou from the maintenance point of view?"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 344 ---\n\nI think the most important is error log.",
            "Error log represents all exceptions and keeps information about all exceptions \nthat happened in your system.",
            "So error log shows all errors and of course you should take care about."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt because usually it is important and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSometimes you may find some errors which are not related to your changes.",
            "So you may simply speaking find some \nerrors from base product like this 1 error parent schema is now parent ID sets to empty and so on.",
            "But it looks like \nnothing very critical for our application.",
            "You see the same error many times and it looks like not very important."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's really hard to test everything."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd to polish any line of code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it should show it so it."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCould not fail in any way.",
            "So in real life, in any big system, some errors usually happen."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in our case it's not so."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 345 ---\n\nCritical so you can simply ignore.",
            "But if you will find another errors with some user complaints, of course you should \ntake care of it.",
            "So from maintenance point of view, I think looking at such error log is quite important.",
            "And this is \nsomething that you should do regularly.",
            "If you support some big creation implementation by your own."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nBut it will be more efficient for you if you can Collect logs by yourself.",
            "And that's why I plan to show you some \nspecial tool which makes it easier if you need to collect logs from cloud based environment.",
            "So I will show you Now \nI'm talking about telemetry log for creation.",
            "This is a special add on which we can get from Application Hub New \napplication Marketplace powered.",
            "Then we can just search for the word log and we will easily find this Hokku app or \ntelemetry log for creation."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt takes just almost no time, maybe 20 seconds.",
            "And you will see that new app is installed to our system.",
            "So you'll be \nable to collect vlogs but you'll be able to collect only runtime created logs.",
            "So it's like listener for logs.",
            "You will not be \nable to collect yesterday logs, but if you do some experiments and you need to see how logs look like when you do \nyour experiments in cloud."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay, wait for a minute.",
            "And I'm also curious about what is happening at my website.",
            "Oh, dotnet exe was running so \nit looks like compilation was done.",
            "So system decided it needs to compile and that's why it was so slow.",
            "Okay, finally \nour compilation finished."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow you will see one more item at our settings page.",
            "Previously called System Designer, currently it's called \nSettings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 346 ---\n\nWe can check."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou probably remember we looked at our logger and appenders.",
            "So we have appenders, we have loggers here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can listen for a certain."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLogs in order to get some error."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMessages for the certain, let's say subject or certain area of functionality."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd you can also listen everything like this, which will mean that you look and get every message.",
            "And I'll try to find a \nlogger for SQL.",
            "Do we have anything?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExecutor SQL log appender."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay, will it be DB executor?",
            "And we're only interested in for example errors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I plan to make example of."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 347 ---\n\nListening of DB execution errors.",
            "And I especially will do some example which makes such an error.",
            "Let's go to \ncustomer360, find accounts and let's try to remove some account.",
            "Obviously we will not be able to do this because it \nhas some connections with existing contacts.",
            "So I try to delete this account."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's try to delete once again.",
            "Yes, error message appears."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLogger pattern."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe you should use info subscribe."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nI will try to delete it once again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, now you see, funny thing, but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt was not an error, it was just a warning."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo like yellow color, which means this is not an error, just a warning.",
            "--- Page 348 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd okay, so I got some text."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nMessage from our DB executor and you see that my message has an error.",
            "So exception occurred, statement \nterminated.",
            "And you see that we get some text messages and logs."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou can also get the same logs."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you go to your files, you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWill find SQL JSON here we will have similar information.",
            "So you see my delete statement failed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it conflicted with foreign reference constraint."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd it's interesting that for the SQL."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nErrors, system logs only queries that were failed."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 349 ---\n\nSo only queries that failed to be executed at the database.",
            "In my case, I intentionally made an error for the database \nlevel and showed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou how you can handle it and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHow you can track it.",
            "You can also use all existing loggers for all messages subscribe."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf your system, when you open any."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSection, you will start to get more."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd more Logs because system usually writes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSomething to logs and it has quite verbose logging.",
            "So you will have more and more data."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nYou see more messages appeared, some of."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThem are useless for you and so."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 350 ---\n\nYou have to play a bit with it.",
            "But finally you will be able to do the same as you can do with log files.",
            "So this telemetry \nlog for creation will be extremely helpful in case if you need to make some experiments and get logs directly in \nonline mode from your cloud environments, including even production systems."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this can be really helpful for you.",
            "Please remember about this telemetry log and we have some buttons here."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWhat is this?",
            "As you can see we have some help message explaining how to use this some button which shows or it \nruns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd stops a listening of logs."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo green means run, red means stopped and that's how you can also use it.",
            "So listening all of the logs will provide \nyou a lot of verbose noisy messages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can easily install it from Marketplace."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay, so what else you need to know about client site?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will work with details soon and."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 351 ---\n\nBefore we doing this I need to explain you how to do validation.",
            "As you can see my previous program was a bit more \noriented on classic ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo sometimes I jump from topics topics and that's why we are not following directly from this schedule."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo I plan to provide you material like step by step slightly improving complexity of topics.",
            "So I think it's not so hard, \nnot so difficult for you to study."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis material this way."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo let's move on validation.",
            "What it is about and this is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCheck of data before it will be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSaved at server side.",
            "Let's return back to our reality section and let's look at our data value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNegative price as you can see as."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nA result we have negative commission.",
            "It's also possible to save negative area and also system does not prevent us \nfrom doing such things."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have to make some kind."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOf protection for our data input.",
            "And luckily we have this on the platform level as existing validation tools.",
            "Let me \nshow you how to use it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur form page again, open its source code again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd I need to show you some examples at our Academy documentation which will really help you.",
            "So we have some \narchitectural SDK things at front end documentation, but we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nA lot of useful examples in platform."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCustomization area of our academy.",
            "And we have examples for Freedom UI for fields examples and we have \nexamples of population of fields."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nField which we are interested right now."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 353 ---\n\nSo I will share useful links for such articles."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI recommend you to read it or."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nJust maybe look at it.",
            "So let me explain how we plan to move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's a special designed place for us to program special functions that will be used for checks of data during input.",
            "And luckily we have examples at Academy."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhich will help us to make it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSmoothly without spending too much time.",
            "So validators is a collection, this is not an array."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you see, this is a collection.",
            "Each collection item should include its name."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd implementation and validation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nImplementation includes validator property which is a.",
            "--- Page 354 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFunction that finally should return something set of parameters and async property.",
            "Then when we finish with this \npart, we will connect our created validator with set of columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCan do this and I already have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAn example, we will not spend too."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMuch time on it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you will see how we can do this validation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nFirst of all we go to validators."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nArea and we will provide some code here.",
            "I already have example, no difficulties.",
            "So Freedom UI validation example \nand I need to provide this example of code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let me copy and paste for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 355 ---\n\nThis is example of our validation.",
            "Okay, no need to use cameras to show.",
            "Okay, so this is example of code."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd I will also implement it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's my own validators area.",
            "So copy and paste.",
            "What do you see here?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo probably we have to Start with parameters first."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause parameters are values that we can provide for each validated column and for different columns, we can \nprovide different parameter values."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHere we have to declare what parameters we will have."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIn my case there are two parameters."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMin value and message parameter."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nValidator function has a bit complex structure.",
            "This is one function, it returns another.",
            "--- Page 356 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFunction and first function requests config, Another function requests control inside of control.",
            "Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBut it makes it universal."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf we have value, we don't know exact column.",
            "So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us.",
            "So we can take value and from."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe config we know what parameters to expect.",
            "So we have min value parameter and we have message parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur check is quite simple."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe get value and then compare with min value.",
            "And in case if our value is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGreater or equal than min value then we think that data is correct and our returned result will be null, which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMeans no warnings, no messages, everything is okay.",
            "But in case that value is not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 357 ---\n\nCorrect we have to return special type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOf result which is a JavaScript object with a specific name, the property inside."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd with the message property inside of this property.",
            "So it's kind of nested JavaScript object and our message here \nwill be text, it should be displayed nearby problem control."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd also this message will be explained."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDisplayed when we will try to save our page.",
            "So we will say try to save data system will check all the validators and it \nwill find that some columns are not correct and it will not allow to save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo this is our example of a."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nValidation, but it's not applied yet."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we have to set up some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumns which will work with this validator.",
            "--- Page 358 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOtherwise our validator is useless because no."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn expect checks with it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo I do not need to change anything here.",
            "This code is universal as you can see.",
            "No any hard coded column names."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOnly one hard coded thing is a validator type name.",
            "Next step is connection of validator with."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCertain columns or it's better to say with attributes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will show you examples how we can connect.",
            "Maybe I should do it here.",
            "How we can connect validators to \ncolumns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAfter module config I have to provide."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nValidators setting so I should carefully copy this and paste it here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 359 ---\n\nAnd that's how I will put it.",
            "So here's my price attribute."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere is my validator.",
            "The type of validator should be matched."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWith what we created and parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo the minimum value for the price."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think it will be 50."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo we will not allow to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny reality object with the price less than 50 bucks.",
            "Okay, and also we can use message, not just a plain string \nconstant which."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs also supported, but also we can use localizable string.",
            "Here is an example of a macro."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat you can use for localizable strings.",
            "--- Page 360 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd localizable strings are saved separately and can provide translations into other languages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you what localizable strings I plan to use.",
            "I will put it for you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI go to localizable strings.",
            "Probably we can save it before modifications."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now I will modify non localizable."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nStrings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTake significantly longer than usual.",
            "As you can see, my worker process consumed quite a lot of ram."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat's why I will try to save now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf it saves correctly, okay, no problem."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 361 ---\n\nBut in previous versions I experienced some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTroubles with localizable strings here and it turned out to save it.",
            "So when I added once, it physically."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAdded it twice and then denied to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave because it tells that such localizable string already exists.",
            "In case, if you face this kind."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOf issue when you add localizable string."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTry to save and then get error message about duplicated localizable strings.",
            "You can just remove that visible one \nthat you created."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnother one which is invisible will be still saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can bypass this bug."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAs you can see, Creature also as."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 362 ---\n\nAny software, it has its own bugs.",
            "Sometimes bugs are detected, fixed new bugs appeared.",
            "So it's normal, more or \nless normal for any software."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnother localizable string that we will need is about area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo localizable string for area."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd for its."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nValue here, save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nArea can't be less.",
            "Let's try to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring.",
            "It looks like in this version this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBug was finally fixed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThat's nice.",
            "So for the price we already set.",
            "--- Page 363 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSettings, now we do the same for area.",
            "So let me show you what we."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDo for area we will set validators setting for one column.",
            "We can use multiple validators so it's possible to make \nchecks with different criterias."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd in my case for the area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will use the same validator but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nMinimum value will be 100 square feet."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo it's close to 10 square meters.",
            "We think that we will not input any kind of realty less than 10 square meters or 100 \nsquare feet."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's our limitation here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAnd we will use localizable string that.",
            "--- Page 364 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe already successfully saved.",
            "Okay, now we have this example, save."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt and then it's our turn to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTest and check out how our data were saved.",
            "How well it looks, we can close."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOur editor, go to main app probably."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nLet'S reward it just to fight with."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAny potential impact of browser cache issue.",
            "Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow you see that once we finished."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd moved focus out of control, you see we have some checks and this checks displays error message."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 365 ---\n\nPrice can't be less than 50 bucks.",
            "Area can't be less than 100 square feet.",
            "If we try to save such data, system will \nreject it tells us we have problems and we have to fix them.",
            "Okay, let's fix only price try to save.",
            "We still have trouble \nwith area."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo this validation may help you to improve your logic to make it more protected to get rid of like silly mistakes made \nby end users."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd I think that this is something that will be quite important in your future projects and implementation."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNow I plan to show you some."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSimple topic and it's simple but it's very important because such topic will be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nQuite often faced in your projects.",
            "It will be not really directly connected with programming, but it's something that \nyou definitely should know about."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI'm talking about typical settings of columns."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat you need according to some conditions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 366 ---\n\nFor example, some column must be visible."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOnly in case of a certain condition and otherwise should be hidden or another."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nColumn must be required according to some conditions and otherwise should be optional.",
            "And also you may need \nsome like talk about visibility, about required settings or about read only columns.",
            "So such Typical settings for \ncolumns are."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nFrequently faced in requirements from business owners and that's why such functionality was decided."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTo implement as a no code Tools."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd developers code such functionality.",
            "Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage business rules mainly used for controls."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nVisibility, maybe required property, read only property and also we have object business rules here it's called realty \nbusiness rules, but."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 367 ---\n\nYou should understand this is about object.",
            "Object business rules also offer us possibility."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo make some filtering and depending on the type of business row, it will be physically saved into metadata of a."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage or into metadata of an object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's imagine our task is quite simple."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nTo show comment only in case of type is not empty."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo when we add new data, type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCould be not specified.",
            "In this case, comment should be hidden.",
            "Let me show you how we can do this."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe can use page level business rules."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 368 ---\n\nBecause it's about column visibility add new rule.",
            "This rule will have automatically generated title to be applied to the \npage and it has triggering condition, page is open or some condition changed."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo we have if scenario and then action.",
            "Okay, let's start with if and now we will think of something like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI should do it a bit better with initial status.",
            "Okay, so if our type is not empty, then comment should be visible."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's try to do this attribute or."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData field realty and our type okay, if type is not empty so we can use condition is filled in.",
            "If this condition is true, \nthen we will use action show elements on the."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nPage and we can decide what element."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWill be shown to be Input column of a comment text comment okay, so if type is filled in comment will be visible."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOtherwise comment will be hidden."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's try to test how it works.",
            "--- Page 369 ---"
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWe can save it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSave our page."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow and let's check how it will be physically working for us."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAs you can see, each time you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDevelop something, this is very important to immediately test it when it's ready and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWhen you make many different changes you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMay think of okay, I will do many changes, then I will test them in total."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI do not recommend you to follow this approach, so it's much better and more safer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 370 ---\n\nIf you will do some small step."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen you go to your system and."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nStart to test it."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThen you do another small step, then you do another test."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe reason is that creature client side sometimes could bring you surprises and it will be not so clear according to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThe error message text in your browser console.",
            "To understand what exact part is gave you such a surprise."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's better to make small steps and to test it frequently.",
            "So once you get and start to."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGet some error messages and you will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEasily understand that it was caused probably the most latest recent changes and you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 371 ---\n\nShould take care about it and maybe."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nRevert them maybe to look carefully and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou will find some errors.",
            "So small steps and frequent testing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nType is set, Comment is visible.",
            "It's clear the type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think that we have a problem because of initial state of the square column.",
            "Let me show you how we can fix it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInitial state should be aligned with our business rule and in case if we."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nCheck some condition and turn this column on.",
            "So make it visible.",
            "So by default this comment should be hidden.",
            "Let's select comment, let's set its visibility default visibility not visible and then save our changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nClear."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 372 ---\n\nNow you see our comment disappeared.",
            "If we set some type, it appeared again.",
            "If we change type, it appears again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you clear, it hides."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nHides?",
            "Yes.",
            "So that's how you can manage visibility and such setting.",
            "As you can see, it's a no code setting.",
            "So you \ncan make all the settings with your mouse."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nWhen I want to specify manager here, I definitely want to specify someone who is company employee and not just a \nrandom contact.",
            "So I want to make some simple filter here which will help me to select only context with a certain \ntype.",
            "And we can do such filtering with the help of business rules.",
            "So let's go back to our page, go to business Rules."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nOkay and first of all I will check available action here and in comparison with page level we have more options here \nand I plan to use simple static filter Business rule Static filter will not require any as you can see static filter will not \nrequire any special conditions I mean for triggering so it will be applied always.",
            "That's why it's called static."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo please be careful when you use this home version and just know about this.",
            "So this will be temporary not \navailable for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 373 ---\n\nAnd then save it again."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nNow I save page and I will reload my main tab and you will see how this manager filter will work for us.",
            "Go back.",
            "Okay, let's save changes.",
            "Close reload this reloading is necessary only to work with browser cache."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's make more examples better examples."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd go to customer 360 add more contacts to make it representative and let's make a contact name something like \nJames Bond and type will be customer.",
            "Okay, one more Bruce Lee will be our employee and Bruce Willis will be also \nour employee.",
            "So you will see we have some different contexts, different types and let's go back to our realty, try to \nselect manager system only shows us only context with a certain type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is very simple filtering tool."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see we just used only mouse to set up this type of customization.",
            "But it's very efficient and that's why."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI think it's important for you to know about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause even if it doesn't require programming."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 374 ---\n\nBut if you did not attend our."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCustomization course, you still need to know."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat such type of filtering is supported.",
            "Also I can quickly show you another filtering of connected fields like filtering \ncities by countries."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo or maybe if we focus on us only.",
            "For example we can filter cities by states but Maybe for countries it will be more \nclear and understandable."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo let's go again to our page.",
            "In order to filter something by something."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course we need to have connected lookups."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLuckily in base product cities and countries are already connected."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEach city has corresponding country reference.",
            "Let me show you cities lookup already has connections with country.",
            "Let me select fields to display.",
            "We have names.",
            "I don't need time zone at all."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProbably we have to start from country.",
            "--- Page 375 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause we plan to input data starting from country providing country value and then USR country copy and lookup.",
            "We will use standard lookup.",
            "Country that is already present will be drop down list.",
            "Okay."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThat will be based on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's also CT drop down list.",
            "And here we can name something like city."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nGood unique value for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay.",
            "Is it okay?",
            "Should be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nChanges to the object level."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd so to fully modify our data model properly to take maybe less than a minute our time.",
            "It okay, saved.",
            "Well, now \nwe go to business rules."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 376 ---\n\nThis is a special type of filter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhich is I think originally designed for connected lookups.",
            "And we can specify what column to filter."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nBetween cities and countries.",
            "So it will show us where city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCountry which means country value inside of city lookup equals to value of country."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nProvided in our realty page and also automatic settings for clearing when country changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nClearing cities when country changed or automatically set country if city was set and for example country was \nempty.",
            "So you can do this also then country will be automatically populated."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo this rule will work good for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut what I need to add here is triggering condition."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWe need to change such Filter each."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 377 ---\n\nTime when country changes, so page is opened or some changes and when country.",
            "Okay, we can select here is \nfilled in."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nWorking with this filter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSometimes it will work, sometimes not."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo you should not forget about this condition.",
            "Let's save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSave page and then we will test it.",
            "You will see how it works."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, let's test.",
            "We need to reward it.",
            "And now let's check it out."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's say Miami and you see."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCountry, you see city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, Country, States, United States.",
            "--- Page 378 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nCities.",
            "As you may see, cities are filtered by country.",
            "You only see cities."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, Hartford, Frankfort."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLooks like only."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUS cities I think.",
            "Okay, so now you see it looks."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLooks like.",
            "Well, okay, let's take another example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo country, you see all cities from different country.",
            "Ararat, Astrakhan, Baghdad, you see Bishkek, you see Bratislava."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nSo from different countries from."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so if you set some city."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 379 ---\n\nCountry will be populated automatically in this case."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if you clear country, city was cleared automatically.",
            "So if we provide some country like Bangladesh, you will see \nonly filtered cities."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nLet's go to our states."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we have to search for Seattle."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYes, you see it finds and filter works well.",
            "So this type of filtering can be."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nDone not only for citizen countries.",
            "For example, you can make two connected hookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne is type of document and second one is for example subtype."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nAnd subtype should have a lookup column."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nReferencing to corresponding type."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\n--- Page 380 ---\n\nAnd in this case when user specifies type, it will be technically possible to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFilter subtypes according to selected type.",
            "But this canonic example with countries and cities, I think it's the easiest \nto."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nUnderstand examples so you can also use it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDon't forget about business rules triggering by changing country.",
            "So save it.",
            "Probably that's enough for today and \nwe."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHave one more session tomorrow that will."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBe dedicated to our client side."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI plan to show you how to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMake details and also probably answer your questions if appear.",
            "If you ask something about some cases with \nprogramming inside of our pages in Freedom UI later we probably will also invest a bit of time into classic."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nUI examples and I think you'll be.",
            "--- Page 381 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nInterested in migration from Classic UI to Freedom ui.",
            "It will be only client side, so objects will be the same.",
            "I will \nshow you how you can do such migration."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThank you very much for your time."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nToday our session is over.",
            "In case.",
            "If you have any questions with your."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEnvironments, with your homework, tell me please.",
            "It's important for me to know.",
            "Do you have any troubles or other \nnotes, any questions?"
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nI have one.",
            "Did we go over.",
            "I could have just missed this now.",
            "It could have just been me.",
            "Did we go over the \noverriding."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou probably asked about something that you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAlready saw in Classic UI with overriding of methods or this is something else.",
            "So can you explain the business \nexample?"
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\n--- Page 382 ---\n\nNo, sorry, I just saw it on the list on.",
            "So you know you have the list of the breakdown of each day."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, you mean this one?"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThis is."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYeah, yeah.",
            "So this schedule is a bit outdated unfortunately."
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nThat's it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui.",
            "In Classic UI you \ncould rewrite or interfere into some life cycle stages of page by replacing its like critically important methods.",
            "In \nFreedom UI you can write your."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOwn methods, but system does not allow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou to significantly change this life cycle.",
            "So it looks like I tried and."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt looks like when you have for.",
            "--- Page 383 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nExample some handler and you already know that there is a base product handler which is declared somewhere in \nparent."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nTemplates, you cannot replace it with your own.",
            "Rejecting execution of all parent implementation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in Freedom UI you can write your own part and it will be."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nJust part of all the steps executed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol, I think so in Freedom UI we have different conditions for programming.",
            "I plan to update this program for."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOur sessions and it's a bit outdated."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHere, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural.",
            "So \nwhen you do simple settings, then."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYou do a bit more complex."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 384 ---\n\nAnd so our flow of real topics that we study, I think it's quite optimal for current version."
          ]
        },
        {
          "heading": "Speaker 4",
          "key_points": [
            "# Speaker 4\n\nThanks Mario."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Paddy for questions and any."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nAny, any difficulties with your Homework."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen you do examples, when you make your sections, Maybe.",
            "Maybe you have something to say."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nIt happens that most of our participants watch videos like you now and then they decided to process video files \nmuch later than finishing of the sessions.",
            "So I recommend you to invest some time between the sessions to watch \nvideos and practice.",
            "Because in this case you will easier understand our next topics.",
            "You will get more experience at \nthat topics and think it will be in general faster for you."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nSo at the end of the sessions next week, I will explain you some details how we will prepare for the exam, how it will \nbe organized and this is optional thing.",
            "So if you feel confident, you may apply for it.",
            "If not, you may use Academy \nwebsite and apply for certification much later.",
            "So if interested in preparation for the exam, also keep it in your mind.",
            "And if you have some questions, feel free to ask."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 385 ---\n\nOr 50 minutes to get this video."
          ]
        },
        {
          "heading": "Speaker 3",
          "key_points": [
            "# Speaker 3\n\nThank you and goodbye.",
            "See you tomorrow.",
            "Bye."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt.",
            "--- Page 386 ---"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items.",
            "And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui.",
            "So what I need \nto tell you first today, this is about details.",
            "Because this is a very important piece of Creature configuration and you \nwill face it almost everywhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you can see that for one main account record we can save unlimited number of addresses.",
            "So we can put \nunlimited number of addresses here and they will be usually displayed in a list.",
            "And the reason why Creature has \ndetails is need to save additional data in connection to our main entity.",
            "So our main entity is a single record and then \nwe need to keep information for example about different types of addresses for our customer or different emails."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo one account connected to as many detail records.",
            "And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records.",
            "Vikrat, thank you very much for confirmation.",
            "Thank you for working \nwith your redis and I'm really happy that you finally made your system working correctly.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have contacts list, we have also emails or sorry, we have probably it's better to say communications.",
            "If you go to \ncontacts open any record, you will see communications detail.",
            "So here you see we have mobile phones, email, \nbusiness phone, but in general we have plenty of Supported communication options and communications are saved \nas a detail connected with main entity in context.",
            "We also have detail named job experience."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's how we can select a company and to see all its connected contacts.",
            "So usually connection is one too \nmany.",
            "Maybe some of you will ask about is it possible to make a connection one to one or data connection many to \nmany.",
            "Physically this is possible, but you should use for one to one you still will have to use separate object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details.",
            "So this is nothing special for you.",
            "But some of you who never attended \nany of creatio training sessions, so you need to know what detail is how to build it because it's almost the same \nimportant as knowledge how to build sections.",
            "So I will show you step by step example of building details and I will \nexplain why we need it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn our realty business, we definitely need to speak with potential customers.",
            "We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental.",
            "And we need to organize these actions.",
            "So we need to \norganize such visits, such conversations."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object.",
            "So new object requires new good working friendly code.",
            "We can call \nit something like realty visit title will be also good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required.",
            "We have no default values here, but we have a special lookup behavior."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted.",
            "So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 388 ---\n\nSo here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically.",
            "This is performed by help of foreign key at the database and with option cascade on delete.",
            "So physical delete performs on the database level, not at application level.",
            "Unfortunately you can't handle you \ncannot handle such delete at application level because it will be triggered and made by database foreign key tools."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can call this colon visit date time.",
            "We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord.",
            "And it makes sense especially if you want to change for example till tomorrow.",
            "But having similar time \nsetting automatical value here will be quite good."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo potential customer is a person who probably will buy a house or will rent an apartment.",
            "So potential customer, we \ndon't know who it is.",
            "So sometimes could be empty.",
            "And lookup is contact object which is a very typical way when \nwe need to get some kind of personal reference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have an option do not control integrity which means please do not create foreign keys by default.",
            "When you \ncreate a lookup column foreign key is created automatically.",
            "But if you enable option do not control integrity it \nmeans that foreign key will be not created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal.",
            "But it's very rare case when you remove contact who \npreviously was a user of your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity.",
            "So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company.",
            "And then you have a table in this database contacts table which has 2000 foreign keys on it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why they decided to make it with no foreign keys.",
            "For created by and for modified by and such behavior \nwas inherited from base lookup.",
            "Oh sorry.",
            "From base entity.",
            "If you will search for a base entity in our packages, open \nit."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source.",
            "So here we have just standard situation \npotential customer based on contact.",
            "We have all standard settings and the only change was selection window.",
            "So \nfull scale selection window selected just to make it more comfortable to select potential contacts potential \ncustomers as a context from big selection window.",
            "Okay, what else?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo comment after a visit could be really helpful if you want to proceed with this realty.",
            "So we can have a comment \nas a text field, very simple, not required and just text value.",
            "Okay, so now it looks like our simple detail object is \nalmost ready and we have to save and publish it.",
            "Clicking publish as you remember will automatically perform save \nfirst."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you can see pages tab and we have to specify edit page for our reality visit.",
            "Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page.",
            "Our column set is not so big \nand impressive so we can just take some mini page example which will also look good if you have not so many \ncolumns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo reality visit form page Its parent packages realty template is mini page.",
            "Great, now we have to use existing \ncolumns.",
            "As you can see we can add new columns but we already have data model attributes already designed in \nour object so we can just show it up.",
            "So what we need here is visit date and time.",
            "Probably the first important \ncolumn that we need to display."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user.",
            "So we can hide this column so we cannot show it on the page.",
            "And in case of \ncreating a record detail or in case of updating new record or update an existing record or editing record."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be just hidden, it will be not shown on the page and our reality visit page will look like this.",
            "We can see why \nis there a red asterisk beside visit date and time and parent realty.",
            "It means the column is required system will not \nallow us to save data if required column is empty.",
            "Okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is very common for details and creature to hide parent column from the page at all.",
            "So we can save our page \nnow.",
            "So save it fully.",
            "No business rules, no code, no any special settings.",
            "So try to keep it as simple as possible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen you edit, you want to specify totally another set of columns.",
            "It could be used.",
            "And also we have an option for \ndifferent pages depending on some specific field value.",
            "This can be helpful in case if your entity is quite big and \ncomplex."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why we have this option multiple pages based on specific field value.",
            "So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting.",
            "And depending on this column we can use \ndifferent pages.",
            "And when you look at activities section, for example, you select an email, try to open its page based \non this information system will show you email edit page.",
            "If you do the same for a call, it will open you call edit page \nfor activity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, finally we finished and we can publish our object again.",
            "As you can see, we have to do it twice.",
            "First to create \nit, second to finalize assigning of a page for the object.",
            "Okay, great.",
            "Now our object is ready."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not.",
            "In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object.",
            "So we don't need to modify it.",
            "Attempt to modify.",
            "We should not remove it \nfrom the system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have another options like finding your corresponding form page and open it from configuration section to be the \nsame result.",
            "Or you can achieve the same result if you go to settings page physically system designer.",
            "Then you find \napplication hub.",
            "Then you find your realty application.",
            "Switch to pages and find form page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it.",
            "That's why it's called expanded.",
            "I would say it's \nexpandable when it's necessary to see some data from it.",
            "So let's use this expanded list component carefully drag \nand drop it on our page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail.",
            "It immediately shows us set of columns.",
            "So possibly we have to take care of set of columns.",
            "And I would like \nto show here first to be date and time potential customer, maybe comment and then create it on maybe just for \nreference."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd there is no horizontal scrolls in classic UI and only 24 available columns to be displayed.",
            "So freedom UI is more \nflexible here.",
            "Okay, so we have this list of data, but what we need to do how did you add the columns again?",
            "I just \nmissed it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if it has some data, they will also see corresponding data and they will see what they expect.",
            "So here is our list.",
            "But also we need to do some additional settings in the right part.",
            "This is detail and detail must show us data only \nconnected to his main entity record only for currently selected realty and not any other realty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this.",
            "So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty.",
            "That's how we will filter our data and show only visits for corresponding house, not for any \nother another house.",
            "Okay, this filter is mandatory, so you must do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can also program bulk actions for list.",
            "So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions.",
            "For example, you can program additional actions here and that's how you can do some \ncustomization and additional functions that will be running for selected data.",
            "They are called bulk actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically.",
            "But here we have important setting which column values to set.",
            "As I told you, when we create new \ndetailed data, we must take care about parent reality value.",
            "So we have to set here some default value for parent \nreality.",
            "Parent reality will have its default Value we have not so many options here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo please remember this is filling of a column that is used for connection between visits and our realty.",
            "Okay, great.",
            "No any additional settings.",
            "So you just have to remember when you build your detail, you should set up your list and \nthen take care about plus button.",
            "That's all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 393 ---\n\nIf other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails.",
            "So let's make a quick test of how our detail works.",
            "Let's try to add new record.",
            "You see default value \nof your visit date and time was set.",
            "Okay, let's set it for tomorrow the same time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can copy this data, save it, check it out.",
            "You see the parent reality is copyable.",
            "It's very important to keep it \ncopyable.",
            "So in this case creating a new record was correctly copied previous parent realty.",
            "And obviously we can do \nit one more copy."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMaybe it will help our system to work more correctly.",
            "Something unusual happens with my browser, with my app.",
            "So \nlet's check about its CPU and memory.",
            "Okay, I will reward the page fully.",
            "This is not a result of adding details, so it's \nprobably some kind of crash."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid.",
            "Without being afraid of something can be lost in the middle.",
            "So I recommend \nyou to do such comments in version control because it helps to keep all your history.",
            "And also if something happens \nwith your environment, having such history will be a great help because you'll be able to recover anything that you \ndeveloped.",
            "So in my case, now everything was saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we will sync changes which means pull and push to common repository.",
            "And now it's okay, it's done.",
            "So we can \ntrack our changes at our GitHub repository 7commits.",
            "You can see all the history, you see how many files were \nchanged and so on.",
            "Each time we do this, you'll be able to track all the history and make control over what is going \non here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also you can use business rules if you want to do Some kind of filtering or simple fields hiding or showing.",
            "You \ncan use all the features.",
            "So you should remember that our page for detail is based on a separate client module that \nwas created today.",
            "It was a reality visit page.",
            "So this reality visit form page, as you can see, it's a separate client\n\n--- Page 394 ---\n\nmodule."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo inline edit should be disabled.",
            "So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user.",
            "Read only details are helpful, \nespecially if you use some kind of integration with third party systems.",
            "And you can read data from third party data \nsources using for example some database to database connection if it's on site and then display such data as a list \nyour pages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications.",
            "So let me explain what I plan to do right now.",
            "Let's imagine this is very typical by the way, this is a very \ncommon scenario."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it.",
            "So we need one more extra column at our accounts section.",
            "And simply speaking, we need to add some \ncolumns into existing entities.",
            "We can do this easily with no code approach.",
            "Let me show you how it's possible to do \nyou can open account page, account form page and then you can go and click on this edit page button."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou may now see some very strange package automatically created and system does not allow us to change it.",
            "And \nthis strange package will be used.",
            "So it will be created by system automatically.",
            "And when we customize something, \nsystem will save our changes into this package.",
            "Okay, let's agree."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut you need to know how technically this is done and where it will be finally saved.",
            "And how to for example, turn \nyour system back to its previous step, previous stage.",
            "If you realize that such change was not designed, was not \ndesired anymore.",
            "So when you change like this, you can save it.",
            "Also you can hide existing columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I attract your attention that we will finally receive new package.",
            "Our customization will be saved as a special type \nof item into this new package.",
            "So let's try to do this and then let's see what finally will happen.",
            "This is a fully valid \nflow that valid algorithm how to customize existing tools.",
            "You could also customize it the same by going to \napplication hub, finding Customer360 app and then making changes for a page from there."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo everything's good.",
            "We can even edit inline edit.",
            "We can even do like this and save our changes.",
            "So then open it.",
            "You see, everything works just as planned."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it.",
            "And such items are not so easy.",
            "Let me show you properties.",
            "We have special type \nof object which is called replacing object.",
            "It's not usual object, this is replacing object."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's open it.",
            "Maybe we'll understand it better when we open it.",
            "First of all, it's interesting that replacing object it has \nreplace parent option on which clearly states that this is not a usual regular object.",
            "Replacing object is used when \nyour original object is present and your task is to customize it.",
            "But original object is not in your package and the \noriginal package is not editable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nParent object is account and replacing Object code is absolutely the same.",
            "This is important rule of creature \narchitecture.",
            "So when you replace some entity, its name remains the same, you can change its title.",
            "Moreover, it was \nused in base platform bank software products where original account was replaced and sorry, it was renamed with a \nanother name called legal entity.",
            "But physically it was still account entity and it's still the same table and the same \nlogical name at program code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes.",
            "So I think that this editor should not \nallow you to modify code in case if you work with replace an object.",
            "Okay?",
            "So code must be the same as original \none."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range.",
            "For example, if original type was text 200, then potentially you can extend it to text 500.",
            "But \nI do not recommend you to do this because you will face some additional unexpected difficulties.",
            "So it's possible, \nbut I think not so feasible.",
            "So it's better not touch types of columns when you make replacing objects."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we cannot rename inherited columns.",
            "We can only change its title.",
            "Our custom columns are shown here in \ncolumns list.",
            "And usually the reason why developers create replacing objects is need to add your own columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases you can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only.",
            "So three levels of access rights protection and when you make a \nreplacement object you can also change such permission set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis can be done.",
            "You can see it clearly if you go to configuration section.",
            "Let me explain.",
            "Let's go to all packages, \nsearch for objects and look for account object and make it strictly searched by equals condition.",
            "So only if object \nname equals to account it will be shown here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 397 ---\n\nBut then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently.",
            "So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles.",
            "Final structure of account is formed by its origin plus all the replacements.",
            "It's interesting to \nmention that at the database level, we have just only one data table.",
            "Let me show you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nReplacing object uses existing table and adds new columns there.",
            "If you will remove replacing object from your \nsystem, logically your new column will disappear physically.",
            "It will be present in the database as a kind of leftover, \nbut it will be not so critical, not so important.",
            "And I think that end users will notice it at all."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd Adrian is asking very interesting question which I plan to move on here.",
            "So you work with some account page \nand you would like to keep your settings saved in a proper place.",
            "Yes, Adrian, I will show you now and I'm just going \nprobably not so fast with explanations here.",
            "So now we have Customer360 app and for this app system created \neditable package.",
            "And we have some contents in this editable package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy default, system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app.",
            "But obviously you may not want to work with such many packages.",
            "Also you may not \nwant to work with packages with ugly names.",
            "Let me explain what I'm talking about.",
            "About let's reload our data, go \nto all items and now you see package with some ugly name, usr CRT customer app and then some strange unique \nsuffix added to it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 398 ---\n\nSo your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system?",
            "And the answer is yes, we can manage this.",
            "This is not obvious and you have to \nperform additional steps to enable such management.",
            "So let me show you how you should do this.",
            "Let's go to \nlookups or we can go to studio lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if you know that it exists, so you will enable it.",
            "Of course, package installed application and we will provide the \nsame name for our lookup and try to save it.",
            "Okay.",
            "This is only developer tool, so we do not need to transport such \nregistering of package to test and production.",
            "We can open contents."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo any new customization that we do in customer360 will fall into this package.",
            "We don't really want this, so we \nwant probably to remove this package at all.",
            "And maybe we would like to use our existing new package which is a \ndev package.",
            "We have it Dev Classic package.",
            "So we would like to use dev Classic package for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGo to advanced settings.",
            "And now you see our dev Classic package is connected to this app and we can see \nproperties of this package.",
            "Let's check.",
            "What about dependencies?",
            "You see that System automatically added \nCustomer360 app as a parent dependency to this package when we made changes, when we customized this stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe want to get rid of it and we will continue customization of Customer360 in our classic package.",
            "Andreen, is it \nwhat you were asking for?",
            "Okay, great.",
            "Thank you, Adrian.",
            "So now we have multi action move to another package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see, this transfer takes significant time because it looks like system performance performs a lot of \nchecks of items that we process and it makes sure that we have no other connections to this item.",
            "So it does\n\n--- Page 399 ---\n\nsomething like probably some excessive work.",
            "But okay, it makes it successful.",
            "Now you see, our customization \ntraveled to this Dev Classic package.",
            "Now if we go here, you see our customization should be present here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow it's empty.",
            "It should not take a lot of time.",
            "Yes, successfully deleted.",
            "So we have no ugly package anymore.",
            "We \nhave some correctly created packages, good names."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool.",
            "If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor.",
            "So you should consider yourself before making changes here because it's like architecture but you can manage.",
            "Thank you Adrian for your questions.",
            "Okay, it's time for us to have just a short break, probably five or seven minutes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, thank you for all of your active questions.",
            "Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nHi."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, hello."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a. I have a small question I have.",
            "Yeah, so I said we use the two lookups."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 400 ---\n\nOkay."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nFirst one is for country and second one is for city.",
            "Right?",
            "So in the drop down button we have one plus icon is there if \nyou remember."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo what about which lookup you're interested?",
            "Is it the main realty or."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, main reality.",
            "We have country and city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDrop down type."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nNo country and city."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one.",
            "So I can't hear."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nYeah, yeah.",
            "So we have a plus icon over there, right?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you ask about if it's possible to manually create new city for this.",
            "--- Page 401 ---"
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nOkay, Can I, can we hide that button?",
            "Disable that button if possible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis.",
            "Yes, sure you can.",
            "I just forgot to do this.",
            "Yes, let me show you.",
            "We can go to edit page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects.",
            "So you need to get some basic understanding of how classic UI can be managed.",
            "And before \nproceed with classic UI customizations, we need to make some preparation that is necessary and very important for \nclassic ui.",
            "So in order to create new section in classic UI you need to prepare target package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, I'm not sure because it looks like this is hard coded thing.",
            "So possibly you may find somewhere in CSS value for \nthis color.",
            "But it looks like this is an image designed somewhere in the app.",
            "So it was not supposed to be \ncustomizable, I think.",
            "Let me show you with CSS it's not possible."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you may try to replace actual storage of this image and you may design your own and that's how you will finally \nmake corresponding change.",
            "Rakhi, is it clear?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is part for core which Is not designed to be changeable by configuration changes.",
            "But if you really want, you \ncan replace files on disk with another ones and that's how you can do this.",
            "Thank you Rakhi, Very interesting \nquestion and let's move on.",
            "So I just wanted to explain you that in case if your plan is to use classic UI \ncustomization, then you will have to take care about current package system setting."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session.",
            "In the current example, current package is not cached, so we may change it without logging out.",
            "Okay, \ngreat.",
            "So we can change save it then.",
            "One more tip that you need to know before starting Section Wizard."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache.",
            "So we need to do this restart.",
            "In this case everything will work.",
            "Okay, good.",
            "Now we \ngo to settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have to be very careful with the code because code will not be able to change if we finish its input.",
            "And that's \nwhy we have to type it correctly from the first attempt.",
            "Realty Classic.",
            "So this is our code.",
            "Once we move our focus \nout from this control, you will see system will think for a bit and then we will not be able to change this code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will only change something like a name column.",
            "I will provide some minor change copyable setting, no any other \nsettings.",
            "So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue \ncustomizing of my section.",
            "But in case if it fails to save and it will be obvious that I need some more steps to \nprepare my system, then I will not lose time for setting up columns.",
            "So saving objects is the most critical step of this \nprocedure."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we can edit it.",
            "And editing a section is much safer than creating it.",
            "So we can go to edit page.",
            "Now we can \ncustomize it.",
            "And I will quickly add similar columns as we had for Freedom ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday's Friday and probably tired a bit.",
            "So copyable value type based on existing lookup, realty type or Classic UI \nDrop down list block behavior.",
            "No redundantly no hiding titles.",
            "Everything is okay here.",
            "Save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBy the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui.",
            "Comment here in their name is comment.",
            "But what is interesting here we can make a special option called multiline \ntext.",
            "You will see what will turn it into the column.",
            "So multiline text has a very interesting feature which is not \nimplemented in Freedom Live."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary.",
            "And \nlet's go back keep it simple and save the changes.",
            "So I want you to see how Classic UI section looks like.",
            "In Classic \nUI we have much more objects created for a section.",
            "Now you will see in configuration section close properties of \npackage, probably reward it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have much more objects for classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects.",
            "And we have more tables for this for the database.",
            "And in Freedom UI such tools are \nincorporated into commonly used objects for tags for files for folders and it makes it more efficient storage.",
            "Okay, so \nlet me show you how Classic UI section looks like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's go to another page.",
            "Go to reality classic page.",
            "Yes, we have some minor issues here, but in General it \nworks.",
            "Okay, try to add new record.",
            "Here you can see how Classic UI edit page looks like."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 404 ---\n\nSo okay, let it be Paris Ren.",
            "The type is apartment.",
            "Offer type is not filled in so far.",
            "And here is what I wanted to show \nyou.",
            "This is voice input and speech recognition piece."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package.",
            "So this is important step because such data also should travel to our test and \nproduction.",
            "Now if we go to Reality Classic you can see that offer type can be selected and we can save it.",
            "Okay, \nlooks good.",
            "Some minor steps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis one will be about position of a module in Workplace.",
            "Let's check Reality Realty Classic.",
            "Great.",
            "Third one will be \nabout access rights.",
            "That's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this.",
            "So \nsome browsers does not.",
            "Some browsers do not support this and that's why you see it's not in any browser.",
            "Okay, \nthank you, Rahi.",
            "And what about languages?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have different approach for setting up columns.",
            "So we can provide column settings type.",
            "Maybe you need price \noffer type.",
            "Okay.",
            "And finally we can have a menu comment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can find it here reload and that's how we can change and transport Classic UI columns setup to test and\n\n--- Page 405 ---\n\nproduction.",
            "This one is saved in sysprofile data at the same with details.",
            "Okay.",
            "Probably today's Friday and it's \nenough for today.",
            "And I would just want you to see a couple of images of what client modules in Classic UI looks \nlike."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso it will be renamed on disk in our dev classic package.",
            "You will see realty classic section.",
            "Yes, this one renamed \nand this one was also renamed.",
            "So you see we have full correct renaming on disk as well.",
            "And after doing this I \nrecommend you to instantly check it out if your section works well or not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAfter we do this we can bind columns to our package creating one more data item in our classic section data was \nbound successfully close it.",
            "Now we have to review what we got in our package in order to remove previously \ncreated unnecessary data item here old one is not needed anymore because it represents old values, old settings \nwhich will be not so practical.",
            "You see, because we renamed our module and old name was remembered here.",
            "Even \nif we actualize it, probably we will see there is no data for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when you rename client modules because of ugly names, take care about quest API column settings because \nyou will probably have to review them afterwards.",
            "Okay, so final quick brief look at our client modules in Classic ui.",
            "So in classic UI section page looks like this.",
            "When you open it you will see this code.",
            "You will see define word, \nmodule name, dependency array, factory function and some body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo our functionality is now in parent one and all the buttons for classic UI section, like new actions, view buttons, \ngrid folders, feature tag, everything is inherited.",
            "That's why we do not need to customize it and that's why this code is \nso small."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually.",
            "And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you.",
            "Okay, that's all for today.",
            "We just briefly mentioned Classic UI and we probably need to pay some \nattention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers \nwho started questiqi Solutions and unfortunately such migration is not automated yet."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs a final step for today, it looks like I unnecessary caused it.",
            "I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history.",
            "And any of you who wants to keep how our \nsession proceed, you can also watch our repository at GitHub.",
            "Thank you for your time.",
            "Our session is over."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number six of our development on Creature Platform Guided Learning.",
            "Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration.",
            "And then we will fully switch to work \nwith server side.",
            "So recently we managed to create a fully separate Classic UI solution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui.",
            "And most development is focused on Freedom ui.",
            "And you also remember some interesting feature, \nsome feature for voice recognition, you remember we still missed it in Freedom ui.",
            "And you also can do details, you \ncan program buttons or actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen you can create a handler as a function add methods section.",
            "And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data.",
            "I will show you more \nexamples later.",
            "And this is just a quick brief introduction for you.",
            "If you will work with some Freedom Classic UI \npages in this case, this possibly can help you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nUnfortunately we don't have any automated procedures for this.",
            "And especially this becomes additionally complex if \nyou have some programmed code in Classic ui.",
            "So I will show you the most practical way how you can switch from \nClassic UI to Freedom ui.",
            "I will also show you some settings and system settings for this which impact on how you \nsee your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSuch items which have section in their name or page in their name, they usually designed as Classic ui.",
            "If you look at \nthe pages and you see form page or list page, it's a Freedom ui.",
            "Of course, physically they are totally different."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 408 ---\n\nAt the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes.",
            "So server side part will remain the same.",
            "Data, items, \nlookup contents, everything will be the same.",
            "The only change we expect to do will be our user interface area."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be possible to switch.",
            "First of all, I need to tell you about some important settings related to such view.",
            "And \nI would like you to see this background like frame."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let me show you system settings and this system setting is called like Freedom use Freedom UI interface.",
            "This \nsetting generally turns on or off this background frame stuff.",
            "And if we just for test purpose want to turn it off so use \nFreedom UI interface was originally on we turned it off and it's cached.",
            "So in order to apply this we will need to log \nout and log in again.",
            "Now you will see how system will look like with the Classic UI set of section and the top search \nbar."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we can also go to Workplace Management System Designer.",
            "This page go to Workplace System Setup.",
            "Let's \ncheck our customer 360 workplace and you see use only in shell in like in usual words.",
            "If we want to translate it into \nsomething that you can easily understand, it means that use only in Freedom UI background settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections.",
            "It's still supported.",
            "You see, \nwe have Freedom UI background, but we have Classic UI stuff inside of it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFor example, some users are really stick to some Classic UI solutions.",
            "They are not ready to switch to Freedom ui.",
            "They work with some basic UI sections and it's critically important for them.",
            "So you can manage this stuff for\n\n--- Page 409 ---\n\ndifferent users."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is a page which will be temporary important for you, so it will be not forever for you.",
            "And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it.",
            "So you will not \nreally need to switch back to Classic ui And that's how I recommend you to follow this personally."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way.",
            "So let's go to Settings, then go to Application Hub so we can create new app.",
            "As you remember, application is like a \nnew top level setting or like application entity which may include one or several packages inside.",
            "We already have \nFreedom UI reality section, but we don't have any classical representation for it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can compose kind of icon for it.",
            "And we will use this very important feature link to an existing object.",
            "This is very \nimportant.",
            "So this is a key feature of all this migration idea.",
            "We will use existing realty Classic UI main realty classic \nentity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt only uses existing object and then creates several client module.",
            "So I don't expect it to last longer than 20 \nseconds.",
            "So let's see how it works for us.",
            "And then you will see the main idea of migration.",
            "So Generally it's pretty \nsimple."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can hide unnecessary columns.",
            "We can add the columns that we need you.",
            "Now you see all our classic object \ncolumns are here.",
            "So we can specify say okay, we want to see name, price, type, offer type and comment and then \ndate of creation.",
            "Order of selection is important here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools.",
            "So I always want to check what is going on there.",
            "And that's why we go to \ncorresponding new created package.",
            "You see this package must have dependency from dev Classic.",
            "Yes, has it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nForm page is Freedom UI edit page for a section for an object.",
            "And as you can see it has its own properties in our \npackage code title.",
            "Great.",
            "And we can specify columns as we wish."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it.",
            "Okay, so in \ngeneral it looks like this.",
            "We can also try to specify drop down for types."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThere is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui.",
            "So if such logic exists, you will have to reprogram it Working at code source code part of the client module.",
            "So I \nalready saved it.",
            "You can close it.",
            "Now you see some changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is a result of some browser cache issues.",
            "Okay, let's cancel this log out, log in, go to Freedom UI section.",
            "Also I \nwould like it to be present in my.",
            "Let me show you in my studio Workplace.",
            "So let's go to Workplace Studio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 411 ---\n\nNow let's go to Studio Realty Classic and Migration is somewhere at the Antifa world.",
            "I expect to see my sections on \ntheir places.",
            "Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff.",
            "And migration \nis our Classic UI data shown in Freedom UI user interface.",
            "Trying to open the edit page shows us Freedom UI page \nfor migrated stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages.",
            "But having the data stuff the same.",
            "It's so doesn't take too much time because your data is data model is ready.",
            "And \nwhat is interesting, we have special parts of section like folders like tags and notes.",
            "So nodes will be taken correctly \nfrom Classic UI part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's really hard to.",
            "Now we switched to Freedom UI and that's why Classic UI edit page is not working normally.",
            "But for different users it's possible to set up.",
            "So Classic UI open the page.",
            "As you can see in Classic UI I open the \npage and I see Freedom UI edit page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo finally when you do migration, you will use this help of Application Hub.",
            "You will get new package for your \nmigrated stuff.",
            "From Classic to Freedom we will have set of client modules and all logic that you miss."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo server side part of your migrated stuff will be the same and you just need to check that it still works as expected.",
            "In case of any questions, I would be happy to hear.",
            "As usual, video recording is performed."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 412 ---\n\nYeah, I have a question.",
            "Is realty."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it.",
            "So \nit's like you have an old PC and new PC and you think about installing some program.",
            "Of course it makes sense to \ninstall it on UPC unless you have very serious reasons to use Classic UI for it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause in Freedom UI you have in like in several times more available.",
            "No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on.",
            "Classic UI is now supported only for existing \ncomponents.",
            "No new components are created for Classic ui.",
            "We still have thousands of customers with running \nClassic UI solutions and it is quite good."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nThanks Amelia."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you Paddy.",
            "Thank you for your question.",
            "Okay, so now you know how to do first steps."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have some tools as I showed you that intended to help you with it.",
            "But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui.",
            "So not to be \ntoo long in this intermediate stage where some users are working in Classic, others are working in Freedom."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have.",
            "Probably so anyone I\n\n--- Page 413 ---\n\nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios.",
            "So if you will have something unusual, just tell me, I will try to help with it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo probably I have to start that in any package.",
            "Now we see we have some set of items of different types.",
            "So we \nhave items with different types.",
            "If you try to add an item manually, you now will see we have objects and we also \nstudied what is replacing object.",
            "We have pages, so client modules of different types."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo object is a server side item, but its changes are applied easily without need to compile.",
            "So generally C code is not \nso let's say heavily used for objects and replacing objects.",
            "Of course, C Sharp source codes, if you design it \nseparately in source code item will definitely require some configuration."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nFinally to compile and get executable DLL libraries and then use such libraries at its website.",
            "So C Sharp sources \ndefinitely require compilation.",
            "All JavaScript part this all this JavaScript part obviously does not require compilation \nbecause it's a set of JavaScript files.",
            "They are executed as interpreted code at browser side.",
            "So when you save and \napply any change in JavaScript part in client module part, it also does not require any compilation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn general, it's recommended to have as less as possible for code in your processes.",
            "Because processes are \noriginally designed to be a no code tool and possibility to code into it.",
            "It's not its primary purpose.",
            "The primary \npurpose of a process is to make your business logic a set of steps that you can easily construct with using of your \nmouse and which will not require programming and then you can get your business work done."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nData is also metadata, not compiled and import.",
            "We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff.",
            "So if in general such DLLs if we import them are included into \ncompilation, so we can consider this stuff as involved in compilation.",
            "Now you see only four types of items that\n\n--- Page 414 ---\n\nsomehow touch the compilation and in general that's how we can say that creation has compilable server set."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into.",
            "Let me show you what they are turned into DLLs that you can find in Bin folder here.",
            "Or you can also \nfind DLLs as a result of compilation in many packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it.",
            "I \nintentionally avoid making our own C Sharp sources at the beginning.",
            "So first I plan to show you how we can make \nprocess with some piece of programming inside of it.",
            "We need some package for this.",
            "I prefer to do it in my realty \npackage."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOr maybe it's better to say lookup package installed application.",
            "It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have.",
            "And we \nalready did it avoiding creating one more package for Customer360 customization.",
            "So this is something that we \nalready studied."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system.",
            "And in general business \nprocesses are interpreted.",
            "It means you construct such kind of diagram and then ask system to run it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items.",
            "Okay, let's start.",
            "So I need \nto provide a code usr and I need to explain the business sense of my future process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my business sense is to make a process which will do some calculation at server side.",
            "And my calculation will \ninclude selecting some data and calculating average price for realty record.",
            "So my process name will be something \nlike Coke Average Realty Price process and the title of the process will be Calculate Average Realty price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf not just type Minus which means you are only watching and I can do it faster.",
            "Okay, thank you.",
            "Thank you.",
            "Monica, \nAdrian, Eddie.",
            "Thank you to share."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if your process has no incoming flow, it means it's the start of your process.",
            "So take care.",
            "If you accidentally drop \nitems on your diagram without incoming flows, it will be treated as a beginning.",
            "So please be careful.",
            "Okay?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn general, you know that Business Process Editor has two types of items that you can add.",
            "System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side.",
            "And \nwe have items called user actions.",
            "User actions are designed to show some page for a user, usually waiting for \nsome feedback after it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can also consider going to our customization course where my colleagues teach how to manage processes.",
            "So \nwhat my plan is I user.",
            "I use system action script task, the only item in all business process which requires coding in \nthis diagram.",
            "So this item should be carefully put on the diagram.",
            "I can intentionally show you how you can do it \nincorrectly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you see when you slightly move it then you correctly put it on the flow.",
            "So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly.",
            "Now this item has incoming flow, it has its own C \nsharp body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method.",
            "It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation.",
            "So I already have some example which will work for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so I copy and paste this code to the editor.",
            "We can also expand this editor to see like in more comfortable \nways.",
            "And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code \nto type code like this.",
            "Unfortunately for business processes it's not intended to be used so it's not supported."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nProbably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou.",
            "Then you can just make corresponding setting and run corresponding methods.",
            "That's how you may keep this \ncode quite small sized and do not need to create very complicated logic just here.",
            "So it was not intended to be used \nfor complicated logic."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so I will save my code example.",
            "It's not finished yet.",
            "I will just show you what happens if you try to save."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you a bit more examples like apartment in will be an apartment for sale.",
            "Okay.",
            "And yeah, it should be \nreloaded probably.",
            "I just feel okay, it's apartment and this also is an apartment for sale.",
            "So what I wanted to show \nyou we have different types of realty like houses and apartment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need to take into consideration only records with a certain type in order to split apartments from houses.",
            "And \ndefinitely we have to filter data according to offer type splitting sales from rentals.",
            "So when we do this average price \ncalculation we will need to have filters or offer type to include only rentals or only sales and general realty type to \ninclude only apartments or only houses.",
            "And then we will calculate total Amount of all selected records, total price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd physically how we do this is the C Sharp code written in this editor.",
            "And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes.",
            "So if you type some code here, if it has mistakes, \nsystem will not show it immediately for you.",
            "For example, if you write something like this with a missing name of \nyour method, so if you do some mistake with spelling, then you will note about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so let me explain in general what is happening here.",
            "I plan to operate with creation database.",
            "We have two \ndifferent ways to operate with the database.",
            "And now I'm using the approach which supports entity data model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnother approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model.",
            "So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model.",
            "But now this approach shows you this possibility with \nsupport of object model."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso Entity schema query supports caching at server side.",
            "If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient.",
            "So entity schema query supports caching."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nEntity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database.",
            "It has some arguments when we run its constructor.",
            "We have several overloaded constructors \nfor this class and it has arguments.",
            "One of them is quite standard so you will always use it.",
            "And second argument is \na text representing our object code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso you may ask me if we type this code like this how we know about present functions, methods properties and so \non.",
            "We have some Academy server side documentation.",
            "Let me show you backend development.net classes \nReference Go here and we have set of cluster libraries for creation.",
            "Server side you can search for entity schema \nquery class.",
            "Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four \ndifferent overloaded constructors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here.",
            "So let's look at our reality Object just to match our columns we need to select price and area.",
            "Here we \nhave USR price USD column and USR area.",
            "Okay, so it looks like the same."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's better to always add only columns into your selection which you really need to analyze later.",
            "In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns.",
            "So the part of our selection statement that we will finally start at the database overcrowc select then set of \ncolumns that we do from our realty table.",
            "From this table is called root entity which is the first one which will be \nused for construction of our query."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it's possible you can use this argument as a special column path expression.",
            "Column path may include joins if \nyou use lookup columns of your main entity.",
            "In this case it's called direct join or if you use lookup columns of join the \nentity.",
            "In this case construction will be a bit more complicated and it's called reverse joins."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 419 ---\n\nSo we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to.",
            "Or in this case it looks like \nyou select cities and you would like to join all accounts from this city.",
            "And this article will let you know more about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI plan to get corresponding values for my filters with the help of no code tools.",
            "So I expect to get such values.",
            "I will \nshow you how to operators process parameters a bit later.",
            "Now we consider we getting it with a special get \ncommands from process parameters."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause we know for sure that by default our ESQ filters has end logical connection logical conjunction operator.",
            "That's why we have it without any special setting.",
            "So if you want only for debugging purpose, you can get SQL text \nfrom your query, so it's possible it's supported."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data.",
            "This is getentity collection method, which finally returns \nas some collection.",
            "Also you may notice that we use special arguments here and here.",
            "And this argument is called \nuser connection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database.",
            "So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select.",
            "But user connection is an important argument which tells the system who exactly is running this \nquery."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 420 ---\n\nAnd as we get this collection, we have to process it line by line.",
            "So we can use for each statement or there are other \nways to process collection.",
            "In my case I prefer to use for each and we use it for each row or as many rows we have \nin collection.",
            "We will have as many runs of our cycle body inside of our cycle."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo simply speaking, this is the line how we get exact decimal price from our data.",
            "And next line is getting the same \napproach for getting decimal area.",
            "We have some counters here which we use to collect all the prices and all the \nareas."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nCurrently it looks like our code is ready.",
            "We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish.",
            "But it looks like we need some like say five or ten minutes or break.",
            "So let's \nmake it break and then we will continue this stuff and you will see that finally it's not so boring.",
            "And I will also show \nyou how to debug such code today."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nC Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part.",
            "The best way to do this is to use parameters.",
            "So parameters can be \nconsidered as a variable for the process and process.",
            "Items also may have their own parameters.",
            "So in general we \ncan think of parameters as global variables for the process or for certain values of process items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type.",
            "So I copy its name \nshow it for you Go to process parameters.",
            "Also I need to explain if you click on some process item it will show you \nselected item properties."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal.",
            "So add decimal parameter and I will do it like this.",
            "Okay, I hope you are quite good \nin doing it.",
            "So my question is for Monica and Paddy.",
            "Please confirm when you finish this part."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my plan is to use as much as possible of no code here.",
            "And for example we can select a source certain record or \nwe can open certain page.",
            "Then I plan to make a button which will run the process, but unfortunately we can only \npass one single data value as argument when running no code parameter processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will be also unique identifier so we can call it realty ID parameter and here its title will be reality id.",
            "Title is \nimportant for user display and code is important for programming.",
            "Okay, and we can set this parameter as input \nparameter.",
            "Input parameter will be designed as read only.",
            "So process expects this data to be set at the beginning of \nthe process when process is called and it's not expected to be changed it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhat we will do with this id, I will use a bit of no code tools.",
            "Read read data item carefully placing it on my diagram.",
            "You see, there is a special display when you put it properly.",
            "Okay, my read data item will be used to get ID of type and \noffer type.",
            "So read first record of separate selection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis filter will be enough to make read data to select just single record from my database and we can name it read \nreality.",
            "Read reality will be its title and it will be also shown here.",
            "In general, it's good idea to provide corresponding \ntitles for all of your items and no need to sort if you have just one record and reading all columns.",
            "I do not \nrecommend you to use this option."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe are interested in type and offer type.",
            "So originally we expect to get only ID of the certain reality record.",
            "Then we \nwill look into database to get its type and offer type and then we will use read data item to get such type and offer \ntype.",
            "Once we obtain it when process is started, results of such data records will be saved somewhere inside of this \nread data item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we will use getting data from read data into process level parameters and we can do it easily with formula.",
            "Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id.",
            "So parameter target parameter is offer type ID and form of value takes data \nfrom process elements.",
            "Read data offer type double click and then we have this macro save it.",
            "That's how we save \nthis offer type ID here this item.",
            "We can call it calculate average price or calculate AVG price."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if anything should be shown or explained, tell me please.",
            "If it's not clear what we are doing also please ask.",
            "Thanks Betty.",
            "Thanks Monica.",
            "If you have any questions, don't."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo Monica, if any assistance needed, just tell me that we know now.",
            "You see, I saved my process and I did not \nexplain what is happening here.",
            "So when I saved it system.",
            "Oh, thank you, Monica.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou saw dotnet Xeno you see.",
            "So here we have parts of.",
            "NET Core framework which is used for creation and it's \ncompiling our assembly in a dot net library.",
            "As a result, we extract expect to get set of DLLs and our package is set \nto be compiled as a separate assembly.",
            "Let me explain now, probably I will be not happy."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now you see our realty package has initial setting compiled into a separate smart.",
            "This option means that our\n\n--- Page 423 ---\n\ncontents that we design in our.",
            "Oh, Monica, you have to leave.",
            "Thank you.",
            "Thank you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we have method inside of it and you can see oh, this method is a constructor.",
            "Okay, not so interesting.",
            "This \nmethod is implementation of our script task.",
            "As we did not name our script task into something useful, then this \nscript task has named Script Task 1.",
            "Let me show you our process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code.",
            "But you may just trust me that finally this code includes business logic and our class stuff here.",
            "Okay, so \nfinally we compiled our solution.",
            "It turned out into a DLL saved on disk.",
            "This DLL is used as part of our application \nwebsite."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we have this set of C files and bin folder here turns into this DLL.",
            "So now you see 11 megabytes of executable \ncode, which is quite a lot.",
            "And this is result of compilation of big number of base product packages that finally form \nthis dll.",
            "So recompilation of such DLL takes much longer, probably three or four times longer than compiling of \nseparate assembly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, I understand this idea, but I do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value.",
            "So possibly we \ncan do this.",
            "You can try.",
            "And each time when your read data changes or it gets new results, your parameters should \nhave corresponding mapped values from read data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWith this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed.",
            "And so I think that our example will lack obviousness and lack visibility of what is going \non.",
            "And is it more secure to use formula?",
            "Oh, I think it's the same.",
            "So it should work when you map parameter \ndirectly, but mapping parameter directly."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a quick question about the."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nDLLs if that's okay.",
            "I do."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIs it possible when we're creating them this way that we can call other DLLs maybe outside of this package?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, we can.",
            "Sure it's possible.",
            "Let me show you.",
            "We have also process level methods."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this will be normally compiled and executed.",
            "So it's quite common thing how you can add Other libraries and \nnamespaces with usings and these usings will form into.",
            "Let me show you pkg configuration pkg Then your \npackage, then your source automatically generated source."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in real life, when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally.",
            "Please note if your system is saved in a state, that means you \nhave compilation errors.",
            "You will not be able to apply any changes in compilable area until you fully fix your issue \nwith compilation.",
            "So it's better and it's like strong advice for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors.",
            "So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully.",
            "So we already have some part of our process which finally performs some \ncalculation.",
            "We can register our process at our section."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more.",
            "So \nthis is our page design.",
            "My plan is to run my process by a button, but I predict that I will have a bit more different \nactions, so possibly I can use a button with sub menu.",
            "Let me show you how we can do this.",
            "For example, we can \nput a Button somewhere here modify its size, style and title like actions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price.",
            "And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument.",
            "This is good for us.",
            "And also we have new mode which appeared recently the selected records in list it \nwill get list argument."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff.",
            "So realty will be recipient of our ID of currently edited record.",
            "And as you can see this is a no code \nsetting so it doesn't require any special coding for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do.",
            "Let's go back to actions list and we can check how it \nworks.",
            "So action will be always available.",
            "We can just save this page.",
            "Also in recent version we had an unique option \nto run processes by for list for selected records in the list."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's make one more bulk action like cultivate average price.",
            "Our action will be again run process where.",
            "Oh, it's \nmy fault, I do it incorrectly.",
            "Sorry for this.",
            "Not."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's just start to test it.",
            "So we can close the editor.",
            "You can also close this one.",
            "Maybe let's reload just to fight with \nany possible occasion of browser cache.",
            "So let's calculate something for houses for sale."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSort by date of start, read set formulas, calculation finish.",
            "It looks like everything went correctly here.",
            "We do not \nknow exact values, exact numbers.",
            "We will study debugging of it tomorrow.",
            "Now we just make sure that the process \nstarts and normally finishes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so this one is our list Selected data Calculate average price successfully started.",
            "I expect to run only one \ninstance of a process here.",
            "Yes, it was correctly started seconds ago.",
            "We can see all the steps were done.",
            "We can \nalso see execution diagram which will show us these steps executed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations.",
            "I just wanted you to see how we can run this calculation for \nmultiple scenarios.",
            "For example, houses for sale, houses for rental and apartments for sale.",
            "We have three selected \nrecords.",
            "We can run this process and I expect to run three instances of processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see start and end date is status.",
            "We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance.",
            "So today's session is over.",
            "The most interesting part will be tomorrow when we \nwill run this process and display some data and also how we will debug this process.",
            "Thank you very much for your \ntoday attention and education case."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI have a quick question, if that's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, yes, please."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nIt's just about business processes.",
            "So at the moment we're tying them to.",
            "We're binding them to buttons."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's possible, sure.",
            "But I try to keep it simple and use it as possible of no code.",
            "That's perfect."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\nI understand."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI'm just curious manually.",
            "But yes, Later I will show you how we can trust trigger some business logic that will start \naccording to data change.",
            "So we will do data change and for example insert of new reality.",
            "And then we can run \nsome business process that will start only in certain conditions.",
            "And for example, only if house or apartment for \nreality was added."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you can do it in much more complicated way and trying to keep it simple.",
            "Because we are studying."
          ]
        },
        {
          "heading": "Speaker 2",
          "key_points": [
            "# Speaker 2\n\n--- Page 428 ---\n\nThanks a million."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you.",
            "See you soon.",
            "See you tomorrow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nToday is session number nine of our development on Creature platform guided learning.",
            "And today we will continue \nto study server side and we'll move on with integration tools.",
            "So yesterday we finished with our own web service.",
            "It \nwas made at creation site, was made with the help of C Sharp sources and we programmed it, we saved it in file \nsystem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo what we'll study today, how to use standard platform level tools to operate with data with the help of HTTP \nqueries.",
            "And we will discuss and I will show you examples of how to work with standard tools.",
            "And they are all data \nprotocol and data web service."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo don't be shy, ask any questions if you feel something that you need to know and let's move on.",
            "So integrations \nwith data tools.",
            "First of all I need to show you general integration capabilities that we have on board.",
            "Go to \ndevelopment guides integrations options and here you can see standard options that we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see we have other options to integrate with creation.",
            "We have two options for data transfer such called \nCRUD operations which means create, read, update and delete.",
            "So standard simple operations that you may need to \nwork with your data and to organize.",
            "Possibility to read some data for third party app or to make some inserts, \nupdates or deletes in creation by commands from other applications.",
            "And we have two different options for this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's very specific to creature, but it offers you more options, more possibilities, more complicated calculations.",
            "And \nthat's why data services used for creation of client side and data service in general is more powerful than ODATA \nand more complex to program.",
            "So I will show you both ODATA and Data Service.",
            "You will see how it works.",
            "Also, it's \nworth it to mention that we have another integration option to run business processes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe had the class on Freedom UI section, we can open its page and then we made an action to calculate average \nprice with the help of business process.",
            "You remember we did this calculation, we started process, now we have \nsome results, average price in dollars.",
            "Then we save it or close it.",
            "And that's how we finish our process.",
            "So physically \nwe did some calls to third part to process engine web service."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if interested, you can just watch yesterday video and get more details.",
            "So today we'll focus on data transfer \nintegration options.",
            "And I would like to start from OData because it's easier, it's more friendly for beginners and it's \nquite easy to start from scratch.",
            "So what it is, this is a data transfer protocol which is supported at creation.",
            "We have \nall documentation about it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have a lot of documentation about it and if interesting you can find much more.",
            "And we have examples, we have \nreferences.",
            "So I prefer to show you something really useful.",
            "This article, it explains some general basics about how \nto use OData."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so depending on what operation you need, you have to select the proper HTTP method, Get is used to select \npost for inserts, patch for updates, and HTTP Delete is used to perform physical delete operation.",
            "I will show you a \ncouple of examples and also you need to know that we have a lot of interesting documentation samples here.",
            "And \none of the good ones is creation API documentation hosted at Documentor, get postman.",
            "Com.",
            "This is one of the \nbest sources that you can find for OData."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see, for different filters there are special expressions in let's say ODATA language.",
            "And so you can find a lot of \nexamples here.",
            "Even batch queries Supported Batch queue means running single query with several parameters.",
            "And each parameter explains to a system how to run a particular operation.",
            "So it can be useful if your plan is to run \nmany data operations with one single query."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's read data from our reality object, but with the help of all data.",
            "First of all, I will use integration tool, I will use\n\n--- Page 431 ---\n\nPostman app and my yesterday cookies are not working anymore.",
            "They will not help me to run queries.",
            "I can check it \neasily so we can Try to run our web service and as you can see we have 401 not authorized.",
            "It means that our \ncookies are related to expired session."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe provide login and password.",
            "No any special data, no any special headers.",
            "You may find some information here \nlike authentication and some accept content type for C session.",
            "But it turns out to be not necessary to perform \nauthentication successfully.",
            "So let me show you here we have some hidden headers made by postman like accept \ncontent type, application JSON and so on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will have to make a selection of data records and we will make it get HTTP query.",
            "Let's do this.",
            "So let's go to \npostman, create a new get query.",
            "We have to use our address of our app with 0 alias here and then we can look at \nthis example or we can look at this document or get postman.com examples.",
            "So we need to do selection."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf I provide no any parameters, system will try to read all of the data with all of the records, all of the columns.",
            "Let's \ntry to do this and run send for get queries we do not need to use BPM CSRF protection.",
            "So for get queries, no cross \nsite request forgery protection needed.",
            "And you see it took significant time, almost six seconds to run.",
            "And as a \nresult we have Some JSON body with different data records about our reality record saved in database."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd let me show you for example parameters for selecting data collection instance selected fields.",
            "So here I can see \nan example and it means dollar select so question dollar select and then we have columns with comma separated \nvalues to get necessary columns.",
            "So I'm using this example, you can use this example and let me show you how we \ncan do it.",
            "So question mark to switch to parameters Dover select is parameters specifying column names that we \nplan to use."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou see only requested columns.",
            "Now here and we can see all of the data.",
            "We can do some limitation.",
            "So we can \nuse and another parameter dollar top three for example.",
            "And when we do such selection, it will read only top three \nrecords for us."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn case if you will try to run such query in your browser, you do not need authentication because usually your browser \nis already authenticated in creation and you keep running session running pages of your creation in your browser.",
            "And that's why you don't usually need to prepare separate separate authentication for it.",
            "Okay, I think for selection it's \nquite clear.",
            "So let me show you how you can do insert data."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen usr realty is also part of endpoint and it gives information to data what exact object you plan to operate with.",
            "Then I have to look at body row JSON and we have to provide some data for example USR name.",
            "This is mandatory \ndata from all data for integration it will be our name USR price USD okay, so you can see we have some data here.",
            "If \nwe try to run a post query without CSRF settings we will get 403 because for post query we must perform BPM CSRF \nheader we must put corresponding cookie value.",
            "Please carefully copy cookie value including some dots if they \npresent."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we can go to our main app, sort by date of creation and we will immediately see that our data was added and \nwe can also check column values.",
            "Here you see price was added, we see column was added correctly.",
            "But what we \nreally interested you can see the type and offer type were set by default."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo let's try to add very big number and it will be more than 1 billion.",
            "So we will see how system will react on this \nattempt.",
            "Now you see we have a quite rude error and this is error 500 internal error."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn case if your task is to transport huge amounts of data, you have the only one option.",
            "This is your own \nprogramming of such data and your own parsing your data structures and your own database direct operations and \navoiding use of object model.",
            "Because when you use object model, you also support all of the object events.",
            "It \nworks not so fast."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 433 ---\n\nSo you have to search for a better solution.",
            "So in case of big number of records to process, in case of very, let's say, \nhard speed requirements for your solution, the only suitable option is your own web service with your own data \nformats, your own direct database management without use of object model.",
            "But in simple real life scenarios, I think \nall data will work well for you.",
            "And it's relatively easy because you see it's not so hard to build such query to run it \neven when your third party app is used."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for some tasks I think it will work perfectly.",
            "But for some other tasks you may find that all data is not enough, \nmaybe because of hard load conditions you will finally realize that our data is not going perfect with hard, I would \nsay hardwood big amounts of data.",
            "Maybe you will need some more complicated scenarios with reading data and \nperforming some calculations like preparing reports and running it with third party app.",
            "And you will need some \naggregation, some complex filtering."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it's appropriate way of operating with data using creature server side, it can do all the same operations like \ncreate, read, update and delete data and but it can do it a bit more efficiently.",
            "And also it supports different filter \ncondition macroses and it's much more rich when you need to select data from different tables, perform some \naggregations, perform some complex filtering.",
            "I will demonstrate what data service can do.",
            "And first of all I need to \ntell you the data service is mainly Used by inner creation client side pages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you view source, you see a lot of settings and parameters that can be passed as arguments for data service.",
            "But it also has a response with a JSON.",
            "So now you see JSON string which can be parsed and such JSON data not \nso hard to operate with.",
            "You can easily get corresponding values out from your results."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in documentation you will find that data service is promoted as integration tool.",
            "So it's a restful service.",
            "You can \nuse third party to compose queries for it.",
            "And here it's promoted and advertised like an integration tool.",
            "But in reality \nit's not so integration oriented, but it is say platform UI oriented."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 434 ---\n\nRecently created records are having more visits because we already had automatically creation for them.",
            "But also \nwe have.",
            "Oh, we don't make any action to add the data director here.",
            "Okay, so we have some examples which already \nhave created data records in visits detail."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAdd the columns and instead of working with traditional set of columns we have in main object you can go to related \nobjects and then we will see all objects that are available for us according to lookup columns from main object and \nalso we will see reverse joins.",
            "We will see other entities that have lookup columns pointing to reality.",
            "In my case this \nis realty visit.",
            "We have different options how to select data from it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt's also possible to specify special conditions to select data.",
            "For example, we can only calculate number of records \nthat are in future or only visits where contact is specified.",
            "So you can do different conditions here.",
            "In my case I also \ntry to make it easy and calculate total number of visits.",
            "And we can make the caption here visits count."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you reload the data using this update refresh button, you see only one query was executed and if you go deeper \nin payload you will see that our column for calculation of aggregate number is also represented to the standard \ncolumn.",
            "Here we have some column path for it, some setting for Type of aggregation.",
            "Aggregation Type 1 means \ncount and that's how system knows what to calculate and returns as some calculated number."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general folders work here like search folders in your outlook.",
            "So here we can specify some name and the filter \nconditions that will be useful for us to select only some searching data, not all of the data from our list.",
            "Let's call it \nthree plus visits.",
            "So let's imagine for some reasons we need to look at realty records where we have three and more \nvisits created."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd aggregate filters will be used for selecting data applying conditions on connected records, not on reality data \nbut on connected records.",
            "In my case I plan to select only reality data where this visits count is greater or equal to\n\n--- Page 435 ---\n\nthree so we can make condition and here we have to select connected entity.",
            "So not just dropping down here \ncontents of reality columns."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in my case I will just do quantity calculation select and we have condition count greater or equal three that will be \nour filter condition.",
            "We also can make additional filters here like counting only visits in future or counting only visits \nwith not empty comment.",
            "So whatever you think it will be useful you can do here.",
            "Then we save it and that's how we \nsee result of this filtering."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe use count for our aggregation so it will do selection only of records where some sub select some count of \nconnected data is greater than certain right expression and we have just value three here.",
            "So my example is to \ndemonstrate that data service web service is capable not only to read plain data from the data sections, but also it's \ncapable able to calculate aggregate columns and to use aggregate filters and you can use data service for your \nintegration.",
            "But I think it's really hard because you will need to have a good make already good made examples to \nmake it work."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we go to postman create new actually you should be careful because data service is usually working with post \nqueries only.",
            "So we go to postman.",
            "Regardless of the operation we will use post query and paste this URL should be \ncareful.",
            "Okay Paste URL we have a huge body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is a post clear so we obviously will go will fail into CSRF protection if we do not care about it.",
            "So BPMCSRF \nheader and corresponding cookie value you should get it carefully copying full value and pasting it here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn Classic UI we had an option to keep such code advanced mode and make this filtering like flying in the air without \nlanding anywhere in your system.",
            "But I personally think that this kind of advanced filter is not so good because once \nyou take time to build it, once you make complex conditions there is a highly likely situation then you will need it to \nsave.",
            "So developers in Freedom UI decided that no advanced filters anymore.",
            "If you need some complex filtering, \njust mentally prepare yourself to save it as a folder."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you don't like it you can also remove it.",
            "So I think it's not a problem.",
            "Thank you Adrian for your question.",
            "And yes I \nagree we have some changes between Classic and Freedom UI and it looks like such changes were discussed so it's \nnot a real decrease of some important functionality."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will need to remember data and save it somewhere.",
            "And in general it requires some quite strong professional \ndeveloper skills and architectural understanding of what you are doing.",
            "In general, I recommend you to run queries \nthat will not return you millions of records.",
            "It's better to operate with data using some portions and both ODATA and \ndata service have their own limitation."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nKeep some logging by yourself so it will be easier for you to detect and understand how actually it goes and do you \nhave any serious errors in your integration.",
            "So it's like a programmer task, but it's possible and in complex projects \nwe also do this and it works well.",
            "So let's move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt takes very little time to develop and gives quite quick and valuable results.",
            "Let me show you.",
            "So let's imagine we \nhave Creature app, we have different sections, data and so on and we have some third party application that we \nwant to call and to use its data to perform some data transfer.",
            "Let me show you some example of it.",
            "We have a node \nwith REST API samples so we can use something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nJSON body this JSON body is also shown here for us and this JSON body represents some prices and I need to tell \nyou some physical sense of it.",
            "ID bank is one of the banks in Armenia and they sell gold bars, gold plates starting \nfrom 1 gram gold to up to 12 kilos gold, big gold slab and you see their prices are in local Armenian currency, \nArmenian drums."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 437 ---\n\nSo let's imagine we have a task to regularly get gold prices from this URL, from this API, save it in creatio and make it \npossible to run multiple times and correctly update such prices.",
            "I will use only no code tools for it and you will see \nhow we can do this.",
            "Also you may reproduce it just during today's session.",
            "So let's start."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in my case so I can also share with you this is kind of documentation but the most important we need example \nof call which works for us.",
            "Luckily we don't have any special protection, security or authentication necessary for this.",
            "You may also find a lot of other sources with similar functionality like currency exchange websites, like weather \nforecast websites, like other regular date that could be commonly interesting for people.",
            "It's usually shared without \nany special restrictions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe will properly register our new third party web service here and then we'll be able to call this web service from our \nbusiness processes with the help of call web service item.",
            "This will not require actual development skills, but it \nrequires some engineering knowledge and understanding of HTTP queries and HTTP methods type and just a bit of \nunderstanding of JSON string and you will see that it's not very difficult.",
            "So let's do this add new web service when \nwe Created system uses current package system settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is classic package because our current package system setting points to it.",
            "But my plan is to save our data to \nfreedom UI realty package.",
            "Let it be here.",
            "This URI is like a main part which was extracted from our URL and it will be \nused as a like base part of our web service and then we can have many different methods."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis will be saved as special metadata directly to the package.",
            "And we have a method here, so let's save it first.",
            "Now \nyou see configuration section and let's go to all items.",
            "You will see new type of item called web service and it's \nalready saved in our package.",
            "So all you can do is to open its metadata."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd in general one web service may have many methods so you can register them manually in order to use different \nfunctionality of the same web service.",
            "Get method the content type is JSON and response timeout is 5 seconds by\n\n--- Page 438 ---\n\ndefault, 5000 milliseconds means 5 seconds, no authentication necessary."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you use get query like in our case you only can use method address parameters inside of this URL.",
            "If you use post, \nit's possible to fill in post body request body and it helps to get much more possibilities to transport different data \nvalues as arguments to your web service.",
            "In my case I have no request parameters at all, but if you will do it \nsomething like yourself with different web services, you need to remember that we have all possible ways to transfer \ndata that is commonly used in the REST API."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you do some operations with third party system which requires some authentication or requires some cookie \nfor like your user settings, then it's also possible to use it in your query.",
            "So it's very universal tool.",
            "In my case I do not \nneed request parameters in this example but I need response parameters.",
            "So let's save it again just not to lose \nanything."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo my idea is to tell creatio how should I parse result data in order to extract specific values from it.",
            "So in my case \nresponse parameters can be added manually or we can use special very effective tool which is called quick setup \nand I will use example of my response body and give it to system in order to detect what are the possibilities, what \nare the possible values that we can get out from this example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see it was it detected that I have two collections one is called cash sell it list of sell prices so bank sells \ngold bars and cash byte it looks like they have this data.",
            "But zeros tell us that possibly they are not really planning to \nbuy anything.",
            "And it's just like useless part of the data for us.",
            "So we can select what part of data is interesting and \nwhat part can be skipped because in our case we do not need it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is very important because in real life examples, for example, you can call some foreign currency exchange rate \nservice and you know, we have almost 200 of different world currencies and you may face maybe 4 or 5 or even \n1000 of records, 4 or 500 or thousands of records with different values and parameters as response.",
            "So it will be \nreally important for you to select only parameters that you really need to get from results of web service.",
            "Because \nsometimes web service result body is quite excessive, including a lot of information that you don't plan to use or just \nnot useful for you.",
            "In my case, I am interested in cache cell list and I will save it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut using this quick setup tool by examples is much more efficient.",
            "So I have a root item here which represents a \ncollection is array.",
            "And also it's interesting to mention that creature uses such thing called JSON path.",
            "JSON path is \na kind of address of a value inside of a JSON body."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBecause we see that for all data values here it will be nice if we have an integer so we can treat results as integer \nand system will be okay with it.",
            "But when we go to rate and see some examples sometimes.",
            "So in general rate is a \ntext and sometimes we see thousand separators and sometimes you see it even twice."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you really need so you can parse this data lately after you've got it from the web service and then later and then \nyou can save it as you wish.",
            "In my case I keep it simple.",
            "I try to not spend too much time on such data type transfer.",
            "So I prefer to keep it as text.",
            "So it will be just a good for our demo."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, so this example takes result data and parses it and finally will present our data as collection of data records.",
            "We can save it.",
            "Save it.",
            "And this information is now saved in our configuration section.",
            "Now I propose to make a five \nminutes break."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut it will require some C sharp scripting for us in order to keep data in redis memory.",
            "For example, I prefer to make \nit more simplified and no code.",
            "So we will save our data into our database in just a simple lookup.",
            "This lookup \nrequires integer weight and text rate.",
            "We can easily create it ourselves in this package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 440 ---\n\nThe minimum one usr rate will be our rate column text 50.",
            "You may ask me why text?",
            "The answer is because I do \ndemo of getting data in real life.",
            "We will need to save our text values first or maybe to use them and process before \nsaving with the script task and then we will use a decimal value to save finally converted value and in my case I went \njust to keep it as demo for you."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne more small step we can go to lookups and register this object as lookup.",
            "So we click lookups new lookup find \nour gold prices save it.",
            "So now we have this lookup we can open its contents but we have nothing there.",
            "We can \nopen properties and create data binding item and save it into our package."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe can create new process name it like USR yet road price main process this is main process because I also plan to \nuse sub process to parse my collection.",
            "That's why I call this processes main process.",
            "No initial arguments simply \nstarting our process by manual start and the first step we need to do is call web service process item and which web \nservice to call."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd sometimes full response body will be important because it will be it will include everything obtained from third \nparty without any parsing Boolean success property and probably that's enough.",
            "And we also have a SO request \nbody but it looks like this is an input parameter and only for very specific cases.",
            "So I don't know how to make a no \ncode example with this response request body so we will not use it now."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd first of all I will show you some error handling in case if our request finished successfully.",
            "We can turn this flow \ninto conditional flow by clicking on this change type button and then set conditional flow so we can name it okay \nand we can check condition.",
            "This condition will include just boolean success property."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if we not successfully code our web service, no need to try to perform next steps.",
            "We just need to stop our so \nabort our process and use a separate terminate item because it will be stored in our history of execution so we will \neasily understand that it finished with an error.",
            "Okay, but if everything works well, we need to think of the place where \nwe plan to keep our data when we first run it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis protection means that for delete data we must use some parameter.",
            "If we don't, this will not allow us to save \nprocess and it will show us errors.",
            "So we must use some parameters here.",
            "And this is kind of protection from \nunintentional delete of all the data.",
            "But in our case we intentionally want to do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we delete prices from our storage and then we can use so we have a Collection and we have two options.",
            "To use \nno code approach with sub process to parse collection or to use C Sharp code in order to parse our collection with \nprogramming.",
            "Of course I prefer no code approach.",
            "Let's save temporary our current progress.",
            "Oh, it tells that the \nchange is saved."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo realty package should be dependent from dev classic and dev classic package should not be dependent from \nrealty.",
            "Yes, looks good.",
            "Yes, looks good.",
            "Very good.",
            "So now no cyclic dependencies, no troubles."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we'll use parameters and I was a process to accept collection data values and I will make my process name USR \nadd gold price subprocess.",
            "So it will be my sub process to add the gold prices.",
            "I need parameters because the only \nway to transfer data from main process to sub process is sub process parameters.",
            "One parameter will be integer.",
            "So \nI add the parameter which will mean weight integer input which make it makes it read only inside of my process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen we will use our process and our process structure will be really simple.",
            "We will just use one add data item.",
            "We \nwill add data into gold price object add price and we will fill one record and only couple of values weight and rate will \nbe filled in very easy rate and weight.",
            "So rate will take its value from corresponding Rate text parameter weight \nClicking on this lightning button, we'll get its value from corresponding integer weight parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we will use an item called sub process and I will use this orange item and place it into my diagram.",
            "Normally \nwhen you want to run a single instance of a sub process, you just specify your sub process name and single \ninstance call means you have to transport.",
            "They are just pair of values and this means that you will run your sub \nprocess only once.",
            "But in our case we plan to work with it and parse collection with the help of sub processes.",
            "So I \nwill use special settings."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I click on this lightning button, select process parameter and then I will select process elements and our get gold \nprices call web service.",
            "It returns collection and we have corresponding weight column in this correction.",
            "So I have \nto double click it.",
            "And that's how our sub process immediately turned into collection processing mode.",
            "And it will run \nas many sub process instances as many collection data records we have."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut in here we can just run the process and we are interested that in finishing it fully synchronously.",
            "No strong \nreasons to run it in background creating some scheduler executed tasks.",
            "So we just can run it simply in a current \nthread.",
            "Okay, when it runs we can also call it like add prices.",
            "Okay, it prices and it will run ad vote price sub \nprocesses and we'll have as many sub processes as many collection records you found."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's reload it by clicking on this icon and we have to start main process.",
            "Let's start it.",
            "But also before starting it we \ncan enable trace to be important for our debugging and we can also.",
            "That's it.",
            "Okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can click on show trace data.",
            "You will see all the parameters in your collection.",
            "We can see technical \nparameters like response status, code 200 means everything is okay, full response body sometimes can be \nimportant.",
            "And it looks like in our example everything went smoothly without any errors.",
            "So this trace takes some \nadditional performance."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 443 ---\n\nAlso it makes sense to look at the columns of creation, date of creation.",
            "Okay, and now you see we have all obtained \ndata saved in creation.",
            "Physically this is text.",
            "So if really needed we can use parsing.",
            "We can use some C sharp \nscripting to parse such values into decimal and then save them into corresponding decimal fields."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd finally we have a process which takes probably less than hour to develop with all the explanations and we \nsuccessfully got our data.",
            "If we start this process one more time, you will see in our lookups, you will see new data.",
            "So you see date in time was changed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nMy next topic for today is to explain you how to use Clio tool and explain why you need it.",
            "So first of all I should \nexplain why we have some additional tools and not inside of the base platform.",
            "So previously we already had a tool \nthat was necessary to support developers and this tool was called Let me show you Delivery Tools and Workspace \nConsole Overview."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd so it has a lot of different, let's say quite technical purpose, which probably will be not necessary for end users.",
            "So developers used it for a long time.",
            "But now this is an old tool which has its own disadvantages and developers \nwanted to make something new, so they made a new tool called Clio.",
            "You can find it in GitHub, ATF Clio."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo generally you can consider as this tool was written by Creation in general, but this tool has open source code.",
            "You \ncan easily not easily, but you can analyze its source code.",
            "You can like propose your own improvements into it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut you should keep in mind that this tool was written by developers of base product, so they had their own reasons\n\n--- Page 444 ---\n\nand needs to operate inside of base product.",
            "And now you will see this difference.",
            "So let's go and I will show you \nhow to use it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI already have it dotnet tool list G this is command showing me existing installed dotnet core tools on my PC and \nClio is already installed here.",
            "Okay, I can remove it dotnet to uninstall Clio G It means remove it from my system.",
            "Now if we check we have no creature Clio tool on my PC.",
            "This is a common line utility."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's install it.net sorry to install Clio G this is command that you can type in your windows command terminal.",
            "This is two this is common to install Clio.",
            "It will install the latest version.",
            "Let's see what version we will have.",
            "Now of \ncourse this comment requires Internet connection so it goes to nuget searches for the last package which it can \nfind."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI have suspect that the most early created functions are at the top of this list and the most recently lately created \nfunctions are at the end of this list, you will not need all of them.",
            "So it's like a universal tool.",
            "It has a lot of different \nparameters, a lot of different comments.",
            "So I will show you the most important, the most practical that you may \nneed."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I already have some previous environments registered.",
            "I have to register my current environment.",
            "Clio reg web \napp I need to show you reg web app.",
            "Of course you need to know how to spell certain comments, how to get their \nparameters.",
            "So you can try to do something like this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it will be included into this file and then you will refer to it by name.",
            "This is easier than providing URL, login and \npassword each time when you need to operate with target environment.",
            "So let me register my current environment.",
            "Clear reg the web app.",
            "I already have some example, so let me type it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWow, we have some troubles in this file line 41.",
            "Probably because I have some older versions of such settings.",
            "Okay, \nlet's go where it tells users.",
            "What else?",
            "Users or user app data Local creation My user app data local creature."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo now we can do some simple operations with it.",
            "Cleoping and then we have different options.",
            "But the easiest way \nis to use E key for environment and then environment name.",
            "So this cleo ping will physically check availability of our \nweb service.",
            "And if it's okay, you will see yellow."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou remember when we modified some objects, added new columns, we had to restart our app to properly apply \nsuch changes.",
            "So we had such scenarios in our training when we needed it.",
            "And simple log out and login did not \nhelp.",
            "Okay, so let's move on.",
            "We already started restart."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me switch find it should be somewhere here.",
            "Yeah.",
            "Push pkg.",
            "It has also short command install.",
            "I don't know \nwhy developers did not show it here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut if you want to use all power of existing Clio commands, you must perform special command and this command \nis named Install gate.",
            "This Command downloads from NuGet and installs in your target system special package \nwhich keeps DLL inside.",
            "And this DLL includes all necessary web services that enable this set of commands.",
            "So \nsuch web services, simply speaking, are parts of Clio to implement corresponding comments without this comment, \nwithout install gate, without additional package installed to your system, CLIO will be not capable to perform \ncorresponding commands."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's try to run a command to install gate Clio install gate ED1 this is required in case if you want to enable full power \nof Clio commands.",
            "So in my case, I will do it in my source environment.",
            "This takes time because it Downloads \npackage from NuGet, it installs this package into your target environment.",
            "This package is called Clio Gate.",
            "So you \nwill see new package Clio gate in your system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo system tried to compile and failed exceeded narrow try count work process.",
            "So our IIS prevented our system to \ncompile.",
            "Let me check.",
            "Did I detach?",
            "Of course, my visual studio was detached."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou can see its size 5 megabyte of executables not so little files Bin and here, here and here are DLLs included as \nfile content for this Clio Gate package.",
            "So such DLLs are used to execute Clio commands.",
            "They implement the \nimplement web services, install such classes into creature server side.",
            "So that's actually how Clio may work on a \ncertain environment and how Clio may create and implement new comments.",
            "Because if you want to run something, \nyour target system must be able to do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd this will be comments to save and load environment settings and Sorry, Save and load packages.",
            "Let me show \nyou.",
            "I already have another test environment.",
            "You probably forgot about it.",
            "So we have D1 Studio as development \nenvironment and D2 second was used as a target and the test environment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I will check availability of my second environment and it looks like should be okay.",
            "Yes, looks like Bing is okay.",
            "Here is my second environment.",
            "So my plan is to show you the most useful usage of Clio for project development.",
            "This is CI CD automation for saving and loading of packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 447 ---\n\nNot only one but several packages from source environment.",
            "Destination path is somewhere like this guided dev.",
            "Okay, let it be May 2024.",
            "So we will finally have a result of a zip file including all our packages."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet's try first system will save three packages into gz files organized into one single zip file and then it will be done \nand as you can see it makes it as a one operation if you do save manually saving of an app or saving of a separate \npackage.",
            "So you will have to perform it with separate structure steps.",
            "As you can see it went but not so fully \ncorrectly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see we have location packages more file descriptor more than one file app descriptor JSON what it is what \npackage it's about real to migration No, I don't know.",
            "So something wrong with application descriptors we can check \nit at our file system."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSomething is strange here and it looks like probably system failed to work with it but it looks like it's not a big trouble \nand you see one more issue here parent schema and was not found yes, this is more serious trouble because it \nlooks like our target environment was not fully prepared to install our changes because it miss customer 360 app \npossibly previous error message that we had here previous message with this stuff here probably it was also \nmissing corresponding app and we used so our solution expects that target system will help customer360 in my \nexample customers current our target environment did not have customer 360 that's why we have this stuff.",
            "So in \norder to fix it of course we have to install customer360 first and then our solution next.",
            "In this case it will be loaded \nfully correctly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now we can test our target environment.",
            "So usually we need to reload it.",
            "We can find our items like oh, we don't \nhave any, probably did not like it.",
            "Okay, we have to install customer360 here and then load our solution.",
            "So you see \nonly Dev Classic was loaded here and recent stuff was not loaded."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nManual load can be done with new application and then install from file.",
            "Now we have successful installation.",
            "Great.",
            "If we reload we will see customer360 app added.",
            "Yes, customer360 was added."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd if we ever try to compile our package on target environment, we may have very unpleasant situation when we \nwill try to compile old contents of C sources instead of actual one.",
            "So in order to make correct export of your \nsolution to test in production, we need to save everything on disk.",
            "Then we have to take everything from disk update \npackages from file system.",
            "Now you will see system will show us differences in C Sharp code.",
            "Because both \nexamples were written here and here were written with the help of external editors."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt will be not so hard and thank you for your time.",
            "So now I just plan to make it correctly with save and load and then \nif everything goes well, we will see our Apps we will see our functionality loaded to our target environment if \nsomething goes not as planned.",
            "This is also good because we will see some exceptions.",
            "You will see how we can \ntroubleshoot them.",
            "It's important to understand how you may do some fixes when your package is not installed as \nyou plan."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo sys module entity USR realty no then this module in workplace studio so violation of primary key.",
            "Oh, it's because \nof data binding which does not keep correct IDs but duplicate cases module in workplace.",
            "So it's registering of a \nsection in the workplace and this duplicate is possible because of the way how data binding saves it.",
            "So we have \none data item failed to load but in general okay, one more data item failed to load so we have only troubles in couple \nof data items."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe have classic we miss reality sections here because such data items were not loaded.",
            "I will show you how you \ncan fix it.",
            "Let's go to advanced settings.",
            "Let's find our new packages loaded here so we can search for realty \npackage and we can see couple of data items.",
            "So let's see only status has error or needs to actualize here so you \ncan see list of items that were failed to install Couple of SQL scripts from base product we don't care and only one \nitem in our reality package was not loaded."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt looks like we already have sys module in workplace ID and it looks like this data entity was not good.",
            "So we have \nsome items here and we have key which was not ID and key was used by section and workplace.",
            "So we can fix this \nit's not good and this is behavior made by data binding tool.",
            "I don't really like it."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nGreat, and we can save it.",
            "And we have a lot of warnings, but it's about existing date.",
            "So let's actualize it save it.",
            "Just \na lot of warnings about reorganizing of the same existing set sections that are already present in data.",
            "And also one \nmore thing which we potentially have the same trouble sys module and workplace for this realty and it's 26 my \napplication."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we will have a bit better version of it.",
            "Okay, saved.",
            "Now let's try to run this transport again so it will be final one.",
            "And this is example how you can automate delivery of your changes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLoader text takes zip file, takes information about its items, all the packages, all the items of configuration and it \nanalyzes date of modification.",
            "If date of modification of the loaded item is the same as date of modification of items \nthat you have already in your target environment, then it just skips it.",
            "And that's why if you have a big solution, but \nyou have tiny small changes, they are from recent upload that you did previously."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nActually only base product stuff.",
            "Okay, don't care, no errors.",
            "Okay, so our package with realty was fully correctly \nvoided.",
            "All the items that we have were loaded well.",
            "And we can test it at our user interface."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo that's how you can deliver your solution to test and check it out and perform corresponding full scale test for your \nsystem to check how it works.",
            "Now you see details were filled in.",
            "So everything works quite well.",
            "And that's how you \ncan do some automation with Clio.",
            "Clio has also a lot of interest in other comments I will show you just one of them."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 450 ---\n\nSo this is example of how you can read list of contacts from your database.",
            "Of course your queries could be much \nmore complicated.",
            "And when you run SQL queries please be extremely careful because SQL statements is the way \nhow you can easily damage your system, how it can easily destroy your database.",
            "So you should be extremely \ncareful and please check your queries before execution."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd that's why now we don't have any fancy good looking tool to run SQL query from application user interface.",
            "But \nnow this is something that you can do.",
            "And the last information that you need to know about Clio is that it's also \npossible to use add on for Visual Studio named Clio Explorer.",
            "So Clio Explorer Is an add on that you can use in Visual \nStudio code.",
            "It automatically loads your information from file with connections for existing solutions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSplit editor.",
            "More actions.",
            "Oh, probably this.",
            "Yes, it was case sensitive.",
            "I don't know why it's case sensitive."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs usual you will receive video recording of today's session.",
            "If you have any questions, ask today or prepare \nquestions for tomorrow.",
            "Because we will have more time tomorrow.",
            "Thank you very much for those who stayed for \nthis moment.",
            "You will see videos soon."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you agree to run Fast track certification, you should just respond to my email and we will arrange individual \ndate and time for you to run your exam.",
            "Your exam will include check of the homework.",
            "So you should prepare \nhomework before exam starts.",
            "So you will have a couple of weeks to do this and you should prepare for the test \nusing self assessment tests at Academy.",
            "I will show and so at the exam we will look at your homework and you will \nrun your online exam test."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYou will see the type of the homework Raki is asking will include.",
            "So let me quickly show.",
            "I planned to show it\n\n--- Page 451 ---\n\ntomorrow, but okay, if you ask now.",
            "So let's do this, I will quickly show you.",
            "So the type of the homework will include \nmaking your section, this one, making your detail, make programmed validation, some calculations, web service, and \nfor those who want to run an advanced level, some additional business process and adding data records and some \nautomatic update."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it requires some javascripting and C Sharp scripting.",
            "And so it will not take too much time for you, I think, and I \nhope that it will be clear.",
            "So we discussed all the steps how to do this.",
            "If you will have more questions, you may ask \ntomorrow.",
            "So Rakhi, I think that those who passed our sessions watched our videos and practiced with their own."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSorry for staying a bit later than usual and if you will have more questions, so prepare for tomorrow, we will have \ntime for this.",
            "Thank you very much for today's session and goodbye."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nForeign session number 10 of our development on creation platform Guided Learning.",
            "Today we will prepare with \nthe to prepare for the certification for the development exam.",
            "And this is an optional thing.",
            "So if you want, if you feel \nyourself ready for this, you can apply for this type of check certification.",
            "And as you are members of our guided \nlearning, so you can run fast track certification for free."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you see that we check some major creation development skills related to some C sharp programming, JavaScript \nprogramming, understanding of general architecture, understanding of packages, some little SQL experience and \nintegrations questions.",
            "So certification is like part of your path.",
            "And if you pass certification, you will get your \ncertification certificate which issued for two years."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn this case you'll be able to ask questions about development and improvements and support team will help will \nhave to help you.",
            "So now you are somewhere here.",
            "You now started our customization and development already \nfinished development course.",
            "And then the next step is to prepare for the exam and then pass this exam.",
            "This is \noptional so it's not mandatory."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you are a customer and attended our guided learning session, obviously it makes sense to apply for a free fast \ntrack certification.",
            "RAK is telling that going to do the same step.",
            "So same step.",
            "Yep.",
            "Next price web service working \nparameters are not showing not passing."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will show you, Rakhi, how you get such data.",
            "Here you see handlers.",
            "Here you see your button handler and you take \ntype object.",
            "You should check that this is your attribute displayed in view, model, config and this attribute.",
            "So for \noffer type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYes, thank you Rakhi for telling this telling me about this trouble.",
            "So let's move on with the certification.",
            "So this is \nkind of Excel and this exam is free if you are participant of our guided learning session.",
            "But it has some timeout so it \nwill be not forever free for you.",
            "And Fast Track certification is available for three weeks after the end of our training."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo today I will send you the homework and if you respond me on this proposal to pass the exam.",
            "And we will \norganize individual sessions with those of you who would like to run this exam.",
            "And in order to apply for Fast Track \ncertification, I will ask you to respond on my email.",
            "So don't forget if you want to register, please respond on email.",
            "I \nhave a question."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo please send me a message about it, I will process it properly and we can run Fast Track certification with you or \nwith someone with your team.",
            "Thanks.",
            "Okay.",
            "Thank you.",
            "Okay, and let's move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo all of you will receive your homework today with the final email with all the video recording sessions list and so \non.",
            "So you will receive your homework and you will have some time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you spend your time, if you already spent your time on making all our training session examples, it will be very \neasy for you to make your homework because it's also very similar and that's how you can get benefits from your \neveryday activity during the session.",
            "So let me explain what will include, what will be included into your homework.",
            "I \nwill show you an example right now.",
            "Just a moment here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also it includes some examples which will require coding and validate coding samples for you in JavaScript and\n\n--- Page 454 ---\n\nin C. So validation should include coding at client side.",
            "We already discussed how to do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo validation we already discussed you may watch our previous videos if you skipped it and you will know how to do \nthis calculation is about edit page online let's say runtime calculation that we did also in JavaScript and we made the \ncalculation of commission depending on price and offer type.",
            "Let me show you we did it.",
            "So if price changed, you \nsee for each typing and each change of the price we have called commission recalculated and offer type."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPlease note we have a bit different percentage of prices and for center for rentals and for sales, so take care to \nprovide correct values here.",
            "So this is important and we will check it the next task is about C Sharp programming \nmake your own back service club.",
            "It will do some calculation of price minimum price.",
            "In our example we made a \nmaximum price so it's very easy to change but it will require your own programming."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn your homework exam it will be minimum price calculation so they're easy to change but you have to perform this \nstuff in and that's why your homework sorry that's why your everyday work and your results of work at our sessions \nwill be important and it's so it will be useful for your exam and we already discussed how you can write such code.",
            "We used Visual Studio to facilitate our development and make it really easy with the help of background syntax \ncheck, intellisense, autocomplete coloring and also if you're interested, you can study the structure of this project \nand understand a bit more how it was done and generally project files and all the preparations made by creation.",
            "We \nonly make our own part of it as a C Sharp source code."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOf course you may use so it's expected that you will use your local instance if you have no any conditions to run \nlocal instance.",
            "You can use cloud one trial environment or dedicated demo environment if you have so you can do \nthis in any kind of environments and it will work for you.",
            "Of course your system must be compilable so you should \nnot get such compilation errors as I do here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAlso we have a task number six which is a bit additional one.",
            "It's about business processes.",
            "So generally it's \nexpected to make you using business process, but you can make it with another tools if you want.",
            "For example, you \ncan create your own web service.",
            "You can run your web service from client side using your code like we did running \nof a client side web service method that we made in task number five."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also I didn't tell you important thing that if you are a member of a partner company it makes big sense to get \nmany certified professionals at your partner company because it impacts on your partnership level.",
            "And partnership \nlevel is something about margins, about deals and money sharing between partner company and creation company."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if partner has not so many experts and certified professionals then such partner will have less partnership level.",
            "And probably this is more risky for creature when any kind of agreement will be signed with a real customer \nincluding partner part of work.",
            "And that's why any partner is interested in having as many as possible of certified \nexperts, certified analysts or developers at Valer stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAfter you add this data, let me show you and remind you how we can do this.",
            "So it will be very quick and easy.",
            "And \ncurrently when we add.",
            "Okay, let's see.",
            "So when we add new data to our reality section, you remember we already \nmade some automatic insert of data house for sale."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe already used this process to add data.",
            "When new record was added, we used start signal item for it.",
            "And it was \nalso an example of entity event handling with the easiest possible way using start signals at server side.",
            "So it was \none of the examples of entity events for objects."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can register such parameter as you remember, parameters are like variables at our process.",
            "And in case if we \nstart our process manually so we can call it manual start, if we do it manually, then we expect that this parameter \nwill be filled in and then we can just move on to our step where we add data and then we can replace here parent \nrealty not from signal but from this parameter.",
            "So we can replace process parameter and put realty ID parameter \nhere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 456 ---\n\nYou can see it's not so hard and it's very important for you to become familiar and to feel some confidence when you \nwork with processes because this is like a brick game, like a Lego, which you can use for much more complicated \nProcesses and business logic.",
            "If you understand well how such tools work, if you make your own simple examples \nand understand it clearly, then you can use it for much more complicated things and you can use it quite efficiently.",
            "So in my case I'm using formula to assign parameter value."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can look at its title or at icon type that will help us to get it.",
            "And the only suitable parameter from a signal is \nunique identifier of record double click and that's how we will get this data and save it as formula value.",
            "So if our \nprocess started as is driven by signal so if our process started as event handling or insert, then our formula will set \nreality ID ROM signal and then we will run our insert operation based on reality ID parameter."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut we can start this process manually.",
            "So of course we have to save it.",
            "Okay, and then we can register this process \nsomewhere, for example as action to our page.",
            "Let's go to the edit page button, find corresponding action.",
            "Here we \nhave one more action and we can call it add visits action which will run business process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, little bit plus will be a good example and add visits menu item will be our unique element code.",
            "This will help \nus to easily find this item in view config diff part of the JavaScript code for our client module.",
            "Okay, looks good.",
            "We \nmade it.",
            "We have to save as you can see, I'm very stick to no code approach and no code tools if it's possible \nbecause it helps it to get your results very quickly and efficiently."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAs you can see it works, so let's try to run it.",
            "Process successfully started.",
            "And also you may find that our task our \npart of our task.",
            "As a result of running the action, the list of the reality visit detail must be updated automatically to \ndisplay new records.",
            "And also you can use Enable Live Update."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI will explain how you can do this so we can close unnecessary tabs.",
            "Let's go to search for objects and find reality \nVisit object.",
            "We did not use this feature so far, but I will explain.",
            "So in Behavior settings there is a very important and \nquite new feature which appeared only in version 8.",
            "This version, this feature is called Enable Live Update."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it was generally intended to be used for updates.",
            "Situation when you have a record it was already opened at client \nside and you change the data columns of the record at server side.",
            "So I believe it was initially designed for updates, \nbut it also turned out that it works well for inserts and if we have a detail with a list, so we have a list of some detail \nand data was added at server side.",
            "This detail list is updated at client side in case if Enable Live Update option is on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe need to use some good examples.",
            "So let's delete all the data records.",
            "Also, possibly we can face some cache \nissues.",
            "Let's reward the page just to avoid any potential threat of browser caching.",
            "Okay, open it, look at detail."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo if you do something like this and your end user will see the detailed data changed, so it will be quite good enough \nto display that data was modified and you see how it works.",
            "So also it's interesting to mention that it works for \ninsert, it works for updates, but unfortunately for some unknown reason it doesn't work for delete."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you want to display and demonstrate more skills, you can also try to use a bit more complicated approach with the \nweb sockets with messaging from server side to the client side.",
            "I can quickly explain you how you can do this.",
            "If \nyou're really interested, we can try to make working sample of it.",
            "And let me show you how we can find it.",
            "Creation \nwebsocket socket freedom UI and why Russian?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo we can use it for free.",
            "And the main idea is that we can.",
            "By the way, it looks like this is a classic UI stuff.",
            "No, in \ncreation.",
            "No, it's okay."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nLet me show you when page of creature is opened.",
            "You can also see we have some WebSocket hard beat and it's \nused to check that WebSocket connection is alive or not.",
            "WebSocket is the dual directional channel between client \nside and server side."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd one of the specific message tells client side that we have to show some specific process driven page.",
            "So \nsystem should show another page instead of current one.",
            "Let me show you how we can track this.",
            "We can go to.",
            "Okay, let me show you can open again and our page we can check network filters ws, which stands for websocket."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, this one probably will better.",
            "So let me explain how it can be useful.",
            "Generally, creation uses such a socket for \nsending messages from creation server side to the client side.",
            "For example, when we run a process calculate \naverage price.",
            "But it looks like possibly I did not see what I need here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIt has some corresponding data parameters which will be enough for client side to understand what it talks about.",
            "And as you can see, we have some values here that are enough.",
            "And client side understand that if sender is \nprocessed dashboard, if it has some id, then client side should search and find corresponding task to be executed.",
            "You can see it here.",
            "Notification panel, business process task."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOh, you don't see it here easily because we opened browser developer to wait.",
            "Okay, let's open it again.",
            "Revote.",
            "Yes, \nnow you will see that we have some websocket messaging processed here.",
            "When we do designing of our page and \nespecially when we do designing of business rules, it's also used."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut when you start to design business rules, I faced situation when managing business rules requires additional \nwebsocket connections and it also failed in Windows Home version.",
            "So that's how you can track WebSocket \nmessages.",
            "You can use some filters here.",
            "You can type some messages in order to filter because you may have \nplenty of different WebSocket messages and you may need to filter only necessary ones.",
            "And can we get the link?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut this is like a technical possibility for you to listen for this websocket at client side.",
            "You also need to know how to \nsend messages at server side to the client side.",
            "Here is the link that shows how you can do this, because first you \nwill do server side sending message."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I think it's more efficient, it's more correct and like more fair to send messages only for current user because \nusually you need to do in like connection exactly to current user, not to anyone.",
            "And if you imagine working with \nthousands of end users, so it will be really noisy for them to see such messages that are not intended."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSender is a text MSG body as a text and such command will It's a C sharp and it will send the websocket message \nfrom server side to the client side.",
            "In the client side you can subscribe for it and this is classic UI example."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis type of messaging can be important in case if you don't really need live update or if you want to make some \nsignificant changes to server side and then run your necessary comments to update client side only once, which \nmeans to be a bit more correct to do.",
            "For example, if you add 100 records at server side, then you ask client side to \nupdate once, which will be definitely better than asking client side to update hundred of times because of live update \noption.",
            "But it's up to you so you can go through it if necessary, if interested and make it work."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOkay, let's go back to our general certification.",
            "So it was just about this advanced part of the homework.",
            "But if you \ndo just basic part of the homework, it will be also good enough.",
            "When you finish this, please keep your environment \non.",
            "It means that when you will start your exam, we have to look at your environment and we have to check that your\n\n--- Page 460 ---\n\nsystem, your setting is working, your settings are working correctly."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd before we continue, possibly let's make it five or up to 10 minutes break today.",
            "Today's Friday, all of you are a bit \ntired.",
            "So let's make a short break and then I will explain how to prepare for the exam.",
            "Test.",
            "So we'll work with self \nassessment tests."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo 50 for the homework and also 50 for your test.",
            "Depending on the type of the test, there are different number of \nquestions.",
            "So let's talk about basic exam.",
            "And you will have 25 test questions.",
            "So it means each question gives you \napproximately 2 marks."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo I'm trying to explain that in your self assessment test you will have slightly different so different results from the \nsame answers if you do it on the exam.",
            "And self assessment test is harder and real exam is easier.",
            "So in real exam \nyou may do up to seven mistakes from 25 or 28 questions.",
            "Let me show you how you can prepare for the exam.",
            "So \nexam for developer includes."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd also you will face questions with single choice like radio button with circles on the letters not squares.",
            "And we \nhave to answer this test properly and correctly.",
            "And please note test self assessment test questions will be similar \nto the same questions that you will get during real exam, but they will be not identical.",
            "So you should expect.",
            "You \nshould see that such tests are not identical and you should be very careful."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo this is about this setting and what are the purpose?",
            "So this purpose is a redis database number.",
            "Yes, this is \ncorrect.",
            "But this is multiple choice.",
            "So we must select at least one more item."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis is about very old times when you can use such system setting.",
            "And I can show you examples.",
            "We will see what \nit is about.",
            "Let's go to system settings.",
            "Let's search system setting which is the last number."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow we use the sum default values for real t classic types.",
            "So we used it here columns code autonumber and we \nuse the auto number prefix number of digits and that's how this numbering can be implemented now in current \nenvironment version.",
            "But for previous versions it was a bit different and we had to use couple of system settings \nand special code that should be used to generate number.",
            "So we have to answer this.",
            "Okay, which tools could be \nused for proper transfer of configuration modifications between environments?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThank you to.",
            "Okay, so proper transfer of changes target database.",
            "No, no, we can't replace the database.",
            "Replace \nexecutable files.",
            "No, we can't do this."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI have a quick question about the multiple choice questions, if that's okay.",
            "Yes, yes, please.",
            "So is it basically all or \nnothing?",
            "So say if it's a Multiple choice of 5.",
            "Say for."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIn general, it's not so good and it's not recommended because they can temporarily do some violation like you made \nstart to compile and another developer will see hanging of the website.",
            "So this is something that it's better to avoid \nand interfere with other developers.",
            "So this is correct Option is not recommended.",
            "So not recommended Other \noptions like submitting changes of svn, it's also not true.",
            "And to publish and develop an environment Interfere can \nwork when publishing users will not interfere."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut for this test you will always get random 28 questions from different categories.",
            "It means that if you want to \nprepare better, you need to run this test more than once.",
            "I recommend you to start it five or 10 times.",
            "So you will feel \nmuch more confident when you will see all different questions and when you will know for sure and you will practice \nwith answers.",
            "So it will take some time, but this is how you can prepare better for the test for the exam."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNo, it's not true.",
            "When truncate is called table is completely cleared and deletes every record separately row by row.",
            "Yes, this is true.",
            "This is difference here.",
            "Let's move on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThe reason is that packages cannot be embedded into each other.",
            "So packages cannot be included into another \npackage and embedded packages are not allowed.",
            "Not a package component.",
            "Schemas means objects, client \nmodules, processes they are package components.",
            "So not correct."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOne more package architecture question.",
            "If you do not specify dependency in the package, what will happen?",
            "Package cannot be fixed in version control.",
            "No, it's not true.",
            "Functionality will be available."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThis question is about Marketplace applications and this category is on the for advanced level.",
            "So we already \nstudied almost all of proposed marketplace applications.",
            "So maintenance tools for creation.",
            "We installed it on our \nenvironment.",
            "Remember here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd we can search functionality for all data access to all data.",
            "By default it's provided for all administrators.",
            "So \nsystem administrators, yes, you can see single users by default cannot operate without data, so you should provide \naccess for them.",
            "And of course we need to use can use our data service operation.",
            "And this is not correct."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nHow do you use custom types?",
            "This is about data contract and data member.",
            "We discussed it when we build our \nweb service and when you need to transfer additional data so large big data arguments."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nNow you cannot see it, but usually it's randomized.",
            "So in order to make it hard to remember, you see that when you \nopen same question next time it shows you randomized options randomized positions of options.",
            "So now post is on \nthe third place and previously it was on fourth place.",
            "But it remembers your answers."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nPlease be careful Disable file design False Enable file design True you should not mix it this one is correct Entity \nschema query you remember this class?",
            "We used it for server side calculations and operating with data Also similar \napproach with client side Entity schema query can be used at JavaScript part with the client side code it can also \nwork if you're interested, you can find other examples.",
            "So entity schema query has some features Access rights \nrestriction yes Additional setup of queries like hierarchical queries and paging yes and caching yes so everything is \ntrue here."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo how to properly use it?",
            "This is about protection from memory leakage, you remember?",
            "So we have to use dispose \nif you do not use using yes or you can use using operator yes in single thread, yes, but now the documentation tells \nthat you already can use multiple threads, but I would not recommend you to apply it widely.",
            "So I'm still thinking that \nusing multiple threads here may cause some memory leakage.",
            "So single thread is still correct."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe did not actually study the entity class and you can study it yourself.",
            "You can find a lot of examples like this.",
            "I will \nshow you.",
            "Go to terrasoftware Web Teresa configuration, Search through all C sharp files for a sample where we \nhave save method.",
            "You will find many different examples of working with entity."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when you use entity is an instance of an object so in memory and you can use it for data management.",
            "But one \nentity may operate only with one data row at a moment.",
            "Then you can construct some filters and search for a \ncorresponding record.",
            "If you did not find it, then you can do insert."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo here we have a question about how to apply changes.",
            "Working with entity Obviously this is running of the save \nnetwork.",
            "Okay, let's move on features.",
            "Working with data using entity of course it offers all possibilities to read, add, \nedit and delete.",
            "So Entity class can be used for creating records or updating records for selection and for delete."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo rules and details are supported in Classic UI edit pages only and not supported in list pages or they are called \nsection pages.",
            "In section pages, rules and details are not present.",
            "Oh, details are here.",
            "Funny stuff."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo when we save yes, validation will be triggered when opening page for insert no, but currently we have to review \nthis because when Freedom UI page opens, it also triggers for validation delete no switching focus from field to \nfield.",
            "Yes, we are almost at the end and schema must be used as parent for a section schema.",
            "So how we can know \nthis?"
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut for those who work with Classic UI this knowledge I think it's quite actual.",
            "So this section V2 is correct here.",
            "One\n\n--- Page 465 ---\n\nmore question.",
            "Schema must be used as a parent.",
            "So this is a client side question Parent for section page which \nmeans edit page."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWe did not study this.",
            "In Classic UI it makes more sense.",
            "And in Freedom UI it's also possible but not so practical.",
            "So \nlet's imagine if you create new module, it's possible to set styles in less tab.",
            "So you can see we have a Special less \ntab, JavaScript tab and less tab."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo don't be so upset because each mistakes, each mistake takes 4% from your score.",
            "And when you run self \nassessment test you need to only to see different questions, potential possible answers and practice with it.",
            "So don't \nbe so focused on final results.",
            "And when you're running self assessment tests, you need to see all variety of existing \ntest questions."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nIf you do seven mistakes in this self assessment test, you will lose 28 marks and your final score will be 72.",
            "But don't \nworry because your score in self assessment is not so important as your knowledge of answers of and your \nknowledge of existing questions.",
            "So that's how you can prepare.",
            "Of course you will need to run this test not that one \nor two times.",
            "I recommend you to run it maybe five or ten times."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd here is what this is a question from Rakhi and this is about client side programming and we did not study this \npart.",
            "It's about send box Messaging.",
            "I can show you where you can find answers about this.",
            "I'm sure you'll find it \nquite boring because such messaging made sense in Classic UI and not so practical in Freedom ui."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd for such purpose, messaging mechanism was designed and this is sandbox messaging mechanism which is \nonly working at client side between modules.",
            "Between client side modules.",
            "There are some technical details about \nit.",
            "So just for your reference I will answer.",
            "I will provide you the link."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo messages, they have different types and correct answers.",
            "Here are point to point message returns an object \nbroadcast messages does not.",
            "Yes, this is true.",
            "Probably I have to show it as a green color.",
            "Yeah, so this is true."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI can quickly show you examples of how it can look like and example of sandbox messaging.",
            "So in such messaging \nwe have an initializer.",
            "So kind of a person who can initiate this message.",
            "It's called publisher.",
            "So a person."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSubscriber is a party, so it's a module which declares that it can process certain messages and it also should \nregister them and then this module must subscribe.",
            "Message has its own identifier.",
            "This is a text code and message \nwhen subscribed may have a method which will be actually used for getting message data and do something useful."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nI think we have to remove this question from the test because it was from very early version 7 settings and it's about \nbind config for properties events for events.",
            "So A is correct here, but we will remove this question soon.",
            "So this \nquestion does not teach you anything because now it's totally not practical, neither in classic UI nor in Freedom UI.",
            "So old, very old question for 7.2 or something like this and A is correct, you can guess by events for events you can \nguess the answer."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo just make sure your homework looks good, run tests several times and then for example, some of you may apply \nfor the exam and run it next week.",
            "But in general, usually participants need from two till three weeks and this is time \nquite fair which will be totally comfortable for you to prepare for your exam and then run it today you will receive your \nhomework file and please respond at Please respond on my email with your confirmation that you are ready to or \nyou plan to pass FastTrack certification and I will provide you individual date and time of course, taken into \nconsideration your time zone."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo you will receive everything necessary in email.",
            "And when the proper date will come, I will wait for you in Zoom \nsession when you will finally proceed with your test.",
            "With your exam test, you will receive your certificate which will \nbe available for you always at the Academy.",
            "Okay, here is my academy, here is my profile."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAt the end of this period, while your certificate is still valid, you will be able to run recertification, which means \ngetting new certificate by running test only with no homework.",
            "So if you want, when you have current certificate, \nyou'll be able to get new one with a simplified procedure.",
            "So that's all for today.",
            "I thank you for your time.",
            "If you have \nany questions, any more questions, please tell me."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYeah, and advanced has 28 theoretical questions, while basic has only 25 theoretical questions.",
            "So Advanced is a \nbit.",
            "Is a bit harder to prepare because of more question categories.",
            "But in general they are like similar.",
            "So if you \nspend enough time, you will be able to pass Basic or Advanced with the same level of errors, I think."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nAnd unfortunately such links work only once and that's why we have to generate it each time when participants \nwants to pass an exam.",
            "Oh yes, sorry.",
            "So the.",
            "The exam and the going over the homework, there are two separate \noccasions, are they?",
            "So one time we'll have a meeting to go over the assignment."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nWhen we will have online session, you will show your homework.",
            "We will see if it's working.",
            "Actually, do we have \nsome serious errors there.",
            "And at the same time, after checking the homework, which will take just 10 minutes, then \nyou will run your test, which will take all rest time.",
            "But usually time is not a problem."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\n--- Page 468 ---\n\nOh, so you are worried about the business sense of this time, of this type of cultivation.",
            "Or you have some errors in \nexecution?",
            "No, no, the execution is right.",
            "But the result, the number, it's not like when I calculate it in phone.",
            "You can \ncheck."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo in general, it looks like we have 300 bucks.",
            "311 bucks per square foot.",
            "So it means we divide it and this number \nrepresents value per square foot, but not per realty item.",
            "So not per a house.",
            "And you if you see something totally \ndifferent here, or if you see nothing, you can check how your calculation went on."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo it looks like this data was the result of our calculation and it looks like more or less close to reality $300 per \nsquare foot according to our current prices and areas.",
            "So area is used here in this calculation.",
            "And also if you're not \nhappy with this number, you can try to do debugging of server side code like we did with Visual Studio Opening \ncorrespondent average price calculation script here methods wrapper so you remember we did it.",
            "And you also can \nput breakpoint and restart your app.",
            "Attach your visual Studio to your worker process."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nYeah, yeah.",
            "Thank you.",
            "So if you have zero it's very oh so it's quite often happens that you have just small mistake in \nyour process.",
            "So if you find that you have just zero there you can go to your average price calculation.",
            "And I also \nsometimes do this mistake."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nThen at next step it will go to page parameter here if you do something so if you lost your data something on the \nway so you will see zero and you should debug your process, you should debug your script task.",
            "And we already \ndiscussed how to do this.",
            "Rakhi is asking Rakhi yes, you can reply on Monday or whenever it will be suitable."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut I think that regular Certification is a bit more harder and it has different variants.",
            "There are different subjects, not \njust one realty, there are different subjects.",
            "So you will probably take more time to do regular certification.",
            "So that's\n\n--- Page 469 ---\n\nall for today.",
            "I thank you for your time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nBut now you have automation with Zoom and with already prepared links for download.",
            "So probably it makes sense \nto use existing links without waiting for me to host the same video somewhere else.",
            "And that's why it makes sense \nto download it today.",
            "And Basil, if you fail the exam, yes you can take it again."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nSo your homework, if you do it well, no need to do it again for the next exam, yes you can take it again.",
            "Thank you \nBasic for your question.",
            "So if any other questions please tell me.",
            "I will do my some final preparation step to \ndownload everything to file system to submit to version control.",
            "And thank you very much for your time."
          ]
        },
        {
          "heading": "Speaker 1",
          "key_points": [
            "# Speaker 1\n\nOur session is over.",
            "Thank you and goodbye.",
            "It."
          ]
        }
      ],
      "code_sections": [],
      "languages": [],
      "key_concepts": [
        "page",
        "schema",
        "field",
        "customization",
        "integration",
        "business process",
        "package",
        "sql",
        "data",
        "section"
      ],
      "keywords": [
        "speaker",
        "data",
        "page",
        "let",
        "like",
        "okay",
        "use",
        "need",
        "code",
        "make"
      ],
      "topics": [
        "speaker"
      ]
    },
    "method": "hierarchical_structural"
  }
}