{
  "video_id": "6dd3fd41c2f4",
  "file_path": "ai_optimization/creatio-academy-db/developer_course/videos/Recording1.mp4",
  "title": "Recording1",
  "duration": 0.0,
  "transcript": " Today is session number one of our development on creation platform, guided learning. My name is Dimitro and I'm from creation, so I've been working as a trainer for many years and working in creation for more than 18 years. I've got a lot and I've went to share some experience and creation development basics with you. So we have a set of sessions. Ten sessions are planned, each session will take from 2 to maybe 2.5 hours, so it would be more or less easy to include it into your daily schedule for such two weeks. Each session will be finished with the video reporting, so you will have videos that you can process and even if you miss some sessions, you can watch videos and do all of the exercises yourself. At the end of the course, for some of you who would like to perform individual development certification, so it's kind of axon where you can show your skills, you will make your homework, prepare for the test. And finally, some of you will become certified creation developers. It is expected that in order to become a developer, you should have some experience in programming in JavaScript, in C-sharp and also some experience with the database will be a great plus. Today we will do first steps of our development career, so we'll discuss how general development is recommended to be performed in C-sharp, what are the environments, how to set up our own environment, and also we'll probably switch our own environment in a special mode, to enable full available set of tools for developer creation. Then we'll work with packages, with version control, and enable git integration. Next sessions will include working with object model, making data items using some bit advanced examples, so working with object, connecting it with database use, and so on. Then we'll switch to work with UI, user interface, I will tell you about new, freedom UI, user interface, and classic UI, what's going different, differences will mainly focus on freedom UI. Some examples will also come with older legacy, classic UI stuff, and we will do some programming in client site. We will work with actions, with buttons, programming our own, and the developers making business roles, making validation, and do some other things in client site. Then, when you finish it, I will show you server site programming in C-sharp. And server site includes programming with data model, working with database, writing your own C-sharp scripts, making your own classes, of course, integrating with modern, powerful tools like Visual Studio or RIDER. And I will show you how to debug, how to process object events, so how to do different server side things. Then we will work with classes, with web services, moving towards integrations, I will show you different examples. And also, we will see standard integration tools that are available on board of creation platform. So you will see all data, you will see data service, I will explain how to call third-party web services from creation. And we will talk a bit of creation maintenance and some supporting tools like Clio utility. I will show you examples of working with Clio, of its functions, and explain how you may improve your experience and in general how you may do your actions more efficiently if your project is clear. At the end, we will take some time to prepare for the exam. I will explain you how homework looks and what it includes and how to perform this, how to prepare for exam tests. And finally, I hope some of you will be ready to get certified. We call it fast track certification because you spent probably two weeks for our developer sessions, then you will take probably two or three weeks for preparation for the exam. Then we will have individual sessions with some of you to check homework and run exam tests. And that's how you will get your certificate and creation certificate is valid for two years. In case if you have any questions, please feel free to ask at any moment of time in chat or using your microphone, whatever works better for you. Today we are doing first steps on creation platform. So I probably need to explain what it is in very general. So creation is a website. Website heavily connected with the database and it's mainly designed to work as an enterprise level, data management system and business process automation system. It has a lot of different functions inside. We will start some of them and also what you need to remember first about creation. This is very flexible system. So you can easily set up new entities. You can easily change the shape of existing items. You have plenty of no code customization tools, which do not require any special developer skills, but also it has settings that can be used with programming. So it also allows you to program and make more, let's say, complex and more efficient solutions on the same platform. We will study how to install it, how it's recommended to work with it, how to make a local environment and a lot of tests of our 10 sessions training. In case if you have any questions or you have some expectations and you would like to know, will we cover some specific topic, then please feel free to ask. And here with you to make everything as clear as possible. We will start each session with your questions and also if you have some questions after making your homework. Also please note them or maybe just prepare at the beginning of each session. So I will go really happy to hear some of your questions or feedback about your practice. So don't hesitate, don't feel shy even if you understand that your question is very simple and silly. Don't worry about this. We are gathered here just to know more and know better about creation. My task is to help you with it. So first of all, I need to tell you a couple of words about organizing of development process. Generally, let's imagine that our customer may have just one single environment. One creation assistant can work as production environment and some slight simple customizations can be done just directly on production environment without need to run anything else. But in case if you go a bit further, any of you realize that some customization may be quite risky or cannot be done very quickly. So it's not a good idea to treat your users with non-working stuff for some time. So in general, it's much more safer to do some development, especially if it's complex development separately from your production environment. We have Academy website which has plenty of interesting articles related to creation, customization and development academy.creation.com. Most of you already registered here because you registered for the training session. Everything is all necessary. Okay, what it be? So I already logged in, go to Academy. Yes, already logged in guides and we have a lot of documentation. Mainly will be interested in development documentation, but also we will look at some other articles. So I need to tell you about recommended development procedure. Probably this one. So this simple picture illustrates and shows how it's recommended to develop creation projects, creation platform solutions. So we have developer environment, which is a separate one and it's designed to be used for developer purpose. So developers can do some experiments, they can do some tries and they finally make some changes to the system, which include functionality that customer asked and explained how to work. Designations made on developer environment can be easily exported into files and then we will have another environment which is called pre-production or simply I call it test environment. Test environment is necessary to check your solution to load it and make sure that it works just as planned. If it's not so successful, we go back to developer environment, make some checks, fixes, export our solution again, import again and check it again on our test environment. Finally, when we decide that our solution is good enough, then we can go to production environment and choose proper moment of time to load our settings like the time where minimum of our users are active. And then the same way as we imported solutions from test environment, you can easily import it on production environment. Also taking care of all the back-end up existing settings and in general it's recommended to have some backups of your production environment. So that's how you will make a delivery from your development stuff after testing to production. As you can see, it's recommended to have three different environments, three different creation systems with a separate website, separate database and check something that is recommended when you build complex implementation projects. If your customer asks for a very simple customizations and you agreed that probably so many environments are not necessary, so you can also do this but this is at your own risk. Sometimes you can do customization and finally you may do some changes which you would like to revert but in creation, revert of changes sometimes it's not very easy and sometimes it's really hard and it was not designed or original. So please take care. Any development I think should be safe and that's why separate environment is the best choice here. Separate environment also means you have to deploy it somewhere. It would have our customers prefer to run production and test environments in the cloud. When I say in the cloud, I mean in creation and trolled cloud where you have your website address, login and password and server side of creation is kept and it's a cared by creation cloud engineers. So server side machines, their licenses, database, all connections and other things that are very technical related to organizing of creation working. So everything is managed by creation cloud engineers and that's how most of our customers work with production and test environment. But what about development? It's better and it's recommended to have a local developer environment. Only in a local environment, you will have full set of available tools, full set of features that are useful for developer and that's why so I will explain more in details. Developer environment is recommended to be set locally and also separately for each developer. For example, you have a team of three developers which one wants to do something and make customization of the same project. It makes sense to organize separate developer environments. They will have separate websites, separate database and of course as they work with a single project, they will make sure they need to exchange settings. So they will need to see, sorry, this one is probably here, it's my tool to make some draws for you. Okay, so I just want to say that if you have a team of developers, they will need to exchange settings. In this case, they will direct exchange of settings between developers, so something like this directly is prohibited. So you cannot do this and it will not work. So on a regular basis, it's better not to try and the best and recommended option out to exchange settings is to have a separate repository. It's possible to use different types of version controls. First of all, your file is Git, but also it's possible to use others like SVN, TFS and other types of version control. First developer should submit their changes to version control, like this. Second developer will get changes from version control and vice versa. And the version control will keep historical changes and will help us to understand who did changes when it was done, what were the previous state of files and so on. So version control makes a great job in analyzing our code and helping us to understand how project moves on. And also it's quite safe in case if you did some incorrect changes, you can easily roll them back and get previous stable conditions. So version control is recommended and it's not even recommended. It's mandatory to use if you run team development. If you have many team members who participate at the same project. We will study how to do this. So don't worry, we will do this and I will explain and you understand how to work with it. But first of all, we need to make our own environment and to see how we can do first steps before we move on. So to see here on this diagram where we have the all of separate databases, is it strongly recommended to follow that structure or could we have each of the application servers working off the same database server or is that kind of not really recommended for development? I think that if you have different websites, you must use different databases but in some cases. For example, you have one developer and couple of analysts. Yeah. And you would not like to create a separate environment for each analyst because they are not planning to write any code. They do not need some debugging. They probably are not so interested in file system and so on. So they just interested at no code customization like modifying pages, like building processes. So you can find the proper part of system where you can easily do this. So they will mainly use creation UI to build the air part of work. So in this case, it's possible to run single environment, including for example, developer and couple of analysts, but they have to agree with each other how they will work, especially when developer will start to do some compilation or some debugging or other actions that will make their website to hang for some time. So the main reason why it is not recommended to operate as many developers as one site is such operations like compilation, like debugging and other scenarios where a website will be, let's say, will look like it's hanging and not responding. If all the team is okay with it and such developer actions are not performed too often, then it's possible to run single website with many customization. So many analysts and even several developers inside. Thanks, Meli. Thanks, Petty, for your questions. So let's move on. We already know how to recommend it to organize your process. Sorry, sorry, here. And how you should use and deliver your management here. So you have to include, I think, three environments is like optimal one. Sometimes for big customers, for big projects, it happens that you have even more than one test environment. And also, I just forgot to say that test environment should be a recent copy of production. In this case, your testing will be the most accurate. It will represent what is actually going on and how your system will behave after you will have to change. So it makes sense to update your test often as a copy of production. In this case, you will have the best matching result. So you will see exactly the same of what you will fill at production when you install your solution. So let's move on. We need some local environment. Why? Because we are developers, we want to make our own first steps. And we have serious reasons to make this environment local. And it's possible to do development in production or sorry, in cloud conditions. So it's possible to do some programming, but it's not possible to debug every side code. It's not possible to access file system if you work in cloud. And also, it's not possible to use Git or other file system oriented version control systems to make a full team work. So you have a lot of reasons to use local environment. That's why I will show you now how to install this local environment. Some of you who read today invite email, you will probably have necessary files and maybe you even installed your system locally. But generally, this is not easy procedure. A lot of participants of our training sessions usually face some troubles and difficulties during this installation. So I plan to show you from the beginning to the end how to install creation locally. I will use file system management tool. It's a part manager. But you can use other tools if you want and you can use windows explorer if you prefer it and so on. So what we need at the beginning. At the beginning, we have to work with, so I recommend you to work with windows. It's also technically possible to run creation on Linux. But I think it will take longer, it will take more time for us and more of their specific Linux settings. So I prefer to keep it easy, especially as we are beginners, so to run creation on windows. I'm using windows 10 Pro. You can also use windows 11 Pro. If you use windows home, windows 10 or 11 home. So you should understand that it will be not fully working. So you will experience some serious difficulties and the main effect that you will face is when you operate with creation tabs. For example, this one, then you, for example, want to duplicate pages or just need to go to other specific tab which opens a separate page like this one. So in home in windows 10 or windows 11 home, creation will hang. Such pages will be hanging until you close previous ones. The developers explained me that it's connected with the resources of Web Sockets that are very limited in windows home website in IIS. So Web Socket connection is used and there are some troubles on version home. So you should expect if you use this type of windows and windows home, then you will see problems and you will only be able to operate with one tab at a moment, which is definitely not so comfortable. So now you warned about it. OK, so I have windows PC. Generally, it's important to take care and just check that your power of your PC is good enough. In my case, as you can see, I have a CPU core I5 12 cores. I have 16 bigger bytes of RAM, which is good enough. And if you have 8 or 10, it also will work. But if you enable all the features and if you start all the tools, probably you will run out of RAM. So 16 is good and the 8 is like minimum, which you can look at. SSD drive, of course, is also very recommended because of general speed. So the most critical parameters are CPU and memory. OK, so you have one single PC and you can run creation on this single PC. Creature has two big server side parts database. In my case, this is Microsoft SQL server database, but it also can be was green database. You can run postgreave for windows or you can run postgreave for Linux. So it's up to you. In my case, I'm running Microsoft SQL server and I recommend you to use developer edition. Developer edition is free for developer needs and the personal developer needs. So in my case, you can see I have an SQL server developer edition. So I recommend you to use this type of SQL server. I do not recommend you express because it has limitations on amount of CPU cores used by server, amount of RAM and the size of the database. So developer edition works the best. So we have database part and we also will manage web server part implemented by internet information services. This is part of windows and this is also one of the biggest component of the system. So in general, we have two big server side components database, so standard regular database and IAS. Also, we have some other technical components. I will show you all of them and you understand how we can make creation from scratch. How to install it our own environment. In case if you understand that you have no chance to install creation locally, maybe no permissions, no hardware, let's say, powerful enough to run it, or some other technical reasons or no permissions that your machines and so on. But you still want to practice this creation. You can go to ratio.com website. Sorry, this one. Probably have to love you in there. And then you can request us or you can ask for a trial environment. Try it free environment. I recommend you to use studio because it will be the fastest one. And it will work for you for two weeks. Then you can extend this time if you ask for help at support team. So it will be probably enough to make some of your experiments, your practice. And this is very easy. So you can just try it free and provide some data about you and in minutes, maybe in a minute, just a little creative. Free, cloud, trial environment for you, which will be available for you if you log in at creation website. And then follow. So you will have your own login and password for your trial environment. That's how you can do it easily and practices creation. If they so not work, I also can create an individual demo website. Some of you asked for it. And the individual demo website will work for you probably a couple of months. Also based on the minimum product based on studio product. So okay, we have a start PC, enough CPU, enough RAM. What else? We need documentation, of course, because without manual, I think it's quite hard to install creation, especially if you do it first time. So let's go to Academy guides. Then it will be about setup and administration. And we have a set of articles related to on-site deployment. We have a general deployment procedure, which I recommend you to know. To look at and I will also post all necessary links into our chat. This chat is also recorded in the same as videos. And also we have captions recorded. So you'll have a closed captions text as well. Especially if some of you maybe who are not perfect in English, they will need these captions, which will make it easier to understand what we are talking about. Okay, today we are talking about installation, creation, walker, and the main reason why we need it is to enable full available developer tools. Working with the cloud version, you will not have full set of developer tools. You will not be able to use Git. You will not be able to perform server-side debugging. No access to file systems or quite serious limitations. And the local system has all such features for you. So what we need to do at the first step, we can follow all of the general procedure steps here. So I will do it step by step and explain how we can do it. One of the components which we need to use at our creation is caching server. And in creation, caching server implemented as regist software. And if you go to look more about regist installation, you will see regist installation for Linux. You can also install regist as an image in Docker. And unfortunately, this is not set. So you cannot easily find it in our official documentation. You can also use regist or Windows. And regist for Windows is recommended on developer edition or developer environment. You can consider by your own, would you like to run it for test and production? And the reason why creation technical writers and developers do not recommend regist for Windows regularly is that it has a version less than regist for Linux. And also, it's considered as less secure. But in my case, I think it's not big issues or we can afford easily. Regist for Windows. And I will show you where you can find it. We can search regist for Windows. And we will find some solutions. And one of them is regist for Windows at GitHub made by Sam Poland, Guy T. Poradowski, and the current version is the told, but still good enough. So what you need to do is take this MSI file downloaded. So wait for me. Show you. And then you can install it. The question from Paddy, is it possible to run regist on Windows subsist for Linux? Yes, you can do this. If you want, you can do this. But once you install and run regist for Windows, you probably will not need to do anything else. Redis is trouble free software. It's tiny, quite easy, and create your users on this small part of available redness comments. So it's in general will not raise any issues for you. So what you need to do is to download this MSI file. I will call the link address for you. You can download it then you will find it on your disk. Then you should make sure you're running it under local administrative privilege. And finally, after installation of all regist settings by default, you will find C program files, regist. And this is all what Redis saves on your disk. So this is just set of its files and that's how Redis is working. Redis is a high speed memory storage, which works as a cache in server for creation. And Redis is required component. So you must install it. And by default, it has good enough settings. And if you really want, you can go to Redis in those service conf file. Redis is installed as Windows service. So you can go to its settings. And if you want, you can change some parameters. Like login level, default login level is noticed. So it's like moderately wearables, not so wearables. You can change log file position. You can change maximum number of databases allowed. And so on. But out of the box settings for Redis is good. So you can just keep it as is and it will run with travel free. You can check that your Redis is running. If you go to service says you will find Redis server. This one, it's running. The only known issue about Redis is when you install it, you try to run it as service and it doesn't start and immediately stops. In this case, all you can do is to uninstall it and make sure you have administrative, local administrative privilege and install it again. And that's what you, so the only possible issue you might have is Redis. Once you installed it, it's running. So you will have no troubles with it. If you prefer to run Redis with Windows subsystem for Linux or inside Docker, you can also do this. You can say, original Docker images for this. And original website is Redis IO. Redis is developed by a community. Oh, they have some new updates here. And Redis has community and Redis has a lot of comments. So let me find the products. Well, they changed their website now. It's hard to find all the comments probably here. Yes, we probably have more than 100 or even 200 of Redis comments. You see a lot of comments, including cluster management and so on. Creations uses probably 3 or 5% from this stuff. And this is official documentation of Redis. And I think that you can just use, oh, let's see, do we have anything with downloads? What else do we have here? So now you can see Linux version for version seven and Windows version version five. But it's still good enough. So Creations does not use too much of new comments. So Redis is travel free. You should not invest too much time into it. You just install it, run it, and then you may be forget about it because it will have no troubles for you. OK, so cash and server is OK. We downloaded and installed it. I already did it on my PC. You saw Redis server is starting as a service. It's working normally. I used all these default settings. And that's why no any changes. So let's move on. Deploy the database and so on. So now we have on the our PC. This is Windows PC. And we need creation installation file. This file is distributed as a big zip archive file. Let me explain what does it mean. So in invite email, you have chance to download such a zip archive file and depending on the platform Windows or Linux and depending on the target database, makers of SQL or Quaspre, we find the three different options. The only one option was in our email. The most popular is version four Windows and Microsoft SQL. But in case if you want to run it on Windows with Quaspre or on Linux with Quaspre, tell me I have another link for you to download. So you will need this big zip archive file to install creation locally. Such a file has its own name, including version number usually. It has a zip extension and it has quite big size about one gigabyte. So you see this is a zip archive with one gigabyte and it has several maybe thousands of files inside. So what we need to do, we have to take this file. If you, for example, start some new project maybe year after we finished today session. So of course this version will be outdated. You should remember about recent new versions. And generally if you need to install local system and you need such file, you can ask for help at support team. They can share such file for free with you. According to your needs, according to the target website and the website type Windows for Linux and the target database type, Microsoft SQL or Postgre. For some exceptional cases, we also have Oracle versions. But in general, I recommend you to focus on SQL or Postgre because they are the most popular and I think the most attractive for solving your customization needs. So we have this file. I already downloaded it from inner creation sources. This file is on my disk now. I need to unpack it into some folder. So let's make a folder. I will have this kind of folder and this is new folder on my disk. So physically it will work like this. If you get used to work with Windows Explorer, so you can create your own folder. Please note, it's important to create your folder not in Windows protected area, not inside of Inet Pub, not inside of program files, not inside of users or Windows. So I recommend you to create just another folder for your creation website. The reason is quite serious because if you deploy your creation somewhere in Windows protected folders, you will experience additional difficulty with access of creation app to its own file. Because Windows protects it, especially when system needs to modify such files. That's why I created my own folders. I keep some kind of structure of several websites running on my PC. Currently I will actually stop any execution, any running website. This one also will be stopped to release some memory and CPU resources. So I created a folder on my disk, D1, which will keep information, which will keep all my website files. So I take this Zeper file. Thanks to far manager automation, I can easily unpack all of the contents into this folder. If you use Windows Explorer, you can also do this unzipin automatically. And it will take some time probably up to one minute. Thanks to fast SSD on my disk on my PC. In total creation, goods more than 20,000 timing files. That's why this unpacking will take some time. But in general, this is just one time step. It's not so difficult, I think. So we will finally have all the items ready. Inside of this Zeper file, you can find DB folder. This DB folder includes backup file. Sometimes beginners do mistake. So they think that the same backup file can be used for different types of databases. It's not true. If you have Microsoft SQL Server backup file, it has bug extension. It will be only applicable to Microsoft SQL Server database. You will not be able to run this bug file for OSGree or Oracle. If you're interested, for example, in OSGree database, you should take another installation file. If you made it, I can share it with you. For example, this one is for Windows and OSGree. You will see DB and you will see different size twice, less than Microsoft SQL, and different extension.backup against bug. So you can see that OSGree has a different structure of backup file, different size and different format. So it will be not compatible. And that's why please take care of your need installation creation on Microsoft SQL. You should take corresponding source file. If you need it on OSGree, you should take another installation file. OK, we unpacked everything into one folder. And our manual tells us to think about the database part. We have a manual for database server installation. I expect that you already installed your Microsoft SQL Server and some management tools for it. The best one is Microsoft SQL Server Management Studio. And also I made some preparations on my SQL Server properties. Let me show you what is important here. So let's go to see its properties of SQL Server, then switch to security, and by default, your SQL Server is installed with Windows authentication only. It means that users can connect to the SQL Server only with their Windows credentials. Creation developers prefer to use SQL Server and Windows authentication because it gives you some chances to use a login and password without any connection with Windows sessions. And I also prefer to use SQL Server authentication. Let's up to you. If you want to keep Windows connected only, you will have to make additional settings at your application pool. If you want to use this SQL Server and Windows, you can switch. But also you should remember, once you switch this option and press OK, it will work only after you restart your SQL Server. This restart is a special action for SQL Server. Don't forget about it if you will change authentication settings for your SQL Server. In my case, this is already done. And I already have my SQL Server. I connected it as local administrator user. So now we have to follow this Microsoft SQL Server procedure and we will restore the database from backup file. I will provide all necessary links for you, our chat, and then I will demonstrate how to do this. This is not very difficult. So let me show you. We have original backup file in DB order. This is our backup file. Please note, it has very old name. And maybe 10 years ago, this product was called BPM online. And from that time, this file name is still generated with these words. But of course, physically this is creation. So we will use this backup file. How? We will use it very easily. Go to Microsoft SQL Server Management Studio, database, write button, click, restore database from file, from device. And we have to select what file should be used for this. So we will go to our folders where we installed and packed our archive, this one. I'm using the latest version 813. Most of you who also downloaded Zipper, download it, big Zipper file, probably you also face the same version 813, maybe a bit more, so a bit older, maybe a week or two. But it will have similar set of functions available. OK, so we select this file, click OK, system recognize that this is a valid backup file. And we have to specify database name. So we have to provide database name. I prefer some naming conventions here, so I will call it D1 Studio. But you may name your database whichever you want, but it's recommended to avoid dots in database name. So anything that dots are not recommended. D1 Studio will be a good name of my database. No any other settings here, so I can just click OK. And system will thanks to my SSD, you cover it really fast. So my database was deployed and now you can see it's restored here. There are some additional steps that must be done for the database according to connection of users for it. And I will show you what additional steps must be performed. Let me show you. So here we have to think of how creation website, how creation web app will connect the database. We need to go to security logins. And then we have to make a login for our connection. We can make a new login for it. And we can call it something like SQL Server authentication. Login name will be D1 login. What did they show? So D1 login will be our login name. Login name is name of credential where you try to connect to your SQL Server. Of course, we need to provide password. The same is login, it's just to make it easy and enforce no password policy. You don't need it because otherwise password exploration will bother us from time to time. So it will stop normal work of creation. So just keep it quite safe even without any special policy. Now any special settings so we can just click OK, everything else by default. That's how I created new login for my SQL Server. Then I have to go to my database, find its security tab, users, and then I have to add the user with the same name. This is my user name, the same as login name. And the only special setting I must do is go to membership and click DB owner. This is very important setting because it will grant permissions for this user to do any operation in this database, including creating tables, when you find any data objects. So we will have full power of administering our database. OK, then we click OK. So that's how we added user to the database. At this step, our database preparation is over. And we can move on with our next part of this journey. And it's about enabling all necessary Windows components. But it's now that this part is the most tricky and a lot of beginners do these things here. So you should take it quite serious and perform all recommended steps here because there are no optional items. Everything is mandatory here. So let's do this. Windows components, Microsoft Visual C. I can check my apps, apps and features. So I will try to find Microsoft Visual C redistributable. It looks like they are all installed. And I guess I got it from installing of Visual Studio. So I did not install them separately. But if you have no Visual Studio, you should take care about installation of such components because they are required. IIS is a web server, Internet Information Server, of Windows. So we have to enable it. We have special components here.net6sdk and .net framework. Is the K we have all links here. Now you can see that this and this are direct links. So let me show you what you will see. Try to download. So you have to choose version six. And according to your platform, it's Windows 664. So you should take this one, click on it and download. Make sure you have local administrator privilege. And that's how you work with it. And the same .net framework is the K. So both components are acquired. You must install them. Otherwise, you will not be able to compile your system. Then we have settings. Of Windows Server, we can skip because now we are running Windows Pro desktop version. So let me find Windows 10 desktop version. How to enable necessary components. So what do you must remember is that such components are required for normal start. If you forget about this, you will not successfully run your creation. So you should follow such recommendations. And we can do this. So you can find control panel. Programs and features. Windows features on or off. This will show this window. And this window, it's usually surprised. It's not overall, but okay, let me show you this one. So here we see a figure of how you should set the setting. The most common mistake is such two items at the top here. So you must select Windows Communication Foundation HTTP activation for 3.5 and 4.8. So you simply can enable anything. Everything here should be enabled. And usually developers forget to do this. This is quite common issue of beginners who face this type. So the interface errors when installation. Then we go to Internet Information Services. But as I'm setting, so I just measurement console. Okay. And this one, as you can see in the manual, developers of this documentation decided just enable everything. In my case, I enabled only what was really necessary here. And one of the most important thing is the WebSocket protocol. So you can enable what you see. And finally, click OK. Wait for a couple of minutes. If system asks to restart, you should restart your PC. And finally, that's how you will enable necessary Windows components. This is very important step. And it explains in documentation. So I can share the link for this for you. So you will know how to install it. I already did it on my environment. This is one time setting for all my future creation installation. So it's quite enough for me to work with it. So my components are ready. Windows updates, quite obvious thing. So I think my Windows is normally updated. I can skip this part. And then I need to do some final preparations with a registering of my website in IIS. There are two ways how we can do this. Registering a separate website will separate court or I prefer a registering of a website as an app inside of default website. I prefer to use this one, registering of the website inside of default website. It's quite simple. So we go to application post first, then add the new application post. I will name it something like this. Do you? This will be my new name. No other changes. This pool is started. If you prefer to run connection to your database using Windows credentials, then you have to go to advanced settings of the pool, find identity, and change this identity to some specific Windows user account, which you expect to use for connection between application server and database. This is necessary if your database server is set for Windows connections only, only Windows credentials. In my case, I prefer SQL Server credentials, so I will not change any of the settings. So everything is by default. OK, then to go further, find our default website and add the application. Here, this is a very tricky place. Your application alias must start with a letter, not digit. The reason is that some of Croatia libraries and Angular Angular libraries, it's a JavaScript framework, they, so turned out they are sensitive to the file names and the path of the app. And if it starts with the digit, some regular expressions are failing inside of the Angular. And that's why you must start your application named with the digit. In my case, it's a D1 studio. I should select a proper application pool and specify a physical path. Now I need to say that Croatia has two major parts of file system. So we have a root part, which is mainly responsible for showing your login page and preparing Croatia app for a normal work of user session. So a lower part and inner part inside of JavaScript folder is much bigger, and it's like main application part. So physically, we have two parts. And when we register our app in Windows, in IS, we have to take care about it. And when we do this, first, we register a water part. And physical path should point to root folder of our app, this one, and OK. I'll copy this path for future. So we register root part of our app. But then we need to remember about its inner main application part. Select our created app inside of the photo website, write button click, and application 0Ls. This is always 0Ls, same application pool, and physical path should point to the special folder to resolve web app. This is folder for our inner application. Click OK. That's how we can register our app in IS. Now, our application is not operational for part, but we register it in IS. And then the final step that we have to do, so we followed all of these registering stuff. There are some also side quests that you may need, like settings of different mind types and so on. But from my experience, if you enable necessary windows components, all the items like this will be good just out of the box. So you should not modify it if you perform windows component settings. So I actually only needed to register my website in IS manager and that's all. Now, the last part, the last step, is special configuration file, which we must modify in order to make our system available. In my case, I have a Microsoft SEO server example. So I will go here. And here we have examples of connection files and explanations how to set it up. I will share all necessary links for you. So you will proceed the video. You will follow the text in our chat. And you will not forget anything I hope. So let's look in this connection strings file. So this is my folder of my app. This is a folder part of it and the only file system file that I must change to make my creation running is connection strings config file. We can start to edit it. You will see set of sections of this XML file. And first of all, we have to take care about DB section. DB section is about connections between application server and database. We have a so-called connection string or Microsoft SQL. And I need to modify its values to make it correct. Data source. This is my data server of Microsoft SQL. I can use my Microsoft SQL Server network name or simply I can use local host. In your case, if you have your SQL server located somewhere in your network, you will need your SQL Server network name, including named instance. So full name in case if you have named instances of Microsoft SQL Server database. In my case, this SQL Server has a name just a local host. And it works for me. Maybe it was not capital. Oh, OK. This is my name of the SQL Server. Initial catalog is database name. So let's remember our database name is D1 underscore studio. So we will put it here. Initial catalog now is our D1 studio. Save it. Next is quite tricky. Integrated security as SPI, which means we are having windows of authentication. We don't like this. So I will remove this line from the text. And instead of it, I will type user space ID equals my login. D1 login. You remember we did it at the database. And then password equals this is my password for the login. So that's how I can do this. Mobility, this space is not necessary. And nothing else. So data source, initial catalog, user space ID. And the password. No any changes is other parameters. So I only remove integrated security as SPI. And the replace it with user ID and password. Save it. Just not to lose any progress. You can find corresponding menus at this academy article. You will see DB connection. And also you will see something with connection for name and password. Here is the initial catalog. Yeah. You can replace integrated security as SPI with user space ID and password. And here you can see examples of it. It's right D and password. So we are OK with DB connection. And one more thing, which we must do in case, so we must do for our creation, the solution is a radius connection. So this file also keeps information about how a creator may find a radius somewhere in the network. So host should point to network name of your ready server. In my case, this is vocal host. And it often happens if you provide your network machine name. It's not working. And you see our message about system failure to find your corresponding radius server. So in order to fix this, you can just provide vocal host or IP address of your local machine, where your radius is running. So for some technical reasons, a creation fails to find a radius with its libraries and which provided network machine name. So set to local host here, I think will work for you. Also, we have another important parameter, DB. DB is number over so-called radius database, but it's more closer to code storage. Because radius storage is a set of key value pairs saved in the radius memory. And by default, radius has 16 different so-called databases, named from 0 to 15. And as we keep several creation instances, we must keep such DB numbers unique. If you run several creation environments on the same machine, you must take care to have a personal unique values for each creation instance connected to the radius server. In my case, it will be the one environment, and it will have the database number one. OK, then I can say it. Port number is by default. I did not change it when installed radius. So now I use it as is. OK, that's probably enough for our beginning. One more thing which I recommend you to do, but it's not required. It's optional. One is about creation logs. We can go into the top of the web, find and log targets config. And by default, this line number three log deal. This is folder on your disk where a creation will save its logs. By default, as you can see, it points somewhere to temporary catalogs. And in my machine, this works as Windows 10. I don't like this place because my local Windows user has limitations and I'm not allowed to go in there. So if I want to look what is inside of C Windows 10, I have to use a specially highly privileged Windows user. And I have to switch between them, so it's not so comfortable. That's why it can put our logs somewhere else where you can easily access it. For example, somewhere at C, creation logs. So we can create this folder, a system will create itself if it's missing. So that's how I do my settings for EnVog targets config. This is optional. EnVog. targets config. This is example of my settings. And this can help you to easily access such files if you don't like going to Windows 10 or if you have limited settings as me working with this folder because of Windows protection. OK, now everything is done. So save changes. And we can start our website. How we can do this go to IAS manager. Select our D1 website. Let's refresh them. Probably it will be better to see D1 in the first position. So we can just browse this website. Now you can see new, I'm using Google Chrome browser. So Google Chrome I think is one of the best for creation because of the fast JavaScript core. And you can use also a lot of other Chromium based products and browsers. And you can use Firefox, you can use Microsoft Edge. And please note, Microsoft Internet Explorer is not supported at all. So you can use Chromium based browsers, you can use Safari, you can use Edge, Currently I'm using Google Chrome and I'm quite happy with it. So when we start our environment with this browse action, browse, you can see that a system starts this type of URL. We can remember it just to have one more shortcut. D1. And this is our shortcut so we can go there. Yes, it opens. So code login page. You should remember that if you install creation locally, you have default login and password for the first input, first login in, supervisor and the same password, supervisor. Also you can see at this login page, you can see current version number of the app we are running. And I can click just log in. If everything was done correctly, you will see after some time, maybe after a minute, you will see our applications successfully log in. And probably it's time for us to make a small break. Some small five minutes, coffee break, so you can refresh a bit yourself and then we will move on. But please note, and you should be mentally ready for this. A lot of beginners say errors when trying to run their own vocal creation at this stage where you just start your app. If you have mistakes in connection strings conflict, you will see error messages from the website. And in case if you have some troubles with setting of inner app here, in this case, your login page will be OK. But when you start to provide login and password and then click login button, then you also may have some error messages, which share will lead to, let's say, errors during start of your app and you will not see this page. Now let's make a five minutes break to refresh a bit. And then we will move on. I will show you what next we will do with our installed system. I do not expect that you are following me just right now. I expect that you will probably follow video recording that you received today. So if someone performs the same steps as I do, just tell me, because sometimes you need more time to do this. Tell me please. So now let's take a break and then we will move on. Well, next to what I wanted to show you now is about how we can do some preparation of our system before continuing. Let's do some technical things and enable browser console. Control Shift I or F12 or you go to this, then more tools, this, and then developer tools. OK, let's enable browser developer console. Now you will quickly realize that it's console quite noisy. You will see almost each 10 seconds some messages here about telephony, connected, disconnected, other messages, and so on. So if you're not planning to handle all's in creation now, you can disable this telephony. Your console will be not so noisy, not so robust. And it will be easier for you to debug client site later. So I prefer to keep this console not so noisy. And that's why I will show you how to disable this telephony. I go to the user profile, then go to additional settings. We will see some settings for call center, call center parameters. And then we can disable call center integration. This will suppress this log in, excessive log in at our console. So we save it, save it. A couple of things that I also prefer to do when we perform initial start. This is going to navigation panel, find system settings. And there are a couple of system settings that we also would like to disable. Let me show you. We can use search by name. So use filter by name. And let's search for something started with show. In general, I need to tell you, system settings are level variables set at application. And they are used for different mechanisms, platform mechanisms, product mechanisms. So they are generally used by creation system. We can find system setting called show widget on log in page. And we can disable it. And also one more show widget on intro page. It's also better disabled. This is advertisement stuff, which is currently not active. And currently this advertisement only shows you some error messages. In your browser, maybe you will find it at the beginning here. So this widget was not showing. So we can disable such widgets. Let's go out. Now you will see less error messages here in your browser. And super wizard. Same password. Save it to the site. And log in. So now we will have less noisy console. We have much more comfortable conditions for work. And we have all systems ready. So now you can see our environment is fully prepared. So it looks good. And we are going quite fast today. And probably that's because of not so many questions from your site. But so if you have any questions, if you feel some uncertainty, please ask me. I'll be happy to answer. So what's next? Once we installed our environment, we need to enable full developer power there. And I plan to show you how to do this. And also we need to do some more preparation steps, which is quite not so obvious. So let me show you what we need to do now. So I can show you the meter. I just when you mentioned questions, I've just been writing down questions as we go to save them for the Q&A section. So I just have two that maybe I could ask now, if you like, or I can hold them off. Yes, please. It will be interesting because something which is not boring, like just a lecture, so kind of dialogue. Hey, please. So my understanding, sorry, we're going back to the database section. When there's two section, there was two databases. We were talking about pulse praise, and we were talking about the Microsoft SQL. My understanding is the version of the zip, we get, with SQL. The database doesn't have any test data in it. Is my assumption in that correct? Generally, we have two options to support our customers. Normally, we have almost no test data. It means we have very little number of useful values. For example, I can show you some data which is quite common for you to expect, like list of contacts. So select something from contact. You see just minimum set of records, like three records, or almost no data. And we call it just soft key. So it's like no data. But also, it's possible to ask for a special demo version, which means we'll have some demo records, maybe a couple of hundreds of reinserted data records, which is good for demos, good for some, but say, a billion dashboard, analytics, reports, and so on. I recommend you to start from the clean database. You will have less data to do. The other question, and I have you kind of already answered. When I was going through the documentation for the setup, the redis, the redis, kind of got into mentioning a cluster. But I can see that you didn't actually use it. So the cluster is nice. I did not use the redis cluster because it's not mandatory. This is optional thing, which makes a bit higher overall reliability of your system. But once I'm running just a single developer environment, which probably will never experience high load conditions when having hundreds or even thousands of queries per second. So I do not actually need this cluster. But it's out of the box, redis feature. You can enable it if you want. And you can proceed with its documents, materials, and you can set it up. It's up to you. Yeah, no, that's brilliant. Cheers. Thanks, Manin. Thank you. Thank you, Pady. It's interesting. Actually, it can also customize your IIS. But in my case, I'm not running under high load conditions, or I do not need to allow a couple of thousands of users to log in to my environment. That's why I do not enable IIS-based cluster. So I have only one single. I have a really short application instance. And it's OK for me. Thank you. If any others have any questions, feel free to ask it any moment of time. Hi, Dimitri. Hello, Basel. Yes, please. Hello. Can I share my screen to ask? Yes, no problem. But please note, it will be recorded. If you do not want to record, I can start recording. No, no, no. OK, please find the share screen, green button, and zoom panel. And we will see your image. No. Yes, we can see it. Yes, I'm going to install the SQL Server Management. But what version exactly I should use? Use on-premise developer. Oh, no. Download. No, just scroll down a bit. And the web party will see a SQL developer. So this SQL developer download. Now, yes, I think this is the best which you can find here. And the developer uses all CPU, all memory, and no limitation on the size of the database. Clicking just download it takes time, install it. And the only change inside of its installation, which I recommend, is to switch from Windows to mixed authentication mode. OK. And about the Visual City, which one? Community Edition. Community Edition will be... Community. Yes, it's also free. You can use some kind of Microsoft credential there. And it will be free of charge free. Yes, yes. And the last question is, my Windows is 11 Home. It's good. It can be doing the step you are doing. If you have no options to use Pro, so you can keep running on home. But there is a strict limitation that you will face. And this limitation is running multiple tabs. For example, you have a main tab of your... of your creations. OK. More or less OK. And when you enable other tabs, or you go, for example, to advanced settings, this another tab may hang if you do not close first tab. If you close first tab, then another tab will work normally on home. And it looks like it's closed by some limitation of the socket channels. And we cannot easily bypass this limitation. Question. So you should be mentally ready for some difficulties like working only at one page at a moment. OK, thank you. Thank you. OK, thank you, Basil. Let's move on. So now we have more or less OK running creation instance. And I need to explain you what next steps will do. So my main next goal is to show you file system development mode. But in the last versions, we have some unusual behavior which you need to understand. So if I will just simply follow manuals to switch from original mode into file system development mode, I will get some unexpected troubles, which I want to skip now. Let me explain what I'm planning to do right now. Here is my folder of recently installed application. I need to show you some inside parts of it. Let us also put it. Then we go to the result configuration and we search to bin folder and empty. Usually bin folder includes results of compilation of our app. Currently, such results are DLLs loaded from the database stored somewhere else. And the application is quite fine running with such assemblies. But when we will switch to file system development mode, system will search for such files exactly here. So we must compile our system before doing any file system operations and before doing any switches between environments. So we have to compile our system. I will click compile button and I will agree. And here, some of you will experience additional difficulty. I already fixed it at my own environment, but in your case, you will definitely get it. So let me explain. I have an article, especially dedicated to this error. So when you do first compilation on your system, where did I creep? I'm creeped for this. OK. So when you do first compilation, you probably will get this open image. You will probably get this type of error. So you try to compile. You have two errors with no file name. It's totally unclear what is wrong here, but you will constantly get this error. So it's in random. It will happen all the time when you try to compile. This is a common known issue. And you may know how to fix it if you will go to your log files. And as you remember, we set and log Fargad's config to some specific place. And that's how we can go to these two ways on our disk, creation logs website, D1. And then we have to go to zero. It's our inner application logs for today. We'll find build log. And in case if you have this type of compilation error like this, you will find error details in this build log. At the end, you will see some number of errors. You will see error text. Now you see this log is still going on, because compilation is not finished. So compilation produces some messages into this log file. And if you will get compilation errors, you will be able to get error details in this log. So here, the reason of it is some strange behavior from .net6. And finally, the last device and the best device we have is to go to your windows, go to system32.net.srv, and then create folder with the name NuGet. And then inside of it, create folder named migrations. I already did it on my PC. And that's why it works nice. But in your case, probably you will get this error caused by missing folders on your system disk. And I agree that it's not ideal solution, but it works well and looks safe. You only create folders. You do not provide any access. And it works nice. So your compilation will not fail anymore. It will not show you such an iteration issue. This is the link to community. Creation has quite powerful community. So this is about compilation error that you will certainly. That you probably will have. So I'm sure you will get this. And that's how you can fix it. So the solution is just to create the folder. Create the folder. This one. And this will help you to bypass and fix this issue. OK, my compilation finished successfully. Now let's go to file system and check again our B folder. There's a configuration bin. Now you see some DLLs result of our compilation. Creation has server side, which is capable of the configuration. Which is capable to include compatible sources. Such server side finally turns into DLLs that can be started. They include a lot of classes. And such DLLs are necessary. So they are vital for creation, normal work. And when we will switch now into another mode, which I need to tell you. So we'll need this libraries in this place. OK. So I'm telling you about this mode. And I need to explain why we have modes. So when we installed our creation system, we can go to settings. We can get this page. It's called system design page. Scroll down to the end. You see advanced settings. You can click here. You open separately tab, which is called configuration section. I already opened it. So configuration section. You can also go to configuration section if you will type in your browser your applications over URL 0.0. Dev will press enter. It will also go to this configuration section. Even if your main app is broken. So badly broken and it's not working, then you can type this address 0.0. And go to configuration and try to fix it. So what we need to know about modes. Creation has two different development modes. One is called creation ID mode. Let me show you guys development tools. And we have two modes, creation ID and external ID mode. Let me explain what is the difference. Creation ID means that you go to configuration section. You can customize different types of items. You can create any type of items. And you can open any existing tools and settings. So the system is quite open for you. You can use its own user interface and make your own customizations. And of course, you can also use no code customization tools like section wizard, like application hub, and so on. So you use only UI of creation to build it and modify it. We call this mode creation ID mode. And it means we use only creation user interface tools. This mode is perfect for beginners. And it's also the only allowed to run at cloud conditions. We have no access to file system. Creation ID is relatively simple. And it's quite well protected. So you may be able to find it hard to break your system using this mode because system protects you from the most obvious mistakes that you can do. So it's quite safe for beginners. But creation ID mode means you have no access to file system. You cannot use any type of version and draw except of SVN. And you cannot debug server site easily and effectively. So creation ID means some limitations. In order to use full power, we have a special mode called external IDs. The main idea is to allow system to save a lot of settings directly on disk into file system. And then use external editors to modify such contents. Also, you can still use internal editors. You can still use existing tools and open them in creation UI. But enabling this mode for external ID and saving necessary changes in file system makes it very efficient when you integrate creation with Visual Studio or other popular powerful editors like WebStorm and others. So I will show you how to enable this external ID and how to detect your current mode. Detection is quite easy. You can go to your configuration section and click on actions menu. You will see a file system development mode at the top and you will see some gray colored menu items. If you see gray colored, it means file system development mode is not turned on and it means that simply creation ID is on now. You can change this mode according to the menu. So here is the article which I recommend you to read. And this menu will explain how we can switch between environments. So we need to make corresponding settings in WebConfig file depending on the platform for dotnet framework. It means IIS on Windows. We should search for the file design mode setting and for the dotnet core or for Linux.nix, we have to search for another because the WebConfig file and we have the same setting there. So we have to make two changes. File design mode must be enabled to true and you static file content must be set to false. But please remember, before you will do any changes, make sure your system can be normally compiled. This is important for two reasons. First reason is to get corporate necessary files in WinFolder here, the Microsoft WebConfiguration bin. And also second reason is to make sure you have no common compilation issues like I explained previously. So we already performed this compilation now with our menus to switch between environments. Let me show you how we can do this. We have to go to the outer WebConfig file. So we have root WebConfig file and we have to also put WebConfig file to different WebConfics. The necessary one is outer root folder WebConfig. Start to edit it. Go to wine number 400. No, 510. I already have this folder previously. I already edited similar file. That's why my file manager remembered it. So wine number 510. I found file design mode setting originally it was false. I will care for the put it to, oh sorry, no, I will care for the put it to true. And then one more setting must be done. The big below, static file content must be set to false. This is also important. But search for it. Wine number 563, you static file content was originally true. You will set it to false and save. After doing this, we can draw a load our configuration section. Now you will see that change will apply and you will see that our actions button now will include active options for download packages to file system and update packages to file system. I need to explain what are the actions and what they actually do. So original storage of all our customizations. We will study how they work. We will study what package is, what package contents usually includes. So this original storage is in database. In set of system tables inside of our database. So it's very important to understand creation as out of the box, big number of data tables. Most part of them are data tables for business entities and business data. But some part with a prefix, CIS, we have a lot of such CIS tables. They are used by application itself to keep its configuration settings, to keep information about all the customizations you do for all the base product contents. So we have a lot of system. Data also saved in the same database. And originally all these contents calls from the database and database backup that we initially installed at our system. Our GUI changes saved in the same database. So say like if I just add some extra information to say a client, is that also just putting that in the GUI? Is that also stored on the database or is it stored in the database and database a primary storage for the. So when we start data? Yeah. And then the only reason I'm interested in just asking that is, how then does that work with version control? Say if you have multiple people working on the same client? I will explain. I will now explain. You will see that so originally we have all the contents stored at the database. But if we enable this file system development mode, then we have an option to save changeable part of it into files. And what we do customizing, so like we make our own changes in this external ID mode, in this external ID mode, everything will be saved as set of files on disk. So now we can do this operation to ask system to save everything which is customizable on disk. So it's called download packages to file system. It means please save everything that system needs to store a file system in this mode. Please save it from database to file system. Generally, this action is quite safe. And usually it covers all the editable stuff. In my case, I have one in the one storage code package for this editable stuff. So it's performance almost nothing. And it saves some files on disk. We can track what's going on on our disk now. Let's go to the source of the back, source of configuration. We have a special PKG folder for such storage on disk. And we can see custom package which was just created seconds ago. And the contents of it. So we just asked system to save everything on disk. Then later, we will use version control to submit our changes to common repository. And our editable stuff will be shared with other team members. They can easily download it. And they can easily move it to their own environment. So that's how you can exchange your configurable changes. But now we need to save it just to sure. Make sure we are working on disk. And in order to finalize our switch, it also recommended, so according to the menu, we have the next step to compile it again. So it looks like we need to compile one more time. It's just to make sure everything is working fine. And we finish our switch into this developer mode, file system developer mode. It looks like we have not enough time today to show git integration. So I plan to show it for you tomorrow. At the beginning of tomorrow's session, I will show you how to enable git integration. And now I'm asking you, so usually first, day is full of different questions. And maybe we have to align expectations and so on. So if you have any questions today, please feel free to ask. And we'd be really happy to hear. So your homework today will be just reproduce the same steps as ID and install your local creation system, turn it into development in file system mode. Make sure you can compile it normally. And I recommend you to compile it twice. Before you do any changes, make sure it's compiled and to get executables, DAOs. And then after you switched into this mode, to make sure that system is fully operational and server site has no any visible, let's say incorrect parts. We will study more about making creation settings. So probably we have some minutes today. And when confirmation finishes, I will start to explain about working with packages and the concept of a package. Now, confirmation will finish, but I already can start to explain. So what I need to tell you, creation is a highly flexible system. So it has hundreds or even thousands of changeable items. And most of them are called schemas. And we have different types of such schemas. So when you hear schema, you should understand some customizable, changeable item in creation. Such items, the clear entities, for example, we can filter by item type, like look only at objects. So you can see objects responsible for keeping address, data, and other objects are very simple and responsible for keeping, for example, types of accounts. And each object corresponds to the database table. Let me show you. So we found some object named account type. And we can find account type in our database. And now you can see we have some data. And here we have a list of six records, so different account types supported in our system. So objects are related to data model. And we have plenty of different objects, but not only objects. We have a lot of other items. Co-anch modules are responsible for page settings. Cisar source codes are responsible for server side, server side classes programmed in Cisar. Data items are responsible for data transfer between environments when we have some data contents created at developer environment. And we need to move it to transport it to other tests and production environment, and also to transport it to our other team members, developer team members, who also need to see the same data. So we have a big number of different configurable items. And if you're interested, I can also show you how many select account from some of system table, Cis schema, where you have a big set of such configurable items. You see 500, 5,000 and 500 more items. So it's quite difficult to manage such amount of settings in the list. So developers decided to make kind of big containers for them, and they called them packages. And the left part of this configuration section just remind how you can get there. So you go to see things scroll down, advanced settings, or you type 0 dev in your browser, 0 dev. That's how you go to this configuration section. So you see big set of items and bigger items are called packages. We have quite high number of packages, even in out of the books of simple product. Let me show you how many packages we have out of the box, Cis package, system table, which keeps information about packages, 140 out of the box packages. And I am using now the smallest possible app. It's a studio app, which includes only platform version. And almost no business functionality, except of hundreds of lookups. But in general, we have almost no business sections, business functionalities is absent here. So we have only platform level tools, like constructor setting, which allow us to build our own apps. It's possible to install or to get out of the box much bigger solutions, like sales automation, service, or marketing. So Croatia also supports such type of products where customers want to use automation, which should be already included. And that's how you may have just quite bigger number of packages, just out of the box from your customization when you start. In my case, I intentionally took the smallest possible product studio. And as you can see, it's not so small, 140 packages already on board. And we can study them. Luckily, Croatia offers you the possibility to look at any part of base product items. You can open any part of its configuration code, and you can see how exactly it was written, how exactly it was set. So Croatia has open source of base product configuration. Configuration is a changeable part of the system. Also, we have opposite one, which is called core. Core part is not designed to be changed by customer. Core part usually represents set of files on disk. And you can find core libraries in the web bin folder, more than 200 of different DLLs. They are designed by Croatia and are not expected to be changed by customer or creation developer. So on the Croatia company creates and issues such deals when base product updates, of course, you will have updated versions of such deals. So they are not designed to be changed. And they perform just low level functions of creation functioning. Also, we have client side core parts in JavaScript, which is also not designed to be changed, and on the changes when creation issues new versions. So core part is non-changeable, low level set of tools that are necessary to run your application. Configuration part, which is here, is highly changeable. Set of different items that could be more or less easily changed. And we have out of the box base product set of such items called set of packages. And each package may include unlimited number of configurable pieces. So the main sense of building packages is to make management of such configuration easier, to make possible separate development, and let's say splitting over responsibilities, sharing responsibilities, and splitting of all system functions into separate parts that could be developed separately and transported and delivered separately. So each package should be considered as a box for some items inside. You can put unlimited number of items into it, and probably it will be interesting to see how many items we have in different packages. So let's do some simple selection, name from CIS package. This is just simply selecting list of existing packages. Then we can do some additional calculations, select count, or maybe, okay, count from CIS schema, S, where S, CIS package ID equals to our P. This is our P package LS, PID, and here we will have P name. Okay, S, schema's count. Great. Why doesn't it like this? Should be okay, P name. This is okay, this package, okay. Let's try to run, let's see what's wrong. Maybe it expects some. Something like this, or maybe I'm doing something very stupid, so let me check again. The name, sub-kiviery. Now it should be okay, let's check. Yes, great. Now we will do some sorting, ordered by two desks. So we go to sort. Now you see, so the most populated package, so the most package with the number of items there, is package named CRT base. We can find it here, CRT base. Unfortunately, this editor doesn't show us some photos or any kind of summaries, so we are not knowing how many items are there, so we can read it with this type of queries. If interested, if you are inspired to date the base scripting, so I will share such scripts with you, you can also see the same. But you can see that some packages have quite big number of items, like 800, like 400, 300, and so on. And the main sense of the package is to make some separate functionality stored separately and could be saved and delivered separately, developed separately. So it's like logical thing to split big system into parts. Our solutions that we will go to do also will be saved in one or several packages. And now you may see that most of packages have gray color, nearby their names, and only one package have a yellow color for, like, an indication that this package is editable. This is a special package named Custom, and Custom Package is designed for cases when you... So when customer doesn't think too much about storage of settings at all, and when customer just don't know the architecture, my system save it, perform some no-code settings, and that's it. So Custom is kind of default package for such kind of customization, but for big projects, it's not recommended, because Custom Package is also present on target environments. And Custom Package may be not empty at target environments, for example, at environment when you want to test it, or when your users are running in production. So Custom Package is not perfect for such delivery. Even though you can export it, you can easily import it later, but it's not perfect. So I prefer not to use Custom Package for your package customizations for your solutions. Obviously, we will create our own package, and save and save our package just to save our customizations there. And now you need to remember that there are two general approaches. You may manage packages yourself, and it may mainly make sense if you develop something in QASIQI. QASIQI is a legacy type of settings that we still have in our application, and we still support, and we have hundreds of maybe thousands of different partner solutions, designed previously in QASIQI. And also, if you plan to make your new solutions in Freedom UI, in these cases, you will probably see that when you manage your application with Application Hub, System performs creating of your packages automatically. So you only control it here, but you will not need to create them. So in order to demonstrate your package management, I need to create some package manually. So let's do this. I will click on this tiny Create Page button. This opens your package window, and I will call it something like DevClassic. So I will intent to use the package for some classic UI stuff. That's why I will call it DevClassic. Package has some properties, and compile into separate assembly is extremely useful feature. And it's so useful, so it's enabled by default, and it makes our compilation time three or four times less than usual. So compile into separate assembly is totally recommended feature, we will keep it on. Smart activation is not so common. I recommend you read some articles about smart activation. It's necessary only when you have for package with dependencies from other packages, which are not installed. In this case, your package will be not activated. If you want to support this feature, you can use smart activation, but in general, I think that it's not for our case, so not so necessary. We don't have any version control for SVN, so we'll keep it empty, no version now. And we will create and add the dependencies. Now I need to explain you one more important thing about packages and their dependencies. Let me duplicate the page. I will show you important diagram. So as you can see, we have 140 plus packages. And packages have connections between each other. If you go to package properties, click on this red dot, then go to properties. You will see that package has properties and package has dependencies. Dependencies are very important. And they show other packages from dependencies, show other packages required by your package. And when you have a dependency for a package, it means that this package will not work until parent packages present into your system. So in my case, calendar base requires CFT core base for some reasons. And this is how packages are connected. So if your package has dependencies from some parent package, you may use some parent package functionality, like pages as templates, objects or inheritance. You may use some entities. And if you have no dependencies, you will not be able to use parent pages, parent objects. So you will have to develop all your customizations fully from scratch. So dependencies are generally recommended. And we can see the whole structure of packages dependencies with the actions package dependencies diagram. This diagram will show us connections between existing packages. And I'm not saying you how you can add your solution into it. There are two common approaches. How you can do this? One of their approaches, which is now currently used by application hub, is to use package named CFT core. It gives us enough access to base product functionality. And the CFT core is a good option for your solutions to be connected to the parent base product system. It has on this standard minimum access to all base product templates. It will be enough to create new sections. So you will have no problems. But in case if you customize big base product solution like sales, service or marketing. And in case if you need to customize existing sections, like make your own changes into opportunities into contacts into accounts and so on, it's a good way to make your package dependant on it. Thanks to parent dependencies, you will have full access to parent packages including base product section packages. So if you work with base product, which already includes a lot of functionality, for example, it's a banking product, sales, service or marketing, then it makes sense to create your packages dependent from all this parent diagram. And it will be able, so you will be able to customize certain packages. You will be able to customize any items, any sections there. So this approach works well for project implementations. In my case, I create my package manually. So I plan to make it dependent from studio base product. I'll go back to my package creating. Here is my dev classic package. I will make it dependent from a can search studio. And that's how I will do this. Any package has its own main trainer is a text property written at packages. Each package has its own main trainer and you should remember that when you see the word terasoft, it means creation. Because terasoft is pre-use company name and somewhere in 2016, terasoft was renamed to creation. Now you know this brand as creation. So whatever you will find terasoft, it means made by creation. And studio is a creation made package. When we create our own package, we have our own main trainer by the full its customer. You can change it in the corresponding system setting, which is called publisher. And it has a code maintainer. Let me show you. You can go to system settings. Search for publisher. The reason why we have so many different words for the same is incorrect translation. Originally in English, it was maintainer. Then it was translated into Russian. Then back to English, that's how we get publisher. I would prefer to have everything just as maintainer here. So if you change the system setting, so you put something else here, then you create your package. We'll include the same change to value when you create it. And currently I do not need to change it. So I keep it as is. I have maintainer here. When you create your solution, you may need. And you may want to personalize it to provide your own unique value as maintainer. So I recommend you to go to your publisher system setting first. Then apply it. And also you should remember about cash system settings. So in order to fully apply it, you have to log out and log in. Because cash system settings are loaded at the session start only. So when changed it, you have to log out log in. And then you can create your own package and your maintainer will be according to your system setting when you create your package. But the most important is dependency of the package. So we provided it. You can apply it. And now after package was saved, you can see editable package at the top with the yellow icon here. And when we reload this diagram, you will see that our package is now shown in this diagram after this studio. I click control and roll my mouse wheel. So I can zoom in and zoom out. Now you can see my death basic packages created after studio. And thanks to these parent transitions, I can get access and logical visibility to any part of base product. So this is very important. This is example of how you can create packages for your own manually made customizations mainly for class. And in future, we will make more packages and we will use package for freedom. I will show you how we can. How system creates packages for you in three WI and when finished some set of settings, we can download everything to file system. Now our death classic will be also saved on disk. So we go to check it out here here. And now you can see death classic package appeared on disk seconds ago. And you will see package contents include some files folders. Now our package is fully empty. So we will fill it in with some test settings tomorrow. And we will continue to allow session with git integration. Now today our session is over. If you have any questions about it, tell me please. You will receive video recording very soon, probably in one hour. Zoom will be quick to convert video. So I will send you video once it will be ready. And your homework is to reproduce the same steps. You install your local environment. Make sure it works. Make sure it compiles. Turn it into a system development mode. Then create your package. Make sure your download packages to file system works well. The opposite action update packages from file system will make sense when you change your files out from creation. So when you, for example, update them from repository or when you use external editors. In this case, you will need these update packages from file system action in order to tell creation about some new changes. And in order to. Good such changes back to the database. So our session is over. Thank you. Thank you for your time today. We'll see each other tomorrow. The same time. We have any questions. Please. So we're going to ask. We will continue tomorrow with. So with git integration. We already created an example of the package. We talked about package dependencies and tomorrow will continue with git integration. Thanks a million to me. That's very insightful. Thank you, Paddy. Thanks others. Thank you for your time. So see you tomorrow. All sessions over. Bye. Thank you, May. Bye. Thank you, bye. Thank you, Sarah. Bye.",
  "summary": "Today is session number one of our development on creation platform, guided learning. My name is Dimitro and I'm from creation, so I've been working as a trainer for many years and working in creation for more than 18 years. I've got a lot and I've went to share some experience and creation development basics with you.",
  "topics": [
    "crm",
    "bpm",
    "integration",
    "development",
    "configuration",
    "ui_ux",
    "database"
  ],
  "complexity_level": "advanced",
  "commands": [],
  "api_references": [],
  "code_examples": []
}