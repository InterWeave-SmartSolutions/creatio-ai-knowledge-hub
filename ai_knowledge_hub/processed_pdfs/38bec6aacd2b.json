{
  "pdf_id": "38bec6aacd2b",
  "file_path": "ai_optimization/creatio-academy-db/developer_course/pdfs/CreatioDeveloperBinder.pdf",
  "title": "Creatiodeveloperbinder",
  "page_count": 469,
  "content": " \n  \n  \nSpeaker 1\n \n Today is session number one of our development on Creation Platform Guided Learning. My name is Dmytro and I'm \nfrom Creation. So working as a trainer for many years and working in Creation for more than 18 years and quite a lot \nand I plan to share some experience and Creation development basics with you. So we have a set of sessions, 10 \nsessions are planned. Each session will take from two to maybe 2.5 hours, so it will be more or less easy to include \nit into your daily schedule. For such two weeks. Each session will be finished with the video recording, so you will \nhave videos that you can process and even if you miss some sessions, you can watch videos and do all of the \nexercises yourself.  \n  \n  \nSpeaker 1\n \n At the end of the course for some of you who would like to we will perform individual development certification. So \nit's kind of exam where you can show your skills, you will make your homework, prepare for the test and finally some \nof you will become certified Creation developers. It is expected that in order to become a developer you should have \nsome experience in programming in JavaScript in C and also some experience with the database will be a great \nplus. Today we will do first steps of our development career, so we'll discuss how general development is \nrecommended to be performed in Croatia, what are the environments, how to set up our own environment and also \nwe will probably switch our own environment in a special mode which will enable full available set of tools for \ndeveloper or creation.  \n  \n  \nSpeaker 1\n \n Then we will work with packages with version control and enable git integration. Next sessions will include working \nwith object model, making data items, using some bit advanced examples of working with object, connecting it with \ndatabase views and so on. Then we will switch to work with UI user interface. I will tell you about new Freedom UI \nuser interface and Classic ui. I will explain different differences. We will mainly focus on Freedom ui. Some \nexamples will also come with older legacy classic UI stuff and we will do some programming in client side. We will \nwork with actions with buttons, programming our own handlers, making business rules, making validation and do \nsome other things in client side.  \n  \n  \nSpeaker 1\n \n And then when finished I will show you server side programming in C Sharp and server side includes programming \nwith data model, working with database, writing your own C scripts, making your own classes of course integrating \nwith modern powerful tools like Visual Studio or Rider and I will show you how to debug, how to process object \nevents so how to do different server side things. Then we will work with classes with web services moving towards \nintegrations. I will show you different examples and also we will see standard integration tools that are available on \nboard of Creature Platform So you will see odata, you will see data service. I will explain how to call third party web \nservices from Creature and we will talk a bit of creation, maintenance and some supporting tools like Clio Utility.  \n  \n  \nSpeaker 1\n \n I will show you examples of working with Clio of its functions and explain how you may improve your experience and \nin general how you may do your actions more efficiently if you operate with Clio. At the end we will take some time to \nprepare for the exam. I will explain you how homework looks and what it includes and how to perform this, how to \nprepare for exam test and finally I hope some of you will be ready to get certified. We call it fast track certification \nbecause you spent probably two weeks for our developer sessions. Then you will take probably two or three weeks \nfor preparation for the exam. Then we will have individual sessions with some of you to check homework and run \nexam tests and that's how you will get your certificate. And creation certificate is valid for two years in case.  \n   \n Speaker 1\n \n If you have any questions, please feel free to ask at any moment of time in chat or using your microphone. Whatever \nworks better for you. Today we are doing first steps on Creature platform, so I probably need to explain what it is in \nvery general. So Creatio is a website heavily connected with the database and it's mainly designed to work as an \nenterprise level data management system and business process automation system. It has a lot of different \nfunctions inside. We will study some of them and also what you need to remember first about Creature. This is very \nflexible system so you can easily set up new entities, you can easily change the shape of existing items. You have \nplenty of no code customization tools which actually do not require any special developer skills. But also it has \nsettings that can be used with programming.  \n  \n  \nSpeaker 1\n \n So it also allows you to program and make more, let's say complex and more efficient solutions on the same \nplatform. We will study how to install it, how it's recommended to work with it, how to make a local environment and \na lot of steps with our 10 sessions training. In case if you have any questions or you have some expectations and \nyou would like to know will we cover some specific topic then please feel free to ask and here with you to make \neverything as clear as possible, we will start each session with your questions and also if you have some questions \nafter making your homework also please note them or maybe just prepare at the beginning of each session. So I will \nalso really happy to hear some your questions or feedback about your practice.  \n  \n  \nSpeaker 1\n \n So don't hesitate, don't feel shy, even if you understand that Your question is very simple and silly. Don't worry about \nthis. We are gathered here just to know more and know better about creation. My task is to help you with it. So first \nof all I need to tell you a couple of words about organizing of development process. Generally, let's imagine that our \ncustomer may have just one single environment. One creature system can work as production environment and \nsome slight simple customizations can be done just directly on production environment without need to run \nanything else. But in case if you go a bit further then you will realize that some customization may be quite risky or \ncannot be done very quickly. So it's not a good idea to treat your users with non working stuff for some time.  \n  \n  \nSpeaker 1\n \n So in general it's much more safer to do some development, especially if it's complex development. Separately from \nyour production environment we have Academy website which has plenty of interesting articles related to creation, \ncustomization and development. Academy.creation.com Most of you already registered here because you registered \nfor the training session. Okay, everything is off necessary on. Okay, let it be. So I already logged in go to Academy. \nYes, already logged in guides and we have a lot of documentation. Mainly we'll be interested in development \ndocumentation, but also will look at some other articles. So I need to tell you about recommended development \nprocedure, probably this one. So this simple picture illustrates and shows how it's recommended to develop Croatia \nprojects creature platform solutions. So we have developer environment which is a separate one and it's designed to \nbe used for developer purpose.  \n  \n  \nSpeaker 1\n \n So developers can do some experiments, they can do some tries and they finally make some changes to the system \nwhich include functionality that customer asked and explained how to so how it should work. Solutions made on \ndeveloper environment can be easily exported into files and then we will have another environment which is called \npre production or simply I call it test environment. Test environment is necessary to check your solution to load it \nand make sure that it works just as planned. If it's not so successful, we go back to developer environment, make \nsome checks, fixes, export our solution again, import again and check it again on our test environment.  \n   \nSpeaker 1\n  \n Finally when we decide that our solution is good enough, then we can go to production environment and choose \nproper moment of time to load our settings like the time where minimum of our users are active and then the same \nway as we imported solutions on test environment you can easily import it on production, also taking care about \nbacking up existing settings. And in general it's recommended to have some backups of your production \nenvironment. So that's how you will make a delivery from your development Stuff after testing to production. As you \ncan see, it's recommended to have three different environments, three different creation systems with a separate \nwebsite, separate database. And it's something that is recommended when you build complex implementation \nprojects. If your customer asks for a very simple customizations and you agreed that probably so many \nenvironments are not necessary.  \n  \n  \nSpeaker 1\n \n So you can also do this, but this is at your own risk. Sometimes you can do customization and finally you may do \nsome changes which you would like to revert. But in creature revert of changes, sometimes it's not very easy and \nsometimes it's really hard and was not designed originally. So please take care. Any development I think should be \nsafe. And that's why separate environment is the best choice here. Separate environment also means you have to \ndeploy it somewhere. A lot of our customers prefer to run production and test environments in the cloud. When I say \nin the cloud, I mean in creatio controlled cloud where you have your website address, login and password. And \nserver side of creatio is kept in t take. It's let's say cared, but cared by creation cloud engineers.  \n  \n  \nSpeaker 1\n \n So server side machines, their licenses, database, all connections and other things that are very technical related to \norganizing of creation working. So everything is managed by creature cloud engineers. And that's how most of our \ncustomers work with production and test environment. But what about development? It's better. And it's \nrecommended to have a local developer environment only in a local environment you will have full set of available \ntools, full set of features that are useful for developer. And that's why so I will explain more in details. Developer \nenvironment is recommended to be set locally and also separately for each developer. For example, you have a team \nof three developers. Each one wants to do something and make customization of the same project. It makes sense \nto organize separate developer environments. They will have separate websites, separate database.  \n  \n  \nSpeaker 1\n \n And of course, as they work with a single project, they will naturally need to exchange settings between each others. \nSo they will need to see. Oh, sorry, this one is probably here. It's my tool to make some draws for you. Okay, so I just \nwant to say that if you have a team of developers, they will need to exchange settings. In this case they will so direct \nexchange of settings between developers. So something like this directly is prohibited. So you cannot do this and it \nwill not work. So on a regular basis it's better not to try. And the best recommended option how to exchange settings \nis to have a separate repository. It's possible to use different types of version controls. The most popular for now is \ngit. But also it's possible to use others like svn, tfs and other types of version control.  \n  \n  \nSpeaker 1\n \n First developers should submit their changes to version control like this. Second developer will get changes from \nversion control and vice versa. And version control will keep history of all the changes and it will help us to \nunderstand who did changes when it was done, what were the previous state of files, and so on. So version control \nmakes a great job in analyzing our code and helping us to understand how project moves on. And also it's quite safe \nin case if you did some incorrect changes, you can easily roll them back and get previous stable conditions. So \nversion control is recommended and it's not even recommended, it's mandatory to use if you run team development \nif you have many team members who participate at the same project, we will study how to do this.  \n   \n Speaker 1\n \n So don't worry, we will do this and I will explain and you understand how to work with it. But first of all we need to \nmake our own environment and to see how we can do first steps.  \n  \n \n  \nSpeaker 2\n \n Could I ask a quick question before we move on?  \n  \n  \nSpeaker 1\n \n Sorry. Please, please.  \n  \n \n  \nSpeaker 2\n \n So to see here on this diagram where we have they all have separate databases. Is it strongly recommended to \nfollow that structure? Or could we have each of the application servers working off the same database server? Or is \nthat kind of not really recommended for development?  \n  \n  \nSpeaker 1\n \n Think that if you have different websites you must use different databases. But in some cases, for example, you \nhave one developer and couple of analysts. Yeah, and you would not like to create a separate environment for each \nanalyst because they are not planning to write any code, they do not need some debugging, they probably are not so \ninterested in the file system and so on. So they just interested at no code customization like modifying pages, like \nbuilding processes so you can find the proper part of system where you can easily do this. So they will mainly use \ncreatio UI to build their part of work. So in this case it's possible to run single environment, including for example \ndeveloper and couple of analysts. But they have to agree with each other how they will work.  \n  \n  \nSpeaker 1\n \n Especially when developer will start to do some compilation or some debugging or other actions that will make their \nwebsite to hang for some time. So the main reason why it is not recommended to operate as many developers with \none site is such operations like compilation, like debugging and other scenarios where a website will be, let's say, will \nlook like it's hanging and not responding if all the team is okay with it and such developer actions are not performed \ntoo often. Then it's possible to run single website with many customization. So many analysts and even several \ndevelopers inside.  \n  \n \n  \nSpeaker 2\n \n Thanks Maria.  \n   \n Speaker 1\n \n Thanks Paddy for your questions. So let's move on. We already know how it's recommended to organize your \nprocess. Sorry, sorry here and how you should use. And no delivery management here. So you have to include. I think \nthree environments is like optimal one sometimes for big customers, for big projects it happens that you have even \nmore than one test environment. And also I just forgot to say that test environment should be a recent copy of \nproduction. In this case your testing will be the most accurate. It will represent what is actually going on and how \nyour system will behave after you load your changes. So it makes sense to update your test often as a copy of \nproduction. In this case you will have the best matching results.  \n  \n  \nSpeaker 1\n \n So you will see exactly the same of what you will feel at production when you install your solution. So let's move on. \nWe need some local environment. Why? Because we are developers, we want to make our own first steps and we \nhave serious reasons to make this environment local. Technically it's possible to do development in production or \nsorry in cloud conditions. So it's possible to do some programming, but it's not possible to debug server side code. \nIt's not possible to access file system if you work in cloud. And also it's not possible to use git or other file system \noriented version control systems to make a full team work. So you have a lot of reasons to use local environment. \nThat's why I will show you now how to install this local environment. Some of you who already read today invite \nemail.  \n  \n  \nSpeaker 1\n \n You probably have necessary files and maybe you even installed your system locally. But generally this is not easy. \nProcedure. A lot of participants of our training sessions usually face some troubles and difficulties during this \ninstallation. So I plan to show you like from the beginning to the end how to install creatio locally. I will use File \nSystem Management Tool, it's a part manager, but you can use other tools if you want and you can use like Windows \nExplorer if you prefer it, and so on. So what we need at the beginning we have to work with. So I recommend you to \nwork with Windows. It's also technically possible to run creation on Linux, but I think it will take longer, it will take \nmore time for us and more very specific Linux settings.  \n  \n  \nSpeaker 1\n \n So I prefer to keep it easy, especially as we are beginners. So to run Creatio on Windows, I'm using Windows 10 Pro. \nYou can also use Windows 11 Pro if you use Windows Home, Windows 10 or 11 Home. So you should understand \nthat it will be not fully working, so you will experience some serious difficulties. And the main effect that you will face \nis when you operate with Creature tabs, for example this one. Then you for example want to duplicate pages or you \njust need to go to other specific tab which opens as a separate page like this one. So in Home, in Windows 10 or \nWindows 11 Home, creature will hang. So such pages will be hanging until you close previous ones. Developers \nexplained me that it's connected with the resources of websockets that are very limited in Windows home website in \nIIS.  \n  \n  \nSpeaker 1\n \n So WebSocket connection is used and there are some troubles on version home. So you should expect if you use \nthis type of Windows and Windows Home, then you will see problems and you will only be able to operate with one \ntab at a moment, which is definitely not so comfortable. So now you warned about it. Okay, so I have a Windows PC. \nGenerally it's important to take care and just check that your power of your PC is good enough. In my case, as you \ncan see I have a cpu core i5 12 cores. I have 16 gigabytes of RAM which is good enough. And if you have eight or 10 \nit also will work. But if you enable all the features and if you start all the tools, probably you will run out of RAM.  \n   \nSpeaker 1\n  \n So 16 is good and 8 is like minimum that you can look at. SSD Drive of course is also very recommended because of \ngeneral speed. So the most critical parameters are CPU and memory. Okay, so you have one single PC and you can \nrun Creature on this single PC. Croatia has two big server side parts. Database. In my case this is Microsoft SQL \nServer database, but it also can be Postgres database. You can run Postgres for Windows or you can run Postgres \nfor Linux. So it's up to you. And in my case I'm running Microsoft SQL Server and I recommend you to use Developer \nEdition. Developer Edition is free for developer needs and personal developer needs. So in my case you can see I \nhave a SQL Server Developer Edition. So I recommend you to use this type of SQL Server.  \n  \n  \nSpeaker 1\n \n I do not recommend you Express because it has limitations on amount of CPU cores used by server, amount of RAM \nand the size of the database. So Developer Edition works the best. So we have Database part and we also will \nmanage Web Server part implemented by Internet Information Services. This is part of Windows and this is also one \nof the biggest component of the system. So in general we have two big server side components Database. So \nstandard Regular database and iis. Also we have some other tiny components. I will show you all of them and you'll \nunderstand how we can make creation from scratch, how to install it at our own environment. In case if you \nunderstand that you have no chance to install creation locally.  \n  \n  \nSpeaker 1\n \n Maybe no permissions, no hardware, let's say powerful enough to run it or some other technical reasons, or no \npermissions at your machines and so on. But you still want to practice this creation, you can go to creation.com \nwebsite sorry, this one probably have to log in there and then you can request. So you can ask for a trial \nenvironment. Try it free environment. I recommend you to use Studio because it will be the fastest one and it will \nwork for you for two weeks. Then you can extend this time if you ask for help at support team. So it will be probably \nenough to make some of your experiments your practice. And this is very easy.  \n  \n  \nSpeaker 1\n \n So you can just try it free and provide some data about you and in minutes, maybe in a minute system will create a \nfree cloud trial environment for you which will be available for you if you log in at Creature website and then follow. \nAnd so you will have URL, login and password for your trial environment. That's how you can do it easily and practice \nthis creation. But if this will not work, I also can create an individual demo website. Some of you asked for it and \nindividual demo website will work for you probably a couple of months. Also based on the minimum product based \non Studio product. So okay, we have a start PC, enough cpu, enough ram, what else? We need documentation of \ncourse, because without manual I think it's quite hard to install creation, especially if you do it first time.  \n  \n  \nSpeaker 1\n \n So let's go to academic guides. Then it will be about setup and administration and we have a set of articles related \nto on site deployment. We have a general deployment procedure which I recommend you to know to look at and I will \nalso post all necessary links into our chat. This chat is also recorded the same as videos and also we have captions \nrecorded. So you will have a closed captions text as well. Especially if some of you maybe who are not perfect in \nEnglish, they will need such captions which will make it easier to understand what we are talking about. Okay, today \nwe're talking about installation of Creature locally. And the main reason why we need it is to enable full available \ndeveloper tools.  \n  \n  \nSpeaker 1\n \n Working with the cloud version, you will not have full set of developer tools, you will not be able to use git, you will \nnot be able to perform server side debugging, no access to File system, so quite serious limitations. And Local \nsystem has all such features for you. So what we need to do at the first step we can follow all of the general \nprocedure steps here. So I will do it step by step and explain how we can do it. One of the components which we \nneed to use at our creation is Caching Server and in creation Caching server implemented as Redis software. And if \nyou go to look more about Redis installation, you will see Redis installation for Linux.  \n  \n  \nSpeaker 1\n \n You can also install Redis as an image in Docker and unfortunately this is not set so you cannot easily find it in our \nofficial documentation. You can also use Redis or Windows and Redis for Windows is recommended on Developer \nEdition or Developer Environment. You can consider by your own would you like to run it for test and production. And \nthe reason why creature technical writers and developers do not recommend Redis for Windows regularly is that it \nhas a version less than Redis for Linux and also it's considered as less secure. But in my case I think it's not a big \nissue. So we can afford easily Redis for Windows and I will show you where we can find it. We can search Redis for \nWindows and we will find some solutions.  \n  \n  \nSpeaker 1\n \n And one of them is Redis for Windows at GitHub made by some Poland guys T Porodowski and the current version \nis a bit older, but still good enough. So what you need to do is take this MSI file, download it. So let me show you and \nthen you can install it. The question from Paddy, is it possible to run Redis on Windows subsystem for Linux? Yes, \nyou can do this. If you want you can do this. But once you install and run Redis for Windows, you probably will not \nneed to do anything else. Redis is trouble free software 12. It's tiny, quite easy and creature you just only small part \nof available Redis commands, so it in general will not raise any issues for you.  \n  \n  \nSpeaker 1\n \n So what you need to do is to download this MSI file, I will copy link address for you can download it, then you will find \nit on your disk. Then you should make sure you're running it under local administrator privilege. And finally after \ninstallation of all Redis settings, by default you will find C program files redis and this is all what Redis saves on your \ndisk. So this is just set of its files. And that's how Redis is working. Redis is a high speed memory storage which \nworks as a caching server for creation. And Redis is required component, so you must install it and by default it has \ngood enough settings. And if you really want you can go to regis Windows Service conf file regis is installed as \nWindows Service.  \n  \n  \nSpeaker 1\n \n So you can go to its settings and if you want you can change some parameters like login level. Default login level is \nnotice. So it's like moderately verbose, not so verbose. You can change log file position, you can change maximum \nnumber of databases allowed and so on. But out of the box settings for Redis is good. So you can just keep it as is \nand it will run with trouble free. You can check that your Redis is running. If you go to services you will find Redis \nServer. This one it's running. The only known issue about Redis is when you install it, you try to run it as service and it \ndoesn't start and immediately stops. In this case all you can do is to uninstall it and make sure you have \nadministrator local administrator privilege and install it again. And that's what you.  \n  \n  \nSpeaker 1\n \n So the only possible issue you may have is Redis. Once you installed it's running so you will have no troubles with it. \nIf you prefer to run Redis with Windows subsystem for Linux or inside Docker, you can also do this. You can take \noriginal Docker images for this and original website is Redis IO. Redis is developed by Community. Oh, they have \nsome new updates here and Redis has Community and Redis has a lot of comments. So let me find products cloud, \nthey changed their website. Now it's hard to find all the comments probably here. Yes, we probably have more than \n100 or even 200 of Redis commands. You see a lot of comments including cluster management and so on. Croatia \nuses probably 3 or 5% from this stuff. And this is official documentation and I think that you can just use.  \n   \nSpeaker 1\n  \n Let's see, do we have anything with downloads, what else we have here? So now you can see Linux version for \nversion 7 and Windows version 5. But it's still good enough. So creation doesn't use too much of new Commons. So \nRedis is trouble free. You should not invest too much time into it. You just install it, run it and then you maybe forget \nabout it because it will have no troubles for you. Caching Server is okay, we downloaded and installed it. I already did \nit on my PC. You saw Redis Server is starting as a service. It's working normally. I used all these default settings and \nthat's why no any changes. So let's move on, deploy the database and so on. Now we have only our PC this is a \nWindows PC and we need creature installation file.  \n  \n  \nSpeaker 1\n \n This file is distributed as a big zip archive file. Let me explain what does it mean? So invite email you have chance to \ndownload such zip archive file and depending on the platform, Windows or Linux and depending on the Target \ndatabase, Microsoft SQL or Postgres, you may find the three different options. The only one option was in our email. \nThe most popular is version 4 Windows and Microsoft SQL. But in case if you want to run it on Windows with \npostgres or on Linux with Postgres, tell me I have another links for you to download. So you will need this big zip \narchive file to install creature locally. Such file has its own name including version number. Usually it has a zip \nextension and it has quite big size, about 1 gigabyte.  \n  \n  \nSpeaker 1\n \n So you see this is a zip archive with 1 gigabyte and it has several maybe thousands of files inside. So what we need \nto do, we have to take this file if you for example start some new project maybe year after we finished today's \nsession. So of course this version will be outdated. You should remember about recent new versions. And generally \nif you need to install local system and you need such file, you can ask for help at Support team support creation.com \nthey can share such file for free with you according to your needs. According to the target website and website type \nWindows or Linux and to target database type Microsoft SQL or Postgres for some exceptional cases we also have \nOracle versions.  \n  \n  \nSpeaker 1\n \n But in general I recommend you to focus on SQL or Postgres because they are the most popular and I think the most \nattractive for solving your customization needs. So we have this file. I already downloaded it from inner creation \nsources. So this file is on my disk. Now I need to unpack it into some folder. So let's make a folder I will have this \nkind of folder and this is new folder on my disk. So physically it will look like this. If you get used to work with \nWindows Explorer so you can create your own folder, please note it's important to create your folder not in Windows \nprotected area, not inside of init Pub, not inside of program files, not inside of Users or Windows. So I recommend \nyou to create just another folders for your creature website.  \n  \n  \nSpeaker 1\n \n The reason is quite serious because if you deploy your creature somewhere in Windows protected folders, you will \nexperience additional difficulty with access of creation app to its own files because Windows protects it especially \nwhen system needs to modify such files. That's why I created my own folders. I keep some kind of structure of \nseveral websites running on my PC currently I will actually stop any execution any running website. This one also will \nbe stopped to release some memory and CPU resources. So I created a folder on my disk D1 which will keep \ninformation which will keep all my website files. So I take this zip archive. Thanks to File Manager automation, I can \neasily unpack all of the contents into this folder.  \n  \n  \nSpeaker 1\n \n If you use Windows Explorer, you can also do this unzipping automatically and it will take some time, probably up to \none minute thanks to fast SSD on my disk, on my PC in total creation codes more than 20,000 tiny files. That's why \nthis unpacking will take some time. But in general this is just one time step and not so difficult I think. So we will \nfinally have all the items ready. Inside of this zipper guide file you can find DB folder. This DB folder includes backup \nfile. Sometimes beginners do mistake so they think that the same backup file can be used for different types of \ndatabases. It's not true. If you have Microsoft SQL Server backup file it has bug extension, then it will be only \napplicable to Microsoft SQL Server database.  \n  \n  \nSpeaker 1\n \n You will not be able to run this bug file for Postgres oracle if you're interested. For example, in Postgres database \nyou should take another installation file. If you need it, I can share it with you. For example, this one is for Windows \nand Postgres. You will see DB and you will see different size twice less than Microsoft SQL and different extension \nbackup against bug. So we can see that postgres has a different structure of backup file, different size and different \nformat. So it will be not compatible. And that's why please take care if you need installation creation on Microsoft \nSQL you should take corresponding source file. If you need it on postgres, you should take another installation file. \nWe unpacked everything into one folder and our manual tells us to think about the database part. We have a manual \nfor database server installation.  \n  \n  \nSpeaker 1\n \n I expect that you already installed your Microsoft SQL Server and some management tools for it. The best one is \nMicrosoft SQL Server Management Studio and also I made some preparations on my SQL Server properties. Let me \nshow you what is important here. So let's go to see its properties of SQL Server. Then switch to security and by \ndefault your SQL Server is installed with Windows authentication only. It means that users can connect to this SQL \nServer only with their Windows credentials. Creation developers prefer to use SQL Server and Windows \nauthentication because it gives you some chances to use a login and password without any connection with \nWindows sessions. And I also prefer to use SQL Server authentication but it's up to you. And if you want to keep \nWindows connected only, you will have to make additional settings at your application pool.  \n  \n  \nSpeaker 1\n \n If you want to use this SQL Server and Windows, you can switch. But also you should remember once you switch this \noption and press ok, it will work only after you restart your SQL Server. This restart is a special action for SQL Server. \nDon't forget about it if you will change authentication settings for your SQL Server. In my case, this is already done \nand I already have my SQL Server. I connected as local administrator user. So now we have to follow this Microsoft \nSQL Server procedure and we will restore database from backup file. I will provide all necessary links for you in our \nchat and then I will demonstrate how to do this. This is not very difficult, so let me show you. We have original \nbackup file in DB folder. This is our back file. Please note it has very old name.  \n  \n  \nSpeaker 1\n \n Maybe 10 years ago this product was called BPM Online and from that times this file name is still generated with \nthese words. But of course physically this is creation. So we will use this backup file. How we'll use it very easily. Go \nto Microsoft SQL Server Management Studio Database right button click restore database from file from device and \nwe have to select what file should be used for this. So we will go to our folders where we installed unpacked our \narchive. This one I'm using the latest version 8.1.3. Most of you who also downloaded Zipper downloaded Big zipper \ncar files. Probably you will also face the same version 813, maybe a bit more so a bit older, maybe a week or two, but \nit will have similar set of functions available.  \n  \n  \nSpeaker 1\n \n Okay, so we select this file, click OK system recognize that this is a valid backup file and we have to specify database \nname. So we have to provide database name. I prefer some naming conventions here. So I will call it D1 Studio. But \nyou may name your database whatever you want. But it's recommended to avoid dots in database name so anything \nbut dots are not recommended. D1 Studio will be a good name of my database. No any other settings here? So I can \njust click OK and system will thanks to my SSD recover it really fast. So my database was deployed and now you can \nsee it's restored here. There are some additional steps that must be done for the database according to connection \nof users for it. And I will show you what additional steps must be performed. Let me show you.  \n  \n  \nSpeaker 1\n \n So here we have to think of how creation website, how creation web app will connect to the database. We need to go \nto security logins and then we have to make a login for our connection. We can make a new login for it and we can \ncall it something like SQL Server Authentication Login, namely D1 Login. Let it be so D1 Login will be our login name. \nLogin name is name of credential where you try to connect to your SQL Server. Of course we need to provide \npassword the same as login. It's just to make it easy and enforce no password policy. We don't need it because \notherwise password expiration will bother us from time to time. So it will stop normal work of creation. Just keep it \nquite safe even without any special policy, no any special settings.  \n  \n  \nSpeaker 1\n \n So we can just click ok everything else by default. That's how I created new login for my SQL Server. Then I have to \ngo to my database, find its security tab users and then I have to add user with the same name. This is my username, \nthe same as login name. And the only special setting I must do is go to membership and click DBoner. This is very \nimportant setting because it will grant permissions for this user to do any operation in this database including \ncreating tables, modifying any data objects. So we will have a full say full power of administering our database. \nOkay, then we click ok. So that's how we added user to the database. At this step our database preparation is over \nand we can move on with our next part of this journey.  \n  \n  \nSpeaker 1\n \n And it's about enabling all necessary Windows components. Please note that this part is the most tricky and a lot of \nbeginners do mistakes here. So you should take it quite serious and perform all recommended steps here because \nthere are no optional items. Everything is mandatory here. So let's do this. Windows Components Microsoft Visual C \nI can check my apps and features so I will try to find Microsoft Visual C redistributables. It looks like they are all \ninstalled and I guess that I got it from installing of Visual Studio so I did not install them separately. But if you have \nno Visual Studio, you should care about installation of such components because they are required. IIS is a web \nserver Internet Information Server of Windows. So we have to enable it. We have special components here, Net6SDK \nand. Net framework SDK.  \n  \n  \nSpeaker 1\n \n We have all links here. Now you can see that this and these are direct links. So let me show you what you will see. To \ntry to download you have to choose version 6 and according to your platform it's Windows X64. So you should take \nthis one, click on it and download. Make sure you have local administrator Privilege and that's how you will work with \nit. And the same dotnet framework SDK. So both components are required, you must install them. Otherwise you will \nnot be able to compile your system. Then we have settings for Windows Server we can skip because now we are \nrunning Windows Pro desktop version. So let me find Windows 10 desktop version. How to enable necessary \ncomponents so what you must remember is that such components are required for normal start.  \n  \n  \nSpeaker 1\n \n If you forget about this, you will not successfully run your creation. So you should follow such recommendations and \nwe can do this. So you can find Control Panel programs and features. Windows features on or off. This will show this \nwindow and this window. It's usually surprise. It's not overall, but. Okay, let me show you this one. So here you see a \nfigure of how you should set the setting. The most common mistake is such two items at the top here. So you must \nselect Windows Communication Foundation HTTP activation for 3.5 and 4.4.8 so you simply can enable anything. \nEverything here should be enabled. And usually developers forget to do this. And this is quite common issue of \nbeginners who face this type. So the who face errors when installation. Then we go to Internet Information Services \nthere are some settings so iOS management console.  \n  \n  \nSpeaker 1\n \n Okay, and this one as you can see in the manual, developers of this documentation decided just enable everything. In \nmy case I enabled only what was really necessary here. And one of the most important thing is WebSocket protocol. \nSo you can enable what you see and finally click ok. Wait for a couple of minutes. If system asks to restart, you \nshould restart your PC and finally that's how you will enable necessary Windows components. This is very important \nstep and it's explained in documentation. So I can share the link for this for you. So you will know how to install it. I \nalready did it on my environment. This is one time setting for all my future creation installations. So it's quite enough \nfor me to work with it. So my components are ready. Windows updates quite obvious thing.  \n  \n  \nSpeaker 1\n \n So I think my windows is normally updated. I can skip this part and then I need to do some final preparations with \nregistering of my website in iis. There are two ways how we can do this. Registering a separate website with \nseparate port Or I prefer registering of a website as an app inside of default website. I prefer to use this one. \nRegistering of the website inside of default website. It's quite simple. So we go to application pools first then add \nnew application pool. I will name it something like this Studio. This will be my new name. No any other changes. \nThis pool is Started.  \n  \n  \nSpeaker 1\n \n If you prefer to run connection to your database using Windows credentials, then you have to go to advanced \nsettings of the pool, find identity and change this identity to some specific Windows user account which you expect \nto use for connection between application server and database. This is necessary if your database server is set for \nWindows connections only. I mean only Windows credentials. In my case I prefer SQL Server credentials, so I will not \nchange any of settings. So everything is by default okay. Then we go further find our default website and add \napplication here. This is a very tricky place. Your application alias must start with the lecture, not digit. The reason is \nthat some of creation libraries and angular libraries, it's a JavaScript framework.  \n  \n  \nSpeaker 1\n \n They so turned out they are sensitive to the file names and path of the app and if it starts with the digit, some regular \nexpressions are failing inside of the angular and that's why you must start your application name with a digit. In my \ncase it's a D D1 studio. I should select a proper application pool and specify physical path. Now I need to say that \ncreation has two major parts of file system. So we have a root part which is mainly responsible for showing your \nlogin page and prepare and create your app for normal work of user session. So loader part and inner part inside of \nJSON Footballer is much bigger and it's like main application part. So physically we have two parts and when we \nregister our app in Windows in IIS we have to take care about it.  \n  \n  \nSpeaker 1\n \n And when we do this first we register water part and physical path should point to root folder of our app this one and \nokay I copy this path for future. So we register root part of our app, but then we need to remember about its inner \nmain application part. Select our created app inside of default website right button Click Add application 0 alias this \nis always 0 alias Same application pool and physical path should point to the special folder terrasoft web app this is \nfolder for our inner application click ok. That's how we can register our app in iis. Now our application is not \noperational so far, but we registered in IIS and then the final step that we have to do so we followed all of this \nregistering stuff.  \n   \nSpeaker 1\n  \n There are some also side quests that you may need like settings of different MIME types and so on. But from my \nexperience if you enable necessary Windows components, all the items like this will be good just out of the box so \nyou should not modify it if you perform Windows component settings. So I actually only needed to register my \nwebsite in IIS Manager and that's all now the last part, the last step is special configuration file which we must \nmodify in order to make our system runnable. In my case, I have a Microsoft SQL Server example. So I will go here \nand here we have examples of connection files and explanations how to set it up. I will share all necessary links for \nyou. So you will proceed the video, you will follow the text in our chat and you will not forget anything.  \n  \n  \nSpeaker 1\n \n I hope so. Let's look in this connection strings file. So this is my folder of my app. This is loader part of it. And the \nonly file system file that I must change to make my creation running is connection strings config file. We can start to \nedit it. You will see set of sections of this XML file. And first of all we have to take care about DB section. DB section \nis about connections between application server and database. We have a so called connection string for Microsoft \nSQL and I need to modify its values to make it correct. Data source. This is my data server of Microsoft SQL. I can \nuse my Microsoft SQL Server network name or simply I can use a local host.  \n  \n  \nSpeaker 1\n \n In your case, if you have your SQL Server located somewhere in your network, you will need your SQL Server network \nname including named instance. So full name in case if you have named instances of Microsoft SQL Server \ndatabase. In my case, this SQL Server. This SQL Server has a name just a local host and it works for me maybe with \nnon capital. Oh, okay. This is my name of the SQL Server initial catalog is database name. So let's remember our \ndatabase name is D1Studio. So we will put it here. Initial catalog now is our D1 studio. Save it. Next is quite tricky \nintegrated security SSPI which means we are having Windows authentication. We don't like this. So I will remove this \nline from the text and instead of it I will Type User Space ID equals my login D1 login.  \n  \n  \nSpeaker 1\n \n You remember we did it at the database. And then password equals this is my password for the login. So that's how \nI can do this. Probably this space is not necessary and nothing else. So data source, initial catalog, user space ID \nand the password. No any changes with other parameters. So I only removed integrated security SSPI and replaced \nit with user ID and password. Save it just not to lose any progress. You can find corresponding manuals at this \nacademy article. You will see DB connection and also you will see something with connection or name and \npassword. Here is the initial catalog. Yeah, you can replace integrate security SPI with user space ID and password. \nAnd here you can see examples of it. User ID and password. Okay, so we are okay with DB connection.  \n  \n  \nSpeaker 1\n \n And one more thing which we must do in case so we must do for our creation installation is Redis connection. So \nthis file also keeps information about how Creature may find Redis somewhere in the network. So host should point \nto network name of your regis server. In my case this is local host and it often happens if you provide your network \nmachine name, it's not working and you see error message about system failure to find your corresponding Redis \nserver. So in order to fix this you can just provide local host or IP address of your local machine where your Redis is \nrunning. So for some technical reasons creature fails to find Redis with its libraries and with provided network \nmachine name. So setting local host here I think will work for you.  \n  \n  \nSpeaker 1\n \n Also we have another important parameter DB is number of so called Redis database, but it's more closer to call it \nstorage because Redis storage is a set of key value pairs saved in the Redis memory. And by default redis has 16 \ndifferent so called databases named from 0 till 15. And as we keep several creation instances, we must keep such \nDB numbers unique. If you run several creation environments on the same machine, you must take care to have a \npersonal unique values for each creature instance connected to the regis server. In my case it will be D1 \nenvironment and it will have the database number one. Okay, then I can save it. Port number is by default. I did not \nchange it when installed Redis, so now I use it as is. Okay, that's probably enough for our beginning.  \n  \n  \nSpeaker 1\n \n One more thing which I recommend you to do, but it's not required, it's optional. One, it's about creation logs. We can \ngo into terrasoft web, find envog, targets config and by default this line number 3 log dir this is folder on your disk \nwhere creation will save its logs by default. As you can see, it points somewhere to temporary catalogs. And in my \nmachine this works as Windows 10. I do not like this place because my local Windows user has limitations and I'm \nnot allowed going there. So if I want to look what is inside of C Windows 10, I have to use a specially highly \nprivileged Windows user and I have to switch between them so it's not so comfortable. That's why we can put our \nlogs somewhere else where you can easily access it.  \n  \n  \nSpeaker 1\n \n For example somewhere at C creation logs so we can create this folder system will create itself if it's missing. So \nthat's how I do my settings for env targets config, this is optional and log targets Config this is example of my \nsettings and this can help you to easily access such files if you don't like going to Windows temp or if you have \nlimited settings as me working with this folder because of Windows protection. Okay, now everything is done. So \nsave changes and we can start our website. How we can do this? Go to IIS Manager, select our D1 website. Let's \nrefresh them. Probably it will better to see D1 and the first position. So we can just browse this website. Now you \ncan see new I'm using. I'm using Google Chrome browser.  \n  \n  \nSpeaker 1\n \n So Google Chrome I think is one of the best for creation because of the fast JavaScript core and you can use also a \nlot of other Chromium based products and browsers and you can use Firefox, you can use Microsoft Edge and \nplease note Microsoft Internet Explorer is not supported at all. So you can use Chromium based browsers, you can \nuse Safari, you can use Edge. Currently I'm using Google Chrome and I'm quite happy with it. So when we start our \nenvironment with this browse action browse you can see that system starts with this type of URL. We can remember \nit just to have one more shot shortcut D1 and this is our shortcut so we can go there. Yes, it opens so called login \npage. You should remember that if you install creation locally, you have default login and password for the first input.  \n  \n  \nSpeaker 1\n \n First login in supervisor and the same password supervisor. Also you can see at this login page you can see current \nversion number of the app we are running and I can click just log in. If everything was done correctly, you will see \nafter some time, maybe after a minute you will see our application successfully logged in. And probably it's time for \nus to make a small break, some small 5 minutes coffee break so you can refresh a bit yourself and then we will \nmove on. But please note and you should be mentally ready for this. A lot of beginners face errors when trying to run \ntheir own local creation. At this stage where you just start your app, if you have mistakes in connection strings \nconflict, you will see error messages from the website.  \n  \n  \nSpeaker 1\n \n And in case if you have some troubles with setting of inner app here, in this case your login page will be okay. But \nwhen you start to provide login and password and then click login button, then you also may have some error \nmessages which will lead to let's say errors during start of your app and you will not see this page. Now let's make a \n5 minutes break to refresh a bit and then we will move on. I will show you what next we will do with our installed \nsystem. I do not expect that you are following me just right now. I expect that you will probably follow video \nrecording that you received today. So if someone performs the same steps as I do, just tell me, because sometimes \nyou need to more. You need more time to do this. Tell me please.  \n  \n  \nSpeaker 1\n \n So now let's take a break and then we will move on. So next, what I wanted to show you now is about how we can do \nsome preparation of our system. Before continue, let's do some technical things and enable browser console, Ctrl \nshift I or F12 or you go to this, then more tools, this and then developer tools. Okay, let's enable browser developer \nconsole. Now you will quickly realize that it's console quite noisy. You will see almost each 10 seconds some \nmessages here about telephony connected, disconnected error messages and so on. So if you're not planning to \nhandle false in creation now you can disable this telephony, your console will be not so noisy, not so verbose and it \nwill be easier for you to debug client side later. So I prefer to keep this console not so noisy.  \n  \n  \nSpeaker 1\n \n And that's why I will show you how to disable this telephone. I go to the user profile, then go to additional settings. \nWe will see some settings for call center parameters and then we can disable call center integration. This will \nsuppress this login, excessive login at our console. So let's save it. A couple of things that I also prefer to do when \nwe perform initial start, this is going to navigation panel, find system settings and there are a couple of system \nsettings that we also would like to disable. Let me show you. We can use search by name, so use filter by name and \nlet's search for something started with show. In general, I need to tell you system settings are low level variables set \nat application and they are used for different mechanisms, platform mechanisms, product mechanisms.  \n  \n  \nSpeaker 1\n \n So they are generally used by creation system. We can find system setting called show widget on login page and we \ncan disable it. And also one more show widget on intro page. It's also better disabled, but this is advertisement stuff \nwhich is currently not active. And currently this advertisement only shows you some error messages in your \nbrowser. Maybe you will find it at the beginning here. So this widget was not showing. So we can save and disable \nsuch widgets. Let's go out now. You will see less error messages here in Your browser and super wiser same \npassword saving it to this site. Okay. And log in. So now we will have less noisy console. We have much more \ncomfortable conditions for work and we have our systems ready. So now you can see our environment is fully \nprepared.  \n  \n  \nSpeaker 1\n \n So looks good and we are going quite fast today. And probably that's because of not so many questions from your \nside. But. So if you have any questions, if you feel some, let's say uncertainty, please ask me. I'll be happy to answer. \nSo what's next? Once we installed our environment, we need to enable full developer power there and I plan to show \nyou how to do this. And also we need to do some more preparation steps which is quite not so obvious. So let me \nshow you what we need to do now.  \n  \n \n  \nSpeaker 2\n \n Sorry Dimitri, I just. When you mentioned questions, I've just been writing down questions as we go. The same for \nthe Q and A section. So I just have two that maybe I could ask now if you like.  \n  \n  \nSpeaker 1\n \n Or I can hold them all for you, please. It will be interesting because something which is not so boring like just a \nlecture so kind of dialogue. \n \n  \n \n  \nSpeaker 2\n \n Okay, so my understanding. Sorry, this. We're going back to the database section. When there's two section. There \nwas two databases. We're kind of talking about. We're talking about postgres and were talking about the Microsoft \nSQL. My understanding is the version of the zip we get with SQL the database doesn't have any test data in it. Is that \nis my assumption in that correct.  \n  \n  \nSpeaker 1\n \n Generally we have two, let's say two options to support our customers. Normally we have no. So almost no test data. \nIt means we will have very little number of useful values. For example, I can show you some data which is quite \ncommon for you to expect like list of contacts. So select something from contact. You will see just minimum set of \nrecords, like three records or almost no data. And we call it just soft key. So it's like no data. But also it's possible to \nask for a special demo version which means we will have some demo records, maybe a couple of hundreds of pre \ninserted data records, which is good for demos, good for some, I would say building dashboards, analytics reports \nand so on. And I recommend you to start from the clean database. You will have less data to delete.  \n  \n \n  \nSpeaker 2\n \n The other question and I have you kind of already answered. It's just I was. When I was going through the date, the \ndocumentation for the setup, the redis. The redis kind of got into mentioning a cluster but I can see that you didn't \nactually use it. So the cluster isn't actually I did.  \n  \n  \nSpeaker 1\n \n Not use Redis cluster because it's not mandatory, this is optional thing which makes a bit higher overall reliability of \nyour system. But once I'm running just a single developer environment which probably will never experience high \nload conditions when having hundreds or even thousands of queries per second. So I do not actually need this \ncluster, but it's out of the box Redis feature, you can enable it if you want and you can proceed with its documents, \nmaterials and you can set it up. It's up to you. Yep.  \n  \n \n  \nSpeaker 2\n \n No, that's brilliant. Cheers. Thanks Melin.  \n  \n  \nSpeaker 1\n \n Thank you. Thank you, Paddy. It's interesting actually. You can also customize your iis but in my case I'm not running \nin under high load conditions or I do not need to allow like couple of thousands of users to log into my environment. \nThat's why I do not enable IIS based cluster. So I have only one single application instance and it's okay for me. \nThank you. If any others have any questions, feel free to ask it any moment of time. Hi Dimitri. Hello Bessel. Yes, \nplease. Hello, can I share my screen to ask? Yes, no problem. But please note it will be recorded. If you do not want \nto record, I can stop recording. No, no problem. Okay, please. Please find the share screen green button in Zoom \npanel and we will see your image. No? Yes, you can see. \n \n  \n  \nSpeaker 1\n \n Yes, I'm going to install the SQL Server management. But what of what version exactly I should use on premise \ndeveloper. Oh no, download. No, no, just scroll down a bit and the left part you will see a skilled developer. So this \nskilled developer download now. Yes, I think this is the best which you can find here. And developer uses all cpu, all \nmemory and no limitation on size of the database. So you can just download it takes time install it and the only \nchange inside of its installation which I recommend is to switch from Windows to mixed authentication mode. And \nabout Visual Studio, which Community Edition? Community Edition will be Community? Yes, it's also free. You can \nuse some kind of Microsoft credential there and it will be free for free of charge for you. Yes, yes. And the last \nquestion please.  \n  \n  \nSpeaker 1\n \n I my windows is 11 home. It. It's good. It can be doing the step you are doing. If you have no options to use Pro, you \ncan keep running on home. But there is a strict limitation that you will face and this limitation is running multiple \ntabs. For example, you have a main tab of your creation. It's okay, more or less okay. And when you enable other tabs \nor you go for example to advanced settings. This another tab may hang if you do not close first tab. If you close first \ntab, then another tab will work normally on home. And it looks like it's caused by some limitation of websocket \nchannels. And we cannot easily bypass this limitation, unfortunately. So you should be mentally ready for some \ndifficulties like working only at one page at a moment. Okay, thank you. Thank you.  \n  \n  \nSpeaker 1\n \n Okay, thank you, Peso. Let's move on. So now we have more or less okay running Creature Instance and I need to \nexplain you what next steps we will do. So my main next goal is to show you file system development mode. But in \nthe last versions we have some unusual behavior which you need to understand. So if I will just simply follow \nmanuals to switch from original mode into file system development mode, I will get some unexpected troubles \nwhich I want to skip. Now let me explain what I'm planning to do right now. Here is my folder of recently installed \napplication. I need to show you some inside parts of it web. Then we go to terracesoft configuration and we search \nthe Bin folder and it's empty. Usually Bin folder includes results of compilation of our app.  \n  \n  \nSpeaker 1\n \n Currently Such results are DLLs loaded from the database stored somewhere else. And the application is quite fine \nrunning with such assemblies. But when we will switch to file system development mode, system will search for \nsuch files exactly here. So we must compile our system before doing any file system operations and before doing \nany switches between environments. So we have to compile our system. I will click compile button and I will agree. \nAnd here some of you will experience additional difficulties. I already fixed it at my own environment, but in your \ncase you will definitely get it. So let me explain. I have an article specially dedicated to this error. So when you do \nfirst compilation on your system already agreed for this. Okay, so when you do first compilation, you probably will get \nthis open image. You'll probably get this type of error.  \n  \n  \nSpeaker 1\n \n So you try to compile, you have two errors with no file name. It's totally unclear what is wrong here, but you will \nconstantly get this error. So it's not random. It will happen all the time when you try to compile. This is a common \nknown issue and you may know how to fix it if you will go to your log files. And as you remember, we set \nenvargetsconfig to some specific place and that's how we can go to this place on our disk creation logs website D1 \nand then we have to go to Xero is our inner application logs for today we'll find build log and in case if you have this \ntype of compilation error like this, you will find error details in this build log. At the end you will see some number of \nerrors. You will see error text.  \n \n \n  \nSpeaker 1\n \n Now you see this log is still going on because compilation is not finished. So compilation produces some messages \ninto this log file. And if you will get compilation errors, you'll be able to get log. You will get error details in this log. So \nhere the reason of it is some strange behavior from net 6. And finally the last advice and the best advice we have is \nto go to your Windows, go to System32ineSRV and then Create Folder with the name NuGet and then inside of it \ncreate folder named Migrations. I already did it on my PC and that's why it works nice. But in your case, probably you \nwill get this error caused by missing folders on your system disk. And I agree that it's not ideal solution, but it works \nwell and looks safe.  \n  \n  \nSpeaker 1\n \n You only create folders, you do not provide any access and it works nice. So your compilation will not fail anymore. It \nwill not show you such compilation issue. This is the link to community Creation has quite powerful community. So \nthis is about compilation error that you will certainly that you probably will have. So I'm sure you will get this and \nthat's how you can fix it. So the solution is just to create the folder this one and I this will help you to bypass and fix \nthis issue. Okay, my compilation finished successfully. Now let's go to File system and check again our Bin folder \nTerms of Configuration Bin now you see some DLLs result of our compilation creation has server side which is \ncapable so which includes compilable sources. Such server side finally turns into DLLs that can be started.  \n  \n  \nSpeaker 1\n \n They include a lot of classes and such DLLs are necessary, so they are vital for creation normal work. And when we \nwill switch now into another mode, which I need to tell you. So we will need these libraries in this space. Okay, so I'm \ntelling you about this mode and I need to explain why we have modes. So when we installed our creature system, we \ncan go to settings, we can get this page, it's called System Designer page. Scroll down to the end, you see advanced \nsettings. You can click here. You open separate tab which is called Configuration section. I already opened it. Okay, \nso Configuration section, you can also go to Configuration section. If you will type in your browser your application \nserver URL 0 dev press enter. It will also go to this configuration section.  \n  \n  \nSpeaker 1\n \n Even if your main app is broken, so badly broken and it's not working, then you can type this address 0dev and go to \nconfiguration and try to fix so what we need to know about modes Creature has two different development modes. \nOne is called Creature ID mode. Let me show you guides development tools and we have two modes, Creature ID \nand External ID mode. Let me explain what is the difference. Creature ID means that you go to configuration section, \nyou can customize different types of items, you can create any type of items, and you can open any existing tools \nand settings. So system is quite open for you. You can use its own user interface and make your own \ncustomizations. And of course you can also use no code customization tools like Section wizard, like Application \nHub and so on.  \n  \n  \nSpeaker 1\n \n So you use only UI of creation to build it and modify it. We call this mode Creature ID mode and it means we use only \nCreature user interface tools. This mode is perfect for beginners and it's also the only allowed to run at cloud \nconditions where you have no access to file system. Creation ID is relatively simple and it's quite, let's say, well \nprotected. So you maybe will find it hard to break your system using this mode because system protects you from \nthe most obvious mistakes that you can do. So it's quite safe for beginners. But Creature ID mode means you have \nno access to file system, you cannot use any type of version control except of SVN and you cannot debug server \nside easily and effectively. So Threshold IDE means some limitations.  \n   \nSpeaker 1\n  \n In order to use full power, we have a special mode called External IDs. The main idea is to allow system to save a lot \nof settings directly on disk into file system and then use external editors to modify such contents. Also you can still \nuse internal editors, you can still use existing tools and open them in creatio ui. But enabling this mode for external \nID and saving necessary changes on file system makes it very efficient when you integrate Creature with Visual \nStudio or other popular powerful editors like webstorm and others. So I will show you how to enable this External ID \nand how to detect your current mode detection is quite easy. You can go to your configuration section and click on \nActions menu. You will see a file system development mode at the top and you will see some gray colored menu \nitems.  \n  \n  \nSpeaker 1\n \n If you see gray colored it means file system development mode is not turned on and it means that simply Creation ID \nis on. Now you can change this mode according to the manual. So here is the article which I recommend you to read \nand this manual well, explain how we can switch between environments. We need to make corresponding settings in \nweb config file depending on the platform. For NET framework it means iis. On Windows we should search for the \nfile design mode setting. And for the. NET Core or for Linux Net 6 we have to search for another web host dll config \nfile and we will have the same setting there. So we have to make two changes. File design mode must be enabled to \ntrue and use static file content must be set to false.  \n  \n  \nSpeaker 1\n \n But please remember before you will do any changes, make sure your system can be normally compiled. This is \nimportant for two reasons. First reason is to get corporate necessary files in bin folder here software web \nconfiguration bin and also second reason is to make sure you have no common compilation issues like I explained \npreviously. So we already performed this compilation. Now we follow manuals to switch between environments. Let \nme show you how we can do this. We have to go to the outer web config file. So we have root web config file and we \nhave terasort web config file. Two different web configs. The necessary one is outer root folder web config Start to \nedit it. Go to line number 400 no 510 I already had this folder previously I already edited similar file. That's why my \nfile manager remembered it.  \n  \n  \nSpeaker 1\n \n So line number 510 I found file design mode setting. Originally it was false. I will carefully put it to oh sorry, no \nkidding. I will carefully put it to true and then one more setting must be done a bit below. Use static file content must \nbe set to false. This is also important. Let's search for it. Line number 563 use static file content was originally true. \nWe will set it to false and save. After doing this we can reload our configuration section. And now you will see that \nchange will appear apply and you will see that our actions button. Now we'll include active options for download \npackages to file system and update packages to file system. I need to explain what are the actions and what they \nactually do. So original storage of all our customizations. We will study how they work.  \n  \n  \nSpeaker 1\n \n Will study what package is what package contents usually includes. So this original storage is in database in set of \nsystem tables inside of our database. So it's very important to understand Creation has out of the box big number of \ndata tables. Most part of them are data tables for business entities and business data. But some part with a prefix \ncis. We have a lot of such CIS tables. They are used by application itself to keep its configuration settings to keep \ninformation about all the customizations you do or all the base product contents. So we have a lot of system data \nalso saved in the same database. And originally all these contents comes from the database and database backup \nthat we initially installed at our system.  \n   \nSpeaker 2\n \n  \n Are GUI changes saved in the same database. So say like if I just add some extra information to say a client, is that \nalso the. Say just the. In putting that in the gui, is that also stored on the database or is it stored.  \n  \n  \nSpeaker 1\n \n Yes, yes, it's also stored in the database and database is primary storage for this. So when we.  \n  \n \n  \nSpeaker 2\n \n Yeah, and then the only reason I'm interested in, I'm just asking that is how then does that work with version control? \nSay if you have multiple people working on the same. On the same, we'll say client, I will explain.  \n  \n  \nSpeaker 1\n \n I wish I will now explain. You will see that. So originally we have all the content stored at the database. But if we \nenable this file system development mode, then we have an option to save changeable part of it into files and what \nwe do customizing. So like we make our own changes in this external ID mode. In this external ID mode, everything \nwill be saved as set of files on disk. So now we can do this operation to ask system to save everything which is \ncustomizable on disk. So it's called download packages to file system. It means please save everything that system \nneeds to store at file system. In this mode, please save it from database to file system. Generally this action is quite \nsafe and usually it covers all the editable stuff.  \n  \n  \nSpeaker 1\n \n In my case, I have only one storage code package for this editable stuff. So it performs almost nothing and it saves \nsome files on disk. We can track what's going on our disk. Now let's go to javasoft web app JP configuration. We \nhave a special PKG folder for such storage on disk. And we can see custom package which was just created \nseconds ago and the contents of it. So we just asked system to save everything on disk. Then later we will use \nversion control to submit our changes to Common repository and our editable stuff will be shared with other team \nmembers. They can easily download it and they can easily move it to their own environment. So that's how you can \nexchange your configurable changes. But now we need to save it just to make sure we are looking at it on disk.  \n  \n  \nSpeaker 1\n \n And in order to finalize our switch, it also recommended. So according to the manual, we have a next step to compile \nit again. So it looks like we need to compile it one more time. It's Just to make sure everything is working fine and we \nfinishing our switch into this developer mode file system Developer Mode it looks like we have not enough time \ntoday to show git integration, so I plan to show it for you tomorrow. At the beginning of tomorrow's session I will \nshow you how to enable git integration and now I'm asking you so usually first day is full of different questions and \nmaybe we have to align expectations and so on. So if you have any questions today, please feel free to ask. I would \nbe really happy to hear.  \n  \n  \nSpeaker 1\n \n So your homework for today will be just reproduce the same steps as I did and install your local creation system. \nTurn it into development in file system mode. Make sure you can compile it normally and I recommend you to \ncompile it twice before you do any changes to make sure it's compiled and to get executables, DLLs and then after \nyou switched into this mode to make sure that system is fully operational and server side has no any visible, let's say \nincorrect parts. We will study more about making creation settings. So probably we have some minutes today and \nwhen compilation finishes I will start to explain about working with packages and the concept of a package. Now \ncompilation will finish, but I already can start to explain. So what I need to tell you. Creation is a highly flexible \nsystem.  \n  \n  \nSpeaker 1\n \n So it has hundreds or even thousands of changeable items and most of them are called schemas and we have \ndifferent types of such schemas. So you can when you hear schema you should understand some customizable \nchangeable item in creation, such items declare entities. For example, we can filter by item type like look only at \nobjects so we can see objects responsible for keeping address data and other objects are very simple and \nresponsible for keeping e.g. Types of accounts and each object corresponds to the database table. Let me show \nyou. So we found some object named account type and we can find account type in our database. And now you can \nsee we have some data and here we have a list of six records of different account types supported at our system.  \n  \n  \nSpeaker 1\n \n So objects are related to data model and we have plenty of different objects, but not only objects, we have a lot of \nother items. Client modules are responsible for page settings. C sharp source codes are responsible for server side \nclasses programmed in C. Data items are responsible for data transfer between environments. When we have some \ndata contents created at developer environment and we need to move it to transport it to other test and production \nenvironment and also to transport it to our other team members. Developer team members who also need to see the \nsame data so we have big number of different configurable items. And if you're interested I can also show you how \nmany select count from sum of system table sys schema where we have a big set of such configurable items. You \nsee 500, 5,500 more items.  \n  \n  \nSpeaker 1\n \n So it's quite difficult to manage such amount of settings in a list. So developers decided to make kind of big \ncontainers for them and they called them packages. And the left part of this configuration section just remind how \nyou can get there. So you go to settings, scroll down advanced settings or you type 0 dev in your browser 0 dev. \nThat's how you go to this configuration section. So you see big set of items and bigger items are called packages. \nWe have quite high number of packages even in out of the box of simple product. Let me show you how many \npackages we have out of the box sys package system table which keeps information about packages. 140 out of the \nbox packages. And I'm using now the smallest possible app.  \n  \n  \nSpeaker 1\n \n It's a studio app which includes only platform version and almost no business functionality except of hundreds of \nlookups. But in general we have almost no business sections. Business functionalities is absent here. So we have \nonly platform level tools like constructor setting which allow us to build our own apps. It's possible to install or to get \nout of the box much bigger solutions like sales automation, service or marketing. So Creature also like supports \nsuch type of products where customers want to use automation which should be already included. And that's how \nyou may have just quite bigger number of packages just out of the box from your customization when you start. In \nmy case, I intentionally took the smallest possible product Studio and as you can see it's not so small. 140 packages \nare already on board and we can study them.  \n  \n  \nSpeaker 1\n \n Luckily, Creature offers you possibility to look at any part of base product items. You can open any part of its \nconfiguration code and you can see how exactly it was written, how exactly it was set. So Creation has open source \nof base product configuration. Configuration is a like changeable part of the system. Also we have opposite one \nwhich is called Core. Core part is not designed to be changed by customer. Core part usually represents set of files \non disk and you can find core libraries in the web Bin folder. More than 200 of different DLLs. They are designed by \nCreature and are not expected to be changed by Customer or Creature Developer. So on the Creature company \ncreates and issues such DLLs when base product updates.  \n  \n  \nSpeaker 1\n \n Of course you will have updated versions of such DLLs so they are not designed to be changed and they perform \njust low level functions of creation functioning. Also we have client side core parts in JavaScript which is also not \ndesigned to be changed and only changes when creation issues new version. So core part is non changeable low \nlevel set of tools that are necessary to run your application configuration part which is here is highly changeable set \nof different items that could be more or less easily changed. And we have out of the box base product set of such \nitems called set of packages. And each package may include unlimited number of configurable pieces.  \n  \n  \nSpeaker 1\n \n So the main sense of building packages is to make management of such configuration easier to make possible \nseparate development and let's say splitting of responsibilities, sharing responsibilities and like splitting of all \nsystem functions into separate parts. It could be developed separately and transported and delivered separately. So \neach package should be considered as a box for some items inside you can put unlimited number of items into it \nand probably it will be interesting to see how many items we have in different packages. So let's do some simple \nselection. Name from sys package this is just simply selecting list of existing packages. Then we can do some \nadditional calculations. Select count or maybe okay count from sys schema as Whereas sys package ID equals to \nour P this is our P package LS P and here we will have p name okay. As schemas count Great.  \n  \n  \nSpeaker 1\n \n Why doesn't like this should be okay the name this is okay this package. Okay, let's try to run. Let's see what's wrong. \nMaybe it expects something like this or maybe I'm doing something very stupid. So let me check again. P name \nsubquery no, it should be okay, let's check. Yes great. Now we will do some sorting order by to desk. So we go to sort \nnow you see. So the most populated package so the most package with the number of items there is package \nnamed CRT base. We can find it here. CRT base. Unfortunately this editor doesn't show us some totals or any kind of \nsummaries. So we are not knowing how many items are there. So we can read it with this type of queries if \ninterested if you are inspired in database scripting. So I will share such scripts with you.  \n  \n  \nSpeaker 1\n \n You can also see the same but you can see that some packages have quite big number of items like 800, like 400, \n300 and so on. And the main sense of the package is to make some separate functionality stored separately and \ncould be saved and delivered separately developed separately. So it's like logical thing to split big system into parts. \nOur solutions that we will do also will be saved in one or several packages. And now you may see that most of \npackages have gray color nearby their names and only one package have a yellow color for like indication that this \npackage is editable.  \n  \n  \nSpeaker 1\n \n This is a special package named custom and custom package is designed for cases when you so when customer \ndoesn't think too much about storage of settings at all and when customer just don't know the architecture and they \njust want to customize system, save it, perform some no code settings and that's it. So custom is kind of default \npackage for such kind of customization, but for big projects it's not recommended because custom package is also \npresent on target environments and custom package may be not empty at target environments, for example at \nenvironment when you want to test or when your users are running in production. So custom package is not perfect \nfor such delivery. Even though you can export it, you can easily import it later, but it's not perfect. So I prefer not to \nuse custom package for your package customizations for your solutions.  \n  \n  \nSpeaker 1\n \n Obviously we will create our own package or even several packages to save our customizations there and now you \nneed to remember there are two general approaches. You may manage packages yourself and it may mainly make \nsense if you develop something in Classic ui. Classic UI is a legacy type of settings that we still have in our \napplication and still support. And we have hundreds of maybe thousands of different partner solutions designed \npreviously in Classic ui. And also if you plan to make your new solutions in Freedom ui, in this case you will probably \nsee that when you manage your application with Application Hub, system performs creating of your packages \nautomatically. So you will only control it here, but you will not need to create them. So in order to demonstrate your \npackage management, I need to create some package manually. So let's do this.  \n  \n  \nSpeaker 1\n \n I will click on this tiny create page button, this opens new package window and I will call it something like Dev \nClassic. So I intend to use this package for some classic UI stuff. That's why I will call it Dev. Classic package has \nsome properties and compile into separate assembly is extremely useful feature and it's so useful. So it's enabled by \ndefault and it makes our compilation time three or four times less than usual. So compile into separate assembly is \ntotally recommended feature. We will keep it on Smart activation is not so common. I recommend you to read some \narticles about smart activation. It's necessary only when you have package with dependencies from other packages \nwhich are not installed. In this case Your package will be not activated.  \n  \n  \nSpeaker 1\n \n If you want to support this feature, you can use smart activation, but in general I think that it's not for our case, so \nnot so necessary. We don't have any version control for svn so we'll keep it empty, no version value and we will \ncreate and add dependencies. Now I need to explain you one more important thing about packages and their \ndependencies. Let me duplicate the page, I will show you important diagram. So as you can see we have 140 plus \npackages and packages have connections between each other. If you go to package properties clicking on this3 dot \nthen go to properties, you will see that package has properties and package has dependencies. Dependencies are \nvery important and they show other packages from dependencies, show other packages required by your package.  \n  \n  \nSpeaker 1\n \n And when you have a dependency for a package, it means that this package will not work until parent packages \npresent into your system. So in my case calendar base requires CRT core base for some reasons and this is how \npackages are connected. So if your package has dependency from some parent package, you may use some parent \npackage functionality like pages as templates objects. For inheritance you may use some parent entities and if you \nhave no dependencies you will not be able to use parent pages parent objects. So you will have to develop all your \ncustomizations fully from scratch. So dependencies are generally recommended and we can see the whole structure \nof packages dependencies with the actions package dependencies diagram. This diagram will show us connections \nbetween existing packages and I will explain you how you can add your solution into it.  \n  \n  \nSpeaker 1\n \n There are two common approaches how you can do this. One of the approaches which is now currently used by \nApplication Hub is to use package named CRT core. It gives us enough access to base product functionality and the \nCRT core is a good option for your solutions to be connected to the parent base product system. It has only standard \nminimum access to all base product templates. It will be enough to create new sections so you will have no \nproblems. But in case if you customize big base product solution like sales, service or marketing, and in case if you \nneed to customize existing sections like make your own changes into opportunities, into contacts, into accounts and \nso on, it makes sense to make visible and available for customization all base product structures.  \n  \n  \nSpeaker 1\n \n And in this case it makes sense to find the latest package here in this hierarchy except of custom and make your \npackage dependent on it. Thanks to parent dependencies you will have full access to parent packages including \nbase product section packages. So if you work with base product which already includes a Lot of functionality. For \nexample, it's a banking, product, sales service or marketing. Then it makes sense to create your packages dependent \nfrom all this parent diagram and it will be able so you will be able to customize parent packages. You will be able to \ncustomize any items, any sections there. So this approach works well for project implementations. In my case, I \ncreate my package manually. So I plan to make it dependent from Studio based product. I'll go back to my package \ncreating. Here is my dev classic package.  \n  \n  \nSpeaker 1\n \n I will make it dependent from. I can search studio and that's how I will do this. Any package has its own maintainer. \nIt's a text property written at packages. Each package has its own maintainer. And you should remember that when \nyou see the word terrasoft it means creation. Because terrasoft is previous company name. And somewhere in 2016 \nTirasoft was renamed to creation. Now you know this brand as creatio. So wherever you will find Terrasoft it means \nmade by creature and Studio is a creation made package. Okay, when we create our own package, we have our own \nmaintainer. By default it's customer. You can change it in the corresponding system setting which is called publisher \nand it has a code maintainer. Let me show. You can go to system settings, search for publisher.  \n  \n  \nSpeaker 1\n \n The reason why we have so many different words for the same is incorrect translation. Originally in English it was \nmaintainer. Then it was translated into Russian, then back to English. That's how we get publisher. I would prefer to \nhave everything just as maintainer here. So if you change the system setting, so you put something else here and \nthen you create your package. So your package will include the same change to value when you create it. And \ncurrently I do not need to change it. So I keep it as is. I have maintainer here. When you create your solution, you may \nneed and you may want to personalize it to provide your own unique value as maintainer. So I recommend you to go \nto your publisher system setting first, then apply it. And also you should remember about cached system settings.  \n  \n  \nSpeaker 1\n \n So in order to fully apply it, you have to log out and log in. Because cached system settings are loaded at the session \nstart only. So when changed it, you have to log out login and then you can create your own package. And your \nmaintainer will be according to your system setting when you create your package. But the most important is \ndependency of the package. So we provided it, we can apply it. And now after package was saved, you can see \neditable package at the top with the yellow icon here and when we reload this diagram you will see that our package \nis now shown in this diagram. After this studio, I click control and roll my mouse wheel so I can zoom in and zoom \nout.  \n  \n  \nSpeaker 1\n \n Now you can see my dev Classic package is created after studio and thanks to this parent transitions I can get \naccess and logical visibility to any part of base product. So this is very important. This is example how you can \ncreate packages for your own manually made the customizations mainly for Classic ui. In future we will make more \npackages and we will use package for Freedom ui. I will show you how we can how system creates packages for \nyou in freeware and when finished some step of settings we can download everything to file system. Now our dev \nClassic will be also saved on disk. So we go to check it out here and now you can see Dev Classic package appeared \non disk seconds ago and you will see package contents. It includes some files folders.  \n   \nSpeaker 1\n  \n Now our package is fully empty, so we will fill it in with some test settings tomorrow and we will continue tomorrow's \nsession with git integration. Now today our session is over. If you have any questions about it, tell me please. You \nwill receive video recording very soon, probably in one hour if Zoom will be quick to convert video. So I will send you \nvideo once it will be ready. And your homework is to reproduce the same steps. Install your local environment, make \nsure it works, make sure it compiles, turn it into file system development mode. Then create your package. Make \nsure your download packages to file system works well. The opposite action, update packages from file system will \nmake sense when you change your files out from creature. So when you for example update them from repository or \nwhen you use external editors.  \n  \n  \nSpeaker 1\n \n In this case, you will need these update packages from file system action in order to tell creatio about some new \nchanges and in order to load such changes back to the database. So our session is over. Thank you. Thank you for \nyour time today. We'll see each other tomorrow at the same time. If you have any questions, please feel free to ask. \nWe will continue tomorrow with so with git integration we already created an example of a package. We talked about \npackage dependencies. And tomorrow we will continue with git integration.  \n  \n \n  \nSpeaker 2\n \n Thanks a million Demetri. That was very insightful.  \n  \n  \nSpeaker 1\n \n Thank you Paddy. Thanks others, thank you for your time. So see you tomorrow. Our session is over. Bye. Thank you \nMay. Bye.  \n  \n \n  \nSpeaker 2\n \n Thank you.  \n  \n  \nSpeaker 1\n \n Bye. Thank you Sarah. By.  \n \n  \n  \nSpeaker 1\n \n Today is session number two and we will continue to do our first steps on creature platform. As developers, we \nworked with our environment. We made our package recently and today we will continue with git with doing other \npreparations. I will explain how to operate with packages, how to integrate with git and we will work with objects and \ndata. I will show you how to build data items, why we need them, how to transport solutions. So you will see how it \nworks in general. I hope it will be clear for you. Okay, so in case of any questions, feel free to ask. I'll be really happy \nto answer your questions. As usual, video recording is being performed. I hope that. So you downloaded video files \nfrom our yesterday session. I hope you made your homework and prepared your environment.  \n  \n  \nSpeaker 1\n \n So now you are fully ready to continue. If you have any questions, feel free to ask Tushar any questions we have. Is \nthere some issue during installation of the local environment? I'm getting this one error. Please type in the chat. It's \nrelated to some redis server. This is where so you posted the text. So it was failed to connect to the redis and so it's \nsomething like it was not possible to connect to radius server right now and it was multiplexer train board \nconnection. So first of all, thank you for saying this. So first of all you need to look at your connection strings config \nto make sure that you have a correct host setting and db number. Also you must make sure that your regis is \nrunning. You can check it by running your windows services. I already checked.  \n  \n  \nSpeaker 1\n \n My port number is different like your. You should find your Regis service running. If it's running, it means it should be \nokay. You can also look at Regis logs. Maybe it will be more clear for you and which version of Regis are you \nrunning? You can. You can get this information. If you go to C program files Redis, you can run this special app \ncalled Redis Cli. Then you will see something like this. You can type info command. You will see a lot of technical \ninformation like version number, amount of ram used, a lot of system parameters, and also you will see set of used \nkey spaces. So it's a database numbers used by your redis where I can find the version number in this information.  \n  \n  \nSpeaker 1\n \n C program files regis usually if you installed regis for Windows, you will find it here and then you can just run regis Cli \nexec file. It will be a command line utility for redis. So you can run different commands like select number of \ndatabase db size. You can see size of the database that you selected. You can also use some dangerous commands \nlike flashdb for clearing of your current database or even flash all for clearing of your all redis server storage. So \nsometimes it's necessary in rare cases where your redis already has some previous old date and you would like to \nstart from scratch. So removing of all previously saved values. Normally creation manages redis by its own so you \ndo not need any kind of assistance.  \n  \n  \nSpeaker 1\n \n And usually creation is caring about redis itself only in some rare cases you will need something like this, like flush \nall in order to reset your redis to clear everything and that's all. But it looks like you have a connectivity issue. So \nquestion about network name or question about port number or something like this. So is it possible to run your \nredis CLI and make connection to your redis? Yeah, I'm doing that. So when I started Radis Cli you can just type the \ncomment flush all which will clear full regis and it will clear all the previously saved settings. And if you have \ndifferent attempts to install creature, there is some slight chance that existing redis data may prevent you from \nnormal start. So you can try to run flush all command.  \n   \nSpeaker 1\n  \n I would also type it in our chat so this may help you to normalize your redis operations. But the most common \nreason I think is about connection strings. So you should take care about the host and database number. You can try \nto choose another database number, maybe you have some other apps using the same number and you may try to \nrun another one. I'm able to log in. Did it help to fix? Yeah, yeah. Okay great. Thank you Tushar for your question. I \nhope it was not so boring for others to hear it, especially if you if others will also experience same difficulties, it will \nbe really helpful. So let's move on with today topics. If any other questions appears, feel free to ask at any moment \nof time.  \n  \n  \nSpeaker 1\n \n So it will give me a bit more entertainment because so once you have a question, I will be happy to answer. Today \nwe'll continue with git, with package management, and also with working with objects in general and using data \nitems. And possibly I will show you some advanced example with connecting database views and objects. So today \nwe will mainly focus on general stuff like git and object and data management. First of all, let's remember where we \nfinished last time. Last time we manually created new package. As I told you, the scenario for manual package \ncreation will be necessary in examples where you do some classic UI customization. In general you can create \npackages and then you can use it for freedom UI apps, but it's not so common because when you create freedom UI \napp, system automatically creates a package for you.  \n  \n  \nSpeaker 1\n \n So creating package manually usually means that you are planning to do some classic UI stuff. Just to remind you, \nclassic UI is a special old type of user interface which you can still find in many system sections like system users, \nlike system settings, like web services. You will see some specifics and no possibility to shrink columns easily. And \na bit later I will show you examples of Freedom UI and you will see how you can use such tools, how it will look like. \nSo we have two different types of user interface. They have a totally different undercover frameworks inside and \nthat's why it's so different and we make such difference between different types of creature pages. Okay, so dev \nclassic will be intended to use for some classic UI stuff. I need some dummy example to be put into my package.  \n  \n  \nSpeaker 1\n \n Currently you can see that we can select all packages. As you remember we have 141. Now let me check number of \npackages at our d one database. Now we have 141. So one package was added because we added it manually. And \nif you select all packages you see contents of all your all system. You can use some search. You can use by search, \nby title or by code. You can use with different search condition and you can also make filtering by configurable item \ntype that you can add to your package. In my case, if you select any package you will see its current contents, \nespecially if you clear search bar. So you will see current contents. And when I select my package, by default it's \nempty.  \n  \n  \nSpeaker 1\n \n We can create some dummy stuff here just to demonstrate something that is not empty inside of our package. So \nlet me show you what it will be. For example, we can make a test process, business process. It's a type of \nconfigurable item designed for automation of some business actions in our creation system. So now I need it only \nas a template done stuff just to make it to make my package not empty. When I design my items I must provide \ncode and by default system expects me to provide some prefix for this code. This prefix can be also set at system \nsettings. You can search for prefix for schemas and packages name. You can open it. You can see default prefix is \nUSR.  \n  \n  \nSpeaker 1\n \n You can change this prefix at the beginning of your project or you can even remove it if you do not like. So \nsupporting prefixes. In my case I do not need to disable it. So let it be as is. Prefix usually helps me to detect my \ncustom changes and differ them from base product stuff. So anything which has my prefix will be definitely made as \npart of my customization. So in general I consider prefix as useful thing. But in some projects developers decide not \nto support prefixes because they just tired of making them. So in my case, when I create a process, I must use this \nprefix the same as my system setting us our test process. We can name this stuff as test process. I need it only as a \ndummy stuff.  \n  \n  \nSpeaker 1\n \n So I do not really plan to make some business logic here. So my test process includes some start simple event and \nthen terminate event. So this process, it's just doing nothing. I have no parameters, no special settings, I only have \ncode and title. Then I can save this sample diagram. It will be saved into my package, as you can see here. So I can \nclose it. Now my package is not empty. And you see this item added to this package. You may note this big star \nnearby the item name. And this star tells us that our change is performed and not fully properly saved. In case if we \nwork in this creation. No, no external ID mode or it's also called file system development mode. It's kind of a long \nname for this. So file system mode.  \n  \n  \nSpeaker 1\n \n In the case if we work in this mode, this star is really important and helpful because it shows us that something was \nchanged and not fully saved on disk. But if you will turn back to creature ide, this star will be almost useless because \nit will represent that your changes are not submitted to the SVN. And if you do not support SVN, so you will always \nhave big set of such items with stars and it will not help you to detect some recent changes. So in our case, working \nwith file system star means item was not fully saved on disk. Why we need to save it? Because creature shows us \nsome changes and they must be submitted properly in order to make correct set of steps. Make correct \ndevelopment approach so we can submit everything to file system.  \n  \n  \nSpeaker 1\n \n Download packages to file system the reason why we have to do this is that some changes when we do them at \nconfiguration section are not initially and fully saved on disk. They are still created and saved in database first, \nbecause it was historically and originally the first storage place of creation items in database. And only several years \nlater possibility to save items on disk was added. And that's why we have some kind of legacy and historical stuff. \nAnd when you develop some items, they are anyway created in database first. Okay, so we can run this action \ndownload packages to file system. It will include all our editable packages, all the contents, and save a set of files \nand folders on disk. When it finishes it will show us some report what have been done and you will see this report \neasily.  \n  \n  \nSpeaker 1\n \n And also this star nearby. The item name will disappear. Meanwhile you can see the type of the item. It was a \nbusiness process. Now you can see this small report includes text that this USR process was modified on this so it \nwas fully saved. Now you see the star disappeared. We can go to file system. Here is our app file system. Go to \nTailsoft, the web Terrasoft configuration PKG. Then we will find our dev classic package. And now you will see that \nit's not empty. You see schemas. Now we have some special folder. We see some set of files. It's not so easy to read \nsuch files and luckily we will not need to modify them using external editors. This is special set of settings called \nmetadata.  \n  \n  \nSpeaker 1\n \n Metadata is information about our configurable items stored in a special system inner format in a JSON string with \na big number of different properties and values. And luckily we should not look here constantly. So just something \nthat you need to know that it exists. So metadata represents in the structure of the item and for some types of \nconfigurable items it's not really designed to be edited out of creation. So only creature editor should be used for \nthis. This metadata represents full structure of what we designed and we can now have this stuff saved on disk. The \nreason why we saved it on disk is our attempt to organize a teamwork. So we want to make some changes then to \nmake a common repository, save our changes there in order for our team members to make them possible to get \nour changes from common repository.  \n  \n  \nSpeaker 1\n \n And that's how we will exchange settings between different developer environments within one development team \ndoing the same project. So now as you can see, we're going closer to file system and to understanding how we can \nexchange settings between developers. I need to tell you that creation has two different flows of changes, two \ndifferent, let's say directions of how you can transport changes. First and the most necessary to know is delivery. So \nwhen you do some your solution or you have an existing solution and you want to save it and then import it \nsomewhere else in order to test or to run in production, you can just export this package into file. You can export any \npackage you see system will produce zip archive file. And this zip archive file can be found on disk here like this.  \n  \n  \nSpeaker 1\n \n And this zip archive file can be also uploaded on some other environments. Such uploading can be done with the \nsettings. Then you go to application hub and then it's possible to add new application with install from file option. So \nthat's how you can get it from file and load it. If you do it many times, you will install form file many times and \npackage will overwrite previous package settings so you can do it multiple times if necessary. But this is delivery \nprocedure which is designed to be used only for test and production purpose. But if your task is to share settings \nbetween developers, this export and import approach is not good because when you import such package at your \nanother developer environment, you will see this package will be read only and also when it's imported it fully \noverwrites your contents.  \n  \n  \nSpeaker 1\n \n So it will be really hard to operate as a team where each team member can do his own, let's say contribution to the \ncommon repository. So such export and import is not designed for sharing settings between developers. We have to \nuse a bit more sophisticated approach and that's why we turned our environment into a file system development \nmode. So the step one is to make sure everything from your changes is saved on disk and step two is to use any \nkind of version control systems to operate with set of your files and folders from your disk in order to deliver \nchanges. In order to transport your changes from files and folders to some common repository and then other team \nmembers. Other developer environments can take such settings from common repository from other from common \nrepository to another developer environments.  \n  \n  \nSpeaker 1\n \n So that's how it can be organized as a team. And now I will show you. I will use git as a version control system, the \nmost popular for now. And in order to run git I need some kind of good git client. I prefer to use visual studio code as \na git client. So it started visual studio code. Luckily it's free of charge so you can use it freely. Here is my visual \nstudio code. Probably I need to close everything close folder so I need to make just from scratch and what I need to \ndo.  \n  \n  \nSpeaker 1\n \n So first before you enable any folders, before you operate with your git, if you don't have git client, you should click on \nthis button source control in order if you so if you don't have any git client installed, you will see only one button here \nto be called something like oh we have to update. Okay, maybe later one single button will be install git client. In this \ncase you have to run your visual studio as administrator when you click on this button to automatically download \nand install official git client and after this you will see the same settings as I do. Also you probably will need to run a \ncouple of commands related to your client username and email. But this is something very common.  \n   \n Speaker 1\n \n I think you can easily fix it if you face this difficulty with new terminal window and a bit of googling will tell you how \nto make full setup of your git client. In my case, this git client was already set so I already have git client normally \nworking so I can now open folder and initialize repository in it. This is very important to understand how you should \nmanage folders. So here we have a our application Terrasoft web app terrasoft configuration PkG folder and we \nhave a lot of subordinate subfolders here. What are they? I will explain a bit later, but now you need to remember and \nunderstand that currently I have only one package, but very soon I will have more than one packages in my solution.  \n  \n  \nSpeaker 1\n \n So if I decide to make a repository root folder somewhere inside of my folder representing a package, then it will be \nreally hard for me to add any other packages here. So I will need to keep several repositories for several packages \nwhich is also not so good. So possibly we can select upper level folder. This PkG folder will be my root working copy \ncatalog working copy directory on my disk and then as many packages as I need I will be able to use inside of one \nsingle git repository and also we will have to take care to remove from the repository. So do not version a lot of other \nfiles here which are not so intended to be changed and they are not part of my solution. So I plan to use a PkG folder \nas a working copy root folder for my solution.  \n  \n  \nSpeaker 1\n \n I will do this with visual studio code and in Explorer tab I'll just click open folder. I need to find the corresponding \nfolder from my disk. And now probably it's time to explain why we have so many files and folders inside of TKG. So \nwhen opened you will see a lot of subordinate. Yes, I trust the authors, but you will see a lot of subordinate files and \nfolders here. So the answer of what it is quite complicated, especially as you are beginners. So probably you will \nneed to watch this part of recording a couple of times to understand fully. First of all, you may notice that folder \nnames here represent some packages names from your configuration. Let's go. Let's look here. Let's search \ncalendar base. Can we find it here? Yes, here is calendar base. Okay, next one. Content builder.  \n  \n  \nSpeaker 1\n \n Content builder is also representing a page. Okay. CRT analytics dashboard okay, let's find it. Yes, you can see it, but \ntotal number of such folders is much less than 140. So it looks like such folders appear here as a result of presence. \nSome packages in configuration. But for some reasons not all the packages from our configuration form their own \nfolders on disk. So the answer of what it is a bit complicated and it's called file contents. Let me explain what it is. \nSo generally any package in creatio may include unlimited number of items with different types like objects. We will \nstudy them today. C sharp sources several site programmed code in C hash language a lot of JavaScript client \nmodules representing page settings.  \n  \n  \nSpeaker 1\n \n For client side we have some data items, we will discuss them and they are used to keep some data records in your \nsystem, business processes and some other types of items. So in general any package may include unlimited \nnumber of different configurable items. That's okay. But also developers decided and architects of creature decided \nit would be nice to make possibility to add some additional file system stored functionality connected to the \npackage and they decided to make so called file contents. So if you have a package, any package may have its own \nfile contents and this file contents should be saved in PkG folder. Then in folder name inside of it which is the same \nas package name, and inside of it we have files folder and it may include some DLL's, it may include some additional \nfiles and bin folder which usually includes DLL's.  \n  \n  \nSpeaker 1\n \n And this file contents is usually having two types of files. It usually has some DLL's as a result of compilation and for \nsome cases it may include some JavaScript stuff, JavaScript components. So generally the answer is that in PKG \nfolder we have file contents which is a legal valid part of some packages saved on disk and we should treat it as \nread only stuff. We should not remove or modify any part of base product packages file content. So we should just \nsimply ignore all of this stuff. So now we are going one step closer. You already know that we are interested only in \npackages that we design, ignoring everything else that we can see in PKG folder. Okay, now it's clear. So let's go to \nour visual studio code which will work for us as a git client.  \n  \n  \nSpeaker 1\n \n Now we only opened some folder with big number of files. We are really interested only in some part of such files, \nbut we are not interested in all the contents. So let's go to source control tab and now it's time for us to make a git \ninit comment. So some of you already have some experience with git, you already know what it means. So we need \nto initialize a local repository to operate with git. This is a necessary so it's like mandatory step if you want to use git \nwe need to initialize repository I prefer to use as much as possible of graphical user interface to operate with git \nbecause it's easier, it makes less chance of mistakes and much more visual. So we can see what's happening here.  \n  \n  \nSpeaker 1\n \n So I will run initializerepository which is the same as git init command and it will initialize my git local repository in \nPkG folder. So I just click this, it performs some steps and now we can see that at this source control tab our git \nclient detects huge number of modifications. Of course most of them are at base product packages. So we do not \nplan to version such base product file content. We do not plan to submit it to version control system repository. So \nwe need some tool to ignore this big part of PKG folder and we only need to keep and take care about packages that \nwe decide to create ourselves. Now we have only one package that we are really interested in submitting. This \npackage is called dev. Let me show you dev classic package.  \n  \n  \nSpeaker 1\n \n So this is our package that we plan to operate. We want to ignore everything else. Custom package is also editable, \nbut we agreed that it's not a good idea to use custom package for big project development. So I prefer to ignore \ncustom package as well and keep it empty or only with some temporary stuff which will be not submitted to version \ncontrol and will be not shared with any other developers. So I have simply only one package here so far, but soon I \nwill have more packages. I need to ignore everything else and from my previous experience I already have two for \nthis. If you have no previous experience, you probably know that in git you can ignore some parts of your working \ncopy folder by use of Gitignore tool. And I can find good example of Gitignore tool at my GitHub repository.  \n  \n  \nSpeaker 1\n \n So let's go to GitHub.com. I need to sign in. I use my Microsoft authenticator for this. Just a second. Authenticator \nhelps me GitHub yeah. Oh, sorry, change number. Okay. Okay, this one. Okay. Successfully confirmed my person \naccessing GitHub. I recommend you also to register your account at GitHub. So what I need here is my repository. \nConfirm your account recovery. No no no, later. It's okay. So I have a lot of repositories at my account. Probably you \ncan find it here. My repositories and what I need here, I need some example of a recent Gitignore file. Originally I had \nno examples, some of my colleagues proposed an example of Gitignore file originally made for visual studio, but \nnow I have a better example so I will have less time to update it. So I already have some example of gitignore file.  \n  \n  \nSpeaker 1\n \n Of course I will share it with you. Gitignore file is a file with empty name and gitignore extension. And the main \nreason of this file is to provide set of macros or a set of text templates which will be used to find and exclude from \nthe contents all stuff which we consider as not necessary. Usually it's designed to exclude log files, some settings \nfiles, some technical files generated by your integrated development environment, temporary files, project files, \nsometimes executables if you do not need them, debug files and so on. In my case, we will use this Gitignore file to \nkeep set of base product packages names, to exclude our to exclude them from our versioned contents. So we'll \nsimply copy all of this code. I will make my own a new gitignore file inside of Pkg folder. The name of the file is \nGitignore.  \n  \n  \nSpeaker 1\n \n If you will do this with your Windows Explorer, make sure you set for display of the full file names with extensions. In \nthis case you will not fail and you will not create a gitignore txt file. So I will create new gitignore file, paste this stuff \nthere and save it. Now you will see immediate change happening in my repository, in my working copy source \ncontrol tab. Now you see gitignore file. Okay great. We can still. We can also edit it here if necessary. And we still \nhave some packages appeared here. The reason is that my Gitignore example was from version 812. Currently we \nare running already new version. This version is eight one three, the latest available released version and in this 813 \nversion some new changes and new file content appeared for base product packages.  \n  \n  \nSpeaker 1\n \n As you can see CrT omnichannel appear it here and I can add it to gitignore. Let me show you what happened and \nalso I do not need to put all of the files here, so package name is enough and CrT security so I can type it manually \nCrT security and save it. Now you will see I cleared my versioned stuff. I only have my dev classic package here. I \nuse the gitignore to remove big set of base product packages and base product file contents from versioned stuff. \nSo Gitignore helps me to do with this. I have a small poll for you, could you please confirm do you have any \nexperience with git and if yes please type plus in our chat or if you don't have any experience with git and you do it \nfirst time, then please type minus in our chat.  \n  \n  \nSpeaker 1\n \n So it will help me to understand your current level of skills and knowledge about version control. Because today \ndeveloper I think must have some say basic experiences version control tools because it's quite inevitable to operate \nas a team. So thanks for all of you who replied you have some experiences git. Those who do not reply and please \ndon't be shy understand that no one knows everything from the beginning, so everyone is studying every day. So \nsome years before I also was not knowing about git at all. So this is something that you can learn and my task is to \nhelp you with it. So now we have settings for our git client to include only necessary parts of our code and we \nexcluded everything else using gitignore.  \n  \n  \nSpeaker 1\n \n Also I wanted to show you in file system once we initialize git repository, you will see that new folder appeared on my \ndisk folder name is git and this folder is hidden. As you can see the file attributes here show us it's hidden. So \npossibly I will not see this folder easily in my Windows Explorer, but here I already saw set show hidden items and \nalso already set for showing file name extensions. Just not to be tricked by windows. So now you can see hidden \nfolder dot git even in Windows Explorer. And dot Gitignore file has a dot gitignore extension, not text extension. So it \nis also important. Okay, so this is my local git repository. I did not perform any comments to it, so I did not submit \nany changes there. So it's time to make my first commitment. Let's do this.  \n  \n  \nSpeaker 1\n \n My first commit ever. So it's just something fun. Text and text for your commits is important to describe your \nchanges in general. Like you did some new section, you did improvements integrations or you made some data fixes \nor anything else. So your commit text should help you to track history of your changes in future. And it also will help \nothers in your team to understand what actually you are changing and what is the sense of your changes or why you \nsubmit some new changes. So when I do commit, it will run git commit action and it will save changes in my files \ninto my local repository. My local repository now became a bit bigger, so it has a bit more files and folders now. You \ncan track it if interested, but the inner stuff here is really hard to read.  \n   \n Speaker 1\n \n So it's about some git secrets, how it saves your comments, your changes and so on my git repository is still local so \nI did not share anything with my imagined team members. I need now I need remote global git repository that will be \navailable for my team members. I will use GitHub.com as a central git repository host so it will be my git server and I \ncan create new repository. I will have a lot of repositories here and I can easily create new one more new repository \nfor our training session stuff. Oh have some followers. Nice. And it will be a public repository so anyone can take \ninformation from it. So you can also read this repository, you can use its contents, you can save it at your own and \nsee what happens if you add your files to creation.  \n  \n  \nSpeaker 1\n \n So I need this common repository to organize sharing of settings with my colleagues. This is very easy. I will also I \nalso avoid using commons. I user interface because it's easier and quite straightforward. I will create new repository \nto be something like guided dev May 2024 let it be so this name was not used inside of my account and no \ndescription public repository, no readme file. I'm too lazy for this. I already have gitignore so no need to add it once \nmore and no license. So anyone can do anything with my code. Simply create repository. After doing this, it's time to \nthink about some git commands to connect my remote repository with my local one. And we have set of commands \nthat will help us to do this. So first comment is git remote add origin.  \n  \n  \nSpeaker 1\n \n So I will connect remote repository to my local git client and my local git repository. I can do it with a terminal \nwindow. Actually I can run any command line on my PC, but I prefer to do it here just to be a bit more consistent and \nto show you what happens directly not far from my visual studio code. So I just paste this code git remote add origin \nand as you can see my remote repository had this URL. Okay, let's do this. Then we have a set. Next comment, select \na main branch on my local one. Git branch m main okay. And the most important command is git push which will \ntransport changes from my local repository. So tools transport my commits from local repository to this global one \nso it will become publicly available. Git push it usually needs some Internet resource.  \n  \n  \nSpeaker 1\n \n You see, compressing was used here. And finally my remote repository was updated by set of commits by stuff that \nI committed from my local one. We can check it out. So now my repository is ready. You can see some files and \nfolders here. If you go inside you will see that git keeps only files, only folders which are not empty. If we compare \nwith our physical file system, you see for example data folder which is empty and it's not present here because git is \nstill not supporting empty folders. But it's okay, so it's not a big trouble. If you really need empty folders, you can use \nsome placeholder files. Creature is not sensitive for this. So even if we submit to version control, only meaningful \npart excluding empty folders, system will still be okay with it.  \n  \n  \nSpeaker 1\n \n And now we have some stuff from our package which is not empty. So we have some files and folders committed to \nlocal git repository and then to common repository. So now it's globally available and I can share my repository link \nfor you. So you can also check it out if you have any git account and know any restrictions to access GitHub.com \nfrom your PC. So this is my repository and what the reason why I made a repository based on PkG folder. Now I have \nonly one package and you can see this is a subordinate folder inside of my repository. If I have two more packages, \nit will be two more folders on this level. So having this kind of repositories helps you to keep minimum number of \nrepositories and maximum number of packages inside.  \n  \n  \nSpeaker 1\n \n So I can easily add more packages to my solution and it will still be located at one repository. You can also see all \nthe history of my comments. You can see changes there. So we will work with it a bit later. Now I will demonstrate \nwhat usually developers do when they operate with git and how their, let's say set of steps should look like we are \nstarting some steps at our development. For example, we open some configurable items, we do something very \nimportant. Okay, I'm not so lazy today. Let's do some read data. Let's say we will do some dummy thing. Read data \nfrom a contact object where name, full name for example equals to some value. No problem. Let's compare its value \nlike supervisor. This is just something that is a demo setting, so I do not actually need it so much.  \n  \n  \nSpeaker 1\n \n But this is something that and I will read only one column 80 okay, so this is just example read contact. An example \nof what we can do as business logic automation inside of a process. Let's imagine we did something useful, \nsomething very important for us, and then we save our customization. This is an example. In real life, your package \nwill include tens or even hundreds of items. You do some steps in your development. Finally you decide that some \npart of your solution is ready so you can save everything. Then you go to your configuration section and download all \nthe packages to file system. The main reason is to get rid of this star and make sure that all of your recent changes \nare properly saved on disk and represented at file system level.  \n  \n  \nSpeaker 1\n \n Originally when you do customizations they are saved in database and only if you download on disk it will be \nproperly and fully saved on disk. Some items are also saved on disk while you edit them. But this download action \nensures that everything is properly saved. So you must do this action when finished. Some development steps. Okay, \nI have some changes now on disk star disappeared so everything is properly saved. Let's go to visual studio code \nand let's see what's changed here you see we have some changes in descriptor for our process. Something like date \nof modification changed. You can see changes in metadata. We have some new item added, we have some titles \nchanged, some position changed. It's really hard for processes to detect changes like this, but this is something that \nwe do. Just an example of some customization made.  \n  \n  \nSpeaker 1\n \n Also we have some new items appeared here probably because of our titles added to the process pieces. But okay \nso we have test process and so on. So we have set of file changes. We can commit it as a commit example one and \nwe can do git commit into our local repository. Great. Now we have no changes. So we have some pending stuff that \nshould be pushed to global repository. So we can again run this command git push or which is easier I think is to \nclick on sync button which means pull and push. Pull and push. In my case it's like valid set of steps. So I prefer to \ndo this pull and push and that's how system will automatically perform the same git push to my common git \nrepository.  \n  \n  \nSpeaker 1\n \n Now we can go to git repository loaded and you see some history of changes. So we have two commits. Here is my \ncommit history. You can, you can see and compare changes. Let me show you here you can compare changes in \neach file, in each separate file. What was changed there? I agree. Sometimes it's really hard to perform this type of \ncomparison and it's because of the metadata stuff here. But anyway, technically you have tools to perform such \ncomparison. You have tools to track changes and you can see what is changing, what is happening in your \nrepository. You will see all users committing, you will see all history of commits. You will understand pretty much \neverything what happens with your package on file system level. And this storage now is a common repository. So \nlet's imagine we have another developer.  \n  \n  \nSpeaker 1\n \n Another developer originally has no own package at all. Another developer just installed new environment and they \nhave no package at all. So only one single developer should create a package, should commit it to file system and \nthen to version control repository. Another developer should go to this common repository, another developer should \norganize their local git repository in TKG folder and finally pull changes from this common repository. You can also \nmake some clone, but I think it's something that probably will be a bit more tricky because you will have to do it in a \nproper place on your disk. So finally, task for second developer will be to operate with their own PKG folder, to make \ntheir own local git repository there and then to get this folder out from git to local file system.  \n  \n  \nSpeaker 1\n \n They can do it with git pull comments or git clone comments, whatever works better. And finally, creature is \ninterested only in PKG folder and the contents here. So finally you will get this folder from git repository to some \nanother developer environment. After you do this, you will have file system stuff like this. You probably will have \nempty folders for items that were not used so far, like SQL scripts and data will be empty for some time. Then \nsecond developer must tell creature that PKG folder file system has something new. Creature will not detect it \nautomatically, so you need to push it. You need to like make a punch for your creation with the command update \npackages from file system.  \n  \n  \nSpeaker 1\n \n So second developer will perform this operation and second developer will see results that some new files, new \nfolders appeared and even new package will appear at second developer environment. So that's how your package \nchanges may travel from one environment to another. I mean from one developer environment to another developer \nenvironment. This is very important to mention we are talking about developer environments working with version \ncontrol. Let's imagine another developer environment opens some changes or creates new items, finally saves on \ndisk, then commits everything to file system, then performs git commit at GitHub client or sorry, at git client. \nProbably it's a visual studio code. And then perform Gil git pull and git push in order to update central repository \nafter this repository was updated, first developer may also perform git pull and git push.  \n  \n  \nSpeaker 1\n \n And that's how first developer will receive all changes in the package files. And then first developer must run the \nseparation update packages from file system. So that's how you can exchange settings between developer \nenvironments. And as you can see, it's fully 100% based only on files and folders. So no any special magic or special \ncalls or special web services are involved into this. Only files and folders are enough to save changes to extend to \nexchange your solutions between developer environments. As you can see, it includes plenty of files. Let me show \nyou, 30 files are here. In big projects you will have hundreds or even thousands of files, so it's much easier to miss \nsomething. But it offers you possibility of teamwork. You can change only some part of it.  \n  \n  \nSpeaker 1\n \n You will commit only changed items, changed parts to common repositories and everyone else can do the same. So \nthat's how you can easily, let's say, modify two different items of the same package and work as a team. There are \nsome warnings about this. Some items, like processes and also objects are not designed to be simultaneously \nedited by different developers at the same time. So you should avoid situations where you have two different \nmetadata files and you should avoid situations when you will have to merge them into one. So here you will see the \nmain metadata file, which is really hard to read and it's probably not so practical. You should not try to make any \nmanual changes here, even in case if you got this situation.  \n  \n  \nSpeaker 1\n \n When two developers made changes to the same item, I think the best way is to sacrifice changes from one of the \nside and submit another side changes into repository and then ask first side to check out it and make changes \nagain. So merge of metadata is not designed and probably will not be successful. So you should not try and it's \nbetter to avoid this. So you may communicate with your team members and organize your work so they will not \ninterfere into each other settings. But in one package, as you already remember, you may have hundreds of items. So \nif developer one modifies item one, if developer two modifies item two, there will be no conflict. They will \nsuccessfully and happily work with the same package. So you should be just worried about simultaneous access \nwith the same item for different users, different developers.  \n  \n  \nSpeaker 1\n \n If you have any questions about it, any other ideas, feel free to ask. I'll be happy to explain. So in general, now we \nmade all major settings and you see how you can set up your common repository. Now you see how you can submit \nchanges to this repository and we can move on with next topics probably before moving on, I offer you just five \nminutes break for coffee and then we will move on with working with objects topic and managing data. So we \nfinished with the question of git integration and it's time for us to think about working with objects and working in \ngeneral with creature data model. So what you need to know about it is that the basis of all creation data model is a \nconfigurable item called object.  \n  \n  \nSpeaker 1\n \n You can easily create objects in your configuration and also when you do customization using no code tools. For \nexample when you operate with application hub or with section wizard, system is capable to create number of \nobjects automatically. But in order to study it, you need to make some examples manually. You understand it better \nif you do it like by hands. And creature has a lot of out of the box existing objects, so maybe a couple of hundreds \nhere. And a lot of them represent simple entities called lookups. Let's go to lookups and let's see what they are. So \ngo to lookups. For example, we can sort. Okay, I prefer to look here. Select fields to display, switch to list view and it \nwas originally entire view, so I plan to look at list view.  \n  \n  \nSpeaker 1\n \n And also I need created on column just to make more comfortable sort in this list so I can sort by name. For \nexample, we can find a lookup called address types. So it's something simple, address types, you can open it and we \nwill see set of records representing types of addresses in creature, like home address, business address, actual or \nlingo address, and so on. We have six records here. Such records are physically saved in the database and we can \ngo to the database using our database management tool. Make new query, select everything from address type. You \ncan see we have the same name of the database table working with it. So now you can see the same set of \naddresses stored in the database. And some additional options are also supported here. So what do you need to \nknow?  \n  \n  \nSpeaker 1\n \n Is any object created in creation will finally turn into a table in database. So now we talk about general objects \nwithout special chemistry, without any tricks. So in general, if you create an object, it will have its own database \nrepresentation as a table. One object means one table. Sometimes participants ask me, participants are asking me \nabout is it possible to have one object for many tables at a time? So normally not. It's not designed to be so. If you \nneed to operate many tables and to get some aggregated data from them, you may use database views and then \nyou will use a specially designed object for it. But in general, when you create in one object and everything as usual \nsystem will create and manage one database table. We can find this database table by name and this is address \ntype.  \n  \n  \nSpeaker 1\n \n Let me find this one. So you can see table structure, all the columns, you can see it's key field, you can see primary \ndisplayed text field and some others. We have a lot of base product lookups. You can see how many we have if you \ngo to view in your lookup section, view summaries set up summaries, display number of records and now you see \nwe have 120 lookups, an out of the box studio product. If you work with more complicated solutions like sales, \nservice or marketing, you will have even more lookups. And also we can easily create our own lookups and we will \nneed them for our future settings. Lookups are generally used at the contents of data when you have a lookup \ncolumn and you need to select some values from it.  \n  \n  \nSpeaker 1\n \n So building more complex solutions usually starts from making your lookups and that's why we will do some. Now I \nplan to do some changes in my package and it will be necessary for my future solution in classic UI. So this will be \njust an example for you and I will show you how to create new object from scratch. And business sense of it will be \nsome lookup for our future section that we will design. So let's imagine in future we plan to make a new section to \nkeep some reality data, information about houses and apartments for sale and for rental. And obviously we need \nsome lookups for them. For example, we will keep realty records and we need to know information about type with \nrealty. So it will be lookup.  \n  \n  \nSpeaker 1\n \n We can call it real to type and I will show you how to create it from scratch. So select our package add object when \nyou create new object, it means you are creating new entity in our system. New database table will be created. \nWorking with replacing object will be covered a bit later. So now let's make new object. When creating new object, \nwe can provide some properties for it. First of all we should take care about its code. As you can see, system tries to \navoid duplicates and that's why it generates some unique name for our object. Of course it's not good name. We \nwould like to make its name by our own. We still have to use prefix because we did not reject to do or to work with \nprefixes.  \n  \n  \nSpeaker 1\n \n And we will have this prefix USR and then we can provide code for our new object. It will be real t type. And also I \nplan to make two different solutions, one for classic UI, another for freedom UI. So for classic UI I will have a suffix \nclassic. So let it be reality type classic. I do not want to share any lookups between two different solutions, so that's \nwhy I will make it fully separated and that's why all the lookups for classic part will be fully separated from lookups \nfrom freedom UI part. So this is our code. Code is very important. It must be made only of latin characters and \nunderscore. And sometimes you may also use digits but I recommend you to use only latin characters and it must \nstart from character. And code will be used to create database table.  \n  \n  \nSpeaker 1\n \n So system is capable to make set of theories to the database like create table, alter table and add columns and so \non. So we only provide some necessary properties and system will take care about database storage itself. This is \nalso very important so code will turn into database table title it could be anything and even more it can be translated \ninto other languages. Currently in my environment there are two active languages so I can easily set values here. But \nin total we have probably 21 supported language. Let me quickly check. This is very interesting. CIS culture is a \nspecial object that keeps information about languages supported for translation into our system and it looks like we \nhave now 23 languages. Sorry, let's see the most recently added ones. So wow.  \n  \n  \nSpeaker 1\n \n It's interesting because previously I only remember added Japanese at the beginning of 2024 and now we have \nsome very recently added languages. Hungarian language was added recently. So greetings to Hungary and croatian \nlanguage looks like Hr, it's probably Croatian Hr. Hr yes, it's croatian language. So you see more and more, let's say \nnational languages are added here and now we have 23 supported languages in our system. Some of them may be \ndisabled, others are active and if you want to use a certain language, you should activate it. The reason of activation \nand deactivation is saving system resources. If you do not need all 23 languages, it's better to keep most all of them \nas inactive. System will save system resources for not necessary languages. So that's why we have active option \nand you can manage active or inactive language in settings.  \n   \nSpeaker 1\n  \n Then you can find languages part and now you can see 23 languages and you can activate language if necessary by \nopening it, setting active and then save. But please. So this is a warning for you. If you activate the language, it will \nconsume system resources and usually activation takes some time, maybe up to five minutes. So please be very \ncareful with it. Now you see recently added croatian language and hungarian language. So this is something that is \ninteresting and it's new for this version. Okay, let's go back. So if support of multiple languages is important for you, I \nrecommend you to enable necessary languages and each time you develop some items, instantly provide \ncorresponding translations for your items. In this case, it will be hard to forget and hard to miss something that must \nbe translated into other languages.  \n  \n  \nSpeaker 1\n \n We have also an alternative way to support multiple languages with the translation section, but I do not recommend \nyou to work with it because when you initially go to translation section, it will take probably 15 minutes of time for \ninitial preparation, so it's not so comfortable. And I think it's much easier to provide correct translations just while \nyou develop it. So in my case it will be realty type classic UI. It will be my title if I want. I can support translations into \nother languages if necessary for my project. So code and title, they are important. Parentheses object is not \nmandatory, but it's also very important, especially if you make lookups. Inheritance helps us to get standard \nstructure for objects, especially if we need some typical use of our object in our future.  \n  \n  \nSpeaker 1\n \n We plan to use reality type classic as a lookup so we can inherit structure for our object from some base objects. \nThat can be helpful. In our case, the most commonly used Bayes object is base entity. It helps to inherit key field, \nhistorical columns and some behavior setting, some event handling that is necessary to operate in some lists and \nsome cases. So base entities like common parent item for all creation objects, but also we have base lookup. Base \nlookup is used specially when you need to create new lookups, and that's why such two most commonly used items \nare displayed at the top and all others are shown in alphabetic order. So base entity and base lookup, the most \nrequested, the most frequently used, are shown at the top. Okay, I need base lookup for this.  \n  \n  \nSpeaker 1\n \n I have to confirm my change, and once I do this now you see I have new inherited columns list. I have eight inherited \ncolumns. The most interesting is probably id as a key field. Its data type is unique identifier. You already saw \nexamples of such unique identifiers in many creation tables. So such a hexadecimal big bar, big line of code is \nexample of a grid globally unique identifier. Physically it's saved as a 16 bytes integer. So such data needs 16 bytes \nin memory to be saved. But it's very common for creature. So all creature objects are based on unique identifier key \nfields usually named as id. Also we have name as a text as it used as a primary displayed column name is \nmandatory. You can see required. Yes, the data type is text 250, which is very typical.  \n  \n  \nSpeaker 1\n \n And you should know that creature uses Unicode strings anywhere. So every text column you will find in creation is \nbased on Unicode text. It means you can simply save any national characters there. Any kind of arabic letters, \nchinese letters, or even emoji can be saved into such text fields. So Unicode is supported. Also, we have so called \nhistorical columns created on the date of creation, which is date time date of creation of the record and created by. \nThis is a reference to a contact. So this is a lookup column pointing to a contact of user who created the record \nmodified on or performed last. So the time when last modification of the record was performed and modified by is \ncolumn representing who what user contact performed modification.  \n   \nSpeaker 1\n  \n So we have description name and description are business columns, all others are system columns and process \nlisteners is an integer column for a very rare cases when record level event handling is used in business processes. \nSo what do you need to know? Inheriting from base lookup gets access and we get structure. So we inherit structure \nof system columns. The most important columns are id as a key column and name is primary displayed column and \nthey are important to work with lookups. Also you can find in main object that some inherited properties are shown \nhere id property which means key field. So this is not perfect title of the property. It should be named key field and id \nis used as a key field and displayed value is also not a perfect title. Previously it was called primary displayed value.  \n  \n  \nSpeaker 1\n \n So the main text column which is shown in drop down list of lookups. So name will be used for this purpose but you \ncan change if you want nor any other special properties. We have some event handling made for this and inherited \nfrom parent one. We will study event handling a bit later. So what you need to know now when you do inheritance \nfrom Bayes lookup you automatically receive legacy of all columns that are intended to be used inside of lookups \nand usually it's enough. So usually you can create just code title inherit from base lookup and then save and publish \nand your object is ready. In my case I want to present and show you some additional features that could be \ninteresting and also examples of how you can make your own custom columns in creation.  \n  \n  \nSpeaker 1\n \n So we'll go to columns list and obviously we can add our own columns to the object. We have plenty of options for \ndifferent database types, a lot of text options. The minimum supported is text 50 characters, then we have 200 \n5500. We have unlimited length. We have rich text which supports fonts, colors and styles like italic, underscore and \nso on. We have special texts for phone numbers, for web links, emails and URL's and we have encrypted strings to \nkeep passwords safely which will be not displayed as a text, to be always displayed as a set of stars and very rarely \nused CRC type which physically is an integer and it's used for checks. So it's like checksum column. I never faced a \nworking example how we can actually use it.  \n  \n  \nSpeaker 1\n \n So just something like bizarre thing that possibly you will never use in your practice. So number is obviously integer \nand several types of decimals. Currency is also decimal with two digits after decimal point. The difference from \nstandard decimal is that standard decimal is 18 digits and two after decimal point. Currency is 20 digits and two \nafter decimal point. So 20 in total, two after decimal point. That's why we have so different. But you see we can \nchoose any necessary precision for your solutions. Okay, date and time quite of those we have date time value \nseparately, date separately, time some other types like boolean like unique identifiers like image link or color \nselection column file can be saved and lookups. Lookups are mainly so they are generally used and based on unique \nidentifiers. But lookups also keep referential integrity.  \n  \n  \nSpeaker 1\n \n So when you have a lookup column system creates foreign key for you. So it keeps referential integrity which will not \nallow you to save into lookup column any value which is not faced in your lookup table. So we can try to make some \nexamples like make a new text column named code title can be code text is 250. And as example I can show you \nhow default values can work for us, especially how we can make autonumbering. So we can search for default value \nand we can set autonumber option. We can say prefix like cd which stands for code and number of digits would be \ntwo. First one will be cd zero one, cd zero two and up to CD 99 and then we will have the next number. So x CD 100 \nand so on.  \n  \n  \nSpeaker 1\n \n This is auto numbering which works pretty well and it doesn't require any programming. So this is a no code tool to \nmake automatic numbering in your lines when you, when user import adds data. That's how we can do this and if \nnecessary can use custom indexing. You can also make your own custom indexes and even complex indexes. \nUnique indexes can be added, but generally creature takes care about indexing by its own quite well. It automatically \ncreates indexes for lookup columns. So you probably will not face any significant performance issues in objects and \ndata tables made by creation. So once we finished setup of our object, we have to save it. Save means saving only \nmetadata. So inner data format to keep information about our configurable item.  \n  \n  \nSpeaker 1\n \n This type of item is also inherited from schema, but the word scheme I think it's hard to understand. So let's say \nconfigurable item which will be closer to its meaning and I think it's easier for you. So when we saved this item, it will \nbe shown in our package contents. Now you can see database update required so object can be applied to the \ndatabase but it's not performed each time you save, only when you click publish. Publish means apply changes to \ncurrent application server and current database. In our case, apply changes means create new table with \ncorresponding set of columns and provide necessary column settings and everything should be well done at the \ndatabase to make our object fully operational. If we do not publish our object, we will not be able to use this object in \nour system.  \n  \n  \nSpeaker 1\n \n So publish is necessary to make our object operational and useful for us. Let's do this. Some years ago publish took \na lot of time. It may took up to 1 minute of time. Now this operation is well automated and now we have no serious \nreasons to separate save and publish operation. Also when you click publish, save is performed automatically. So \nyou may just use publish button. Forget about Save button and it will work for you because publish now works really \nfast. Okay, so when we finished with it we can close our page. By the way, this page is called object editor or object \ndesigner and now we have our object status is okay. So you see it's applied to the database level. We still have a sys \nwhich means not everything was saved on disk.  \n  \n  \nSpeaker 1\n \n But at this moment our object is already working so it can be used for us and we can try to use it in our environment. \nLet me show you how we can use it. We can go to studio workplace find lookups section. As you can see we have \n120 existing lookups. One of the recent one. You can see something strange with no name here, but if we sort by \ndate of creation. So this is list of registered lookups and we can see what recent registerings were done like white \nlist of pages, opening restrictions, access to tag guarantees, or something like base product functionality recently \nadded here. So we can register our object that we created as lookup in order to make it easily managed. And we can \nlook at it and we can even fill it with some data.  \n  \n  \nSpeaker 1\n \n So when we click new lookup, it doesn't create new table. New lookup means register existing object as lookup. Our \nobject is called realty type. We can name customers, we can provide custom title of this lookup. So name is separate \nfrom object as you can see, and we can save it. So this operation is just for registering object as lookup. Once we did \nit, we can click open content and that's how we can manage our lookup contents. The easiest way to manage object \ndata is to register any object as a lookup. Then you will be able to see its contents. So we can create new record \nhere and we can manually type some data like first one realty type which we work with. It will be probably house. So \nit's mean private house. We can save it.  \n  \n  \nSpeaker 1\n \n This is so called editable list and we are not using any separate edit page for it. So we just manage data directly in \nthis list. Another one will be apartment. As you can see, numbering works for us automatically. The no code tool. \nThanks developers for this. You can also use description if you want, but I'm not really needed. So we can also add \nmore reality types. What else? It could be office space, it could be parking lot. And something very unusual like a \ncastle. It's just an example. And I also wanted to show you some additional behavior here with the numbering. So \nlet's imagine you try to create new one, but then no data or something else. So you think that, oh, you don't want to \ncreate it. You see the code was generated, but then you just cancel.  \n  \n  \nSpeaker 1\n \n Okay, if you create one more, you see the number goes on, you cancel. If you create one more, you see numbering is \ngoing on and it will be not rolled back. The reason of why it performs. So when it generates system does not know \nare you planning to save it or not. So it generates new number, keeps currently created number somewhere in the \ndatabase, in so called sequence in the database structure. And then we have no option to roll it back. Because while \nwe are inputting such data, someone else also may create new records. So if system is expected to be used by \nthousands of users, we have no option to easily roll back such numbers. But it's not a big problem. Even if you have \nsome gaps and missing numbers, it's not a problem with it.  \n  \n  \nSpeaker 1\n \n So you see that numbering is generated using database tools. This is extremely reliable and physically sequence \ndatabase object is used for it. Bas is telling us and about appointment and we watch the video. Thank you Bas. See \nyou tomorrow. Thank you for your message. Any other questions please? You're welcome at any time. So now you \nunderstand, we input some data here. This data is physically saved in our realm database. Let me show it for you \nexample. Select id name from USR realty type classic. This is the name of my object. I expect to see the name the \nsame name of my data table. Now you can see the same five records with some ids are created. I can also search \nfor like created on and also USR code. So here are my columns. You can see you can select all of the data.  \n  \n  \nSpeaker 1\n \n So this is physical data saved in my database. It's pretty simple. And of course, when you develop your big project, \nyou will not pay so much attention to every single lookup. You will do it in much more automated way. But this is an \nexample which will let you understand and will make you better feeling of what object is and how it works. That's \nwhy we discuss it in so technical details. If you need to change something in your object, you can open it for editing. \nYou can find corresponding property and change it easily. If necessary, you can customize your columns. You may \nrename some columns. You can add new columns. For existing columns you can slightly change their properties. It \nwill be not possible to change the column code, but you can change column title if you want.  \n  \n  \nSpeaker 1\n \n So for inherited columns, there are some limitations on what is available for you for change. So generally speaking \nyou can manage your object, you can change them, then you can save and publish. That's how it will be applied in \nbig scale solutions. You will create tens of different lookups and creation is capable to help you with it with \nautomation of lookup creation, using application hub tools or using section wizard for classic UI. So it will be not so \nboring each time when you create new object. This is technical right now just because we need some practice, we \nneed to look at object structure. So okay, we have our object ready. We have some data here, so how we can share it \nwith our team members or how we can deliver it to test environment.  \n  \n  \nSpeaker 1\n \n Of course we need to download packages to file system if we want to submit everything to repository. But here is \nvery frequent mistake that a lot of beginners usually do. This will be about data part, so saving anything to disk here \nis okay. And in our package we only have test dummy process and we have our object. If we submit these contents \nto version control repository, it will mean that our package only includes structure. So it will be including this object \nand some tests process. If other developers install our changes, they will not see contents of lookups and they will \nnot see registered object as a lookup. So this is a very typical mistake of beginners.  \n   \nSpeaker 1\n  \n They see their environment, they fill in with data, they think that everything looks okay and then they just export their \npackage install for example in test environment and then they realize they miss lookup contents and they also miss \nlookup registering data. So we have technically only two options how we can transport such data. The most \nrecommended option is item called Data item is a special part of the package and second option which is also \nsupported but it's harder to use is SQL script. SQL script can be used for any kind of data changes or any kind of SQL \noperations that you want to run. When your package is installed on some target environment is much harder to \nmanage and in general it's much more powerful and much more dangerous.  \n  \n  \nSpeaker 1\n \n So you should only use SQL script if you have enough SQL experience and I always recommend you to check your \ncode with someone else who also have experience in SQL just to make sure you will not do anything dangerous in \nyour database. SQL script can be easily used for permanent serious damage for your system, so your creation will \nnot work anymore if you do intentionally some delete of system data. So two options to transport data items or SQL \nscripts. I recommend you to use data items as much as possible and when you create data item this tool actually is \na snapshot of some data records taken from your source developer environment. Obviously we need to specify what \nsource object will be used for it.  \n  \n  \nSpeaker 1\n \n In my case, I should select for my object code which I recently used to register my lookup in lookup section. \nUnfortunately, you have to remember this code name by heart and this object is called lookup. This lookup object \nincludes a list of registered objects in our lookup section and in general we have 121 records here. 121 records and \neach single record in the lookups section represents registering of the object as lookup. We need it because \nprobably we would like to be able to go to this lookup section to find corresponding object to open its contents on \ntest environment just to check out that we have everything correctly here. So this registering was done at developer \nenvironment and it makes sense to transport it as part of our solution to test and production. Such data is saved in a \nsystem object named lookup.  \n  \n  \nSpeaker 1\n \n That's why we go and search for the object named lookup. We can find it by name, by code and we can also provide \nsome unique name here. For example, we can add something useful, reality type, classic, something like this. I do it \njust to make it unique and good looking and self explanatory. So it will be easy to understand why we created this \ndata item. As you can see, system offered a set of columns, but we can also add a couple of more columns here. I'm \ninterested in date of creation created on column here in the list of saved columns, data item is a snapshot of data, \nso we will take this data from our source database and save it as part of our package.  \n  \n  \nSpeaker 1\n \n Bound data tabs represent exact records which will be saved into our data item so we can manually add such \nrecords. In total we have 121 records but most of them are base product contents so we do not need to transport \nbase product stuff. We expect it to be present at our target place target database. So we do not need all of them. We \ncan use our created on date column to sort and easily find without user filters. You can also use filters, but I prefer to \nmake it as easy as possible. So we can sort by descending order by date of creation all registered lookups and that's \nhow we can easily find our reality types single record this is registering of the reality type object as a lookup.  \n  \n  \nSpeaker 1\n \n We can only select this data select button and that's how we saved only one data row in this data object. Then we \njust click save and our snapshot of data which includes only one data row will be saved into our package. Now you \nsee data item is created. This is only registering of an object that's not the contents. So for the contents of the \nobject when we open it, we have five records here. This is our contents. We need to make one more data item. This \nis quite easy. Add again data and we select an object. We have to specify object code. Here are things developers \nbecause code is unique USR realty type classic, you can easily find it.  \n  \n  \nSpeaker 1\n \n I prefer to use codes because they are always unique and system keeps this uniqueness and titles sometimes are a \nbit ambitious, especially if you use non english language. So you may struggle with finding some corresponding title \nand I prefer to use codes. Okay, we can provide some common suffix just to make sure what we are doing here. If \nnecessary we can add more columns, but the most important of course is bound data. And we can select all the \nrecords. All the records we have from source environment will be saved into our package as a special part, as a data \nitem and we save it. And now our data item becomes part of our package. Now you see stars here which means our \nitems are not fully saved. So we have to perform download packages to file system action in order to save our stuff.  \n  \n  \nSpeaker 1\n \n No need to use camera styler because it will be recorded. I will stop it. Okay, so changes were saved on disk, stars \ndisappeared. We can find all the items in our package here, including data part. Now you see some data records are \nsaved as a JSON data values and you can see translations into all our supported 23 languages here. So data items \nalso include translations and it fully says on disk everything is correct. And now we have object and couple of data \nitems representing registering of object as lookup and representing contents our object.  \n  \n  \nSpeaker 1\n \n So now our solution is full and if we export this package as Zip archive then if we import it somewhere on test \nenvironment to work and user will be able to find our new lookup in lookup section, user will be able to find its \ncontents and user will see such data. Maybe it's time to practice with git and let's make one more commitment. Now \nyou can see a lot of changes, 80 different changes. Mainly this is our data parts. Also we have new object here and \nphysically it means big set of files and folders used inside of package folder. So we can name something like realty \ntype classic lookup added. This is the sense of our change. We perform git commit to our local repository. Then we \ndo git pull and push to submit our changes to the common repository.  \n  \n  \nSpeaker 1\n \n Great, everything is done now common repository also felt such changes. You see three commits and you can see \ncomment history if interesting. Now you can see all the changes here. So it will be easy to check previous values, \ncurrent values and so on. So what I need to tell you about data items. In addition, what you know now, data items \ncan be used not only for inserts, they are also used for updates. Let me explain what I'm talking about. So originally \nwe have five records for our data and let's imagine we already exported our change. We imported it somewhere to \ntest and production and everything is okay. So our solution was successfully delivered to test and production and \nour users are happy. But sometimes later probably analysts or business owners decided to do some changes.  \n  \n  \nSpeaker 1\n \n For example, they decided to rename office space into just office. And we can do this only at developer environment \nbecause we need to share all such changes to all other environments including test and production. So such \nchanges should be started from developer environment first and then someone decided to rename parking lot into \njust parking. So now we have some changes made at developer environment and we need to populate them to all \nother systems. Data items can help us with it, but you need to know how to properly set it up. Let's open this data \nitem for the contents of our lookup. You can also sort by date of modification to see the most recently updated \nitems first. So we can see this one, the most recent. Let's open it now I will tell you a bit more about how system \noperates with data.  \n \n \n  \nSpeaker 1\n \n So let's imagine such data items are so such data items is being loaded at target environment. System is capable to \nprevent duplicates and it uses key columns to detect presence of the record which is being processed right now. As \nyou can see we have key for id. So id column is set as key and when system will load within the procedure of loading \nyour package, it will take first row, it will take this id and then it will check do we have such data record at our target \ndatabase or not? If not, yeah, it's okay, it will just insert all the columns that we have for this data record and it's not a \nbig deal, not a problem.  \n  \n  \nSpeaker 1\n \n But if record exists system is capable to update existing record and here you will face something which is a bit tricky \nand you may fail for the first time. And you will have to look carefully at the settings of your columns because \nsystem will perform update only for columns marked with the first update option and by default as you can see no \nupdates are asked here. So when record will be found system will just skip it because no columns should be \nupdated. So if you changed names right here and you know that such data was already traveled somewhere and you \nneed to update it. So you go to your correspond data item, you make sure you set forced update option for columns \nthat you need to update.  \n  \n  \nSpeaker 1\n \n Also you may check some other columns if you're not sure and you also want to update so you know the source of \ntruth is your developer environment. So if something else was changed at your target system then you have to \nupdate it anyway. So first update is not set by default. If you expect to perform update operation you should take \ncare about it and once you do this your update will work. Also I need to tell you that in our real database now we \nhave office and parking and if you carefully look here you will see that we still have old values here. This is a proof of \nthis concept, what I told you previously. That data item is a snapshot of your database contents taken at a certain \nmoment of time. So when this data item was created we had older values here.  \n  \n  \nSpeaker 1\n \n That's why we can see it here. If you want to actualize it, to make it actual and read it from your database, you can \njust click actualize data. When you do, this system will refresh data item contents and now you see office and \nparking exactly as in our database. Now let's check column settings correct. And now we can save it. So if you \ncreate your data item like this and if you took care about the first update option, then you changed some source data \nrecords. In your source database you should actualize data, make sure your data records are fully properly updated \nand then just save it in your package. Of course your date and time of the item will be changed.  \n  \n  \nSpeaker 1\n \n And next time when you export your package and import in some target environment because of change the date of \nmodification, this item will be processed and corresponding updates will be performed. The same happens with our \nsystems shared with a git. So we need to save everything in file system. Then we will commit our changes to our \ncommon repository and it will be an example of how we can do some updates in data and populate it on other \nenvironments. Now you can see we have only small part of changes here. So we have only some data changes but \nthey are present. So it will be lookup data updates. Or maybe it's better to say realty type data updates. Okay, so we \ncan commit it, pull and push and that's how our changes will be correctly saved. And it's about updates.  \n  \n  \nSpeaker 1\n \n You may ask me about the delete scenario, what happens if in our source database we finally realize that castle will \nbe never used and should be deleted from developer environment and for test and production. Unfortunately data \nitems cannot help us to delete such data. So if you really need to remove your data from target environments, you \nhave the only way for this. This is SQL script. So as example I will show you how we can write such script. We can \nuse search by name or by id and we can create this SQL script in our package. Add SQL script, you should be really \nextremely careful with it. We'll provide its name like Usr Del Castle realty type.  \n  \n  \nSpeaker 1\n \n Of course in real life you probably never use this, but this is some like a training example for you so you can create \nSQL scripts for some specific needs. Installation type determines the way the moment of time when your script will \nbe executed in the scope of package loading procedure. Before package is at the very beginning. After package \nmeans after new tables will be created and processed. After schema data, it's after package data was loaded and \nuninstall app is the very rare case when you will need to run some scripts when your application is removed from the \nsystem. So whether it be at the very end after schema data. We're not using backward compatibility because there \nare so strict conditions. So it makes your SQL scripts almost useless and backward compatible with just an \ninformational property. So we can just keep it off.  \n  \n  \nSpeaker 1\n \n So I will write some script like delete from USR realty type classic. This is our name of the object and then where \nname equals something like this. So this is an example of a script which intentionally removes some data and this \nscript will remove nothing if no data found. This is easy example. I do not use id and I'm using this free name just to \nmake it simple and easy to understand. Such scripts are dangerous so you should be very careful when doing such \nthings. You can validate it, you can check okay, no problems. You can save such script and also which is interesting. \nYou can even run such scripts on your environment. As you can see status needs to be installed in database means \nthat this script was not executed at this database.  \n  \n  \nSpeaker 1\n \n So if we run it now, you can go to actions in write part here, then install, which means run SQL script, you can do it \ncarefully and if script finishes with an error it still will have status and also you will see its properties and last error \nmessage text will show you last error which happened with running the script. In my case it was successful, so my \nscript executed with no errors. And now we can check our lookup columns, lookup contents. Now you see Castle \ndisappeared, so it was physically removed from our source database. And also when this script will go to our \npackage and will be executed on some target environments, also the script will remove necessary records from our \ntarget environments.  \n  \n  \nSpeaker 1\n \n You should be careful because if someone already started to use such data that you plan to remove, you will have \nsome cascade problems with it. So you will have referential integrity exceptions. You will need to look at connected \ndata and ideally you should think of it in your script, you should process such scenarios and you should think of what \nto do with connected data entities. And also the script is not saved on disk, so if I will click download packages to \nthe file system, I will have everything saved on disk. Our session comes to an end today and it looks like we have no \nenough time to work with a complex example of virtual objects. And I will show it a bit later, but today I plan to make \ncouple of more preparational steps for us.  \n  \n  \nSpeaker 1\n \n So now we saved everything on disk and later we will start with the building of our new applications and we will need \nsome base product parts which are very common to be used. I'm talking about contacts and accounts and also \nneed some additional tools. So my plan is at the end of today's session to show you how you can add some \nnecessary frequently used marketplace add ons that will really help us to operate in future. Here my example with \nthe lookup is almost done, and also when we removed some data from the lookup, you see our snapshot still keeps \nthis castle. So this castle is no longer present in our database and it makes sense to actualize data now. You see, I \nremoved it even though if I do not remove it, my item was not changed, so it's not correct.  \n  \n  \nSpeaker 1\n \n I think that if I keep some data here which is not present in real database, this is mistake, so I should avoid such \nmistakes. I should actualize data, not to keep any non existent records in my contents of the package. So actualized \ndata saved it. Now everything is consistent. So my castle fully disappeared from my conscience here and we can \nalso save it again to disk. So my plan for today's session and is to show you how to install some necessary \nmarketplace add ons into your environment. We will need it later so I have opportunity to show you. Let's go to \nsettings, then go to application hub. This is a special part of managing our system with so called applications. I will \ndiscuss and explain what application is tomorrow.  \n  \n  \nSpeaker 1\n \n Currently we will use this application hub only for inserts so only to add some useful items into our environment. So \nadd new application marketplace powered so we can find a lot of application there. And also we have some base \nproduct tools made by creation. Now I need customer 360 because it enables contacts and accounts section in my \nsystem. So simply speaking, when you install customer 360 you will have new sections in your system. You will have \naccounts and contacts designed in freedom UI. This is very useful, very commonly used. Almost any project \nimplementation on creature uses context and accounts, so we will definitely need it out of the box stuff of our studio \nsystem does not include this. I will explain why a bit later when we talk about composable apps. So let's install \ncustomer 360.  \n  \n  \nSpeaker 1\n \n There is a high degree of integration and seamless connection between my local website and marketplace dot \ncreation.com. So I just click install. You see some automation works. It asks me to confirm. Okay, no worries, \nconfirm one more confirmation about app that I plan to install anyway. Confirm. Let it be. So it will take just several \nseconds, possibly up to 30 seconds to install this app and as a result expect to see accounts and contacts sections \nadded to my system. They will be displayed in Freedom UI. So you will see the first Freedom UI page at our sessions \ntoday and main reason why I do this is I need contacts and accounts in my future. Examples when you added \nsomething to your app it makes sense to download installation logs. This includes a lot of technical information, but \nsometimes it could be really helpful.  \n  \n  \nSpeaker 1\n \n And this installation logs can be kept for some time on your disk just for future reference. Because even in case of \nsuccessful installation, sometimes you may face situations where you see something that you do not expect and \nworking with such logs can be efficient to check it out and to see some technical details about your installation. At \nleast we can see how much time it took. So 1437 till 1510 it looks like 33 seconds. So it took only 33 seconds to \ninstall this app. And all the technical steps that were done here are listed. So if interested you can see and find no \nwarnings, no errors. You can see even some SQL scripts were installed. And also I just forgot to say that SQL script \nis database dependent. So when I created my own script.  \n  \n  \nSpeaker 1\n \n It was only for let me show you properties here. It only for Microsoft SQL type of the database if you need a similar \nscript for postgres, you have to create another SQL script. That's why base creature product if you will filter by SQL \nscript only. It always includes three types of SQL scripts for each business action that we need. For example, let me \nscroll down and find any kind of procedures like create omniscient tables for postgres, separately for Oracle, \nseparately for Microsoft SQL. Three different SQL syntaxes are supported. And that's why if your solution is intended \nto be supporting several different database engines, you have to make several scripts for it. But mainly when you \ndevelop your projects, you will know for sure target database type. So you only you can focus only on corresponding \nfocus corresponding target database type.  \n  \n  \nSpeaker 1\n \n It could be most frequently it could be Microsoft SQL or postgres. If you expect to deploy your solution in creature \ncloud, it's highly likely that you will have PostgreSQL in the cloud condition. So it makes sense to use the same type \nof the database for your own local development. But it's not mandatory. If you develop on Microsoft SQL and then \ndeploy your solution on postgres, it will also work if you support all necessary database dependent settings like \nnecessary scripts. Also for postgres, not only for Microsoft SQL. Main part of configuration is not database specific. \nSo when you develop an object, it will normally work in any type of supported databases. Okay, it was just a \ndistraction. So let's go back to our logs. Now you see it took only 33 seconds to install. It's interesting to see results.  \n  \n  \nSpeaker 1\n \n Probably we will need to reload main page just to suppress any kind of browser cache issues that possibly can \nappear. So now we can see a bit more workplaces. Originally we had only one studio. Now we have all apps \nworkplace studio and we have new one which is called customer 360. We have context Freedom UI section here you \ncan easily check if the section is Freedom UI or not because only Freedom UI section offer you, they offers you. So \nto shrink list columns easily in classic UI you cannot do this. So let's go for example into lookup section. You can't do \nthis. You only can shrink columns by going to set up summaries, no, to set up columns that field to display. And \nthat's how you can do such shrink manually. In freedom UI you can do it easily.  \n  \n  \nSpeaker 1\n \n So that's how you can easily detect which type of UI you are working with. But also you can remember position of \nbuttons. In freedom UI, managing buttons are usually the right part and fonts are different. The style of the list is a \nbit different functionality of buttons in list and you can see you can hide and freeze buttons, freeze columns in lists. \nSo freedom UI is much more rich with UI capabilities and it's considered as a future of creature. And classic UI is \nnow considered as a legacy which has a lot of implementations. So probably thousands or even tens of thousands \ndifferent solutions are currently running all over the world in classic UI. And so creature supports both types of Ui so \nfar. This is example of a classic UI, sorry, freedom Ui list.  \n  \n  \nSpeaker 1\n \n You can open edit page, you will see page reach of controls with oh no, no. This is a classic UI stuff. So this is still \nexample of it's not a glitch, it's kind of behavior connected with a cache and server side. So we have to log out. We \nwill need to log in. Trying to use my name. What's happened with my saved users? Yeah, supervisor okay, I want to \nuse this. Okay probably developers changed some behavior and login page which now made a bit harder to use \nsaved passwords in browser. Okay, so I logged in again. Contact section. Now you will see edit page with no any \ncache issue. This is example of a freedom UI edit page. You still see some freedom UI capture like possibility to \nshrink lists more rich components with colors, customizations and so on.  \n  \n  \nSpeaker 1\n \n But so we will study how to build such pages. You will know and if some one of you already passed our \ncustomization course, you already know how to do such things. So this is example of a freedom UI user interface \naccounts also shown as a list and edit page. So contacts represent physical persons with names, emails, addresses \nand so on. Accounts represent companies like Samsung, like Tesla, like others. So some companies that you may \nwork with and you need to keep information about them in your system. This was example of customer 360 installed \ninto our app. Into our system. I have a couple more tools to be installed. Let me quickly show it for you. It would be \nend of today's session, so not so hard.  \n   \nSpeaker 1\n  \n It's still a bit strange that application hub is empty here, let me reload this page because something unusual. Yes, \nnow it's better. Now you see customer 360 is already installed and we will study what an application is, how it works. \nNow we will just install a couple more apps from our marketplace because we will need them in future examples. So \nmarketplace powered. Here I need tool named data binding. I will search by the word bind easily finding this data \nbinding tool. Select it, click install button. Thanks for automation. Here confirm and install. This installation will take \na bit longer because it will need to compile my environment during this installation process. So this takes a bit \nlonger but it's still okay. And I need this data binding tool because it helps to create data items easily.  \n  \n  \nSpeaker 1\n \n So data items can be automated and you can create them with several clicks. And it's easier than to make everything \nmanually. So data binding tool takes some time to install. It's pretty awesome. Old tool, I think it exists maybe for five \nyears and it's designed for an older version of creature and it also has a lot of support in classic UI. But now mainly \nwe needed to support our creating of data items and this help. So this tool helps to save our time and to reduce \nboring part of the work. You can download installation log to see how long it took to load this. Let's check it out. Our \nsession is almost over, so now you see 20 415, then 20 516. It looks like 1 minute and 1 second and like 61 seconds \ntook to install this solution. No errors, no.  \n  \n  \nSpeaker 1\n \n Any warnings here? Perfect. Everything is okay. Everything is okay. So our app was installed and one more final thing \nso we can reward this. And you see data binding item, one more item which I want to install from Marketplace is a \nspecial tool called maintenance tools for creation maintenance. This maintenance tools was made by partner which \npreviously was named Siso. You probably saw its icon, now it's named neo technologies from Switzerland, and they \nuse just a standard creature API. And this tool has two major functions, clear redis cache. But you don't really need it \noften. But the most important and useful feature is restart the app restart application. Unfortunately, creature \ndoesn't have this function out of the box available in user interface. And partners from Neo technologies decided to \nfix this issue and they just made a UI button to do this.  \n  \n  \nSpeaker 1\n \n So this app simply adds a couple of buttons into our creation user interface to make it easy to restart the app or to \nclear redis cache. I will use this restart app, we will need it, we cannot avoid it unfortunately. And in our examples \nyou will see it. So you see 2708 started, 20 718 finished. So it took only 10 seconds for installation. You probably will \nask me about why am I so obsessed with installation time? This is important because this is 10 seconds of \ndowntime for your system. If you do some kind of installations on your production, your end users will not be able to \noperate with your system during these installation procedures. So we still have non zero downtime.  \n  \n  \nSpeaker 1\n \n And this is important to track how long it took for creation to install something, especially if you do it in the middle of \nworking hours. So my installation was successful. We can also go back again to application hub. Now you see one \nmore app, maintenance tools and I can show you where this maintenance tools can be found. It will be into our \nsettings page. Physically it's called system designer, but now developers decided just to call it settings. At the end of \nthis page you will see new buttons. Originally we had only advanced settings, but also now we have clear redis and \nrestart application. We will need restart application later and unfortunately some, let's say study like learning \nexamples will require this restart application action and we cannot avoid it. In some cases you will see it later and \ntoday's session is over.  \n  \n  \nSpeaker 1\n \n Thank you for your time. Today we moved forward with working with objects. We discussed how to build data items, \nhow to operate with lookups. We also worked with Git. And tomorrow I plan to show you one more example with \ndatabase view and we will move on with building user interface. I plan to focus on Freedom UI, mainly on freedom UI \nand if we will have some significant demand on Quest AQI stuff. For example, you expect to work or support existing \nQuest AQI solutions. We will have to take time also to discuss some classic UI tools, but mainly my focus will be on \nFreedom UI and programming inside of it. So thank you for your time. Today our session is over in case if you have \nany questions, feel free to ask.  \n  \n  \nSpeaker 1\n \n Now your homework, as usual, is to watch this video to represent all the steps or produce all the steps for today's \nsession. Working with your package, creating new lookup, new object, register it as lookup and practice with data \nitems. So this will be your homework and tomorrow we will continue doing more complicated things. Thank you. \nThank you for your time. Questions, paddy? Yeah, yeah, I do. Just with the apps installed. Are they installed then \nsimilar to how you would set up a packet on the backend? Oh yes. Physically they represent as packages. If you \nreload our configuration section, you will see that we have a couple of more packages here. And for example, the \npackage named GLB data binding represents our data binding tool and maintenance tools. Let me find it. It's called \nCSL maintenance tools.  \n  \n  \nSpeaker 1\n \n Is changes customizations in our settings page to enable couple of buttons. Yeah. And customer 360 c 3300 okay. \nCRT customers, it's surprisingly low. I need a bit more. Okay, let's search just for 360. Yeah. Customer 360 represents \nthree packages in one archive. So we will study how application works, how it is created and what is inside. \nTomorrow you will see that application finally keeps some packages behind it and when we load such applications, \nphysically will load one or several packages. Here you see customers 360. It includes several packages. So that's \nhow it works. And physically application is a bit artificial thing. Physically we operate with packages. So anyway you \ncan see everything which was customized here as a package and the package contents inside of configuration \nsection. Thanks. Thank you. Any other questions please? Yes basil, thank you.  \n  \n  \nSpeaker 1\n \n When I am going to advanced setting, the configuration page doesn't work, it just reload. It's because you're probably \nusing Windows home. If you windows home you have to close previous page. In this case, configuration page will be \nworking normally. Yeah. Let me, I have no options how to make it better, unfortunately. Probably you can consider \nyou can upgrade to Pro Windows Pro version. In this case you will have no such issue. Sure. This is kind of limitation \nconnected with WebSocket and this is something that makes home different from pro and it's not so comfortable. I \nagree. Thank you. Thank you. Okay, and it looks like Tushar had a question. Yes tushar please.  \n  \n  \nSpeaker 1\n \n My question is like if we have a new lookup, like if we have two, three more lookups and we want how we can then \nupdate it and like a system designer, do we have to create the data file again? Or we can update in the existing data \nfile which you already showed. So probably you are talking about new data records added to existing lookups table, \nam I right? No. Like if you suppose if total number of lookups are 121 right now, if we add like five new lookups, then \nhow we can bind those? Oh, if you have five new lookups, you have finally to create ten new data items or maybe \nless than ten because one data item for lookups can include many records for registering.  \n  \n  \nSpeaker 1\n \n So the minimum amount of data items in your case will be six, one for five lookup records and five others for each \nseparate data contents of your lookups. So simply speaking, any lookup should include data item for registering of \nthe lookup and data item for the contents of the lookup. In this case it will be the most comfortable for your end \nusers because they will always find all your lookups in production and lookups section and they will be able to open \nit to see their contents normally and data items guarantee such transport of records. Okay, thanks. Thank you \nTashar. And that's all for today. If you will have more questions. I understand that probably questions will appear \nlater when you try to practice. So you may use my email. Please send messages. I will try to find time to answer you.  \n  \n  \nSpeaker 1\n \n So our tomorrow session will be as usual and we will continue working with objects and we will start to work with \nuser interface programming. Thank you very much for your time. See you tomorrow. Bye. Good luck. See you \ntomorrow. Bye. Thank you. Tomorrow. Thank you. Bye.  \n \n  \n  \nSpeaker 1\n \n So today session number three of our development on creation platform guided learning. So we started \ndevelopment questions. We already set up our environment. We did some simple changes there. We practiced with \nobjects and with data items. I just forgot to note that you need some additional permissions and when you place \nyour environment, your app into some protected folders like Cub or C program files or somewhere in users. So it \nmeans that such folders are protected. In this case you may need some special permissions. I already did it \nsomewhere here, so let me show you what special permissions you may need. No, not here. Let me find probably \nthis one. Yes. So this is important.  \n  \n  \nSpeaker 1\n \n If you experience some problems with your app and if you start to get error messages about some files are not \ncannot be written or you have some file system access issues, especially you can face it during calculation, you can \ncreate separate setting and you can find your app folder Terrasoft web folder and add special role IIs underscore I \nusers and you should provide modified permission for this role for all of your application folder Javasoft web folder \nthis will grant unlimited file system access to create your application. So you will not have troubles with saving files. \nYou will not have troubles with application errors about some file system issues. In case if you will find errors like we \nhad with Bazel, that system tries to save some data somewhere and fails. You can also make sure that such \npermission is granted.  \n  \n  \nSpeaker 1\n \n So iis I users it's a local role which includes set of automatically created users made by creature. Sorry, made by IIS. \nWhen you create your application pool system makes automatic creation of application pool identity and such \nidentity. Actually it's medically generated user. I can show you something in my c users. You see I have a lot of site \nautomatically generated users created previously, so I probably should remove most of them. But this is something \nthat you need to know. That system runs under such privilege. If you have local administrator privilege, you can also \nlook at your task manager and you can see who exactly runs w three WP process. In my case this is some user \nwhich I can't see unless I will start something with my local administrative privilege.  \n  \n  \nSpeaker 1\n \n But currently my regular user has no such privilege because of corporate restrictions which I have with my \nenvironment. So let's move on. So this is something that may help you with troubleshooting of your access issues of \nyour application. Now let's move on with next topic. So I just wanted to show you some interesting thing with virtual \nobjects and with connecting objects to a database view because previously we worked only with regular normal \nobjects when you created it makes the same database table in your real database. So we added some data. Now \nyou see the same data records physically, but you can create very interesting situation when object can be \nconnected with something in database not created by creation application.  \n  \n  \nSpeaker 1\n \n For example we can make our own view in database, so we can use some SQL scripting and then we can make an \nobject named the same as this view and we will have the same columns in our object the same as available in view. \nAnd finally it will show you some interesting trick, how you can use creation objects to read data from sources not \ncreated by creation system. For example, such sources may be created by developer or can be used for integration \npurpose to connect with other systems. So let me show you some simple example which implements this idea. And \nfirst of all I need to tell you something about business. So here we have a contacts section. Contacts were installed \nhere because we recently, yesterday we installed customer 360 app and we used application hub for this.  \n   \n Speaker 1\n \n Here we used application hub and we installed it from marketplace. So this customer 360 was installed from \ncreation marketplace. Customer 360 encodes contacts and accounts. So now we have contacts section and what I \nwant to show you is that contact by default already has birth date column and also contact entity has integer age \ncolumn representing current age which is recalculated every day automatically according to birth date and current \ndate. Let's make a bit more examples with age calculation so we can click on supervisor. We can provide some birth \ndate somewhere in like this where it be save close. So now you can see we have provided some birth date and we \nhave automatically recalculated age. So this is age in years and everything looks good. But let's imagine we have \nsome unusual task to calculate age of a contact but not in years.  \n  \n  \nSpeaker 1\n \n We want to calculate it in days. So just to see how many days certain person lived and what is its current age in \ndays. We can do it easily at the database level. So let me show you, I already have some examples how we can do \nthis. So I will do it quick and I will provide you necessary scripts for this SQL view. So let me show you how we can \ndo this example. So first of all I will show you an example which makes corresponding calculation like this. And this \nis Microsoft SQL server query which selects id name, birth date. And we use some SQL functions like date default \nfunction to make some kind of calculation here. Now we do a calculation of a difference between birth date and get \ndate.  \n  \n  \nSpeaker 1\n \n So actually it's better to say difference between get date which represents current date and birth date. And it makes \na difference in days and shows us some integer value. So if we run such query we will see list of our contacts and \nwe will see age in days. This is a very simple example. It is made specialist, so simple so you easily understand it in \nreal life. Such approach like making your own selections from the database can be much more complicated. Using \nsome aggregations, using joins, using subqueries, using having operators, using group by and a lot of other things. \nSo you can do it unlimited complex if necessary. My example shows you that you can do some queries, you can use \nsome functions from SQL, you can do the same in postgres.  \n  \n  \nSpeaker 1\n \n And this is example of how we can do some special selection from the database which is not normally available if \nyou want to use just only creation tools. So creation supports three types of databases. It doesn't support some \nspecific database dependent features like date, d function. And also we have not so much of flexibility building \nqueries in our creation. So as we have flexibility to build queries directly from SQL. So now you can see we have an \nexample of such query. So what else we do? Now I will show you how we can make a database view based on this \nquery. We can use SQL script and of course I could run this SQL script directly at my SQL Server management \nstudio. But my plan is to make it transportable to other solutions, to other environments.  \n  \n  \nSpeaker 1\n \n So I will share example of a script for creating Vue for SQL version and some of you are running postgres. For \nexample you may run postgres at cloud instances like demo websites or maybe trial websites. They are usually \nbased on cloud, on postgres. So this is example of postgres for the same stuff. Okay, so these such scripts of \ncourse obviously are database dependent. Now I plan to use my SQL version but I will not run it directly in this editor. \nI know it will work for me, but I can show you how we can make a SQL script in our package. So let's go to \nconfiguration our system, then settings, then advanced settings. That's how we go to advanced settings part. Or we \ncan also go here by typing the URL of our website zero dev.  \n   \nSpeaker 1\n  \n That's how we go to configuration section, find our package that we decided to use. Add SQL script I can name my \nSQL script whatever I want. For example USR, create contact age, days view, something like this. It could be \nanything. When we create this script, when we start the script in a process of package load, it could before package \nbecause at the very beginning of the package load procedure, no backward compatibility just apply and I have my \nscript here in the clipboard. So this script creates or modifies database view with a certain name. This name should \nstart with USR. Then you can do whatever you want and you can name it. But there are some conventions agreed \nwith developers and if you make a view it makes sense to name it vw.  \n  \n  \nSpeaker 1\n \n Just to make clear that your object is not a simple table, you plan to make a view. So this view name should be the \nsame as our future object that we will create. That's why this view has such a strange name. This view will work as \nselect statement, selecting set of columns and as you can see I have to use aliases for columns with USR prefix \nbecause of requirements. When we design our object in creation configuration it asks us, not forces us to use USR \nfor column prefixes. Yes here so you can see we select id name, birth date which includes day, month and year and \ndate diff as an integer value which will represent age in days. So this simple view will return four columns for us and \nwe can register so we can set it up as a SQL script.  \n  \n  \nSpeaker 1\n \n You can save this SQL script. Obviously if you work with postgres database you should use postgres version for this. \nWhen you create SQL script you can decide what type of database you are focusing. So close it and we can also run \nthis script. So of course I could run it in my SQL server management studio. But here this is example of how we can \nrun SQL script from your configuration section. Okay I'm trying to install it means run this script. Now if it has some \nerrors we can go to properties find last error message text so we can see what went wrong here. In my case \neverything looks good so nothing special. I already have my view and I can check this view presence running \nsomething like this. Select something so select everything from and here is my name of the view.  \n  \n  \nSpeaker 1\n \n So if I select successfully. Yes, now it looks like my view is present. It has four columns and my database level part \nis ready. So I have database item as a view which returns some data if I select it. If something is not clear, if \nsomething you do not fully understand why I'm doing this. Please don't be shy, ask questions, I will be happy to \nanswer you. And now this database part is ready but now we have to join it with creation. In creation we can create \nan object and we can provide the same code for the object as our database view name. Here I will also paste it for \nyou. Don't forget we can also make some title, something like contact age and dates, something like this and the \nmost important property here.  \n  \n  \nSpeaker 1\n \n So now I will show you and explain some of behavior settings we must set up. Represents structure of database \nview this is very important property which tells creature that system should not try to create corresponding table or \nfind existing table. If we create an object with represent structure of database on it means developer took care about \ndatabase part themselves. So everything is already okay at the database. So creature will just not interfere with the \ndatabase to not try to create a table or modify existing table. So creature simply doesn't know what is in database \nfor you already corresponding object. But when you will try to use this object, for example, ask creation to select \ndata from it.  \n  \n  \nSpeaker 1\n \n It will try to do it and treat it as a table with a set of columns and columns information will be provided in this object, \nso it will try to use it as a regular object, but it will not try to modify its structure the database. This helps us to make \nanything at the database level, including views or self handmade tables. Or in some cases we can use like \nmaterialized views in oracle or indexed views in Microsoft SQL. So you can use anything that can be used for \nselection from the database and turning on this option represents structure of database view makes this trick \npossible. So when we design our object we will not use parent object because we do not need any kind of \ninheritance here.  \n  \n  \nSpeaker 1\n \n All we have to do is set of columns which matches with set of columns of a real database view. First column is \nUSRiD and the type is unique identifier. So we have to represent it. Type is unique identifier, column code is Usrid and \ntitle could be just id. Okay, this column is done. Next one is uSR name text 250 you can name name and it's okay. \nThird one is USR birth date which is a date only birth date. And the way the last one is integer USR age days the most \ninteresting column for us, integer USR age days age in days okay, so we got it. The last change that we have to do is \nthe only required property for an object is the Id. I don't like this title. I would like to see here key column or key field.  \n  \n  \nSpeaker 1\n \n So our key column is id column we created especially it has Usrid code and it has id title. So this is the most \nimportant part and that's all we can save and publish our object. As you remember, we can just click publish \nbecause it performs save anyway. And luckily for us, publishing such object which is represented as a database view \ndoes not make any changes in the database. So it will be really quick. Such publishing will be faster than creating \nnew table and saving publishing. Regular object so we made an object with a special property, special behavior and \nour object is ready now so we can start to use it. We can go to the lookups and as you already remember, lookups is \nthe easiest way to see what is inside your object. So we can register our object age in days.  \n  \n  \nSpeaker 1\n \n We can register this object as a lookup. By the way, you probably noticed we have a new button here. Sorry for this \nalignment, but it's not a big deal. This button appeared as a result of data binding tool and it helps us to automate \ncreating of data items and for many different scenarios. In our case, we need data item for register object as a \nlookup. If I click bind lookup here, I ask system to automatically create data item for me. I need only to select target \npackage and system will do automatic creation of data item without my manual action. So I can see what happened \nhere, what actually was done. You see that this data item was created automatically contact agent days so we can \nclose it. It is saved into our package now and it's okay, let's open created object now.  \n  \n  \nSpeaker 1\n \n You can see we have name column, we have birthday and we have age in date. So you can see this calculation \nworks. There are some side effects because of this is editable list and our object is not inherited from base entity. \nWe have some side effects caused by it like this. So you see it's not working fully as expected. But when we reload \ndata, at least reading data is working right, working correctly. So you see that calculation of contact in days, age of \ncontact in days is performed well. And you see this calculation works well in real life. You may use this approach to \nperform some long lasting calculations like turnover finance calculations, like some debt calculations, or other \nthings that usually take time. So you may do such calculations at the database level with kind of views and the \nsubqueries.  \n  \n  \nSpeaker 1\n \n Then you can create an object representing your data structure and with the same name and same columns set. And \nif you mark this object as represent structure database view system will not modify data tables. It will trust you and \nit will try to read data from sources that you specify. So it will try to read data from the table or view with the same \nname as your code. So this trick can be also useful. And I would like you to see how we can connect such object to \nexisting contacts section. In order to make connections between objects, we must use lookup columns. In our case, \nit's harder to make a lookup column from contacts to our new entity. So it's better to use our new entity and then use \nreverse joins to connect with contacts.  \n  \n  \nSpeaker 1\n \n Now I will show you how we can do this. But first of all we need to modify our SQL script. Let's go to our SQL script \nand add one more column. We can add one more column. It will be id as contact id. So I will use new not to contact \nUSR contact id. Yeah, so this will be one more column and I plan to use this column as a basis for my future lookup \ncolumn. Of course I need to run this query. This will be very quick. We can check out the database that our new \ncolumn appeared. Great. It's important to name it exactly as is USR contact id. Okay then we will modify our object. \nSo our script is okay, let's go to modify our object we can add lookup column named contact not contact id.  \n  \n  \nSpeaker 1\n \n We will name it USR contact title can be contact and there are some architectural peculiarities. When we have a \ncode something then on database system works with code plus id suffix. So I named my column in the object level \nUSR contact and system will work with USR contact id when it reads data from the physical database. This happens \nnot only for this object, it happens for all objects with lookups. So let me show you like account. For example \naccount column account entity has an industry lookup column and at the database level we have industry id. It has \ntype at the object and at the database we have type id, city id, region id and other lookups saved in the database. So \nwhen we have a USR contact column, system will work and search for USR contact id at the database.  \n  \n  \nSpeaker 1\n \n We have to specify lookup property. It will be a contact obviously it looks like that's it. We do not need anything else. \nLet's save and publish. Click publish, make saving and publishing. Now you will see how we can use this object so \nwe can add connected. Probably we need to reload the page because of some client side issues. Caching issues \nmaybe prevent us from working normally. So our main entity is contact. Now I plan to join my contact age object as \na joint entity using reverse joins. Let me show you how we can do this. Add columns related objects. Now I have to \nfind contact age in days object and then I will use a age in days. For example, it will be maximum value no matter \nwhich one I will use. I can even use first record value.  \n  \n  \nSpeaker 1\n \n So let it be just maximum value for one contact. We always have just one data row in our connected entity. So \nmaximum will work for us. And I can just name this column age in days. No need to use any additional filters, save it. \nSo now you can see that age in days was successfully joined to existing contacts section. We did not customize \nanything with contacts at all. We used our own artificial objects. We made an artificial lookup column and that's how \nwe are able to connect to different entities and display corresponding data. I hope this is interesting example for \nyou. You probably have your own experience with use of column settings, related column settings. Some of you \nprobably visited our customization course provided by my colleagues.  \n  \n  \nSpeaker 1\n \n So possibly this is not very difficult for you, and if you have more questions about it, just tell me. So it was an \nexample of how you can use additional tricks with objects and to connect it using database view. There are some \nother properties here like virtual connected to the portal, wave update and so on. So I only have to tell you a couple \nof words about virtual. So virtual means that object will be not connected to database at all. Virtual objects are \nusually created for the purpose of providing some template structure and then to be inherited or for the purpose of \nmanaging data without actual read from the database operations inside of object model.  \n  \n  \nSpeaker 1\n \n If we will search in our configuration for objects, search for something with the name base, we'll find a lot of objects \nlike base address, base entity, base folder and so on. I will open base lookup as example. You will see this object is \nvirtual, so it has no its own table. So you see object based lookup. But if you go to the database, you will not find the \ndatabase table named base lookup. So you see we have some base value lookup, something very suspicious and \ninteresting and okay, I will look at it later. But base lookup is not found here because this is a base object which is \nvirtual. And mainly it exists only to provide inheritance. We have set of columns, business columns, we have \ninherited system columns.  \n  \n  \nSpeaker 1\n \n And when we create new object inherited from base lookup, it will be a true new real object. But you will inherit a lot \nof properties and events, settings and behavior from base lookup. And that's how this object can be really useful \nbecause you can. So base architects can program lookups behavior. Once in base lookup object, then you create \nyour own lookups inherited from it. We did it actually. And that's how you can use one template for many parts of \nfunctionality. And it's quite efficient. So we have a lot of base objects, most of them are virtual. I only interested with \nthis strange example, base value lookup. So let's search base value lookup. Base lookup this value, it's very strange \nwhy we have table for it? Oh, because it's not virtual. Someone needs this object and someone keeps some data into \nit. Probably. It's interesting.  \n  \n  \nSpeaker 1\n \n Let's check. I never faced it previously. Base value lookup let's see what. So it's empty. Translations are also empty. \nOkay, no problems. Everything is okay. So that's it about lookups, about objects. And I only wanted to show you one \nmore thing, final thing about objects. And let's look at our reality type classic object as example. So I wanted to tell \nyou about support of translations. So for you already know that creation supports translation of user interface. You \nalready found we have a languages section, we have set of active languages, so you can easily switch your \nenvironment into other languages. In your profile you can switch languages if necessary. But what you probably do \nnot know so far is that creation does not only support your UI language change, it also supports translation of some \ndata records.  \n  \n  \nSpeaker 1\n \n And inside of the objects you can specify what columns will support this translation and what columns will not \nsupport translation. By default, name and description text columns are turned on with this option, localizable text. It \nmeans that if you want, you can save translations of name and description column into other languages. And this \ntranslation was already done at base product lookups. So if we read some data from some standard lookup like \naccount type, you will see six standard records in English. But if you will look further and find out that we have a \ntranslation tables for it, they usually have cis prefix, then main entity name, and then LC suffix, you will see \ntranslations for such data into other languages. So you can order by cis culture, you will see translations into other \nlanguages. Here is russian translation.  \n  \n  \nSpeaker 1\n \n Here is probably what else, I don't know what is the language here? This seems to be italian, maybe Portugal and so \non. Probably, I don't know, it's hard for me to guess. I can join and so decode such cultures. Okay, let's do this. Not so \ndifficult, syscall type. So this is our localizable, we can join sysculture and we will read data link from cis culture and \nthen culture name as language. Okay, so now you will see corresponding language. So this one was Russian, this \none is Dutch language. So Netherland language, this is Portuguese, this is Spanish, Vietnam language, French, Italian \nand others recently added Hungarian language, Czech Republic, arabian right to left by the way, there is a right to left \nsupport. This is what Sweden probably Hebrew, Romanian, Japanese.  \n  \n  \nSpeaker 1\n \n So you can see translations of the same records that you get from your main table are saved into different \nlanguages and out of the box lookups. That is because name and description are supported with localizable text. \nYou can turn this option off if you don't like it or you can keep it on by default because it was inherited from base \nlookup. It was inherited and that's why we did not change it. So we also have possibility to save translations of name \nand description into this separate table. This separate table automatically is automatically created for our lookup \nand so if you enable at least one column it will be this separate table will be named CIs, then your object code, then \nLCZ. So in my case this information is empty. Sys usr realtor type lcz my table is empty, we have to type classic.  \n  \n  \nSpeaker 1\n \n Yes, you see my table is empty because I did not provide any translation. But once you will support several \nlanguages and if you want to keep your lookups translated into other languages so you can start to use it. And the \nbest way to transport and make such translation is to register one more user with another language and then log in \nat this user, go to lookups and when you will go to corresponding lookup then you will start to edit data. If you edit it \nwith other language, so you will provide translations and this translation will be saved properly into corresponding \ntables. I hope this is interesting enough so if you're interested and really need such translation support, creatio is \nready for this so you will not face any troubles. Okay, so finally we finished playing games with contacts with our \nage.  \n  \n  \nSpeaker 1\n \n Everything should be saved on disk. Of course we will remember now about our visual studio code and git client to \nshare our settings with our imagined team members. Now you see some items created so we can commit \nsomething like contact age view example added. This will be our comment for the commit that we do with these \nrecent changes. Okay, as you can see we did not forget about registering of this lookup as of this object as lookup in \nlookup section and made a data item with the help of data binding tool. Okay, we can submit everything to our local \ngit repository, then pull and push to global git repository. That's how we can share our settings with our other team \nmembers. Okay great.  \n  \n  \nSpeaker 1\n \n What else I wanted to show you before we proceed is example of delivery because it will be important I think that \nyou are interested how we can transport our solution for test and production. You remember version control. \nWorking with git with bunch of files is not so efficient when you want to transport your solution for test and \nproduction. This type of sharing with many files is good for developers and between developer environments in \norder to make delivery to your test and production. You can simply export your package into a file and then I will \nshow you some magic. Now you can see our file was saved here. This one is our file saved seconds ago. And this is \na zip file.  \n  \n  \nSpeaker 1\n \n Inside of it we can find Gz archive and inside of it we can find a single file with metadata saved here and it's not so \nreadable. And this is a transportable format for creation packages. Okay, so this is metadata of your package fully \nincluding all the package items, including all scripts, including processes, whatever we have and even more including \nfile system package contents from the files folder. Let me show you telescope configuration ekg dev classic. We \nhave some file content as a result of our configurations, so such files also will be saved inside of this zip archive. \nThen we can go. Recently I installed one more environment so it will be test environment d two test hello node test \nso we can run this test environment. Currently I am running my second creation environment on the same PC.  \n  \n  \nSpeaker 1\n \n It will take some ram, some cpu. You see my ram consumption is more than 11gb now, so I can start my second \nenvironment. I will use it as a test environment to check how delivery works and to also make sure that I have no any \ntroubles with changes with transition of my settings between environments. Sometimes it happens. Now I started to \nreceive this attempt when I attempt to login. Then it drops me again to the login page and on the second attempt I \nsuccessfully log in. So it happens quite often. But now I don't know how we can fix it. So okay we logged into our test \nenvironment. I can show you how we can load our changes from zip archive file. This is very easy. We go to settings. \nIt doesn't require any special skills. We only have to be administrators.  \n  \n  \nSpeaker 1\n \n So we have to be a member of a sysadmin. Let me show you system users. My supervisor user is a member of \nsystem administrators role. The only condition necessary for us to load packages and here is my application hub on \ntest environment and I can just install the application from file, select file from disk, go to downloads. This is my dev \nclassic package saved several minutes ago. Open it. Normally this loading procedure will finish successfully, but in \nsome cases you may face troubles here. You may face missing data items, you may face foreign key constraints and \nexceptions, some database exceptions. So in some cases you may face errors here. Anyway, you should look at \ninstallation log because it will give you enough technical details about how well our loading was performed. So we \nwill invest several seconds into looking at it.  \n  \n  \nSpeaker 1\n \n Let's see what happened. So 13 seconds we started no visible errors and 31 finished. It looks like maybe 18 seconds \nto install. Very good, very good. Okay, so you see some text, comments and details about installation of the package, \nbut now it's okay. So our package is already loaded. We can find it in configuration section of our test environment. \nBut this package will be not editable. So our package after loading we can find it here. Dev classic as you can see \nthis package is not editable because we loaded it from file. We intend to use it for test or production. So system \ndoes not expect that we will modify it. So when you load package from file it will be read only if you really need to \nmodify it.  \n  \n  \nSpeaker 1\n \n For some reasons you can do this by unlock for hotfix temporary thing that helps you to make temporary make your \npackage temporary editable. If you forget to lock it again, system will do it according to the special timeout which \ncan be found in system settings. Now you can see my package was loaded. You see status, no errors. It means all \nSQL scripts or objects were applied successfully. Now let's go to the lookups section of my test environment. As you \ncan see this lookup section doesn't have any column setup which I prefer to do. Okay, we can go back to list view \nand we can start to adjust it to easily find the corresponding new lookup records. Now you can see my realty types. I \nexpect to see four records here, so they were normally loaded. Everything is okay.  \n  \n  \nSpeaker 1\n \n Contact age in days as you can see according to my current data on test environment is calculated. Great. So it \nlooks like everything I did was normally loaded and we can use this environment for future checks. Now we can \ntemporarily disable it, but then later we will check our new environments. We will check our new application which \nwe plan to do right now. So you see that delivery is very easy. You can just export your solution to the file. If you have \nmany packages, you can export many packages. You can also do some tricks at the database. For example you can \nput several GZ files into one zip file if you want to make it faster to load.  \n  \n  \nSpeaker 1\n \n And today I plan to show you how to make a UI settings how to make new sections not with section wizard because \nit's classic UI, outdated stuff. I will show you how to make new sections, new bake applications made with \nautomations provided by application hub and Freedom UI. So we will focus mainly on Freedom UI. But before doing \nthis I need to explain you what is application hub and how it's intended to be used. So we go to settings, then we go \nto application hub section and open it. Special tab opens for you. And this is a place which is designed to manage \nyour freedom UI customization. And now we need to talk about new functional item of creation that is called \napplication. So I will try to explain you what application is and how you should understand it.  \n   \n Speaker 1\n \n Application appeared not so far ago, maybe just a couple of years, and packages were present for more than ten \nyears. So you see that application is generally relatively new to creation and previously we had only packages. So \napplication is a new logical type of items and usually one application means one or several packages. So application \nis a higher level logical setting and it may include so it must include at least one package. But sometimes it can \ninclude more than one package. As example, customer 360 app includes three packages. Only one of them will be \nlike current default package for saving of customizations. But now let's focus on the idea. So customer statistics is \nan app and it has three packages behind it. Application has its own properties like name, version, default page \ndescription, date of creation and so on.  \n  \n  \nSpeaker 1\n \n Also it has information about its developer. Terrasoft here means that it is a creation company. Terrasoft, as you \nremember from previous sessions is previous name of creature company and creature brand. So application has its \nown properties. Also application has color settings and application has icon. You can find data binding tool, but it's a \nbit artificial. Application just made for compatibility. Previously data binding tool. It was just a package and when we \nloaded it we have this GLB data binding package, we can see its contents and originally data binding tool was not \ndesigned as a freedom UI app. So all customizations we have here are based on classic UI tools. That's why we will \nnot see any pages, any special section data. We have just data items related to different parts of creation \napplication. But it's not actually sections.  \n  \n  \nSpeaker 1\n \n Such items are data items created for some purpose. Data models means objects. Business processes are like \nautomated business procedures implemented as diagrams. So code in creation. They are called business \nprocesses. No integrations and advanced settings show us all packages for this app or filtered by selected package. \nSo application is a higher level setting or entity which includes one or many packages. The reason why creatio \nneeded applications was caused by shift to so called composable apps approach. I will try to explain what it is. So \noriginally we had no any customizations at our studio environment, so it was just constructor only. Then we installed \nseveral apps like customers 360 like data binding. Also we installed maintenance tools and so on. If necessary we \ncan remove some of installed apps.  \n  \n  \nSpeaker 1\n \n The system will revert and go back into its original state which was before installation of such tools. So finally, end \nuser system may include only solutions, only applications that user decides to run. And that's why we can call this \nlogic composable app. It's very close. Composable apps, it's very close how you manage your software at your \nsmartphone. So you have platform, let's say Android or iOS, and then you install necessary apps that you use for \nsome certain purpose. If you don't like some app or if it starts to work, not normally, you can remove it easily. And \npreviously, maybe three or five years ago, it was not so easy to do in creature, because creature had out of the box \nfunctionality which cannot be removed from system. So old Kriacia systems included functionality that could not be \nremoved from it.  \n  \n  \nSpeaker 1\n \n So it was not fully composable approach. And we had just simply hard coded part of the system which also was \ncustomizable, but it was not removable from the system. Now developers decided to make constructor only and \nthen to install everything that you need on top of it. And that's why they needed applications, because sometimes \nfunctionality that you want to add includes more than one package. So developers needed applications because \nsome functions were designed as set of packages, not just one package. So application means set of packages \nwhich includes some certain business functionality. And applications can also be imported or exported. So when \nyou export an application, it physically saves set of packages on disk into one zip archive file. So here is a single zip \nfile. If you look inside, you will see set of packages Gz files.  \n  \n  \nSpeaker 1\n \n And this is pretty standard for creation. So you can use one zip file for many packages inside. It was possible even \nbefore applications appeared. So now developers just improved this idea and made a separate logical level code \napplication. Okay, how safe is creatio? Kind of after you install a package? Like is there a lot of artifacts that are kind \nof left behind or is everything cleaned up except for maybe database entries and stuff like that? You're asking a very \ninteresting question. For example, when you install it and then you decide to remove it, of course we have some \nitems in configuration like SQL scripts, which may do irrevertible change. So some changes in the database can \nhappen that you physically cannot revert.  \n  \n  \nSpeaker 1\n \n So ideally if you develop a very good app and then you remove it, you can take care for full recovery of your database \noriginal structure after your application was removed. And if really needed, you can create SQL scripts which will do \nthis. Recovery and installation type will be uninstall app. So uninstall app installation type is a special scenario when \nthe script will be started only in case when your package is deleted. So this is kind of recovery steps that you plan to \ndo at the database in order to make everything clean as it was before installation of your app. But in real life, not all \ndevelopers do this.  \n  \n  \nSpeaker 1\n \n So in real life when you remove your app, some traces may remain in the database and usually this is not critical for \napplication because logically such columns or some data leftovers will not be available to see easily unless you go \nto the SQL level, unless you start to make some special queries in order to find them. So in general, when you \nremove some app, it will be logically cleared so it will fully disappear from the system. You will not see anything but \nsome tiny minor database leftovers can be found the same as you have a smartphone. When you install some app, \nthen you remove this app, some application log files, some application technical things may still remain in your \nsmartphone. If you go into smartphone file system with the proper tools, you will probably find it.  \n  \n  \nSpeaker 1\n \n So in general, it was designed to make it easy to install some app and to remove some app. And ideally when app \nwas removed, no visible traces should remain. Beddy is it clear? Brilliant. Thanks million. Okay, great. Thank you for \nyour questions and I encourage all of you to ask any questions if something is not clear. So having such a dialogue \nin our sessions is much better than just a lecture. And I think lectures are boring. So speaking is better. Thank you \nfor asking questions. So let's move on. We need to do some practice, so to do some practical steps to understand it \nbetter. Of course our practice will include creating your app. Now I need to tell you about some, let's say business \nvalue.  \n  \n  \nSpeaker 1\n \n Our plan is to automate realty estate agency and we want to keep list of realty records in freedom UI application. We \nwill have a section for such list of realty records and we can use existing platform customization tools to make it as \nfast as possible, to make it quick and easy. So click new application. We have several different templates here. In my \ncase, probably the best option is records and business processes. For very unique scenarios. You can use custom \napp which will create an app and it will be empty. So you will have to create your own section inside. But if you create \nan app based on records and business processes template, it will start to create a section for you. Section is a data \nentity. So a big data entity which you can use inside your system.  \n  \n  \nSpeaker 1\n \n In our examples of sections are accounts or contacts and also we have set of system sections like lookups or users \nor system settings. So section in creature, it's like main big entity which usually has a lot of columns and usually has \nsome subordinate items called details. We will study it, you will see. And also if you're just more risky and you're \ninterested in AI tools, it's possible to make a section with the help of AI. And you need to explain in words what \nsection you plan to create, what colors should be there, what details you expect to see. But personally I do not like \nthis approach because if it makes it incorrectly, then you will spend more time to fix than to create from scratch. So \nthat's why I prefer to create from scratch. Okay, let's create new app.  \n  \n  \nSpeaker 1\n \n Let's change its color to something more like significant. And we can see, oh, we have some new icons here. So I \nplan to create a real tea section. So possibly I could find some icon representing a house or apartment. Okay, let it be \nlike this. So it will be icon for my new section. Name of the application, it's very important will be caption of our \nsection. It will be title of new created object. So it's important whether it be real t and advanced parameters. You can \nsee we can provide some application code. Code is also very important because this code will be used to create a \npackage, to create a main object, to create some corresponding settings related to object like page or list and page \nfor edits. So forum page we call it. And so this code is really important.  \n  \n  \nSpeaker 1\n \n You will not be able to easily change it later. So it's important to provide it correctly from the first time. Also it's \npossible to link so simply to create rhythm UI section based on existing object. But this option is really useful only in \ncase if you already have some created objects in your system. And usually it happens when you already have classic \nUI solution and you want to migrate into freedom UI. In my case I will create everything from scratch. I will not even \nuse my previously created lookup because I planned to use it for Quest SQL. So we have a separate package, \nseparate application and let's create it. Creating will take just several seconds because it will only add some \ntemplate stuff like main entity, page list and that's all. So my app now is called Realty.  \n  \n  \nSpeaker 1\n \n It has its main name, version, default page, some description, date of creation developer. This is a string named \ncustomer. If we change our system setting, named publisher to be possible to change developer of this package and \nthis app. Okay, no changes in app properties. We have pages part, we have list and form page, we have navigation \nand section. So it's registering of a realt section. We have main object realty, we have no business processes, no \nintegration so far and we have structure of our packages. Now I need to explain what is shown here. So our app now \nhas only one package. This package has certain properties and the most important is that this package has a \nalmost black colored folder icon which means this package is editable. Let's compare with other customer 360 now \nyou see gray colored icons.  \n  \n  \nSpeaker 1\n \n It means such packages are read only. If you want to customize something in customer 360 app system will not be \nable to save anything into such read only packages. So this will automatically create new package for you. And \nunfortunately automatically created package will certainly have an ugly name. I will show you this a bit later and I will \nshow you how you can manage efficiently packages for different apps and how you can connect it. In my case I try \nto keep it simple because I understand you are beginners, you want to make it work first and you do not want to go \ninto unnecessary complex things. So now we have one single app, we have one package for it and system helped us \ncreating main object, creating set of client modules representing page settings and some technical things for pages.  \n  \n  \nSpeaker 1\n \n And as you can see it created seven data items representing inserts into some system tables that are necessary to \nmake our application work normally as a section. Let me show you where we can see it. We can also run this app \nbut I prefer to work with main application window and in order to fight with any potential browser cache issues I \nreloaded it. Now we can go to studio and switch to my applications workplace or we can find all apps in all apps. We \nwill see all available sections including our reality section recently created this reality section now has no data. It is \nbased on main entity named realty and we can use edit page to add some data. In this edit page we only have name \ncolumn so no customization so far. Apartment in okay, let it be New Orleans.  \n  \n  \nSpeaker 1\n \n So this is just an example of a reality object that we plan to reality data that we plan to save. Such list and edit page \nwill be used to manually input data, to modify this data and to work with this data. Then of course we need to \ncustomize it to make more columns to make it more useful to work with. But let's make a break and then we will \ncontinue because it looks like I just forgot to have a five minutes break. So let's make a quick refresh and then we \nwill continue with customization of our new section. Now we continue to customize our section. So what we can do \nhere, there are several ways how we can make changes. I will show you which way I prefer the most. So when you go \nto a certain section, for example here is list page.  \n  \n  \nSpeaker 1\n \n Then you open edit page. You can also open edit page by clicking on this action, but it takes two clicks quite hard \nand we can just click on this hyperlink. Okay, now we have a so called form page or edit page. We can do \ncustomizations right from here with a small edit page button. It will open corresponding page editor if you have. So if \nyou already passed our customization course, you already know how to use this page editor. I will only show you \nsome quick settings here. So we will not go and reproduce the same customization course because I need this \nsection only as a on the as a basement for our next programming examples. So customization here and no, code \nsettings are not the top priority for us. We will do it just because we need it for future samples.  \n  \n  \nSpeaker 1\n \n So I will do it quite fast. Please confirm. Do any of you reproduce the same steps just during the session or you just \nwatch and plan to do your own practical steps separately? Watching videos so please type plus in our chat if you \nfollow me just during this section right now and do the same examples at your environment. In this case I will do \nsomething not so fast and please type minus in our chat which will mean for me that you are only watching and I \ncan do it quite quick. So not waiting for your response, some of you responded that you do practicing along with me. \nThank you Monica and Rakhi. But most of you just watch. Okay, I will not go too fast and I will show you and wait for \nyou to do the same.  \n  \n  \nSpeaker 1\n \n So my plan is to extend a bit our settings and make it more useful. When I select any column we can look at its \nproperties settings. We have some kind of object inspector for settings of a certain selected item. In my case here is \ntitle code, data format, some settings and here I would like to make it copyable. For some unknown reasons, \ndevelopers who made a template made name not copyable. But I think it's very good idea to easily create copies of \nexisting records and copy names as well. Okay, we can change any properties here, not so many. Okay, so what else \nour reality will have? Of course it will have price. So we can use number columns. As you can see we have set of \ncolumns from this list. Add new field set so we can add different data columns to our page.  \n  \n  \nSpeaker 1\n \n Simply drag and drop. You see several potential places to land our page. Our column I prefer to put it here nearby \nname. I can name it price. I can also specify the amount so maybe the currency of our price to make it more clear. \nSo let it be price USD if you want to translate it into other languages, you can also put translations here. Code is very \nimportant property and I also need to warn you, a lot of beginners have mistakes at their pages just because of \nmessing with codes. So please take it seriously. I recommend you to set up codes initially just when you design your \ncolumns and do not change it later. So let's set it responsibly. And as you can see, code is one of not so many \ncolumns where we have to confirm our change or reject the change.  \n  \n  \nSpeaker 1\n \n In our case, code will be something like USR because we need prefix for our new columns and technical things, so it \nrequires prefix. USR price USD will be our code and we confirm. Save this change. Okay, the data format will be \ndecimal, two digits, no description, maybe not required and okay, if you want you can make it required. So system \nwill not allow you to save zeros here. No need to make it read only, no need to hide, no need to make custom \nsettings for titles. But what we need here is element code. This is also technical part, but element code may be \nimportant if you plan to search for this column in its settings, like in technical parts in JavaScript and client module. \nSo if you plan to do any kind of programming, then having a good looking friendly code is important.  \n  \n  \nSpeaker 1\n \n It should be unique so we can name it the same as our own USR price USD and confirm. As you can see, \nconfirmation is provided for the most important properties and columns of our items. So element code seems to be \nimportant because we have this confirmation stuff. Okay, did it. So this is how we can make one more column. \nQuick, let's say another one. Any reality has area. I will do it a bit faster now. I think you already got main idea how to \ndo this. Decimal 200 and also at the end element code will be USR area and confirm. When we click save, our \nchanges will be applied to the object, to the page settings. So we will have our settings saved in our system. Let's do \na bit more drop down type. We need a lookup.  \n  \n  \nSpeaker 1\n \n We need type what is real t and I will use it based on drop down or lookup. Column drop down and lookup are very \nclose synonyms so it's almost the same. The title for our new lookup column will be type. Inner code will be USR, \ntype and confirm. But lookup is not present here. We do not want to use similar lookup reality type made for query \nCQI purpose. So I plan to make a fully separate solution and that's why we can make new lookup from scratch as \nyou can see system helps us with automation. We can create. We can ask system to create new lookup. It will be \nrealty type and code will be USR reality type.  \n  \n  \nSpeaker 1\n \n No classic UI words here so it will be our freedom usage reality type, title and code are necessary because system \nwill use it to create new lookup object inherited from base lookup. It will also register it as lookup in lookups section. \nIt will provide data items for this registering and the only missing part will be lookup contents. We will do it later. \nOkay, type is clear. One more thing that we will need in our section is offer type because some reality objects will be \noffered as for sale, others for rental. So we will have an offer type lookup to specify exact offer type. Is it sale or \nrental? I will call it offer type. This is a title code will be something like USR offer type and we confirm it.  \n  \n  \nSpeaker 1\n \n No lookup for this so we can create one from scratch realty offer type I will do some poses for some of you like \nMonica or macho or rakhi who confirmed that you do it just along with me. Okay, save it. And I also just was quite \nquick. Normally by default lookups will be shown as simple drop down list. But in case if you select something \ncomplex like big entity like contacts or accounts, it may be useful to use full scale selection window for the offer \ntype. We will have only two possible values like rental or sale. So that's why drop down will be perfect. We need to \nscroll down and set up element code here. Maybe we will not use USR. So you can just use any unique string here. \nSo offer type will be also quite unique.  \n  \n  \nSpeaker 1\n \n This is just to make it more, let's say friendly when we will work with code part. Okay, so what else? Maybe we can \njust practice with a single text column and it will be just a comment 250. Maybe it's enough for us. Okay, checked \neverything. Comment. Okay. And maybe one more example of a more complicated lookup with the selection from \nbig object. So let me show you one more drop down column. I will name this column manager. So it will be some \nmanager person who is responsible for managing data of this realty. Usrmanager will be our code lookup will be \nselecting from contact. And as a contact is a big entity, we may need some additional columns to be displayed, \nsome filters, sort order and so on. So big scale selection window will be good enough for this.  \n  \n  \nSpeaker 1\n \n Good, good option for this type of selection. And I can also make unique name here manager as a code. Okay, so I \nonly usually set four parameters, title code, we specify lookup and element code. Okay, for the very beginning this is \nenough. We have some required columns, some not required columns. Unfortunately we cannot use default value \nsetting here. So if you want to extend and make your solution more, let's say well customized, you will need to go to \nobjects anyway. So let's save our changes. Now. You will see what has been changed here. We can track what is \nhappening at application hub part, or we can go to our configuration section, reward it. Maybe we already see here. \nOkay, let's still reward. So you will see your changes in configuration section. Now this page editor will finish its work \nsoon.  \n  \n  \nSpeaker 1\n \n It takes time because system saves client module. It saves changes to object, it publishes objects, so it takes some \nsignificant time and that's why it takes a while. Okay, everything was saved. We can close this editor. You can check \nwhat's happening with our new package. You can see it here, or if you prefer to manage from application hub you \ncan find your reality application. You can see two pages here and you can see one object. So main object realty offer \ntype and type are created as a supporting lookup. Objects and advanced settings will show us all packages. Here we \nhave only one package and usually I prefer to look at it sorting by descending order of date of modification because \nusually you need to look at the most recent changes first.  \n  \n  \nSpeaker 1\n \n So you see that just from 20 minutes of our work we have a lot of items already created and including main entity, \nincluding some objects that are used for lookups. You can also check if you go to lookups section, you will see \nrecently registered lookups automatically. So system also made this registering as data items. So it's quite smart. \nAnd when you create lookups with the help of page editor, it will automatically create object for you. It will \nautomatically register this object as lookup and create corresponding data item. The only missing thing is contents \nfor this object. Any questions please? You're welcome. If you so if you have any questions, any notes, I'll be happy to \nhear. Now it's time for us to think about some lookups. Okay, offer type probably is not so difficult. We have only two \npotential offer types.  \n  \n  \nSpeaker 1\n \n The most commonly will be using sale offer type and another one will be rental. So we have only two offer types in \nour system and when we have data binding tool it will be extremely easy for us to save all data into our target \npackage. And that's IT system creates thanks to data binding tool it creates corresponding data item automatically, \nhelping us to save our time and do not perform some boring work. So here you can see all the records of our lookup \nwere saved as data item. This is very efficient. One more thing which I wanted to show you is how you can use some \ntools like export and import. Here you can see a lookup made for classic UI. I want to steal its data. Moreover I will \nsteal their ids. Let me show you what I'm planning to do.  \n  \n  \nSpeaker 1\n \n So let's do one more column display id. Column. I want to display it. I don't need description at all. Okay, save such \ncolumn settings. So we have four records here for our classic UI, just for the demo purpose. So you should not do \nthis constantly. But. Oh Andrea, no problem. You told me you had some issues with this performance. So if your \ncolleague is still here, we can try to find out the reason why it is slow. Thank you. Thank you Andrea. Ok, so I want to \nshow you a simple quick example how we can use standard tools for export and import of data. Export is very easy. \nWe can do export to excel, any creature list. It will create a file as xls six format and save it to your disk. Great.  \n  \n  \nSpeaker 1\n \n Then we go to another lookup realty tape for Freedom UI section. And just for demo purpose I will show you how we \ncan import this data from file. Data import target object is already selected. We need to select file for our import. We \nneed to match columns and provide such column settings. As you can see, we have very similar columns names in \nfile and in our creature data model. That's why it was already automatically matched. Now I need to look. I need to \nshow you what this file looks like. And here you can see this Excel file. So it has first row with column titles. All other \nrows are representing some data. Such files can be easily loaded into creature matching first column titles with \ncreation columns of objects and it will be one to one import.  \n  \n  \nSpeaker 1\n \n And if we import, we have to specify duplicate search rule. So what column will be used to check presence of data. \nOkay, we can do it very technical way and check by id. In real life, when you import data from excel, you may not have \nthis id. You will need to select some, let's say reliable enough columns which should be quite unique. In my case, id \nwill be the best option for making such checks. And now you can see import was fully done. We can reload this data. \nSo we imported four data rows from file into our rhythm Ui reality type object. We can also use data item data \nbinding, automatic creating of it and data was added successfully. Now you see bound data. All four records were \ncreated correctly and saved it to our target package. Great.  \n  \n  \nSpeaker 1\n \n Now we can do more steps with main object setting because I want to use some additional features available at \nobject model. Let's go to objects and I want to show you default values for our section. Unfortunately we cannot set \nit from page editor, so we can go to object editor. For example, for the manager we can set default value as a special \nsystem variable, current user contact. So if a person creates some reality record, it will be considered, this person \nwill be considered as the manager. Current user contact. Okay then by default. Oh no, it's okay. Everything is okay. \nNo errors. I just thought I have a mistake here. Okay, when we create new record, for example, we think that the most \ncommon, the most frequent scenario will be working with houses.  \n  \n  \nSpeaker 1\n \n So we can make default value for created reality records as a constant. And we can take constant from lookup to be \nhouse. So this will be our house. And when we create new record, this default setting will be done. If we had some \nnumbering we can also use auto number feature, but for reality I just did not use it so far. Offer type we can also set \nas constant. And let's imagine that the most frequent scenario will be sale. So houses for sale is our primary \nbusiness. That's why when we create new record we will have such default settings. And when we finished we can \nclick publish which will make save and publish. Now you may ask me why we do so many of customizations here. \nWe need it for our future examples. And now it's over.  \n  \n  \nSpeaker 1\n \n So we made our section and we can check how it works. Going to our realty section or going to my applications \nrealty and opening its page, you see previous data. We have some price for department, some area, maybe it's in \nsquare feet. So that's why we have such data. It will be an apartment for sale and some default contact. Okay, so \nwhat happens when we create new record new, you see, default value is set for type for offer, type for manager, \nsome settings, test, comment and we can save it. So having default values really helps us to work with it. Oh, takes \ntime. Probably something happened. Let's check. As you can see, browser console is full of some debug messages. \nBut I think in our case it's not so very critical. So let's try to reload data and check. Yeah, it was saved normally.  \n \n \n  \nSpeaker 1\n \n House in Seattle was saved normally. Okay, we have some kind of basement for our future study. And now I need to \ntell you something that you will consider as boring. So we need to go deeper. Okay, a couple of words for list part \nbefore we go deeper. List pages also can be customized so we can go to edit it. I just found this edit page button \nand list page also can be customized. We can hide unnecessary columns, we can display columns that we need. For \nexample, we need, okay, we already have name, we need price, type, offer type, maybe date of creation here and area \nin the same order such columns will be displayed. And that's it. If necessary, can also use some coloring stuff. You \ncan try to make some customization with setup, lining colors, spacing and so on.  \n  \n  \nSpeaker 1\n \n But now I try to keep it simple, everything as is by default. So I only have some set of columns set by default. Reload \nthis page so you will see default column settings for me. Okay, great. Looks very good. If we copy some data, you \nwill see that almost all columns are copied and that's it. So we can easily manage this. So what we have to do now, \nthis is customization level, doesn't require any programming. And of course you probably would like to make much \nmore significant and more, let's say technical things on this client side and the page level. I plan to explain how \ncreation made this user interface and how we can make changes in it using programming. And first of all I need to \nexplain you how client modules are designed and in order to check it out.  \n  \n  \nSpeaker 1\n \n So let's select our package, select only client modules and for example, let's try to open form page. If you click on the \nform page directly on its title, you will see page editor, not a program code. You can find program code part of it. If \nyou click on this source code, don't save source code will be opened. Then we have to close form page because \nhaving separate editors for the same item opened simultaneously, it's not a good idea. You can accidentally save in \none of the editors and you will lose changes made in another. So it's better to keep only one part at a time, only page \neditor part or on the code part. Now you see quite strange JavaScript code which is really hard to understand what it \nis. And also I can show you how you can open the same code quickly.  \n  \n  \nSpeaker 1\n \n You can go to write part. This is three dots button called actions. And then you can open source code directly \nwithout opening page editor. So this is some kind of code. And now I need to explain you what we are looking at and \nto explain you some concepts used at creature platform. So the language for this code is JavaScript. But as you may \nguess, this code represents more like settings than executable stuff necessary to build this page. And before we go \nin deeper, I need to explain that creation client side is fully dynamic and generated in runtime. So if you will inspect \nany part of the client side page, it will show you some pieces of HTML.  \n  \n  \nSpeaker 1\n \n You see a lot of divs, a lot of some layout settings, a lot of classes, and also you will see plenty of Ng names here \nstanding for angular. So in Freedom UI, its undercover framework which helps us to build and display components is \nangular. So if you have some angular knowledge and experience, you will find it easy to make your own new \ncomponents if you need it for your solution. I prefer to use as much as possible for base product standard \ncomponents because creating new components usually take significantly longer without clear, let's say profitability \nfor end customer. So now you see big complex structure of HTML. It's really hard to make it from scratch and luckily \ncreation is capable to build such pages itself using some settings about how page should be built.  \n  \n  \nSpeaker 1\n \n So this is result of work of big number of JavaScript files and such. JavaScript files consume information about \ncontrols, about settings, about what they have to build. And thanks to base product architects, we do not need to \ntype or develop such code ourselves. So creature pages are made dynamically, in this case with the help of angular \nframework and using some page settings. Okay then I need to explain you one more thing about structures and \nabout JavaScript code inside of creation. So as you can see, creatio user site user pages client module client part is \nbuilt by big number of JavaScript files, so we can try to find how many files are used there. So opening any page, go \nto sources, start to investigate structure of sources.  \n  \n  \nSpeaker 1\n \n Here you will see plenty of files and what is really frightening, then you will see a lot of configuration items here. So \nprobably several hundreds, maybe up to 1000. And it's important for you to understand that client side of creature \nconsists of big number of relatively small pieces of code. So quite big number of JavaScript sources. And if anyone \nfrom you has any experience with JavaScript sources and JavaScript apps, of course obviously you understand how \ncomplex to keep this structure to manage it. And of course developers of creation also felt this difficulty and they \ndecided to use some world class standards to manage JavaScript application. In order to make it efficient, \ndevelopers decided to use special concept AMD concept let me try to find you some articles at academy for this. \nLet's search for AMD.  \n  \n  \nSpeaker 1\n \n We'll find some articles Academy AMD modules module overview yes probably this one is good article explaining \nthis, but also this concept can be found at some common sources like Wikipedia. So AMD stands for asynchronous \nmodule definition. So this is an idea of splitting of all your JavaScript application into parts code modules and make \nsuch modules capable to be loaded separately from other modules and asynchronously. And let's that's how we can \nuse modern browsers, multitasking tools and finally a synchronous load of modules will give you much better \nreceived performance of your JavaScript app. So main ideas of AMD is split of your JavaScript app into parts. Such \nparts are called modules and organize asynchronous load of such modules only when they are necessary. We have \nspecial framework which keeps an eye on this and this framework is require G's.  \n  \n  \nSpeaker 1\n \n Quite simple and very old framework require G's. You can read more about require G's, probably you can find it, \nrequiregs.org probably can find its original page, explain explanations and so on. And this is quite old framework still \nworking and its main task is to keep in memory such modules, organize loading of modules, organize module \ndependencies and creature users require G's so we can try to find it like this require G's version. Now you can see \nversion 235. So required G's is used in creature and its main purpose is to keep and handle all such client side \nmodule structure in browser memory, providing possibility to load only necessary modules when they are requested \nfor certain page and which makes quite good performance because in total our client side now has probably 1000 of \nmodules, 1000 of small JavaScript files.  \n  \n  \nSpeaker 1\n \n But when you open any page, system needs only some part from it. For example, it needs only 100 or maybe 200 \nmodules. Required G's helps to load only necessary modules by the help of by the analyzing of definitions of such \nmodules and so generally required J's is main under cover framework for organizing of executable JavaScript code \nin creation client side and required J's has its own requirements for how such JavaScript code should look like and \nthat's why we are coming to answer of why our client module code looks like this. This is a result of use of required \nG's framework and the first command that you see here, it's a function define. This function is calling required \ngsmethod and it transfers some arguments. First argument is very important. This is unique module name \nrepresented just as string by the way.  \n  \n  \nSpeaker 1\n \n Also client module has its own schema properties, so properties of changeable item saved in creation configuration. \nIt has its own code localizable title information about parent client module so it could be used for inheritance and \npackage where this client module is saved. So code of your client module must be matched with the name of the \nclient module in your code. If name will be not the same as code, this will not work. So first argument here is our \nmodule name. This is just a text. Second argument is optional and usually it's empty. But this is an array of other \nmodule names that are necessary to load before starting our module. So that's how we can set up that for this \nmodule we need some else and system will load them 1st 3rd argument here is the most important. This is so called \nfactory function.  \n  \n  \nSpeaker 1\n \n This function has a main purpose to return you some data object. As you can see it returns JavaScript object, \nincluding in our case six properties. This JavaScript object represents necessary information which system needs to \nknow about how to build our page. And this information in general was created with the help of automation tools of \npage editor and that's why we did not program this code ourselves. So most of this was done by page editor. But you \nstill need to know and let's say navigate here properly. I will quickly explain what are these properties? And now you \nprobably will not remember this, but it's just for you to like for your reference. So this JavaScript object in general \nrepresents information about page view.  \n  \n  \nSpeaker 1\n \n Config diff represents visual part of the page and physically this is an array in JavaScript and this array includes set \nof items. In each item represents one control on the page. Let me show you a simple example. This is control for \nname column. So here when we look at this name we have some title and we have input field. So in total it's called \ncontrol. So some tool on the page which we can use for data input and output. And this control has its own settings \nwhich we can provide inside of view config diff array. So this item represents name column. You can see values, \nsettings, some different properties and layout. Config represents position and size, type represents the way the type \nof the component used for input and output.  \n  \n  \nSpeaker 1\n \n We have a label, we have some other properties, parent container, name and that's all. It's interesting to mention that \nhere we have some settings which represent connection between our control and physical data field connected and \nsaved in memory. I will explain this a bit later. Now you should remember that view config represents set of \ninformation set. So it's just array of JavaScript objects. And each JavaScript object represents information about \ncontrol that you want to see on the page. So for price, for name we have one control, for price, another control and \nso on. You can edit it if you want, but you should be very careful keeping syntax, keeping breakage, keeping \neverything correct and if you do something incorrectly it will not work and we have no any intellisense or \nautocomplete tools which will clearly show you where you did some wrong settings.  \n  \n  \nSpeaker 1\n \n For example, if I accidentally do something like this, system will notice it and it will not show me where I have a \nmistake. So you should be very careful working with this part and 100% of such settings are now performed with the \npage editor so it's not so hard. Not so difficult to do this customization with page editor and then looking at this \ncode. Okay, in general, view config diff represents UI structure set of user interface items that you plan to see. Okay \ngreat. Let's move on to other items. After view config we have view model configuration. This is a bit more difficult to \nunderstand because viewmodel config is information about so called attributes. Attributes are variables at the page \nlevel. So like storage items, like memory cells.  \n  \n  \nSpeaker 1\n \n For page level they have special names generated by application automatically and once I tried to change them, it \nturned out to be hard coded each time you create them. So it's not a good idea to make them better. If it looks a bit \nugly like this, you should not try to change it because it looks like page has also some metadata saved separately \nwhich has corresponding names inside of it. And if you start to beautify with no any part. So if you start to edit your \nattributes, probably your page will not work anymore. So I recommend you not to remain attributes. Each attribute \nrepresents some variable on the page and usually attributes are connected with corresponding data columns. Data \ncolumns are parts of our object and object has its own invisible client side representation in memory.  \n  \n  \nSpeaker 1\n \n So attributes are used to keep some data and connect with controls. Then finally we have model config which \nrepresents set of data objects used with our page. In our case, only one data object is used. Reality reality entity is \nused to work with our page. But why we have so complex settings here is that freedom UI pages can operate with \nmany data objects and many data lists at the same page. Unlikely to classic UI freedom UI page can be quite more \ncomplicated and may include many data objects at it. That's why this model config will be a bit more complex than \nyou expect. Handlers, converters and validators areas where we can do some programming. We can handle some \nexisting events, so we can make own custom handlers for some certain events and make some additional work for \nit.  \n  \n  \nSpeaker 1\n \n We can do conversion between columns like recalculations, but personally I prefer to do it inside of handlers and \nvalidators are used to perform some checks at client side to ensure that values provided in the columns are correct \nand in case if they are not correct, it's possible to display error messages and prohibit saving of data. We will also do \nsuch examples later. So if you ask me about where we will program here, the most common answer will be we do \nour own handlers. But also please note, you probably noticed special text comments here in this code before and \nafter different settings here and even here. So you can see that we have some special comments. Such comments \nare very important.  \n  \n  \nSpeaker 1\n \n Please do not modify do not remove them because they are necessary for page editor it's unusual, but page editor \ndoesn't search for the name of the object here or name of the array. Page editor searches for such system \ncomments and then takes code between and analyzes it and representing page design for you. When finished and \ndata changes are saved, page editor creates new set of items like Div array for example and saves it into this code. \nSo such text comments are used as text markers. They are necessary and they are vital for page editors. So please \ndo not corrupt them, do not change, do not remove. They should be as is okay and possibly you have some \nquestions about strange names view model and model.  \n  \n  \nSpeaker 1\n \n Some of you who studied somewhere at university or who studied yourself with the way how UI can be programmed \nprobably know about architectural patterns and maybe you know a pattern named MVC and here we have a pattern \nnamed Mvvm. Let me explain what it is we can study and we can find some simple articles at Wikipedia about it. So \nMvvm this is an architectural pattern. So like some standard way of implementing things in programming which \nhelps us to make and to solve some typical tasks with the typical way. So we have typical solution for this. We have \na task to manage our client side application in our browser and mainly programmed in JavaScript. And there is a \ngood practice to separate visual part from logical part and from data storage part.  \n  \n  \nSpeaker 1\n \n And in MVVM pattern it's recommended to separate visual part and code view separately, store data values and call \nit model and also make a separate controller unit which is called view model. And Viewmodel has a lot of \ninformation about view. Viewmodel knows view structure and Viewmodel manages our view. It manages controls \nand also Viewmodel is responsible for handling events that happens with view controls. For example, user clicks on \na button or user inputs some data. The reason why developers used this architectural pattern is to make application \nmore manageable, to make it easy to develop or replace view, to make it easy to extend our model and to make more \nor less structural way to handle all events and make business logic inside of viewmodel some traces of it can be \nfound in this text.  \n  \n  \nSpeaker 1\n \n View config diff represents view structure and that's why it's called view config diff, not just diff. By the way, the word \ndiff here is probably shortage from a difference and means that it's information about only some changes. And it \nmakes sense because our module is not made from scratch. Our module was made as inherited item from some \ntabbed pages left area base platform client module. So client modules as objects, they also can be inherited from \neach other. And diff array represents changes in comparison to previous parent item. That's why possibly such items \ncalled diffusion and not just kind of list which represents full set of items. This diff includes only changes and some \nbase template items like buttons, menu items and so on will be not listed here because they are supposed to be \nused by the inheritance.  \n  \n  \nSpeaker 1\n \n So when client side modules will finally form final page structure, they will take base parent one, they will apply child \nitem like this setting, and finally they will analyze base diff child diff and they will make all of the components \naccording to parent and child items. Okay, so view config div represents visual part represents view in mvvm pattern \nmodel, config represents information about data entities used for our page and also view model config. I think partly \nalso works about the same because this is registering of available variables that we can use on the page and \nimplementation of handlers. Implementation of events can be done inside of handlers and also is already performed \nin parent modules. In parent template pages like tab, the page with left area and such pages can be nested. It means \ninheritance can be done many times.  \n  \n  \nSpeaker 1\n \n It looks like quite boring thing. So let's do some practical step for today and I will show you very simple hello world \ncomplexity level example. So let's do some simple example. But first as we want to make a button, it's better to start \nmaking button with the help of editor. So let me show you how we can make a button to show something simple but \nworking and programmed and go to settings. Edit page edit page I can add a button to my page, scroll down here, \nyou can see a list of existing columns, we can add new columns and we have a lot of components. Button probably \nwas the first component supported in Freedom UI page. So we can put our button somewhere here, change its size, \nchange its color or maybe this.  \n  \n  \nSpeaker 1\n \n You can make some kind of funny caption like push me and if you want you can translate this title into other \nsupported languages and by default, as you can see we have a lot of supported actions like open records, like saved \ndata, close page run business process and so on. Once I started to count I found 24 supported actions here. So I will \njust randomly select some action and then I will replace it with something else. By the way, what's happening here? \nMy title looks a bit strange. Okay, I want to use icon. Something is wrong with my title here. No, it's okay. Okay, some \nbug period. Okay, push me and let's select some icon that will represent this idea. Okay, would it be like this?  \n  \n  \nSpeaker 1\n \n So we have more than 60 supported icons here and okay, so and I also set some dummy action. I plan to change it \nlater. I don't have any support. Net menu. No any special conditions. We will study it later. Element code okay, let's \ncall it push me button. Okay that's all. We can save it now. After doing this we can go to the code in order to find our \nbutton. Let's go to the code source code, then we find our button. Let's call search for push me and we'll do control f \noh you see new editor search function here. It was different in previous versions. Okay, would it be like this? Thanks \nto our element code we can easily find push me button by code and this diffuser array item for view config \nrepresents button settings.  \n \n \n  \nSpeaker 1\n \n We have caption, we have type and also we have clicked setting. Let's remember line number 52 and this is setting \nfor some tenders tender which is already programmed somewhere in parent templates, parent components and \nsystem knows how to implement this. Now we can go to handlers part and make our own handler. I already have \nsome example because making it from scratch is a bit difficult. So I will show you examples for freedom Ui button \nand this is example of a button. I will share it with you in our zoom and also I will put it into my handlers collection \nmanually. So what I do is providing setting here in my handlers collection handlers array. Technically this is an array.  \n  \n  \nSpeaker 1\n \n By the way, it looks like this editor was seriously changed because previously we had some unnecessary warnings \nrelated to new JavaScript comments and features and now it looks like in this editor there are significant \nimprovements related to the way how code is managed. So thanks developers. Version 813 now had a new type of \neditor here. Okay, this is my handler physically is also JavaScript object with three. Now we have two properties \nrequest and handler. Property. Request property represents the name of my handler so it's kind of identifier which I \ncan use to assign inside of view config items. So it's kind of inner technical name of my procedure and handler itself \nis asynchronous function which can do something useful. For example, we can do console output here we can use \nembedded classic UI front end core JavaScript framework made by creation called Terrasoft.  \n  \n  \nSpeaker 1\n \n So when you see Terasoft here, you should understand this is a JavaScript core framework, quite old but still \nsupported. You can use true information from it to show some pop up messages. And also I plan to show you how \nyou can manage data, read data and write data. We have a special procedure to get attribute values. Now let's \ncollapse view model con collapse diff part. We already remember line number 52, so let's look at view model \nconfiguration. We have set of attributes and for the price we have this name of the attribute. So copy it, go here and \npaste it. That's how we can correctly get price value inside of our JavaScript code. We can do console output to \ndisplay this price, and we can also work with this price and show how we can set value into it.  \n  \n  \nSpeaker 1\n \n Request dollar context attribute name equals and then we will just take 20% of this price and save it again. We have \nto normally analyze our code inside of a synchronous function, allowing other potential handlers to be started. So \nthis is also very typical end of handler code. In your case, you will have to change this line to find corresponding \nprice attribute and also to do it with setting value. So this example will show us message in the console, it will show \nus pop up message, it will take price value and show proof of it in the console. Then it will take some part of it and \nset to the price column again. And that's all we can save this code. Please note, saving is important from this \nmoment. It's better to close this page and then we go to check how it works.  \n  \n  \nSpeaker 1\n \n In most of cases probably it makes sense to reward the page, but in most of cases browser cache doesn't really \nprevent us from working, so it will probably work normally even without revolting the page. So open it again. Now we \nsee our button enable browser developer console f twelve or control shift I. There are plenty of warnings, as you can \nsee here, they are minor warnings, and it's because freedom UI page is not ideal now, so system probably will be \nfixed later. Now it's not a serious issue, so let's try to click on the button, nothing happens or I just do something \nincorrectly. Oh yeah, it was my mistake, sure, because this is my handler, but my button by number 53 still performs \nprevious action for it. Here is push me button. Here is clicked setting. So I just forgot to set it properly.  \n   \nSpeaker 1\n  \n Okay, here in my button I have clicked property and I have to specify my own custom handler name here. That was \nmy mistake, I just missed it. So I have to save and fix and save it. I will also call copy this piece for you. You config \nprobably I should not copy big part of it, so I only should do something like this. So you will focus only on the most \nimportant thing. Okay? And we can close open probably now it will work. Yes. You see, I did not reload the page, but \nit works well. So buttonworks shows us pop up message, takes original price, takes 20% of it and saves as new price \nhere. And we have no error messages, no errors in network tab, no errors at the console. So everything looks very \nvery good, smooth and no mistakes. Let's check again.  \n  \n  \nSpeaker 1\n \n Sorry for safe I should use push me this one. Yes, you can see now price changed. We have all the proofs here and \nno errors. So it looks like everything works according to the plan. This is example of hello world application. So we \ncan do some own programming inside of creature client side page. And of course later we will do a bit more useful, \nmore meaningful steps. But now this is an example of how you can do your own code, how you can do some display, \nhow you can access data from your page, do something and how you can save data. Please note that access data is \nused with await operator because some code behind this method. It looks like this is something like a method. And \nfinally it runs some asynchronous functions behind it and we need to use a weight operator here.  \n  \n  \nSpeaker 1\n \n If you do not use await, you will have a bit different structure at the end and you will still have to dig into object that \nyou will get from it. So recommended option is like this, await request, doer context and then your attribute name. \nOkay, that's all for today. We sat a bit longer than usual so our session is over. Tomorrow we will do more \nprogramming examples, you will see more useful things with recalculation, with validation, and you will see how \nmore different settings you can program on the page level. Thank you very much for your time and documentation \nabout the frameworks of client side. Yes Adrian, I can show you where you can find this documentation in creature \nacademy guides for developers. You can find front end development in classic UI and then you will see G's classes \nreference.  \n  \n  \nSpeaker 1\n \n This is exactly this API for this telescope framework. So you can use some search here for example, we used the \nmethod to show information. So method show information. We can search here, show information and you can see \nexamples of it, you can see source and you can see all the arguments. Show information and probably it's not the \nbest example, but. So finally you can try to get some use of it and you can see some help, stuff that can let you \nunderstand how it works. So Adrian, thank you for your question. And also I heard some more questions, Carlos. Yes, \nyes, about performance. Sorry, no, please, please ask questions, please.  \n  \n \n  \nSpeaker 2\n \n Maybe it's about my problem of performance of the application in my laptop.  \n  \n  \nSpeaker 1\n \n Oh, yes, we can do this. Would you like to record this part also as part of our training or you prefer to keep it more \npersonal and private so we can start recording if you want.  \n   \nSpeaker 2\n \n  \n You can. I have no problem to me, no problem.  \n  \n  \nSpeaker 1\n \n Okay, so I will stop sharing. Our main part of the session is over. Thanks all for your attention. Today we will have \nsome small session, Carlos, to detect potential performance issue problems on their environments. So thanks all for \ntoday's session. I will stop sharing. Recording is still on. So Carlos, please. You're welcome. Show me please your \nenvironment. I will try to help if you have a full zoom client better because you can manage your screen.  \n  \n \n  \nSpeaker 2\n \n I share my screen with you?  \n  \n  \nSpeaker 1\n \n Yes, yes, please. Thanks all of you, thanks for all information and your questions. Yes, please show me your screen, \nplease.  \n  \n \n  \nSpeaker 2\n \n Yeah, sorry, I have two.  \n  \n  \nSpeaker 1\n \n You can show only one, but I. Okay, green share screen button.  \n  \n \n  \nSpeaker 2\n \n If I have two screens, so I disconnect one.  \n  \n  \nSpeaker 1\n \n Yes, please select one. Okay, I can see a screen. Thank you. Nice. So please show me how your creature works and \nmaybe you can agree for request of remote control, so I can manage your screen more efficiently. So yes, you are \nusing the latest version? Yes, yes. We can start to investigate it with the help. By the way, what type of browser you \nare using? It's chrome.  \n   \nSpeaker 2\n \n  \n Yes, it's chrome. Yes.  \n  \n  \nSpeaker 1\n \n Okay, you try to run it once again.  \n  \n \n  \nSpeaker 2\n \n Yes, I restart in many occasions and don't work. Good. So let me show you a little problem. For example, I go in \nadvanced settings, okay. And I create a business process, for example. And that is all. That's it.  \n  \n  \nSpeaker 1\n \n Okay, so are you using Windows Pro or Windows home?  \n  \n \n  \nSpeaker 2\n \n I have windows.  \n  \n  \nSpeaker 1\n \n You can find system information?  \n  \n \n  \nSpeaker 2\n \n Yes, Windows homes.  \n  \n  \nSpeaker 1\n \n You will have significant issues. Let me show you how you can fix this. But it will be not full fix, it will be just a \nworkaround which is not fully. Okay, let me show you. So in case, if you work on home, you should close your main \nshell page and sometimes you will need to now you will see, sometimes you need to even close the configuration \npage, but now it looks like you can work with it. So sorry.  \n  \n  \nSpeaker 2\n \n \n I can see how you do that. You can repeat that, please just close.  \n  \n  \nSpeaker 1\n \n Other pages, that's the solution. So when you go to configuration section, you should close other main page. \nCreation will work normally. So it cannot work normally on home actually, because we still will face some problems. \nEven if you work with single page, but with for example setting business rules, you will face trouble. So I recommend \nyou to upgrade to Windows Pro. But once you work with Windows home, now I can show you what you can do. You \nshould close all other tabs of creation. In this case, your single tab will work normally. As you can see, you can do \nsomething. You can provide some settings like this, like USR my process, then you can save it. So this will work and \nit works more or less good.  \n  \n  \nSpeaker 1\n \n But when you need to go back to your main configuration section, you will have to use tabs and you will have to \nclose other tabs. This is not comfortable. Okay, I understand this saving will work for you. This works, but not so \nfast. And as far as I know, the problem is number of available websockets. Okay. Yes. In Windows home, I think all of \nissues you have are caused by Windows home. And as you can see, saving is performed. But okay, let's wait till \nsuccessful operation. Also some memory. So we need to look at your memory availability. Could you please click on \nthe performance tab second one after we have processes. Second one is performance. So you have 16gb of ram \nand SSD. So your PC is very good. Your PC is fast, but Windows is not good.  \n  \n  \nSpeaker 1\n \n So I recommend you to upgrade your windows to pro. In this case it will be. In this case it will better.  \n  \n \n  \nSpeaker 2\n \n Andrea is my colleague, he takes the code the course too. So he asked me, okay, so I save, socially save, I cancel \nand I.  \n  \n  \nSpeaker 1\n \n You can, you can just open another tab with your, you can recover previous page. Yes. Now you can see your process \nis saved and you can export, you can do everything.  \n  \n \n  \nSpeaker 2\n \n So it's work. Oh, it is so simple. Yeah.  \n  \n  \nSpeaker 1\n \n Yes. And it's. Unfortunately this is caused by limited number of Websocket connections allowed for IIs web server \nrunning in Windows home. So Windows Home is like very mini, little limited version of windows and it's not designed \nto be used for serious development. So you probably should think of upgrading it to Windows Pro.  \n  \n \n  \nSpeaker 2\n \n Okay, thank you. Thank you very much, Dmitry.  \n  \n  \nSpeaker 1\n \n Thank you Karim.  \n  \n \n  \nSpeaker 2\n \n You saved me. My boss is over me all day and it's difficult forwarding to the course. Thank you very much.  \n  \n  \nSpeaker 1\n \n No problem. Thank you, thank you.  \n  \n \n  \nSpeaker 2\n \n See you tomorrow.  \n  \n  \nSpeaker 1\n \n Yes, so our session is over. If any other questions? Hi, Vikrat Alpha is sorry. Hi Dmitry. Yes please. Yes, the compiler \nis successful, but give me a message, can I share that with you? Okay, I will stop sharing, so please Basil, start \nsharing. You see. Yes, it's a warning message. This warning message does not prevent you from next steps. So \nwhen you do some server side coding, possibly previously you. So in your previous experience, maybe you also \nfaced some warning messages and unfortunately for me, it's not clear how to get rid of it easily. It looks like some \nleftovers made by base product developers. Maybe we can also see it at my own environment. Surprisingly, I \nprobably so maybe which version currently you're running.  \n  \n  \nSpeaker 1\n \n So maybe you have just a bit older version than I do because I recently switched to the latest one and your version \nmaybe not the same latest, but this is not critical. So you can just see this compilation result. But I can complete. \nYeah, in general it's not ideal, but it's something that is satisfactory. So you can continue your work. Okay, I can go to \nthe system mode next, right? So you can do next examples, next steps of our videos so you can work normally? Yes. \nOkay. Okay, thank you. But last question, if I download the window eleven Pro, do I have to repeat the old step in the \nfirst lecture or it's installed by default? Unfortunately I have no experience of upgrading windows from home to pro.  \n   \nSpeaker 1\n  \n I believe it should only change some files on your windows and it will not be like clean environment. So you should \nhave the same IIs website, you should have the same stuff. And I did not check it by my own, so I have no \ninformation, no practical experience with it. So my company gave me a laptop with Windows Pro and I never tried to \nrun on Windows home and upgrade it. Yeah. Thank you. Thank you very much dmitry. Thank you too. Pes. So our \nsession is over. Thanks all of you who watched this video till the end, see you tomorrow. Goodbye. Goodbye.  \n \n  \n  \nSpeaker 1\n \n Today is session number four of our.  \n  \n \n  \nSpeaker 2\n \n Development on creation Platform guided learning set of practical sessions that we do for.  \n  \n  \nSpeaker 1\n \n Developing different features and functionality that.  \n  \n \n  \nSpeaker 2\n \n Requires some programming on Creature platform. And previously we finished with building our.  \n  \n  \nSpeaker 1\n \n Own section named Realty and we managed.  \n  \n \n  \nSpeaker 2\n \n To set up List View, we managed to make a form page for it.  \n  \n  \nSpeaker 1\n \n We also added some default values and.  \n  \n \n  \nSpeaker 2\n \n We made some required fields and it.  \n  \n  \nSpeaker 1\n \n Was pretty much easy and we used.  \n  \n \n  \nSpeaker 2\n \n Only no code customization tools for this.  \n  \n  \nSpeaker 1\n \n Also we managed to make a button.  \n  \n \n  \nSpeaker 2\n \n Which had a custom handler. So we made a button push me button and this custom handler shows some console \noutput. We can also display some pop up messages and also we can do any.  \n  \n  \nSpeaker 1\n \n Kind of JavaScript code behind this button. Today I will show you a bit.  \n  \n \n  \nSpeaker 2\n \n More complicated examples of how you can.  \n  \n  \nSpeaker 1\n \n Do some programming and coding and also we will discuss debugging.  \n  \n \n  \nSpeaker 2\n \n So you will see how it's possible.  \n  \n  \nSpeaker 1\n \n To stop execution of your code and.  \n  \n  \nSpeaker 2\n \n \n Make it executed line by line.  \n  \n  \nSpeaker 1\n \n By line and to see all the.  \n  \n \n  \nSpeaker 2\n \n Variables and to see all the conditions.  \n  \n  \nSpeaker 1\n \n So so to make something that you probably get used to do when you operate with any like modern version, modern.  \n  \n \n  \nSpeaker 2\n \n Development environment like Visual Studio or other so today question today's session I would.  \n  \n  \nSpeaker 1\n \n Like to warm up with Simple Question.  \n  \n \n  \nSpeaker 2\n \n Which is about organizing of your sections. It's probably not so obvious so I will tell you all apps it's like.  \n  \n  \nSpeaker 1\n \n Synthetic Workplace which includes all registered sections in one list.  \n  \n \n  \nSpeaker 2\n \n We have Studio out of the box workplace, we have customer360 because it's a.  \n   \nSpeaker 1\n  \n Result of loaded contacts and accounts.  \n  \n \n  \nSpeaker 2\n \n So our loaded customer360 app also caused creation of new workplace. Such workplaces also can be created, you \ncan manage them and you can put your sections into it. You can also create data items for workplaces if you want to \ntransport them between environments. I would like to show you something that I think will be useful. It's about \norganizing of Workplace for your users and for my developer purpose it will be quite often when we will need to \nswitch between our created section and some system sections like Process library, process logs or lookups and \nsystem settings. So I plan simply to put my new Created Reality section into this Studio Workplace.  \n  \n  \nSpeaker 1\n \n That will be very easy, but I.  \n  \n \n  \nSpeaker 2\n \n Need to demonstrate it.  \n  \n  \nSpeaker 1\n \n To show how you can do this.  \n  \n \n  \nSpeaker 2\n \n Go to Settings then find Workplace Setup. Workplace Setup helps us to create new workplace or to manage existing \nworkplaces. As you can see, some workplaces are present but not shown even if we are administrators. So that it's \nvery interesting because it's one of not so many places where user permissions Are still matter when we.  \n  \n  \nSpeaker 1\n \n Run system under administrator privilege.  \n  \n \n  \nSpeaker 2\n \n So now you can see I see only four workplaces.  \n   \nSpeaker 1\n  \n But in total it looks like we.  \n  \n \n  \nSpeaker 2\n \n Have at least 5. And productivity workplace seems to not showing anything and not having any permission settings.  \n  \n  \nSpeaker 1\n \n So that's probably why we are not seeing it.  \n  \n \n  \nSpeaker 2\n \n Okay, let's go to studio workplace. We have set of sections for a workplace. Also it will be interesting for you to know \nthat sections have positions.  \n  \n  \nSpeaker 1\n \n Let me show you columns set up for sections list. We can arrange and add the position column.  \n  \n \n  \nSpeaker 2\n \n Now you will understand why I display this position. Any section in a workplace has its position and position \norganizes order. So it is used to specify order of sections in a workplace. If we rearrange such items such sections \nposition will be changed. And finally your sections will be displayed in a different order.  \n  \n  \nSpeaker 1\n \n Sometimes this order is not so consistent.  \n  \n \n  \nSpeaker 2\n \n You see UI management and message templates, they have the same position.  \n  \n  \nSpeaker 1\n \n And sometimes UI management will be on top.  \n  \n \n  \nSpeaker 2\n \n Sometimes message templates will be on top depending on how data will be loaded at a certain time.  \n  \n  \nSpeaker 1\n \n Because sorting by this position it makes some ambitious result. Okay, so what I plan to do.  \n  \n \n  \nSpeaker 2\n \n I plan to add one more section in the list system will show me only sections that are not listed here. And it's \ninteresting to see here that we have couple of accounts section.  \n  \n  \nSpeaker 1\n \n It's very unusual.  \n  \n \n  \nSpeaker 2\n \n Couple of calls and couple of contacts. One of the possible explanation why we.  \n  \n  \nSpeaker 1\n \n Have two different account section is that.  \n  \n \n  \nSpeaker 2\n \n One of them is section for Classic.  \n  \n  \nSpeaker 1\n \n Ui, another is Freedom UI section. We can also display columns here which.  \n   \nSpeaker 2\n \n \n \n Will let you understand what we are looking at.  \n  \n  \nSpeaker 1\n \n So we can just squeeze a bit title display e.g.  \n  \n \n  \nSpeaker 2\n \n Created on column save column settings.  \n  \n  \nSpeaker 1\n \n Now when we try to add you.  \n  \n \n  \nSpeaker 2\n \n Will see title, you will see created on and one of them is 19, another is 24. And it looks like first one is.  \n  \n  \nSpeaker 1\n \n Classic UI, second one which is younger.  \n  \n \n  \nSpeaker 2\n \n This is freedom UI.  \n  \n  \nSpeaker 1\n \n So that's how you can detect which one is necessary for you to add.  \n  \n \n  \nSpeaker 2\n \n In my case, I plan to find realty section created recently and we can see it at the end of this list. You see, its position \nis also not so consistent.  \n   \n Speaker 1\n \n But it guarantees that it will be at the end.  \n  \n \n  \nSpeaker 2\n \n But it's not so comfortable to see this item at the very end of this list. So possibly we would like to move it upper.  \n  \n  \nSpeaker 1\n \n So let's go to do this.  \n  \n \n  \nSpeaker 2\n \n You can move it even on the first top position. Unfortunately we cannot move it upper than home. And if you don't \nreally like, we can suppress this home page for a workplace. You can see homepage you can clear.  \n  \n  \nSpeaker 1\n \n It if you want and realty will be position zero. So when we save it we can.  \n  \n \n  \nSpeaker 2\n \n Also reward this page. Probably we will see our reality section directly at Studio Workplace at zero position. But it's \nalso important to say that other items were changed so they changed.  \n  \n  \nSpeaker 1\n \n Their position because reality shifted them.  \n  \n \n  \nSpeaker 2\n \n So if we want to transport such change, we must make a corresponding data item. Or we can use help of data \nbinding tool. This data binding tool helps us to remember positions of O sections here and.  \n  \n  \nSpeaker 1\n \n We can just click Bind Workplace, specify.  \n  \n \n  \nSpeaker 2\n \n Target package and click save. Then we can see what was created. It was three different data items. One of them is \nsysworkplace studio. It doesn't really necessary because this workplace is already present at our system.  \n  \n  \nSpeaker 1\n \n And when we for example try to.  \n  \n \n  \nSpeaker 2\n \n Actualize data and save it, we will see warning and this warning will tell.  \n  \n  \nSpeaker 1\n \n Us that such Studio Workplace was already.  \n  \n \n  \nSpeaker 2\n \n Registered somewhere in parent package.  \n  \n  \nSpeaker 1\n \n And even more it was registered one more time in another parent package.  \n  \n \n  \nSpeaker 2\n \n But it's not a big mistake. So it's not a mistake at all. This is warning that tells us that.  \n  \n  \nSpeaker 1\n \n Such data is already present somewhere in parent packages data items. So maybe we are doing it. So something \nthat is unnecessary, but let it be. You can save it this warning, but.  \n   \nSpeaker 2\n \n  \n It'S not a mistake. Another one is sys module in Workplace. This is a system table which keeps information about \nsection which is called module and workplace.  \n  \n  \nSpeaker 1\n \n So you can see data and you can see all the sections in Workplace.  \n  \n \n  \nSpeaker 2\n \n Studio were listed here. And also it's important to mention that forced update option must be applied for.  \n  \n  \nSpeaker 1\n \n Position column because otherwise update or position.  \n  \n \n  \nSpeaker 2\n \n Will be not performed.  \n  \n  \nSpeaker 1\n \n You probably remember from our Tuesday session that when you create data items, it's.  \n  \n \n  \nSpeaker 3\n \n Possible that you will make data item that will perform update, not an insert.  \n  \n  \nSpeaker 1\n \n In case of update in case of.  \n  \n \n  \nSpeaker 3\n \n Target record was found.  \n   \n Speaker 1\n \n By the way, I prefer to make.  \n  \n \n  \nSpeaker 2\n \n It not by this key. I prefer to make it by this.  \n  \n  \nSpeaker 1\n \n Key and found by id.  \n  \n \n  \nSpeaker 3\n \n So if record was found by ID.  \n  \n  \nSpeaker 1\n \n And then it will update target database according to loaded data and in our case only position will be updated. Okay, \nwe can save it.  \n  \n \n  \nSpeaker 2\n \n Now you can see that save was.  \n  \n  \nSpeaker 1\n \n Successful, but we have a lot of warnings related to parent data that was already registered in base product.  \n  \n \n  \nSpeaker 2\n \n And this is valid set of warnings.  \n  \n  \nSpeaker 1\n \n Because our change caused the change of.  \n \n \n \n  \nSpeaker 2\n \n Position of all previously registered sections in Studio Workplace.  \n  \n  \nSpeaker 1\n \n So simply all of the registered sections had different position because we moved our reality to the top and we.  \n  \n \n  \nSpeaker 2\n \n Had a warning that tells us that you're trying to Change the data which was originally declared somewhere else.  \n  \n  \nSpeaker 1\n \n So maybe you're doing it wrong.  \n  \n \n  \nSpeaker 2\n \n So please take care. Here is your warning.  \n  \n  \nSpeaker 1\n \n But this warning is still so we can ignore this. And last one is admin unit in workplace.  \n  \n \n  \nSpeaker 2\n \n This is about access permissions. System administrators have full access to Studio.  \n  \n  \nSpeaker 1\n \n Workplace and probably this data is also.  \n  \n \n  \nSpeaker 2\n \n Present in our database.  \n  \n  \nSpeaker 1\n \n Yes, so maybe not so necessary to save it.  \n  \n \n  \nSpeaker 2\n \n So it's warning, not an error in case if you have an error. For example, you save the same data twice in the same \npackage.  \n  \n  \nSpeaker 1\n \n In this case, save button will show you error message and save button will not disappear. If save button was \ndisappeared, means your.  \n  \n \n  \nSpeaker 2\n \n Data item was normally saved.  \n  \n  \nSpeaker 1\n \n If save button did not disappear, it means an error. It's like serious mistake and the system.  \n  \n \n  \nSpeaker 2\n \n Will not allow you to save such data. It happens only when you save the.  \n  \n  \nSpeaker 1\n \n Same data twice in the same package. Okay, so it was set of client modules of sorry, set of data items.  \n  \n \n  \nSpeaker 2\n \n Automatically created by help of data binding tool.  \n   \nSpeaker 1\n  \n When we registered our reality section in a studio workplace, now we have comfort. Here is our new created section.  \n  \n \n  \nSpeaker 2\n \n Here is set of processes we will manage very soon. Here we have lookups which we also often look at.  \n  \n  \nSpeaker 1\n \n And we'll use it and some other.  \n  \n \n  \nSpeaker 2\n \n System sections that we may need. So we now have very comfortable conditions.  \n  \n  \nSpeaker 1\n \n And easy transitions between different sections. So it was just a simple example how you can organize your \nworkplaces in.  \n  \n \n  \nSpeaker 2\n \n More complicated based products like sales, service and marketing. You will see more workplaces, more sections \ninside. And you also can create your own workplace with sections that you think will be necessary to use for your \nend.  \n  \n  \nSpeaker 1\n \n Users with particular roles.  \n  \n \n  \nSpeaker 2\n \n And you can provide permissions for such.  \n  \n  \nSpeaker 1\n \n Sections and for such workplaces.  \n \n \n \n  \nSpeaker 2\n \n And what is important for you to understand that you can create many different.  \n  \n  \nSpeaker 1\n \n Workplaces and include the same section many times. So if you added some section to.  \n  \n \n  \nSpeaker 2\n \n Some workplace, it doesn't mean that you can't do it with another workplace.  \n  \n  \nSpeaker 1\n \n So one context section can be added.  \n  \n \n  \nSpeaker 2\n \n In different places with no limitations.  \n  \n  \nSpeaker 1\n \n In my case, I have my applications.  \n  \n \n  \nSpeaker 2\n \n Workplace with real T section and I also have.  \n  \n  \nSpeaker 1\n \n Just a second. So what I wanted to show you.  \n  \n \n  \nSpeaker 2\n \n We can use the same section in.  \n  \n  \nSpeaker 1\n \n Different workplaces and it's not a problem.  \n  \n \n  \nSpeaker 2\n \n If we specify the same section in different workplaces many times. So physically this is the same section.  \n  \n  \nSpeaker 1\n \n The same data shown in different places. Just a second. Okay, so what we will do today, it was a warm up example \nthat.  \n  \n \n  \nSpeaker 2\n \n I think will be interesting for you to know. So let's do something more serious. Let's think of improvements of our \nfuture section of Our reality section. And now I want you to see how you can do some calculations, how.  \n  \n  \nSpeaker 1\n \n You can do some more serious programming.  \n  \n \n  \nSpeaker 2\n \n Inside of Creature client side page using.  \n  \n  \nSpeaker 1\n \n Some JavaScript and using creature tools and let's say data platform. First of all I will explain you some business \nideas.  \n  \n \n  \nSpeaker 2\n \n So what we plan to do, my plan is to show you some recalculations and it could be a good example.  \n   \n Speaker 1\n \n If we for example create one more column, call it commission. So it will be our future profit from the deal. And this \ncommission will be dependent on price. So it's normally and very typical for realty to have commission as some \npercent from price.  \n  \n \n  \nSpeaker 2\n \n And also we have to take care.  \n  \n  \nSpeaker 1\n \n About the type offer.  \n  \n \n  \nSpeaker 2\n \n So for sale we have one formula.  \n  \n  \nSpeaker 1\n \n And for rental we will have another formula.  \n  \n \n  \nSpeaker 2\n \n Okay, let's do it step by step. So first of all we need new column.  \n  \n  \nSpeaker 1\n \n New column can be added to this very easily. We can just go to modify our page. Then we can add new number \ncolumn.  \n  \n \n  \nSpeaker 2\n \n Carefully dropping it here it will be named Commission. And as we have a price in.  \n  \n  \nSpeaker 1\n \n US dollars, so let it be a commission. Also in the same currency, the inner.  \n  \n \n  \nSpeaker 2\n \n Column name will be USR Commission.  \n  \n  \nSpeaker 1\n \n And we confirm such code for this column. The data format will be decimal with two digits.  \n  \n \n  \nSpeaker 2\n \n Okay, great.  \n  \n  \nSpeaker 1\n \n Decimal with two digits. And we want to make this commission calculated automatically so we don't allow users.  \n  \n \n  \nSpeaker 2\n \n To manually change it. That's why I will set read only.  \n  \n  \nSpeaker 1\n \n Option on I temporary hide place attachments tab. So my commission will be read only.  \n  \n \n  \nSpeaker 3\n \n And also just to make it easier.  \n  \n  \nSpeaker 1\n \n To find in div array, I will name its element code so we can type it as we wish Commission USD. Let it be our element \ncode.  \n   \nSpeaker 3\n \n \n \n This element code will be used in view config, div and also physically it.  \n  \n  \nSpeaker 1\n \n Will be used for building real page.  \n  \n \n  \nSpeaker 3\n \n HTML markup with set of divs inside.  \n  \n  \nSpeaker 1\n \n And this code will be used to name set of items and div.  \n  \n \n  \nSpeaker 3\n \n HTML tags inside of our page.  \n  \n  \nSpeaker 1\n \n So element code, it's about physical component.  \n  \n \n  \nSpeaker 2\n \n Representation on the page.  \n  \n  \nSpeaker 1\n \n Okay, you already know this and that's all I can just save System will.  \n  \n \n  \nSpeaker 2\n \n Automatically modify our object.  \n   \n Speaker 1\n \n It will save changes to our page code which we can find here if.  \n  \n \n  \nSpeaker 2\n \n We click open source code. So now let's just click save and.  \n  \n  \nSpeaker 1\n \n That'S probably will be enough for the beginning. So this change will be made in objects and in our client module. \nOkay, finally it's saved.  \n  \n \n  \nSpeaker 2\n \n Okay, we can move on.  \n  \n  \nSpeaker 1\n \n And now we can close this page editor.  \n  \n \n  \nSpeaker 2\n \n Go to main page. As you can see, I did not even reload it.  \n  \n  \nSpeaker 1\n \n We can just open it again and.  \n  \n \n  \nSpeaker 2\n \n Probably we will immediately see our new column and it's read only.  \n  \n  \nSpeaker 1\n \n So you see this lock sign which.  \n \n \n \n  \nSpeaker 2\n \n Tells us that column is read only. So now we need to think of.  \n  \n  \nSpeaker 1\n \n Implementing read calculation and it will be.  \n  \n \n  \nSpeaker 3\n \n Triggered by change of price.  \n  \n  \nSpeaker 1\n \n And also we want to make it dependent on offer type. So for the sales offer type it will be more or less okay if we \nmake commission like 2% from list price from our price of realty shown here. So to be quite fair and good enough \ncommission for our business and for sales it's totally okay. Now let's create some sample for house for rental. Our \nrental price will be 1200 bucks for some house in Miami.  \n  \n \n  \nSpeaker 3\n \n I'm not sure that can we find.  \n  \n  \nSpeaker 1\n \n So cheap houses in Miami for maybe it's not like not in a high season and some area. And as you can see, \ncommission will be recalculated. And we need to make another formula for rentals.  \n  \n \n  \nSpeaker 3\n \n So for rentals probably it will be.  \n  \n  \nSpeaker 1\n \n Quite enough if we will ask for 50% from monthly payment price if this is a rental.  \n   \nSpeaker 3\n \n  \n So for rentals we will have another percentage. So for sales it will be 1% or 2% value.  \n  \n  \nSpeaker 1\n \n And for rental it will be 50% from price value. So when we will do some calculation we have to take care about it.  \n  \n \n  \nSpeaker 3\n \n But also you should be mentally ready.  \n  \n  \nSpeaker 1\n \n That in real life business it really often happens that such ratios, such formulas can be changed from time to time. \nAnd once we introduce hard coded value like 2% a month later our customer may call us and say, you know.  \n  \n \n  \nSpeaker 3\n \n Now conditions were changed so we need to modify this percent and now it will be 2.5.  \n  \n  \nSpeaker 1\n \n Could you please change it?  \n  \n \n  \nSpeaker 3\n \n And if we hard code it, of course it's not so good idea to.  \n  \n  \nSpeaker 1\n \n Go into code and change it. Then deliver changes to production. So it will be really expensive.  \n  \n \n  \nSpeaker 3\n \n To make such changes.  \n  \n  \nSpeaker 1\n \n And our customer will be not ready will be not really happy if we ask for example for half, maybe for a couple of \nhours of work to be paid. If we want to change just one number. Ideally customers should be able to change such \nratios themselves.  \n  \n \n  \nSpeaker 3\n \n We have several options to do this. For example, we can make a separate.  \n  \n  \nSpeaker 1\n \n Table which will keep necessary percents.  \n  \n \n  \nSpeaker 3\n \n Or we can use some system settings for this.  \n  \n  \nSpeaker 1\n \n Or as you can see, our ratio is really stick to offer type. So probably we can add new column to offer type lookup in \norder to save one value in percent for sales.  \n  \n \n  \nSpeaker 3\n \n And another value in percent for rentals. I will show you how we can do this.  \n  \n  \nSpeaker 1\n \n Let's focus on objects Again, now we.  \n  \n \n  \nSpeaker 3\n \n Have offer type object, we can open it for edit. I prefer to work from configuration section. Maybe you would like to \nfocus on application first.  \n   \n Speaker 1\n \n In this case you can do the same if you. Oh, I did not save it. Oh, sorry. Okay, my fault. Ruby House for rental Save it.  \n  \n \n  \nSpeaker 3\n \n Great. So if you prefer to focus on.  \n  \n  \nSpeaker 1\n \n Application, you can go to Application hub.  \n  \n \n  \nSpeaker 3\n \n You may find your realty app, you.  \n  \n  \nSpeaker 1\n \n Might check your data models and that's.  \n  \n \n  \nSpeaker 3\n \n How you can find corresponding object. Or you can switch to advanced settings.  \n  \n  \nSpeaker 1\n \n To see all the contents of your solution.  \n  \n \n  \nSpeaker 3\n \n So you may practically do almost the.  \n  \n  \nSpeaker 1\n \n Same as you can do it here. So I just get used to work.  \n   \n \n Speaker 3\n \n With this configuration section. Also it has some useful actions like.  \n  \n  \nSpeaker 1\n \n Save packages to file system. So that's why I stick to this.  \n  \n \n  \nSpeaker 3\n \n Approach and I feel more confident when.  \n  \n  \nSpeaker 1\n \n Work here because I have full available.  \n  \n \n  \nSpeaker 3\n \n Set of tools to manage my system set my system configuration setup.  \n  \n  \nSpeaker 1\n \n So we opened corresponding object, we have.  \n  \n \n  \nSpeaker 3\n \n Inheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far. So for each reality offer type for rental or sale, we can add one.  \n  \n  \nSpeaker 1\n \n More column to be number. Maybe we can do it with quite high precision. Okay, two digits after decimal point. We \ncan call it something like commission percent. So we can even specify what is the available range of our data \nvalues.  \n  \n  \nSpeaker 3\n \n \n Here just to make it clear for.  \n  \n  \nSpeaker 1\n \n Any user what type of value should be put here. So if we specify from 0 to 100 it means from 0 to 100% and it will be \nclear how to.  \n  \n \n  \nSpeaker 2\n \n Put some value here if you want.  \n  \n \n  \nSpeaker 3\n \n To save for example 2%.  \n  \n  \nSpeaker 1\n \n One more column is not a big deal, so we can easily add it save and publish. But after we do this we may start to get \nsome additional unexpected difficulties.  \n  \n \n  \nSpeaker 3\n \n Now I will show it.  \n  \n  \nSpeaker 1\n \n Probably sometimes I get it, sometimes not. But anyway I have to tell you about this.  \n  \n \n  \nSpeaker 3\n \n So we added new column to some.  \n  \n  \nSpeaker 1\n \n Object that was already present for today morning.  \n   \n \n Speaker 3\n \n So it was already created recently. That's why we can face some unexpected behavior.  \n  \n  \nSpeaker 1\n \n Let me show you what I'm talking about. Now you can see it's very close and easy to switch between our section and \nfor example lookups. Let's go to reality offer type lookup and let's try to see its data.  \n  \n \n  \nSpeaker 3\n \n Now we have name and description.  \n  \n  \nSpeaker 1\n \n Okay, let's try to set up columns to display.  \n  \n \n  \nSpeaker 3\n \n Name is okay here description is also.  \n  \n  \nSpeaker 1\n \n Okay and we can try to display one more column. Commission percent looks good and we can save it. Okay, here \nthis commission percent looks good. We need to Provide some initial data. Because we have to support our solution \nwith some initial values for calculations.  \n  \n \n  \nSpeaker 3\n \n And we agreed that for a sale it will be enough for us to specify 2%.  \n  \n  \nSpeaker 1\n \n According to this helpful message, 2% will look like this 2.00, so it means just 2. And for rentals we expect to earn \n50% but from monthly payment. So our price will represent monthly payment. That's why for rentals we will have \nsignificantly bigger value. So it looks like our data is okay here, but we changed columns and.  \n   \nSpeaker 3\n \n  \n We added some data.  \n  \n  \nSpeaker 1\n \n So possibly we have to look at data part and find corresponding object reality offer type object so not object data \nitem for this. Let me find it. This one Offer type.  \n  \n \n  \nSpeaker 3\n \n It looks like it was created by data binding tool, so we could also.  \n  \n  \nSpeaker 1\n \n No, no. This is lookup registering. Now I need to find it here this one values.  \n  \n \n  \nSpeaker 3\n \n So now we have one more column here. We can update this data item with.  \n  \n  \nSpeaker 1\n \n The help of data binding tool.  \n  \n \n  \nSpeaker 3\n \n Or we can manually modify it by adding one more column. As you can see, originally this column was not present \nhere because we created.  \n  \n  \nSpeaker 1\n \n Data item before adding new columns to the object.  \n  \n  \nSpeaker 3\n \n \n So now we have one more column.  \n  \n  \nSpeaker 1\n \n Here we have new data.  \n  \n \n  \nSpeaker 3\n \n 2% for sale, 50% for rental.  \n  \n  \nSpeaker 1\n \n We have to save it. Everything is okay. So our new column, our new values are here in our data part.  \n  \n \n  \nSpeaker 3\n \n Great.  \n  \n  \nSpeaker 1\n \n It looks like we still did not need to do any additional steps related to adding new column into existing object. But \nsome of you may start to feel some difficulties and such difficulties are.  \n  \n \n  \nSpeaker 3\n \n Connected with the way how server side system remembers information about objects. And unfortunately it may \nhappen that your.  \n  \n  \nSpeaker 1\n \n Kind of difficulty which you will finally face will be inability to display data here or inability to use new column a bit \nlater. In order to fix this, you may need maintenance tools for creation so which we already installed. Maintenance \ntools can help us to restart the app or clear regis if I need it.  \n  \n \n  \nSpeaker 3\n \n I will do this restart but a bit later.  \n  \n  \nSpeaker 1\n \n Now I will try to avoid this to show you what will happen if you did not perform a restart.  \n  \n \n  \nSpeaker 3\n \n So let's check will we be able.  \n  \n  \nSpeaker 1\n \n To make all the way all the settings as I plan to do this and will we need restart or not? So let's go. Now we have \noffer type which also has additional data. For sale value we have one additional.  \n  \n \n  \nSpeaker 3\n \n Data and for rental value we also.  \n  \n  \nSpeaker 1\n \n Have another additional data.  \n  \n \n  \nSpeaker 3\n \n And it's really lucky for us.  \n  \n  \nSpeaker 1\n \n That it's possible to get such additional data out from this lookup somewhere at the top where we can easily use \nsuch data columns. Now I plan to show you how to get data out from a lookup.  \n  \n \n  \nSpeaker 3\n \n We will use again page editor.  \n  \n  \nSpeaker 1\n \n Our task is to get decimal value from this offer type lookup and display it somewhere.  \n  \n \n  \nSpeaker 3\n \n The reason why we need to display.  \n  \n  \nSpeaker 1\n \n Is to make it visual and also to make it fully no code. So now you will see this trick how we can make data out from \nexisting lookup. We have new fields here, but if you add any it will add new column to your object and it will add a \nnew control to your page. So such columns I would like to.  \n  \n \n  \nSpeaker 3\n \n Call data fields and data fields represents.  \n  \n  \nSpeaker 1\n \n Connection between controls and real life data column of your main object that this page works with. But if you \nscroll down you will.  \n  \n \n  \nSpeaker 3\n \n Find interesting set of components called inputs.  \n  \n  \nSpeaker 1\n \n Inputs are designed to organize input only without direct connection with your main data object and without direct \nsave of any data that you input into this call. Simply speaking, inputs are controls that you use for inputs but not \nintended to save data from them or at least.  \n  \n \n  \nSpeaker 3\n \n Not save into main primary object with the standard tools. So maybe you will save it somewhere somehow else.  \n  \n  \nSpeaker 1\n \n Let me show you how I can use this for our task. I need number control. So I will take number and carefully drag and \ndrop it somewhere on my page. This is a just control just input field with no any connection to any kind of objects \nand the data model. But we have additional function which will be really helpful for us. We can ask system to fill this \nnumber control from some column that we.  \n  \n \n  \nSpeaker 3\n \n Can take out from existing lookups or.  \n  \n  \nSpeaker 1\n \n Existing from existing fields.  \n  \n \n  \nSpeaker 3\n \n Let me show you how we can do this.  \n  \n  \nSpeaker 1\n \n We go to data source, click on this lookup button and then we will search.  \n  \n \n  \nSpeaker 3\n \n So select some data field that we will use to fill this control.  \n  \n  \nSpeaker 1\n \n Realty related objects.  \n  \n \n  \nSpeaker 3\n \n It will show us all existing lookup.  \n  \n  \nSpeaker 1\n \n Columns in our realty object and then we will find offer type extended and system will show us only suitable on the \ncompatible field which will be you can be used within decimal number control.  \n   \nSpeaker 3\n \n  \n This is our commission percent so we.  \n  \n  \nSpeaker 1\n \n Will select it and here now you will see some changes.  \n  \n \n  \nSpeaker 3\n \n Title appeared the same as title of your column inside of your offer type.  \n  \n  \nSpeaker 1\n \n Lookup Code appeared and cannot be edited.  \n  \n \n  \nSpeaker 3\n \n This is read only and also you can unlock it.  \n  \n  \nSpeaker 1\n \n So this column will be constantly read only. Title position okay title on the page.  \n  \n \n  \nSpeaker 3\n \n And element code number input. So we can call it something like.  \n  \n  \nSpeaker 1\n \n Commission percent okay and save change of our element code. So simply speaking we made read only column \nthat will be automatically loaded each.  \n  \n \n  \nSpeaker 3\n \n Time offer type is set and each.  \n   \n Speaker 1\n \n Time offer type changed or cleared.  \n  \n \n  \nSpeaker 3\n \n Let's save our changes and we will.  \n  \n  \nSpeaker 1\n \n See how it works.  \n  \n \n  \nSpeaker 3\n \n By the way, please confirm with plus in our chat if you follow me.  \n  \n  \nSpeaker 1\n \n Directly during the session. So I need to know, should I.  \n  \n \n  \nSpeaker 3\n \n Allow you some pause to do some steps after I demonstrate it?  \n  \n  \nSpeaker 1\n \n Marcel, thank you, Andre. Thank you. Okay, I will go. Not too fast. So you will have enough time.  \n  \n \n  \nSpeaker 3\n \n If something is not good and you.  \n  \n  \nSpeaker 1\n \n Would like me to stop for a while, tell me please. Okay, Monica, thank you again. Secret and Rakhi, thank you for \nmentioning.  \n \n \n \n  \nSpeaker 3\n \n Great. So we saved our page.  \n  \n  \nSpeaker 1\n \n Then we can go to our page.  \n  \n \n  \nSpeaker 3\n \n Close, open it again. Now you see this commission percentage shown. Okay, Maybe we can reward the page.  \n  \n  \nSpeaker 1\n \n Just to suppress any possible issue with the browser cache. So let's open again. Apartment of New Orleans we have \noffer type sale.  \n  \n \n  \nSpeaker 3\n \n But you see this commission percent is not shown.  \n  \n  \nSpeaker 1\n \n Okay, let's try to select another one. Rental or I chose sale again. Okay, rental 50 sale 202. Okay, save it.  \n  \n \n  \nSpeaker 3\n \n Close. Such data will be not possible to see in list.  \n  \n  \nSpeaker 1\n \n So we have no reality column which will represent our commission percent. We can read it from the database.  \n  \n  \nSpeaker 3\n \n \n If we use related objects, if we.  \n  \n  \nSpeaker 1\n \n Use offer type and if we display.  \n  \n \n  \nSpeaker 3\n \n Commission percent and this commission percent will.  \n  \n  \nSpeaker 1\n \n Be obtained from corresponding record from our offer type. But you see, now we have some troubles.  \n  \n \n  \nSpeaker 3\n \n We have some troubles and system does.  \n  \n  \nSpeaker 1\n \n Not recognize commission percent column fully.  \n  \n \n  \nSpeaker 3\n \n Probably it also shows us some error messages, I believe. Let's try to reload it and see what happens.  \n  \n  \nSpeaker 1\n \n No, no error message. It just doesn't show us corresponding values. But they are definitely there. So we can go to \nlookups, we can find our offer type lookup.  \n  \n \n  \nSpeaker 3\n \n We can find columns there. So our commission percent is here.  \n   \nSpeaker 1\n  \n So what is happening and why we have such a trouble?  \n  \n \n  \nSpeaker 3\n \n And if you open the page, you.  \n  \n  \nSpeaker 1\n \n See no initial value here. But if you click there and back.  \n  \n \n  \nSpeaker 3\n \n To sale now you see this value.  \n  \n  \nSpeaker 1\n \n Is okay, save, close, open and still it doesn't work. So we still have some problem with this additional column. And \nthis problem unfortunately cannot be solved.  \n  \n \n  \nSpeaker 2\n \n By logging out and logging in.  \n  \n  \nSpeaker 1\n \n So let me show you. I try to log out.  \n  \n \n  \nSpeaker 2\n \n Maybe thinking.  \n  \n  \nSpeaker 1\n \n There is something like a user session cache issue. Then I try to log in.  \n \n \n \n  \nSpeaker 2\n \n When you work with client side, it's.  \n  \n  \nSpeaker 1\n \n Better to keep your browser console on.  \n  \n \n  \nSpeaker 2\n \n Probably you will see some interesting messages.  \n  \n  \nSpeaker 1\n \n There or a lot of red messages.  \n  \n \n  \nSpeaker 2\n \n In case of errors.  \n  \n  \nSpeaker 1\n \n So it's important to see it quick.  \n  \n \n  \nSpeaker 2\n \n Okay, opening our realty section, ignoring all.  \n  \n  \nSpeaker 1\n \n Warnings here, open it once again and you see no, it did not help us. So unfortunately logging out and logging in.  \n  \n \n  \nSpeaker 3\n \n Doesn'T help you and the only solution.  \n  \n  \nSpeaker 1\n \n Which we can do is restart our app or shut it down and start it again for example with the help of IIS Manager.  \n  \n \n  \nSpeaker 3\n \n But it will take more than minute.  \n  \n  \nSpeaker 1\n \n For us to normally shut down and start. So we have a quick solution. This is restart our app and we have a \nmaintenance tools for this restart application. This is the only way to quickly fix this issue. Now you see we have \nsome.  \n  \n \n  \nSpeaker 2\n \n Errors in browser console, but it looks.  \n  \n  \nSpeaker 1\n \n Like not very critical. So now restart is being performed. We can check what's happening with our memory and with \nour processes using task manage W3WP . Looks like we have the same worker.  \n  \n \n  \nSpeaker 3\n \n Process, but it has a comment to.  \n  \n  \nSpeaker 1\n \n Restart so possibly to rewards some of its assemblies.  \n  \n \n  \nSpeaker 2\n \n Okay, so we restarted our app.  \n   \n Speaker 1\n \n We go to reality section.  \n  \n \n  \nSpeaker 2\n \n Now we already will see the difference.  \n  \n  \nSpeaker 1\n \n Now you see that commission percent here.  \n  \n \n  \nSpeaker 2\n \n Was normally displayed in this list previously it was not normal. And if we open any record now, commission percent \nwill be fully normally loaded.  \n  \n  \nSpeaker 1\n \n When we just open the page. So you see commission percent loaded correctly if you take any other value. Yes. If you \ngo to rental. Yes, it's okay.  \n  \n \n  \nSpeaker 2\n \n So now we fixed it.  \n  \n  \nSpeaker 1\n \n And that's why I had to use this add on called maintenance tools for creature.  \n  \n \n  \nSpeaker 2\n \n Such add on helps me easily restart.  \n  \n  \nSpeaker 1\n \n The app with just waiting approximately 10 seconds. And it's much easier than restarting my.  \n  \n \n  \nSpeaker 2\n \n App by shutting down and starting again my worker process or recycling worker process.  \n  \n  \nSpeaker 1\n \n It's possible, so it will take significantly longer.  \n  \n \n  \nSpeaker 2\n \n Okay, so we fixed this question with.  \n  \n  \nSpeaker 1\n \n The commission percent and now our task.  \n  \n \n  \nSpeaker 2\n \n Is.  \n  \n  \nSpeaker 1\n \n To make actual calculation.  \n  \n \n  \nSpeaker 2\n \n So now we can think of how.  \n  \n  \nSpeaker 1\n \n To trace changes of price or commission percent.  \n  \n \n  \nSpeaker 2\n \n Luckily commission percent will be available for.  \n  \n  \nSpeaker 1\n \n Us the same as any attribute for a real column.  \n  \n \n  \nSpeaker 2\n \n So commission percent will be also an attribute for us.  \n  \n  \nSpeaker 1\n \n So if this value changes or if.  \n  \n \n  \nSpeaker 2\n \n This value changes, as you can see, it will be changed in case if.  \n  \n  \nSpeaker 1\n \n You clear in case if you set.  \n  \n \n  \nSpeaker 3\n \n Some offer type or if you change.  \n  \n \n  \nSpeaker 2\n \n To another offer type, commission percent is changed.  \n  \n  \nSpeaker 1\n \n So price or commission percent should trigger recalculation of commission.  \n  \n  \nSpeaker 2\n \n \n I will show you how we can do this. Let's go to our configuration section.  \n  \n  \nSpeaker 1\n \n Find client modules. We are working with form page. So when we look at this stuff you can see this is a real T form \npage. That's why I know where to open corresponding code.  \n  \n \n  \nSpeaker 2\n \n So you can also open the code.  \n  \n  \nSpeaker 1\n \n From page editor if you want. I just feel it's more comfortable to work here.  \n  \n \n  \nSpeaker 2\n \n So form page open source code.  \n  \n  \nSpeaker 1\n \n That's how we can go directly to the JavaScript part of it and See what's happening.  \n  \n \n  \nSpeaker 2\n \n Andrean is asking is it possible to use this add on in a cloud environment?  \n  \n  \nSpeaker 1\n \n Yes, all creation apps from Marketplace can.  \n  \n \n  \nSpeaker 2\n \n Be installed on cloud systems. Absolutely the same as you can install it locally. When you install any add on, you use \nonly web interface. So it will work absolutely the same.  \n   \n Speaker 1\n \n Let me show you. So you go to Settings, you go.  \n  \n \n  \nSpeaker 2\n \n To Application management, Application Hub and then.  \n  \n  \nSpeaker 1\n \n You click Install or Add new application and you can select something from this list or you can select Marketplace \nPowered.  \n  \n \n  \nSpeaker 2\n \n And it will work absolutely the same.  \n  \n  \nSpeaker 1\n \n If you run it in cloud. Thank you Adrian for your interesting question. Let's move on with your code. So we found \nreality form page.  \n  \n \n  \nSpeaker 2\n \n We decided to open directly its source code.  \n  \n  \nSpeaker 1\n \n That's how we open this tab.  \n  \n \n  \nSpeaker 2\n \n We can try to find our commission diff part.  \n  \n  \nSpeaker 1\n \n You can see this our commission column. It was added by help of page editor.  \n  \n \n  \nSpeaker 3\n \n So practically we should not modify this.  \n  \n \n  \nSpeaker 2\n \n But it will be interesting to see how it will be connected with the.  \n  \n  \nSpeaker 1\n \n Data attribute PDS USR commission USR so.  \n  \n \n  \nSpeaker 2\n \n This is our attribute name.  \n  \n  \nSpeaker 1\n \n Okay, we can collapse temporary all such things.  \n  \n \n  \nSpeaker 2\n \n I will only show you.  \n  \n  \nSpeaker 1\n \n So price. Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config. So attributes of view model config represent.  \n  \n \n  \nSpeaker 2\n \n Set of variables that can be saved.  \n   \nSpeaker 1\n  \n On the page level.  \n  \n \n  \nSpeaker 2\n \n And we already started to work with.  \n  \n  \nSpeaker 1\n \n It yesterday I just tried to explain you such attributes and now we will work with them. So for the price column we \nsee this attribute name. Okay?  \n  \n \n  \nSpeaker 2\n \n And for the percent here we have this attribute name and finally we will save our data into commission attribute \nwhich has this name. This is important.  \n  \n  \nSpeaker 1\n \n Okay, I will collapse anything else to make it clear and quite compact for you. So we are interested in price attribute.  \n  \n \n  \nSpeaker 2\n \n Percent attribute and commission attribute.  \n  \n  \nSpeaker 1\n \n Okay? Nothing else.  \n  \n \n  \nSpeaker 2\n \n Model config is not interesting. And then we will do something with handlers.  \n  \n  \nSpeaker 1\n \n I already have an example which will make it possible for us to do it quickly. So let me show you this example of the \ncode examples reading UI and then we need calculated field example. So now I will use a special pre designed \nhandler name.  \n  \n \n  \nSpeaker 3\n \n Probably we need to look at Academy.  \n  \n  \nSpeaker 1\n \n To explain all possible handler names. So let's go to Academy, let's go to guides development front end Freedom UI \nand somewhere we will see some client schema references handlers. Yes, this is an article explaining handlers and \ntheir definition. So we have some set of standard.  \n  \n \n  \nSpeaker 3\n \n Names for handlers and they represent some.  \n  \n  \nSpeaker 1\n \n Important steps of page life cycle. In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed.  \n  \n \n  \nSpeaker 3\n \n At our page changes the attribute.  \n  \n  \nSpeaker 1\n \n So this handler is called handle view model attribute change request. Let me show you my example.  \n  \n \n  \nSpeaker 3\n \n Handle view model attribute change request.  \n  \n  \nSpeaker 1\n \n So simply speaking, this handler will be called each time when any column value changes at our user at our client \nside page in our browser. So this handler will be triggered quite often. We copy this code, we will also paste it for you \nand we will.  \n   \n \n Speaker 3\n \n Copy it and put it to our.  \n  \n  \nSpeaker 1\n \n Examples in our handlers area. So this is an array, we have.  \n  \n \n  \nSpeaker 3\n \n To keep syntax well.  \n  \n  \nSpeaker 1\n \n And that's why I try to paste it like this, keeping commas, brackets and so on.  \n  \n \n  \nSpeaker 3\n \n So now you see, this piece of.  \n  \n  \nSpeaker 1\n \n Code was just simply added.  \n  \n \n  \nSpeaker 2\n \n This piece of code was added and.  \n  \n  \nSpeaker 1\n \n Let'S check what we can do with it. Of course we have to take care about attribute names because they are always \nunique. Each time you do the same example again, you will see different unique names.  \n  \n \n  \nSpeaker 2\n \n So how we can check it?  \n  \n  \nSpeaker 1\n \n This handler will be called quite often for each column change. And in order to make it efficient, we need to check if \nsome column.  \n  \n \n  \nSpeaker 2\n \n That we are interested had changed or not. If yes, then we do our recalculation.  \n  \n  \nSpeaker 1\n \n If not, we should do nothing in.  \n  \n \n  \nSpeaker 2\n \n Order to save system resources. So we check request property here and.  \n  \n  \nSpeaker 1\n \n We have attribute name.  \n  \n \n  \nSpeaker 2\n \n And if this attribute name is our.  \n  \n  \nSpeaker 1\n \n Price, then this is logical or attribute name is our commission percent.  \n  \n \n  \nSpeaker 2\n \n Then we do some calculation, but we.  \n  \n  \nSpeaker 1\n \n Have to actualize our names so you.  \n  \n \n  \nSpeaker 2\n \n Can see our list of attributes for the price.  \n  \n  \nSpeaker 1\n \n Here is our attribute name. Let's copy it and carefully paste here. And also as we already have it in our clipboard here \nwhen we need.  \n  \n \n  \nSpeaker 2\n \n To read it, then the same for commission percent. Let's make sure this is our attribute name.  \n  \n  \nSpeaker 1\n \n Let me show you. Yes, it looks like it is already.  \n  \n \n  \nSpeaker 2\n \n The same because generated by system and.  \n  \n  \nSpeaker 1\n \n I usually do same examples. That's a bit strange shifts. Okay, Very unusual. Okay, we did this. So so now you see if \nprice changed, if commission percent changes, then we take price value. We take commission value.  \n  \n \n  \nSpeaker 2\n \n So how we do this? I already showed you yesterday.  \n  \n  \nSpeaker 1\n \n We have to use operator await. Then request is our argument dollar context and then we have access to our certain \nattribute.  \n   \n \n Speaker 2\n \n So we have just a variable in.  \n  \n  \nSpeaker 1\n \n Our JavaScript code for price for percent. Then we do calculation of commission as result of multiplication and don't \nForget to.  \n  \n \n  \nSpeaker 2\n \n Divide by 100 because commission percent represents.  \n  \n  \nSpeaker 1\n \n Percent, not just a decimal value. Okay, and then we will save our commission percent. We have to Provide correct \nvalue. Here is our commission attribute.  \n  \n \n  \nSpeaker 2\n \n If we do it incorrectly, we will fail.  \n  \n  \nSpeaker 1\n \n So this is important. Our commission value will be finally saved into this. Okay, now it's ready and we can check how \nit works by saving our code. I provided an example for you, so you can also check out your example. Just a second. \nOkay, saving was successful and we can move on with our checks. Let's go to realty section, open the page. Let's try \nto trigger change of price or change offer type, for example. Like this, nothing happens.  \n  \n \n  \nSpeaker 2\n \n Probably it's because of cache.  \n  \n  \nSpeaker 1\n \n So let's reload the page. Reloading helps to fight with browser cache effect. Open again, try to make changes.  \n   \nSpeaker 2\n \n  \n Now you can see that recalculation works well.  \n  \n  \nSpeaker 1\n \n So we have our price for rental of our apartment.  \n  \n \n  \nSpeaker 2\n \n And you see our commission is correctly.  \n  \n  \nSpeaker 1\n \n Recalculated and we can save our data.  \n  \n \n  \nSpeaker 2\n \n Commission will be also saved.  \n  \n  \nSpeaker 1\n \n We can see it here. Commission is our legal valid column, so it will be saved.  \n  \n \n  \nSpeaker 2\n \n Let's open some sale example.  \n  \n  \nSpeaker 1\n \n Now you can see.  \n  \n \n  \nSpeaker 2\n \n Okay, price was not changed.  \n  \n  \nSpeaker 1\n \n Commission is already calculated. Let's check if we switch from sale to rental.  \n  \n \n  \nSpeaker 2\n \n You see, commission was recalculated.  \n  \n  \nSpeaker 1\n \n If we switch back to sale, it's.  \n  \n \n  \nSpeaker 2\n \n Also quite well calculated.  \n  \n  \nSpeaker 1\n \n So now you see that our commission is quite fair for this amount of price for the house.  \n  \n \n  \nSpeaker 2\n \n So our recalculation also works well and it shows even when page is opened.  \n  \n  \nSpeaker 1\n \n It looks like when page is opened our data filled in client side. So it triggers recalculation even if we.  \n  \n \n  \nSpeaker 2\n \n Do not change anything.  \n  \n  \nSpeaker 1\n \n But just open the page. Yes, we'll see.  \n \n \n \n  \nSpeaker 2\n \n So it looks like our calculation is.  \n  \n  \nSpeaker 1\n \n Already done and works quite well.  \n  \n \n  \nSpeaker 2\n \n And of course everything works quite smoothly.  \n  \n  \nSpeaker 1\n \n When we have a pre programmed examples where everything is correct.  \n  \n \n  \nSpeaker 2\n \n But in real life you will do.  \n  \n  \nSpeaker 1\n \n Your own examples where some errors or mistakes could happen. So you will need to know how to debug this code.  \n  \n \n  \nSpeaker 2\n \n I will show you how to make.  \n  \n  \nSpeaker 1\n \n Such debug and you will see that's not so difficult.  \n  \n \n  \nSpeaker 2\n \n One of the easiest ways to debug is to put a special debugger breakpoint into your code.  \n  \n  \nSpeaker 1\n \n Like this, the word debugger. If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code. And if your browser has opened browser developer console. So if \nbrowser developer console is on.  \n  \n \n  \nSpeaker 2\n \n Then your debugging will work for you.  \n  \n  \nSpeaker 1\n \n But this approach has also disadvantage.  \n  \n \n  \nSpeaker 3\n \n And when you finished your debugging, you.  \n  \n  \nSpeaker 1\n \n Should not forget to remove all your debugger lines.  \n  \n \n  \nSpeaker 2\n \n Save your changes again.  \n  \n  \nSpeaker 1\n \n And ideally you have to run your.  \n  \n \n  \nSpeaker 2\n \n Logic again just to make sure you did not accidentally damage anything. Because when you save, you have chance.  \n   \nSpeaker 1\n  \n That something will be incorrectly saved. Something will go not so well. Okay, so let me show you how we can do \nthis type of debugging.  \n  \n \n  \nSpeaker 2\n \n I need to explain and I need to show you.  \n  \n  \nSpeaker 1\n \n We can go to this is easy.  \n  \n \n  \nSpeaker 2\n \n Way to put debugger word. I will show you a bit more professional way to debug. We can go to our section open \npage which we plan to debug.  \n  \n  \nSpeaker 1\n \n Then we enable browser developer console.  \n  \n \n  \nSpeaker 2\n \n You can do it by F12 or control shift I.  \n  \n  \nSpeaker 1\n \n And when you do this, you then.  \n  \n \n  \nSpeaker 2\n \n Go to Sources tab. You see, we already opened some set of scripts here. We don't need it now.  \n  \n  \nSpeaker 1\n \n Let's close everything and then we can.  \n   \n \n Speaker 2\n \n Just search and you see we have.  \n  \n  \nSpeaker 1\n \n A USR reality form page.  \n  \n \n  \nSpeaker 2\n \n Page part of the URL. So it's a page, it's a name of client module and we can try to find it. Control p Open file.  \n  \n  \nSpeaker 1\n \n Let's try Control p open file. Which one? Reality form page USR realty form page. We have two options here, probably \nbecause of browser cache.  \n  \n \n  \nSpeaker 2\n \n Okay, if you do not want to.  \n  \n  \nSpeaker 1\n \n Guess which one is correct, we can go back reload the page.  \n  \n \n  \nSpeaker 2\n \n So we will suppress any kind of.  \n  \n  \nSpeaker 1\n \n Cache and then we will open it again. And we have just one option, single option to select corresponding file Control \nP . Okay, open the page, then Control p open file and press Control P realty.  \n  \n  \nSpeaker 2\n \n \n And you see only one form page here.  \n  \n  \nSpeaker 1\n \n So no any cached, no any duplicates that will make you confused. And you probably may select Incorrect 1. So let's \nopen the only one you.  \n  \n \n  \nSpeaker 2\n \n See set of equalizable strings here. But the most important of course is our code. And you will see our module text \nhere.  \n  \n  \nSpeaker 1\n \n Big part with view config div some.  \n  \n \n  \nSpeaker 2\n \n Part view model config. And finally you will have your header handlers. Part we are interested in debugging \nsomewhere here.  \n  \n  \nSpeaker 1\n \n For example, we can click on this.  \n  \n \n  \nSpeaker 2\n \n Line number which will make a breakpoint for us.  \n  \n  \nSpeaker 1\n \n So it's the same as debugger, but.  \n  \n \n  \nSpeaker 2\n \n It doesn't change the source of our client module.  \n \n \n  \nSpeaker 1\n \n So we can use browser debugging tools for this.  \n  \n \n  \nSpeaker 2\n \n Click on the line number.  \n  \n  \nSpeaker 1\n \n That's how we activate breakpoint. So here we have one breakpoint that we just clicked here. Then when your \nbrowser developer console is.  \n  \n \n  \nSpeaker 2\n \n On and execution comes to this line, execution will be stopped.  \n  \n \n  \nSpeaker 3\n \n Let me show you.  \n  \n  \nSpeaker 1\n \n If you change for example offer type from rental to sale, you see these.  \n  \n \n  \nSpeaker 2\n \n Lines are executed and now code stops and we can go line by line.  \n  \n  \nSpeaker 1\n \n Now we have to use tools that.  \n  \n  \nSpeaker 2\n \n \n Will help us to proceed with this piece. The most popular, I think the Most.  \n  \n  \nSpeaker 1\n \n Efficient is F10 which is a step over running of a line without going into sub functions for it. So I will press F10. Now \nyou see my price was taken from the column percent. Now you see new percent was taken when offer type \nchanged.  \n  \n \n  \nSpeaker 2\n \n Then you can see commission was recalculated. Now you will see commission will be set here.  \n  \n  \nSpeaker 1\n \n So my commission is now 26, so.  \n  \n \n  \nSpeaker 2\n \n I expect it to be saved here. Yes, 26 and then we move on.  \n  \n  \nSpeaker 1\n \n So here we can use resume F8 hotkey to normally continue execution.  \n  \n \n  \nSpeaker 2\n \n That's how we can check this code. If we change the price.  \n  \n  \nSpeaker 1\n \n You will see the Same I press F10 I.  \n  \n \n  \nSpeaker 2\n \n Have another commission F8. Okay, we can make more serious price.  \n   \n Speaker 1\n \n For an apartment.  \n  \n \n  \nSpeaker 2\n \n And obviously we'll have more serious commission. So that's how you can debug your code.  \n  \n  \nSpeaker 1\n \n Also, if your code has something has some obvious mistakes and causes runtime errors.  \n  \n \n  \nSpeaker 3\n \n You will also see such runtime errors in your sources tab.  \n  \n  \nSpeaker 1\n \n You will also see your console which.  \n  \n \n  \nSpeaker 3\n \n Will be full of red messages. So in case if your code fails.  \n  \n  \nSpeaker 1\n \n In runtime of course you should take care about it and look at your console tab and check if everything works well or \nnot.  \n  \n \n  \nSpeaker 3\n \n When you finished your debugging you should.  \n  \n  \nSpeaker 1\n \n Click on wine number again removing your breakpoint and then your code will run without stops.  \n \n \n \n  \nSpeaker 3\n \n It's interesting to see what value we will see in case if we will clear overtype.  \n  \n  \nSpeaker 1\n \n Now let's check. You see that percent is empty so percent is null. Trying to multiply null on price results in zero.  \n  \n \n  \nSpeaker 2\n \n So that's how we will clear.  \n  \n  \nSpeaker 1\n \n Okay, when we have some valid percent, we can move on with F8 and you see setting is done.  \n  \n \n  \nSpeaker 3\n \n If you have any questions related to.  \n  \n  \nSpeaker 1\n \n This debugging, please tell me. As you can see, debugging can be.  \n  \n \n  \nSpeaker 2\n \n Really effective if your code is more.  \n  \n  \nSpeaker 1\n \n Complex, if you have sub functions, if.  \n  \n \n  \nSpeaker 3\n \n You are not sure what values you.  \n  \n  \nSpeaker 1\n \n Finally get from your code so you can check it out with the help of browser developer tools. Okay, probably we got an \nhour of.  \n  \n \n  \nSpeaker 3\n \n Our session, so let's make a few.  \n  \n  \nSpeaker 1\n \n Five minutes break and then move on.  \n  \n \n  \nSpeaker 3\n \n With next topics related to programming. I also plan to show you some.  \n  \n  \nSpeaker 1\n \n Examples of programming of validation. So I plan to show you validation and.  \n  \n \n  \nSpeaker 3\n \n Different validators. So different clones will be used for universal validation.  \n  \n  \nSpeaker 1\n \n And also I plan to show you some examples of so we already displayed.  \n  \n \n  \nSpeaker 3\n \n Debugging but also you need to know a bit more about logging.  \n  \n  \nSpeaker 1\n \n Okay, so let's make a five minutes break foreign.  \n  \n \n  \nSpeaker 2\n \n So today I want you to see.  \n  \n  \nSpeaker 1\n \n Some more technical things about how client.  \n  \n \n  \nSpeaker 2\n \n Side works and how we can do.  \n  \n \n  \nSpeaker 3\n \n Some technical steps with it. So we already know how to debug our code.  \n  \n  \nSpeaker 1\n \n I would also like to you to see that we have quite developed logging. So I will show you login mechanisms.  \n  \n \n  \nSpeaker 3\n \n That are available on Creature Platform.  \n  \n  \nSpeaker 1\n \n Here is our installed app and this is our folder with installed application.  \n  \n \n  \nSpeaker 3\n \n We go to terrasoftware web and you.  \n   \nSpeaker 1\n  \n Already know that Creature uses analog libraries to provide the different logs and save them in Creature web server.  \n  \n \n  \nSpeaker 3\n \n The most important log file for us.  \n  \n  \nSpeaker 1\n \n Is invoke targets config because here we can change default file to save our all default folder to save all our logs.  \n  \n \n  \nSpeaker 3\n \n You may be interested in the way.  \n  \n  \nSpeaker 1\n \n How we can do some logging. So we have so called appenders and.  \n  \n \n  \nSpeaker 3\n \n Targets and probably have to start from appender first.  \n  \n  \nSpeaker 1\n \n So analog config I should use analog config first.  \n  \n \n  \nSpeaker 3\n \n And we have a lot of loggers.  \n  \n  \nSpeaker 1\n \n As well appender so they are synonym. Logger or appender they are synonyms.  \n   \n \n Speaker 3\n \n So you can see a lot of.  \n  \n  \nSpeaker 1\n \n Different loggers registered and appenders are settings that will collect log messages.  \n  \n \n  \nSpeaker 3\n \n And finally appenders will be connected with physical files. So you see we have more than.  \n  \n  \nSpeaker 1\n \n 100 different loggers and logger is a logical thing that you can use in your program code. Appender is a place that is \nused to collect your data and save it. So we have a lot of loggers, a lot of targets. Sorry, targets. And you see we have \nso appenders it means it's a setting that represents physical file. Also targets are synonym and appenders shows us \nthat we also have a lot.  \n  \n \n  \nSpeaker 3\n \n Of different logs that are saved here. And you can see different messages, different settings. So what do you need to \nknow about this?  \n  \n  \nSpeaker 1\n \n So Croatia has a lot of default.  \n  \n \n  \nSpeaker 3\n \n Types of logs and all of them will be saved in a folder which.  \n  \n  \nSpeaker 1\n \n We specify when we install our application. So in Analog Targets config line number three we have setting to save \nour logs to. By default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we \ncan find logs and as you can see we have zero, which means main application logs.  \n   \n \n Speaker 3\n \n And log folder which. Which. Sorry, a log folder which means loader part. Loader part is not so interesting because.  \n  \n  \nSpeaker 1\n \n It has no customizable items that will.  \n  \n \n  \nSpeaker 3\n \n Be interested for us to. Interesting for us to see.  \n  \n  \nSpeaker 1\n \n So Loader is very technical and we have just several log files here, nothing very spectacular. And zero folder is what \nwe really need because it's a log set of.  \n  \n \n  \nSpeaker 3\n \n Logs for our main application. And then we go inside, we see.  \n  \n  \nSpeaker 1\n \n Logs for each separate date. So you see for different days you.  \n  \n \n  \nSpeaker 3\n \n Have logs in different folder which makes it easy to find. And then you see different logs here. In total we have more \nthan 50.  \n  \n  \nSpeaker 1\n \n Different files with logs saved here. So a lot of different logs, a lot of different files.  \n  \n  \nSpeaker 3\n \n \n And what is the most important for.  \n  \n  \nSpeaker 1\n \n You from the maintenance point of view? I think the most important is error log. Error log represents all exceptions \nand keeps information about all exceptions that happened in your system. So error log shows all errors and.  \n  \n \n  \nSpeaker 3\n \n Of course you should take care about.  \n  \n  \nSpeaker 1\n \n It because usually it is important and sometimes you may find some errors which are not related to your changes. \nSo you may simply speaking find some errors from base product like this one.  \n  \n \n  \nSpeaker 3\n \n Error parent schema is now parent ID.  \n  \n  \nSpeaker 1\n \n Sets to empty and so on.  \n  \n \n  \nSpeaker 3\n \n But it looks like nothing very critical for our application. You see the same error many times.  \n  \n  \nSpeaker 1\n \n And it looks like not very important.  \n  \n \n  \nSpeaker 3\n \n But if you will get some error messages here related to your functionality and your users will start to complain about.  \n   \n Speaker 1\n \n Something is not working. Of course you cannot ignore this.  \n  \n \n  \nSpeaker 3\n \n You may ask me why we have.  \n  \n  \nSpeaker 1\n \n Some errors in a wait production release software. The answer is that Croatia is quite big and we have more than \n200 libraries. We have millions of use cases that.  \n  \n \n  \nSpeaker 3\n \n Could be checked and used.  \n  \n  \nSpeaker 1\n \n So it's really hard to test everything and to polish any line of code, so it should show it so it could not fail in any way. \nSo in real life, in any big system, some errors usually happen. But in our case it's not so.  \n  \n \n  \nSpeaker 3\n \n Critical so you can simply ignore.  \n  \n  \nSpeaker 1\n \n But if you will find another errors with some user complaints, of course you should take care of it. So from \nmaintenance point of view, I think looking at such error log is quite important. And this is something that you should.  \n  \n \n  \nSpeaker 3\n \n Do regularly if you support some big creation implementation by your own. In cloud conditions, looking at such logs.  \n  \n  \nSpeaker 1\n \n Is complicated because you will not be.  \n  \n \n  \nSpeaker 3\n \n Able to directly go to cloud based file system to get it.  \n  \n  \nSpeaker 1\n \n So you only can ask for help at support team. By the way, you should know Support team lives here support \ncreation.com so they work 24, 7. It means you can ask them any time, anytime you need, even on weekends.  \n  \n \n  \nSpeaker 3\n \n And if you ask for example for a yesterday logs for a searching website.  \n  \n  \nSpeaker 1\n \n They can give it for you. But it will be more efficient for.  \n  \n \n  \nSpeaker 3\n \n You if you can collect Logs by yourself. And that's why I plan to show.  \n  \n  \nSpeaker 1\n \n You some special tool which makes it.  \n  \n \n  \nSpeaker 3\n \n Easier if you need to collect logs.  \n  \n  \nSpeaker 1\n \n From cloud based environment. So I will show you Now I'm.  \n   \nSpeaker 3\n \n \n \n Talking about telemetry log for creation. This is a special add on which.  \n  \n  \nSpeaker 1\n \n We can get from Application Hub New application Marketplace powered.  \n  \n \n  \nSpeaker 3\n \n Then we can just search for the.  \n  \n  \nSpeaker 1\n \n Word log and we will easily find this Hokku app or telemetry log for creation. So Hoku is a company physically this \ncompany is like founded by our creation employees. And this is something just so you should consider it made by \ncreature and.  \n  \n \n  \nSpeaker 3\n \n You can install this telemetry log.  \n  \n  \nSpeaker 1\n \n This is for free. Agree.  \n  \n \n  \nSpeaker 3\n \n Confirm.  \n  \n  \nSpeaker 1\n \n You see it was just updated 2023 November.  \n  \n \n  \nSpeaker 3\n \n Okay. And install it.  \n  \n  \nSpeaker 1\n \n It takes just almost no time, maybe 20 seconds. And you will see that new app.  \n  \n \n  \nSpeaker 3\n \n Is installed to our system.  \n  \n  \nSpeaker 1\n \n So you'll be able to collect vlogs, but you'll be able to collect only runtime created logs.  \n  \n \n  \nSpeaker 3\n \n So it's like listener for logs.  \n  \n  \nSpeaker 1\n \n You will not be able to collect.  \n  \n \n  \nSpeaker 3\n \n Yesterday logs, but if you do some.  \n  \n  \nSpeaker 1\n \n Experiments and you need to see how logs look like when you do your experiments in cloud. So this app will be \nextremely helpful for you because it shows you all the messages all the log messages that.  \n  \n \n  \nSpeaker 3\n \n Are saved on disk.  \n  \n  \nSpeaker 1\n \n So you can listen to any logs saved on disk.  \n  \n \n  \nSpeaker 3\n \n Let's patiently wait for its installation.  \n  \n  \nSpeaker 1\n \n Surprisingly it takes a bit longer than I expected. But it's okay now it's not so critical.  \n  \n \n  \nSpeaker 3\n \n Maybe we can look at browser developer.  \n  \n  \nSpeaker 1\n \n Console here, but usually no trouble should be present. Okay, wait for a minute. And I'm also curious about what is \nhappening at my website.  \n  \n \n  \nSpeaker 3\n \n Oh, dotnet exe was running so it looks like compilation was done.  \n  \n  \nSpeaker 1\n \n So system decided it needs to compile and that's why it was so slow. Okay, finally our compilation finished. We can \ndownload installation log to see what it took so long and what.  \n  \n \n  \nSpeaker 3\n \n Operation took so long to install.  \n  \n  \nSpeaker 1\n \n So now you will see results. Okay, great.  \n   \nSpeaker 3\n \n \n \n Here's our installation logs.  \n  \n  \nSpeaker 1\n \n Started 26:58, so almost 27, finished 29.  \n  \n \n  \nSpeaker 3\n \n It looks like 2 minutes and 3.  \n  \n  \nSpeaker 1\n \n Seconds and yeah, it's a bit longer than usual.  \n  \n \n  \nSpeaker 3\n \n And 27:15, 28:56 so it looks like.  \n  \n  \nSpeaker 1\n \n Full configuration compilation was performed. That's why it took so long and okay, no problem, we can live with it.  \n  \n \n  \nSpeaker 3\n \n So now you will see one more app here in this list.  \n  \n  \nSpeaker 1\n \n Telemetry and you can reload this tab.  \n  \n \n  \nSpeaker 3\n \n Now you will see one more item at our settings page.  \n   \n Speaker 1\n \n Previously called System Designer. Currently it's called Settings.  \n  \n \n  \nSpeaker 3\n \n So I will show you how you.  \n  \n  \nSpeaker 1\n \n Can use this telemetry log here? Yes. Now let me show you. We can check. You probably remember we looked at our \nlogger and appenders. So we have appenders, we have loggers here. So we can listen for a certain.  \n  \n \n  \nSpeaker 3\n \n Logs in order to get some error.  \n  \n  \nSpeaker 1\n \n Messages for the certain, let's say subject or certain area of functionality. And you can also listen everything like \nthis, which will mean that you look and get every message. And I'll try to find a logger for SQL. Do we have anything? \nNo, Let me find a corresponding logger.  \n  \n \n  \nSpeaker 3\n \n SQL.  \n  \n  \nSpeaker 1\n \n Oh, so it's called JSoft Core DB executor SQL log appender. Okay, will it be DB executor?  \n  \n \n  \nSpeaker 3\n \n And we're only interested in for example errors.  \n  \n  \nSpeaker 1\n \n So I plan to make example of listening of DB execution errors.  \n  \n \n  \nSpeaker 3\n \n And I especially will do some example which makes such an error. Let's go to customer360, find accounts and.  \n  \n  \nSpeaker 1\n \n Let'S try to remove some account. Obviously we will not be able to do this because it has some connections with \nexisting contacts. So I try to delete this account.  \n  \n \n  \nSpeaker 3\n \n Now you see no messages here. Try to do this. Of course I see error messages and.  \n  \n  \nSpeaker 1\n \n Here I expect to get.  \n  \n \n  \nSpeaker 3\n \n I expect to get error messages. Oh, I should subscribe. I should remember to subscribe.  \n  \n  \nSpeaker 1\n \n Okay, let's try to delete once again. Yes, error message appears logger pattern. Maybe you should use info subscribe. \nI will try to delete it once again. Yes, now you see, funny thing, but.  \n  \n \n  \nSpeaker 3\n \n It was not an error, it was just a warning.  \n  \n  \nSpeaker 1\n \n So like yellow color, which means this.  \n   \nSpeaker 3\n \n  \n Is not an error, just a warning.  \n  \n  \nSpeaker 1\n \n And okay, so I got some text message from our DB executor and you.  \n  \n \n  \nSpeaker 3\n \n See that my message has an error. So exception occurred, statement terminated.  \n  \n  \nSpeaker 1\n \n And you see that we get some.  \n  \n \n  \nSpeaker 3\n \n Text messages and logs. You can also get the same logs.  \n  \n  \nSpeaker 1\n \n If you go to your files, you.  \n  \n \n  \nSpeaker 3\n \n Will find SQL JSON. Here we will have similar information.  \n  \n  \nSpeaker 1\n \n So you see my delete statement failed, so it conflicted with foreign reference constraint.  \n  \n \n  \nSpeaker 3\n \n And it's interesting that for the SQL.  \n   \n Speaker 1\n \n Errors, system logs only queries that were failed. So only queries that failed to be.  \n  \n \n  \nSpeaker 3\n \n Executed at the database. In my case, I intentionally made an.  \n  \n  \nSpeaker 1\n \n Error for the database level and showed you how you can handle it and how you can track it. You can also use all \nexisting loggers for all messages subscribe. You will have plenty of different messages here.  \n  \n \n  \nSpeaker 3\n \n Just when you go to any part.  \n  \n  \nSpeaker 1\n \n Of your system, when you open any.  \n  \n \n  \nSpeaker 3\n \n Section, you will start to get more and more logs.  \n  \n  \nSpeaker 1\n \n Because system usually writes something to logs and it has quite verbose logging. So you will have more and more \ndata. You see more messages appeared, some of them are useless for you and so.  \n  \n \n  \nSpeaker 3\n \n You have to play a bit with it. But finally you will be able to.  \n  \n  \nSpeaker 1\n \n Do the same as you can do with log files.  \n  \n \n  \nSpeaker 3\n \n So this telemetry log for creation will.  \n  \n  \nSpeaker 1\n \n Be extremely helpful in case if you.  \n  \n \n  \nSpeaker 3\n \n Need to make some experiments and get.  \n  \n  \nSpeaker 1\n \n Logs directly in online mode from your cloud environments, including even production systems. So this can be really \nhelpful for you. Please remember about this telemetry log and we have some buttons here. What is this?  \n  \n \n  \nSpeaker 3\n \n As you can see we have some help message explaining how to use this.  \n  \n  \nSpeaker 1\n \n Some button which shows or it runs and stops a listening of logs. So green means run, red means stopped and \nthat's how you can also use it.  \n  \n \n  \nSpeaker 3\n \n So listening all of the logs will.  \n  \n  \nSpeaker 1\n \n Provide you a lot of verbose noisy messages.  \n   \nSpeaker 3\n \n \n \n It's up to you.  \n  \n  \nSpeaker 1\n \n So maybe this will be interesting for you. So just remember the name of the tool is Telemetry for Creatio. You can \neasily install it from Marketplace. Okay, so what else you need to know about client site? We will work with details \nsoon and.  \n  \n \n  \nSpeaker 3\n \n Before we doing this I need to explain you how to do validation. As you can see my previous program.  \n  \n  \nSpeaker 1\n \n Was a bit more oriented on classic ui. So sometimes I jump from topics topics and that's why we are not following \ndirectly from this schedule. So I plan to provide you material like step by step slightly improving complexity of topics. \nSo I think it's not so hard, not so difficult for you to study this material this way.  \n  \n \n  \nSpeaker 3\n \n So let's move on validation. What it is about and this is.  \n  \n  \nSpeaker 1\n \n Check of data before it will be.  \n  \n \n  \nSpeaker 3\n \n Saved at server side. Let's return back to our reality section and let's look at our data value.  \n  \n  \nSpeaker 1\n \n So when we add new values it may happen that user may save some very incorrect values. For example, we can try \nto save negative price. As you can see as a result we have negative commission.  \n  \n  \nSpeaker 3\n \n \n It's also possible to save negative area and also system does not prevent us from doing such things.  \n  \n  \nSpeaker 1\n \n So we can save it.  \n  \n \n  \nSpeaker 3\n \n And as you can see from system.  \n  \n  \nSpeaker 1\n \n Point of view there is no troubles, no errors.  \n  \n \n  \nSpeaker 3\n \n But of course we have trouble from.  \n  \n  \nSpeaker 1\n \n Business point of view because we can't.  \n  \n \n  \nSpeaker 3\n \n Normally summarize values, we can't normally calculate commission.  \n  \n  \nSpeaker 1\n \n So we have to make some kind of protection for our data input. And luckily we have this on the platform level as \nexisting validation tools. Let me show you how to use it.  \n  \n \n  \nSpeaker 3\n \n We also need to Program this.  \n   \nSpeaker 1\n  \n Unfortunately validation is only available when you do programming, so it's not a no code setting.  \n  \n \n  \nSpeaker 3\n \n But we are not afraid of this.  \n  \n  \nSpeaker 1\n \n Let's go to our configuration section, find our form page again, open its source code again.  \n  \n \n  \nSpeaker 3\n \n And I need to show.  \n  \n  \nSpeaker 1\n \n You some examples at our Academy documentation.  \n  \n \n  \nSpeaker 3\n \n Which will really help you.  \n  \n  \nSpeaker 1\n \n So we have some architectural SDK things.  \n  \n \n  \nSpeaker 3\n \n At front end documentation, but we have.  \n  \n  \nSpeaker 1\n \n A lot of useful examples in platform customization area of our academy. And we have examples for Freedom UI for \nfields examples and we have examples of population of fields. So it's example of calculations that we already \ndiscussed.  \n  \n \n  \nSpeaker 3\n \n And we have example of validation of.  \n  \n \n  \nSpeaker 2\n \n Field which we are interested right now.  \n  \n  \nSpeaker 1\n \n So I will share useful links for such articles. I recommend you to read it or just maybe look at it.  \n  \n \n  \nSpeaker 3\n \n So let me explain how we plan to move on.  \n  \n  \nSpeaker 1\n \n We have special area in our code named validators. Let me show you.  \n  \n \n  \nSpeaker 3\n \n So we have handlers and we have validators.  \n  \n  \nSpeaker 1\n \n So it's a special designed place for.  \n  \n \n  \nSpeaker 2\n \n Us to program special functions that will.  \n  \n  \nSpeaker 1\n \n Be used for checks of data during input. And luckily we have examples at Academy.  \n  \n \n  \nSpeaker 2\n \n Which will help us to make it.  \n  \n  \nSpeaker 1\n \n Smoothly without spending too much time. So validators is a collection, this is not an array.  \n  \n \n  \nSpeaker 2\n \n Now you see, this is a collection.  \n  \n \n  \nSpeaker 3\n \n Each collection item should include its name.  \n  \n  \nSpeaker 1\n \n And implementation and validation.  \n  \n \n  \nSpeaker 2\n \n Implementation includes validator property which is a.  \n  \n  \nSpeaker 1\n \n Function that finally should return something set of parameters and async property. Then when we finish with this \npart, we will connect our created validator with set of columns. So we may use one validator for many different \ncolumns by connecting them to our page attributes. So let me show you how we.  \n  \n \n  \nSpeaker 2\n \n Can do this and I already have.  \n   \n Speaker 1\n \n An example, we will not spend too.  \n  \n \n  \nSpeaker 2\n \n Much time on it.  \n  \n  \nSpeaker 1\n \n So now you will see how we can do this validation.  \n  \n \n  \nSpeaker 2\n \n First of all we go to validators area and we will provide some code here.  \n  \n  \nSpeaker 1\n \n I already have example, no difficulties. So Freedom UI validation example and I need to provide this example of code.  \n  \n \n  \nSpeaker 2\n \n Okay, let me copy and paste for you.  \n  \n  \nSpeaker 1\n \n This is example of our validation. Okay, no need to use cameras to show. Okay, so this is example of code.  \n  \n \n  \nSpeaker 2\n \n And I will also implement it.  \n  \n  \nSpeaker 1\n \n It's my own validators area. So copy and paste.  \n   \n \n Speaker 2\n \n What do you see here? So we register my validator with a specific name.  \n  \n  \nSpeaker 1\n \n So this is a kind of type or maybe validator type, let's call it so. And we can declare different numbers or unlimited \nnumber of different validators. This validator includes three major properties, whether it validator, function \nparameters and async property.  \n  \n \n  \nSpeaker 2\n \n So probably we have to start with parameters first, because parameters are values that we can provide for each \nvalidated column.  \n  \n  \nSpeaker 1\n \n And for different columns, we can provide different parameter values.  \n  \n \n  \nSpeaker 2\n \n Here we have to declare what parameters we will have.  \n  \n \n  \nSpeaker 3\n \n In my case there are two parameters.  \n  \n  \nSpeaker 1\n \n Min value and message parameter.  \n  \n \n  \nSpeaker 2\n \n Validator function has a bit complex structure. This is one function, it returns another.  \n   \nSpeaker 1\n  \n Function and first function requests config, Another function requests control inside of control. Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page.  \n  \n \n  \nSpeaker 2\n \n But it makes it universal.  \n  \n  \nSpeaker 1\n \n If we have value, we don't know exact column. So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us. So we can take value and from.  \n  \n \n  \nSpeaker 2\n \n The config we know what parameters to expect. So we have min value parameter and we have message parameter.  \n  \n  \nSpeaker 1\n \n Our check is quite simple.  \n  \n \n  \nSpeaker 2\n \n We get value and then compare with min value. And in case if our value is.  \n  \n  \nSpeaker 1\n \n Greater or equal than min value then.  \n  \n \n  \nSpeaker 2\n \n We think that data is correct and.  \n  \n  \nSpeaker 1\n \n Our returned result will be null which.  \n  \n \n  \nSpeaker 2\n \n Means no warnings, no messages, everything is okay. But in case that value is not.  \n  \n  \nSpeaker 1\n \n Correct we have to return special type.  \n  \n \n  \nSpeaker 2\n \n Of result which is a JavaScript object with a specific name, the property inside and with the message property inside \nof this property.  \n  \n  \nSpeaker 1\n \n So it's kind of nested JavaScript object.  \n  \n \n  \nSpeaker 2\n \n And our message here will be text.  \n  \n  \nSpeaker 1\n \n It should be displayed nearby problem control.  \n  \n \n  \nSpeaker 3\n \n And also this message will be explained.  \n  \n  \nSpeaker 1\n \n Displayed when we will try to save our page. So we will say try to save data system will check all the validators and it \nwill find that some columns.  \n   \nSpeaker 2\n \n \n \n Are not correct and it will not.  \n  \n  \nSpeaker 1\n \n Allow to save it.  \n  \n \n  \nSpeaker 2\n \n So this is our example of a.  \n  \n \n  \nSpeaker 3\n \n Validation, but it's not applied yet. So we have to set up some.  \n  \n  \nSpeaker 1\n \n Columns which will work with this validator.  \n  \n \n  \nSpeaker 3\n \n Otherwise our validator is useless because no.  \n  \n  \nSpeaker 1\n \n Column expect checks with it.  \n  \n \n  \nSpeaker 2\n \n So I do not need to change anything here. This code is universal as you can see. No any hard coded column names.  \n  \n  \nSpeaker 1\n \n Only one hard coded thing is a validator type name. Next step is connection of validator with.  \n   \n \n Speaker 2\n \n Certain columns or it's better to say with attributes.  \n  \n  \nSpeaker 1\n \n So I will show you examples.  \n  \n \n  \nSpeaker 2\n \n How we can connect.  \n  \n  \nSpeaker 1\n \n Maybe I should do it here. How we can connect validators to columns. I will put example so I have to find my price \nattribute. Let's go to my view model config div area. Here we have attributes. Here is my price attribute inside of its \nstructure.  \n  \n \n  \nSpeaker 2\n \n After module config I have to provide.  \n  \n  \nSpeaker 1\n \n Validators setting so I should carefully copy.  \n  \n \n  \nSpeaker 2\n \n This.  \n  \n  \nSpeaker 1\n \n And paste it here.  \n  \n  \nSpeaker 2\n \n \n And that's.  \n  \n  \nSpeaker 1\n \n How I will put it.  \n  \n \n  \nSpeaker 2\n \n So here's my price attribute.  \n  \n  \nSpeaker 1\n \n Here is my validator. The type of validator should be matched.  \n  \n \n  \nSpeaker 2\n \n With what we created and parameter.  \n  \n  \nSpeaker 1\n \n So the minimum value for the price.  \n  \n \n  \nSpeaker 2\n \n I think it will be 50.  \n  \n \n  \nSpeaker 3\n \n So we will not allow to save.  \n  \n \n  \nSpeaker 2\n \n Any reality object with the price less than 50 bucks.  \n   \n Speaker 1\n \n Okay, and also we can use message, not just a plain string constant which.  \n  \n \n  \nSpeaker 2\n \n Is also supported, but also we can use localizable string. Here is an example of a macro that you can use for \nlocalizable strings. And localizable strings are saved separately and can provide translations into other languages.  \n  \n  \nSpeaker 1\n \n So let me show you what localizable strings I plan to use. I will put it for you. And first, localizable string about price. \nSo my localizable string is named price cannot be less.  \n  \n \n  \nSpeaker 2\n \n I go to localizable strings. Probably we can save it before modifications.  \n  \n  \nSpeaker 1\n \n But now I will modify non localizable.  \n  \n \n  \nSpeaker 2\n \n Strings.  \n  \n  \nSpeaker 1\n \n Take significantly longer than usual. As you can see, my worker process consumed quite a lot of ram. It's more than \nusual.  \n  \n \n  \nSpeaker 2\n \n Okay, we can try to create localizable.  \n  \n  \nSpeaker 1\n \n String with the code price can't be less and the value is price cannot be less than something. Okay, try to add and \nthen I expect some troubles here.  \n  \n \n  \nSpeaker 2\n \n That's why I will try to save now.  \n  \n  \nSpeaker 1\n \n If it saves correctly, okay, no problem.  \n  \n \n  \nSpeaker 2\n \n But in previous versions I experienced some.  \n  \n  \nSpeaker 1\n \n Troubles with localizable strings here and it turned out to save it. So when I added once, it physically.  \n  \n \n  \nSpeaker 2\n \n Added it twice and then denied to.  \n  \n  \nSpeaker 1\n \n Save because it tells that such localizable string already exists. In case, if you face this kind.  \n  \n \n  \nSpeaker 2\n \n Of issue when you add localizable string.  \n  \n  \nSpeaker 1\n \n Try to save and then get error message about duplicated localizable strings. You can just remove that visible one \nthat you created.  \n   \nSpeaker 2\n \n  \n Another one which is invisible will be still saved.  \n  \n  \nSpeaker 1\n \n So that's how you can bypass this bug.  \n  \n \n  \nSpeaker 2\n \n As you can see, Creature also as.  \n  \n  \nSpeaker 1\n \n Any software, it has its own bugs. Sometimes bugs are detected, fixed new bugs appeared.  \n  \n \n  \nSpeaker 2\n \n So it's normal, more or less normal for any software. Another localizable string that we will need is about area. So \nlocalizable string for area. And for its.  \n  \n  \nSpeaker 1\n \n Value here, save it.  \n  \n \n  \nSpeaker 2\n \n Area can't be less. Let's try to save.  \n  \n  \nSpeaker 1\n \n And my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring.  \n  \n \n  \nSpeaker 2\n \n It looks like in this version this bug was finally fixed.  \n  \n  \nSpeaker 1\n \n That's nice. So for the price we already set.  \n  \n \n  \nSpeaker 2\n \n Settings, now we do the same for area. So let me show you what we.  \n  \n  \nSpeaker 1\n \n Do for area we will set validators setting for one column. We can use multiple validators so it's possible to make \nchecks with different criterias.  \n  \n \n  \nSpeaker 2\n \n And in my case for the area.  \n  \n  \nSpeaker 1\n \n I will use the same validator but.  \n  \n \n  \nSpeaker 2\n \n Minimum value will be 100 square feet.  \n  \n  \nSpeaker 1\n \n So it's close to 10 square meters.  \n  \n \n  \nSpeaker 3\n \n We think that we will not input.  \n  \n  \nSpeaker 1\n \n Any kind of realty less than 10.  \n  \n \n  \nSpeaker 3\n \n Square meters or 100 square feet.  \n  \n  \nSpeaker 1\n \n And that's our limitation here.  \n  \n \n  \nSpeaker 2\n \n And we will use localizable string that.  \n  \n  \nSpeaker 1\n \n We already successfully saved. Okay, now we have this example, save.  \n  \n \n  \nSpeaker 2\n \n It and then it's our turn to.  \n  \n  \nSpeaker 1\n \n Test and check out how our data were saved. How well it looks, we can close.  \n  \n \n  \nSpeaker 2\n \n Our editor, go to main app probably.  \n  \n \n  \nSpeaker 3\n \n Let'S reward it just to fight with.  \n  \n  \nSpeaker 1\n \n Any potential impact of browser cache issue. Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here.  \n  \n \n  \nSpeaker 2\n \n Now you see that once we finished.  \n  \n  \nSpeaker 1\n \n And moved focus out of control, you see we have some checks and this checks displays error message.  \n  \n \n  \nSpeaker 3\n \n Price can't be less than 50 bucks.  \n  \n  \nSpeaker 1\n \n Area can't be less than 100 square feet. If we try to save such data, system will reject it tells us we.  \n  \n \n  \nSpeaker 3\n \n Have problems and we have to fix them.  \n  \n  \nSpeaker 1\n \n Okay, let's fix only price try to save.  \n  \n \n  \nSpeaker 3\n \n We still have trouble with area.  \n  \n  \nSpeaker 1\n \n When we fix area then our troubles are over and system saves it normally.  \n   \nSpeaker 3\n \n \n \n Please note that if you do something.  \n  \n  \nSpeaker 1\n \n Like this and try to save your.  \n  \n \n  \nSpeaker 3\n \n Data Validation works at client side so it doesn't send any messages to server side.  \n  \n  \nSpeaker 1\n \n Now you see nothing appeared in network tab until we will fully fix our rental price. In this case you see update query \nexecuted. So physical data was sent to server.  \n  \n \n  \nSpeaker 3\n \n Side only in case of successful client validation.  \n  \n  \nSpeaker 1\n \n So this validation may help you to improve your logic to make it more protected to get rid of like silly.  \n  \n \n  \nSpeaker 3\n \n Mistakes made by end users.  \n  \n  \nSpeaker 1\n \n And I think that this is something that will be quite important in your future projects and implementation.  \n  \n \n  \nSpeaker 2\n \n Now I plan to show you some.  \n   \n Speaker 1\n \n Simple topic and it's simple but it's very important because such topic will be.  \n  \n \n  \nSpeaker 2\n \n Quite often faced in your projects. It will be not really directly connected with programming, but it's something that \nyou definitely should know about.  \n  \n  \nSpeaker 1\n \n I'm talking about typical settings of columns.  \n  \n \n  \nSpeaker 2\n \n That you need according to some conditions.  \n  \n  \nSpeaker 1\n \n For example, some column must be visible.  \n  \n \n  \nSpeaker 2\n \n Only in case of a certain condition and otherwise should be hidden or another.  \n  \n  \nSpeaker 1\n \n Column must be required according to some conditions and otherwise should be optional. And also you may need \nsome like talk about visibility, about required settings, or about read only columns.  \n  \n \n  \nSpeaker 2\n \n So such typical Settings for columns are.  \n  \n  \nSpeaker 1\n \n Frequently faced in requirements from business owners.  \n  \n \n  \nSpeaker 3\n \n And that's why such functionality was decided to implement as a no code Tools.  \n  \n  \nSpeaker 1\n \n And developers code such functionality. Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples. We can go to modify our page so edit page then we go to special button \nbusiness rules Please note we have two types of business rules.  \n  \n \n  \nSpeaker 2\n \n Page business rules mainly used for controls.  \n  \n  \nSpeaker 1\n \n Visibility, maybe required property, read only property and also we have object business rules. Here it's called realty \nbusiness rules but.  \n  \n \n  \nSpeaker 2\n \n You should understand this is about object. Object business rules also offer us possibility.  \n  \n  \nSpeaker 1\n \n To make some filtering and depending on the type of business row, it will be physically saved into metadata of a.  \n  \n \n  \nSpeaker 2\n \n Page or into metadata of an object.  \n  \n  \nSpeaker 1\n \n So let me show you.  \n   \nSpeaker 2\n \n  \n Let's imagine our task is quite simple.  \n  \n  \nSpeaker 1\n \n To show comment only in case of type is not empty.  \n  \n \n  \nSpeaker 2\n \n So when we add new data, type.  \n  \n  \nSpeaker 1\n \n Could be not specified. In this case, comment should be hidden. Let me show you how we can do this.  \n  \n \n  \nSpeaker 2\n \n We can use page level business rules.  \n  \n  \nSpeaker 1\n \n Because it's about column visibility add new rule.  \n  \n \n  \nSpeaker 2\n \n This rule will have automatically generated title.  \n  \n  \nSpeaker 1\n \n To be applied to the page and it has triggering condition, page is open or some condition changed.  \n  \n \n  \nSpeaker 2\n \n So we have if scenario and then action. Okay, let's start with if and now we will think of something like.  \n   \n Speaker 1\n \n I should do it a bit better with initial status. Okay, so if our type is not empty, then comment should be visible.  \n  \n \n  \nSpeaker 2\n \n Let's try to do this attribute or.  \n  \n  \nSpeaker 1\n \n Data field realty and our type okay, if type is not empty so we can use condition is filled in. If this condition is true, \nthen we will use action show elements on the.  \n  \n \n  \nSpeaker 2\n \n Page and we can decide what element.  \n  \n  \nSpeaker 1\n \n Will be shown to be. Input column of a comment Text comment Okay, so if type is filled in comment will be visible. \nOtherwise comment will be hidden. So let's try to test how it works. We can save it.  \n  \n \n  \nSpeaker 3\n \n Save our page.  \n  \n  \nSpeaker 1\n \n Now and let's check how it will be physically working for us.  \n  \n \n  \nSpeaker 2\n \n As you can see, each time you.  \n  \n  \nSpeaker 1\n \n Develop something, this is very important to immediately test it when it's ready and.  \n  \n \n  \nSpeaker 2\n \n When you make many different changes you.  \n  \n  \nSpeaker 1\n \n May think of okay, I will do many changes, then I will test them in total.  \n  \n \n  \nSpeaker 2\n \n I do not recommend you to follow this approach, so it's much better and more safer. If you will do some small step, \nthen you go to your system and.  \n  \n  \nSpeaker 1\n \n Start to test it.  \n  \n \n  \nSpeaker 2\n \n Then you do another small step, then you do another test.  \n  \n  \nSpeaker 1\n \n The reason is that creature client side sometimes could bring you Surprises and it will be not so clear according to.  \n  \n \n  \nSpeaker 2\n \n The error message text in your browser console to understand what exact part is gave you such a surprise.  \n  \n  \nSpeaker 1\n \n So it's better to make small steps and to test it frequently. So once you get and start to.  \n  \n  \nSpeaker 2\n \n \n Get some error messages and you will.  \n  \n  \nSpeaker 1\n \n Easily understand that it was caused probably the most latest recent changes and you.  \n  \n \n  \nSpeaker 2\n \n Should take care about it and maybe.  \n  \n  \nSpeaker 1\n \n Revert them maybe to look carefully and.  \n  \n \n  \nSpeaker 2\n \n You will find some errors. So small steps and frequent testing. This is what I recommend to you.  \n  \n  \nSpeaker 1\n \n So let's open any record type is set, Comment is visible. It's clear the type.  \n  \n \n  \nSpeaker 2\n \n Now you see it's a bit uncertain.  \n  \n  \nSpeaker 1\n \n So it's not cleared and let's set it again. Okay, if you clear it doesn't work.  \n  \n \n  \nSpeaker 2\n \n I think that we have a problem because of initial state of the square column. Let me show you how we can fix it.  \n   \nSpeaker 1\n  \n Initial state should be aligned with our business rule and in case if we check some condition and turn this column \non. So make it visible. So by default this comment should be hidden. Let's select comment, let's set its visibility \ndefault visibility not visible and then save our changes. So by default comment will be hidden.  \n  \n \n  \nSpeaker 3\n \n And according to the business rule, it.  \n  \n  \nSpeaker 1\n \n Will be enabled if type changed and became not empty. Let's check it out.  \n  \n \n  \nSpeaker 3\n \n We need to reload.  \n  \n  \nSpeaker 1\n \n Fighting with browser cache Clear. Now you see our comment disappeared. If we set some type, it appeared again.  \n  \n \n  \nSpeaker 3\n \n If we change type, it appears again.  \n  \n  \nSpeaker 1\n \n If you clear, it hides. Hides? Yes.  \n  \n \n  \nSpeaker 3\n \n So that's how you can manage visibility and such setting. As you can see, it's a no code setting.  \n  \n  \nSpeaker 1\n \n So you can make all the settings with your mouse. It doesn't require any programming.  \n   \n \n Speaker 3\n \n I would like you to see another example.  \n  \n  \nSpeaker 1\n \n So you can also see visibility, editability and required property.  \n  \n \n  \nSpeaker 3\n \n And one more thing which is interesting.  \n  \n  \nSpeaker 1\n \n I think is about selecting values in lookups.  \n  \n \n  \nSpeaker 3\n \n Now we have selection of manager from contact. We can display additional columns here.  \n  \n  \nSpeaker 1\n \n For example, contact type. Okay, I'm too lazy to scroll. I will type this.  \n  \n \n  \nSpeaker 3\n \n Now you see some contexts have customer type, some contexts have employee type, and so on.  \n  \n  \nSpeaker 1\n \n Finally, my contacts list will include many.  \n  \n \n  \nSpeaker 3\n \n Different persons and only some of them.  \n  \n  \nSpeaker 1\n \n Will represent my company employees.  \n  \n \n  \nSpeaker 3\n \n When I want to specify manager here, I definitely want to specify someone who.  \n  \n  \nSpeaker 1\n \n Is company employee and not just a random contact.  \n  \n \n  \nSpeaker 3\n \n So I want to make some simple.  \n  \n  \nSpeaker 1\n \n Filter here which will help me to select only context with a certain type. And we can do such filtering with.  \n  \n \n  \nSpeaker 3\n \n The help of business rules.  \n  \n  \nSpeaker 1\n \n So let's go back to our page, go to business rules Now I plan to use object level business rules. So here you see real \nto business rules which means realty object business rules.  \n  \n \n  \nSpeaker 3\n \n Here was page. Now here is object level.  \n  \n  \nSpeaker 1\n \n Okay and first of all I will check available action here.  \n  \n \n  \nSpeaker 3\n \n And in comparison with page level we.  \n  \n  \nSpeaker 1\n \n Have more options here and I plan to use simple static filter Business rule Static filter will not require any as you can \nsee, static filter will not.  \n  \n \n  \nSpeaker 3\n \n Require any special conditions I mean for.  \n  \n  \nSpeaker 1\n \n Triggering so it will be applied always. That's why it's called static.  \n  \n \n  \nSpeaker 3\n \n And I will have a column which.  \n  \n  \nSpeaker 1\n \n Column I plan to use for filtering. This will be manager column and what.  \n  \n \n  \nSpeaker 3\n \n Filter I plan to use I have.  \n  \n  \nSpeaker 1\n \n To specify it with additional condition. Please note here those of you who use Windows Home probably you may \nexperience difficulties because it was found that users with Windows Home experienced troubles opening this tab \nand it was simply not possible if you use Home Edition. So please be careful when you use this home version and \njust know about this. So this will be temporary not available for you.  \n   \nSpeaker 3\n \n  \n I can make condition here. Contact.  \n  \n  \nSpeaker 1\n \n Type equals to a constant employee. So if this filter will be constantly applied on my lookup, save it and then save it \nagain. Now I save page and I will reload my main tab and you will see how this manager filter will work for us. Go \nback. Okay, let's save changes. Close reload this reloading is necessary only to work with browser cache. Let's \ncheck.  \n  \n \n  \nSpeaker 3\n \n Now let's try to select values.  \n  \n  \nSpeaker 1\n \n Here you select data. Now you see only context with employee type.  \n  \n \n  \nSpeaker 2\n \n Okay, let's make more examples, better examples.  \n  \n  \nSpeaker 1\n \n And let's go to customer 360 add more contacts to make it representative and let's make a contact name something \nlike James Bond and type will be customer. Okay, one more Bruce Lee will be our employee.  \n  \n \n  \nSpeaker 2\n \n And Bruce Willis will be also our employee. So you will see we have some.  \n  \n  \nSpeaker 1\n \n Different contexts, different types and let's go back to our realty, try to select manager system only shows us only \ncontext with a certain type.  \n   \nSpeaker 2\n \n  \n This is very simple filtering tool.  \n  \n  \nSpeaker 1\n \n As you can see we just used only mouse to set up this type of customization.  \n  \n \n  \nSpeaker 2\n \n But it's very efficient and that's why I think it's important for you to know about it. Because even if it doesn't require \nprogramming, but if you did not attend our.  \n  \n  \nSpeaker 1\n \n Customization course, you still need to know.  \n  \n \n  \nSpeaker 2\n \n That such type of filtering is supported. Also I can quickly show you another filtering of connected fields like filtering \ncities by countries.  \n  \n  \nSpeaker 1\n \n So or maybe if we focus on us only. For example we can filter cities by States. But maybe for countries it will be \nmore clear and understandable.  \n  \n \n  \nSpeaker 2\n \n So let's go again to our page. In order to filter something by something.  \n  \n  \nSpeaker 1\n \n Of course we need to have connected lookups.  \n  \n  \nSpeaker 2\n \n \n Luckily in base product cities and countries are already connected.  \n  \n  \nSpeaker 1\n \n Each city has corresponding country reference. Let me show you cities lookup already has connections with country. \nLet me select fields to display. We have names. I don't need time zone at all. But I want you to see country. Okay, \nsave it. Now you see a lot of different cities from different countries and it looks like data lookups. Data in our \nlookups is already well, so let's do such settings. I will add two drop down columns to my page and it will be.  \n  \n \n  \nSpeaker 2\n \n Probably we have to start from country.  \n  \n  \nSpeaker 1\n \n Because we plan to input data starting from country providing country value and then USR country copy and lookup. \nWe will use standard lookup. Country that is already present will be drop down list. Okay. And here element code will \nbe also country related. So that's how I add new lookup. Now I will show you CT's lookup. So it will be city confirm \nlookup.  \n  \n \n  \nSpeaker 3\n \n That will be based on.  \n  \n  \nSpeaker 1\n \n It's also CT drop down list.  \n  \n \n  \nSpeaker 2\n \n And here we can name something like city.  \n  \n  \nSpeaker 1\n \n It will be enough. The most important is uniqueness of this column. But city is good enough.  \n  \n  \nSpeaker 2\n \n \n Good unique value for us.  \n  \n  \nSpeaker 1\n \n Okay. Is it okay? Should be. I don't like. Yeah, probably There are limitations about the length of this. Okay, so what \nwe have here is country and city and we need to.  \n  \n \n  \nSpeaker 2\n \n Save it first in order to apply.  \n  \n \n  \nSpeaker 3\n \n Changes to the object level.  \n  \n  \nSpeaker 1\n \n And so to fully modify our data model properly to take maybe less than a minute our time it okay, saved. Well, now \nwe go to business rules. So I will show you how we can make a object level business rule for connected lookups. \nLet's add one more lookup. Action will be apply filter.  \n  \n \n  \nSpeaker 3\n \n This is a special type of filter.  \n  \n  \nSpeaker 1\n \n Which is I think originally designed for connected lookups.  \n  \n \n  \nSpeaker 2\n \n And we can specify what column to filter.  \n  \n  \nSpeaker 1\n \n Obviously we will filter cities by what another column by country.  \n \n \n \n  \nSpeaker 2\n \n And this editor will automatically detect connections between cities and countries. So it will show us where city.  \n  \n  \nSpeaker 1\n \n Country which means country value inside of city Lookup equals to value of country.  \n  \n \n  \nSpeaker 2\n \n Provided in our realty page and also automatic settings for clearing when country changed.  \n  \n  \nSpeaker 1\n \n Clearing cities when country changed or automatically.  \n  \n \n  \nSpeaker 2\n \n Set country if city was set and.  \n  \n  \nSpeaker 1\n \n For example country was empty. So you can do this also then.  \n  \n \n  \nSpeaker 2\n \n Country will be automatically populated. So this rule will work good for us.  \n  \n  \nSpeaker 1\n \n But what I need to add here is triggering condition.  \n  \n \n  \nSpeaker 2\n \n We need to Change such filter each time.  \n  \n  \nSpeaker 1\n \n When country changes so page is opened or some changes and when country. Okay, we can select here is filled in. \nThen we have to apply this filter. So if country changes and becomes filled in, then filter should be applied. Otherwise \nyou may face some glitches in.  \n  \n \n  \nSpeaker 2\n \n Working with this filter.  \n  \n  \nSpeaker 1\n \n Sometimes it will work, sometimes not.  \n  \n \n  \nSpeaker 2\n \n So you should not forget about this condition. Let's save it.  \n  \n  \nSpeaker 1\n \n Save page and then we will test it. You will see how it works. Great. You see, data was successfully saved, page \nsaved.  \n  \n \n  \nSpeaker 2\n \n Okay, let's test. We need to reward it. And now let's check it out.  \n  \n  \nSpeaker 1\n \n So let's say Miami and you see.  \n  \n \n  \nSpeaker 2\n \n Country, you see city.  \n   \n Speaker 1\n \n Okay, Country, States, United States.  \n  \n \n  \nSpeaker 2\n \n Cities. As you may see, cities are filtered by country. You only see cities.  \n  \n  \nSpeaker 1\n \n Oh, Hartford, Frankfort.  \n  \n \n  \nSpeaker 2\n \n Looks like only.  \n  \n  \nSpeaker 1\n \n US Cities I think. Okay, so now you see it looks.  \n  \n \n  \nSpeaker 3\n \n Looks like.  \n  \n \n  \nSpeaker 2\n \n Well, okay, let's take another example.  \n  \n  \nSpeaker 1\n \n No country, you see all cities from different country. Ararat Astrakhan, Baghdad, you see Bishkek, you see Bratislava.  \n  \n \n  \nSpeaker 2\n \n So from different countries from.  \n  \n  \nSpeaker 1\n \n Okay, so if you set some city.  \n  \n \n  \nSpeaker 2\n \n Country will be populated automatically in this case.  \n  \n  \nSpeaker 1\n \n But if you clear country, city was cleared automatically. So if we provide some country like Bangladesh, you will see \nonly filtered cities. Here if you change country to something else like Egypt, you will see only Egypt city. So filtering \nworks well.  \n  \n \n  \nSpeaker 2\n \n Let's go to our states.  \n  \n  \nSpeaker 1\n \n Now we have to search for Seattle.  \n  \n \n  \nSpeaker 2\n \n Yes, you see it finds and filter works well. So this type of filtering can be.  \n  \n  \nSpeaker 1\n \n Done not only for citizen countries. For example, you can make two connected hookups. One is type of document \nand second one is for example subtype.  \n  \n \n  \nSpeaker 3\n \n And subtype should have a lookup column.  \n   \nSpeaker 1\n  \n Referencing to corresponding type.  \n  \n \n  \nSpeaker 3\n \n And in this case when user specifies.  \n  \n  \nSpeaker 1\n \n Type, it will be technically possible to filter subtypes according to selected type. But this canonic example with \ncountries and cities, I think it's the easiest to.  \n  \n \n  \nSpeaker 2\n \n Understand examples so you can also use it.  \n  \n  \nSpeaker 1\n \n Don't forget about business rules triggering by changing country. So save it. Probably that's enough for today and \nwe.  \n  \n \n  \nSpeaker 2\n \n Have one more session tomorrow that will be dedicated to our client side. I plan to show you how to make details \nand also probably answer your questions if appear.  \n  \n  \nSpeaker 1\n \n If you ask something about some cases with programming inside of our pages in.  \n  \n \n  \nSpeaker 2\n \n Freedom UI later we probably will also.  \n  \n  \nSpeaker 1\n \n Invest a bit of time into classic.  \n \n \n \n  \nSpeaker 2\n \n UI examples and I think you'll be.  \n  \n  \nSpeaker 1\n \n Interested in migration from Classic UI to Freedom ui. It will be only client side, so objects will be the same. I will \nshow you how you can do such migration. Thank you very much for Your time.  \n  \n \n  \nSpeaker 2\n \n Today, our session is over. In case. If you have any questions with your.  \n  \n  \nSpeaker 1\n \n Environments, with your homework, tell me please.  \n  \n \n  \nSpeaker 2\n \n It's important for me to know.  \n  \n  \nSpeaker 1\n \n Do you have any troubles or other notes, any questions?  \n  \n \n  \nSpeaker 4\n \n I have one. Did we go over. I could have just missed this now. It could have just been me. Did we go over the \noverriding. I think it was on the list of the. The kind of schedule for each day we had parent overriding. Overriding a \nparent method. Did we go over that and I just. Or is that something we have to go back to?  \n  \n  \nSpeaker 1\n \n You probably asked about something that you.  \n   \nSpeaker 2\n \n  \n Already saw in Classic UI with overriding of methods or this is something else. So can you explain the business \nexample?  \n  \n \n  \nSpeaker 4\n \n No, sorry, I just saw it on the list on. So you know you have the list of the breakdown of each day. It was an. It's kind \nof what you open up with this. With the start of each day.  \n  \n  \nSpeaker 1\n \n Oh, you mean this one?  \n  \n \n  \nSpeaker 2\n \n This is.  \n  \n  \nSpeaker 1\n \n Yeah, yeah.  \n  \n \n  \nSpeaker 2\n \n So this schedule is a bit outdated unfortunately.  \n  \n  \nSpeaker 1\n \n Okay, try to find some time and yes, there are some topics that are not so applicable to Freedom UI and.  \n  \n \n  \nSpeaker 2\n \n You may find something like. Like alternative JavaScript editors.  \n  \n  \nSpeaker 1\n \n Okay, I can explain you something and overriding of methods.  \n  \n \n  \nSpeaker 4\n \n That's it.  \n  \n  \nSpeaker 1\n \n It was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui. In Classic UI you \ncould rewrite or.  \n  \n \n  \nSpeaker 2\n \n Interfere into some life cycle stages of.  \n  \n  \nSpeaker 1\n \n Page by replacing its like critically important methods. In Freedom UI you can write your.  \n  \n \n  \nSpeaker 2\n \n Own methods, but system does not allow.  \n  \n  \nSpeaker 1\n \n You to significantly change this life cycle. So it looks like I tried and.  \n  \n \n  \nSpeaker 2\n \n It looks like when you have for.  \n  \n  \nSpeaker 1\n \n Example some handler and you already know that there is a base product handler which is declared somewhere in \nparent.  \n   \nSpeaker 2\n \n \n \n Templates, you cannot replace it with your own rejecting execution of all parent implementation. So in Freedom UI \nyou can write.  \n  \n  \nSpeaker 1\n \n Your own part and it will be.  \n  \n \n  \nSpeaker 2\n \n Just part of all the steps executed.  \n  \n  \nSpeaker 1\n \n In total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol I think so in Freedom UI we have different conditions for programming. I plan to update this program for.  \n  \n \n  \nSpeaker 2\n \n Our sessions and it's a bit outdated.  \n  \n  \nSpeaker 1\n \n Here, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural. So \nwhen you do simple settings then.  \n  \n \n  \nSpeaker 2\n \n You do a bit more.  \n  \n  \nSpeaker 1\n \n More complex and so our flow of real topics that we study, I think it's quite optimal for current version.  \n  \n \n  \nSpeaker 4\n \n Thanks Mario. \n \n  \n  \nSpeaker 1\n \n Thank you Paddy for questions and any.  \n  \n \n  \nSpeaker 2\n \n Any, any difficulties with your homework, when you do examples, when you make.  \n  \n  \nSpeaker 1\n \n Your sections, maybe you have something to say. It happens that most of our participants watch videos like you now \nand then.  \n  \n \n  \nSpeaker 3\n \n They decided to process video files much.  \n  \n  \nSpeaker 1\n \n Later than finishing of the sessions.  \n  \n \n  \nSpeaker 3\n \n So I recommend you to invest some time between the sessions to watch videos and practice.  \n  \n  \nSpeaker 1\n \n Because in this case you will easier.  \n  \n \n  \nSpeaker 3\n \n Understand our next topics.  \n  \n  \nSpeaker 1\n \n You will get more experience at that topics and think it will be in.  \n  \n \n  \nSpeaker 3\n \n General faster for you.  \n  \n  \nSpeaker 1\n \n So it will be faster boarding faster, let's say getting necessary expertise for you as developers. So at the end of the \nsessions.  \n  \n \n  \nSpeaker 3\n \n You'Ll be able to pass an exam.  \n  \n  \nSpeaker 1\n \n We call it Fast Track certification, which.  \n  \n \n  \nSpeaker 3\n \n Includes homework very similar to what we do here and test. This test will require some time for you to prepare. So \nat the end of the sessions next week, I will explain you some.  \n  \n  \nSpeaker 1\n \n Details how we will prepare for the exam, how it will be organized and.  \n  \n \n  \nSpeaker 3\n \n This is optional thing.  \n  \n  \nSpeaker 1\n \n So if you feel confident, you may apply for it. If not, you may use Academy website and apply for certification much \nlater.  \n   \n \n Speaker 3\n \n So if interested in preparation for the.  \n  \n  \nSpeaker 1\n \n Exam, also keep it in your mind.  \n  \n \n  \nSpeaker 3\n \n And if you have some questions, feel free to ask. Also maybe you will want to write me some messages.  \n  \n  \nSpeaker 1\n \n Here is my email. I will be happy to answer you and support you during your practicing with.  \n  \n \n  \nSpeaker 3\n \n Examples in our sessions.  \n  \n  \nSpeaker 1\n \n Thank you for your time today.  \n  \n \n  \nSpeaker 3\n \n See you tomorrow as usual.  \n  \n  \nSpeaker 1\n \n And as usual, you will receive videos of today's session very soon, maybe 40 or 50 minutes to get this video.  \n  \n \n  \nSpeaker 3\n \n Thank you and goodbye.  \n  \n  \nSpeaker 1\n \n See you tomorrow. Bye.  \n  \n \n  \nSpeaker 2\n \n It.  \n \n  \n  \nSpeaker 1\n \n So today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items. And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui. So what I need \nto tell you first today, this is about details. Because this is a very important piece of Creature configuration and you \nwill face it almost everywhere. Let me show you what detail is go to customer 360 because it's a good example of \ndetails. We go to accounts section and then we can open any account record. Detail is separate entity which keeps \nsome data in connection to our main record. Here we can see an example. Main record is account and detail is \naccount address.  \n  \n  \nSpeaker 1\n \n And you can see that for one main account record we can save unlimited number of addresses. So we can put \nunlimited number of addresses here and they will be usually displayed in a list. And the reason why Creature has \ndetails is need to save additional data in connection to our main entity. So our main entity is a single record and then \nwe need to keep information for example about different types of addresses for our customer or different emails. Or \nmaybe it's just simple list of contacts connected to this account. So you should understand that detail is usually \nbased on a separate entity. So account is one entity, Account address is a separate entity, it means separate object \nand it means separate physical date table. Usually we have one too many relationship between details and main \nrecords.  \n  \n  \nSpeaker 1\n \n So one account connected to as many detail records. And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records. Vikrat, thank you very much for confirmation. Thank you for working \nwith your redis and I'm really happy that you finally made your system working correctly. Thank you. And so details, \nthey are usually connected with main entity with the help of lookups, lookup columns. And each detail record has \ninformation about its parent account. And that's how system can filter through all addresses and show only \naddresses related to this currently selected data record. Details are very common in creation. If you will turn on \nbigger product like sales service and marketing, you will see details almost everywhere. And we have big entities like \ncontacts or accounts and they have plenty of details like addresses in accounts.  \n  \n  \nSpeaker 1\n \n We have contacts list, we have also emails or sorry, we have probably it's better to say communications. If you go to \ncontacts open any record, you will see communications detail. So here you see we have mobile phones, email, \nbusiness phone, but in general we have plenty of Supported communication options and communications are saved \nas a detail connected with main entity in context. We also have detail named job experience. And when we have \nseveral entities, sometimes they are connected with each other with the help of lookups. And that's why and that's \nhow we can make some details. For example, we can look at accounts and see list of connected contacts because \ncontact has a reference to account. Let me show you here Account select. And now you see that we have contacts \nand they have reference to account.  \n  \n  \nSpeaker 1\n \n And that's how we can select a company and to see all its connected contacts. So usually connection is one too \nmany. Maybe some of you will ask about is it possible to make a connection one to one or data connection many to \nmany. Physically this is possible, but you should use for one to one you still will have to use separate object. And for \nmany to many we will have to use supporting additional object which will use two lookups for two connected \nentities. So the easiest to implement and I think the most commonly used case is use of one to many relationship. \nAnd now let's return back. Let's return back to our reality section. So we will study and we will learn how to make \ndetails.  \n  \n  \nSpeaker 1\n \n And some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details. So this is nothing special for you. But some of you who never attended \nany of creatio training sessions, so you need to know what detail is how to build it because it's almost the same \nimportant as knowledge how to build sections. So I will show you step by step example of building details and I will \nexplain why we need it. The main reason is our business requirement to keep a lot of connected information for our \nmain record. And this connected information usually should be saved in a separate entities. So when we talk about \ndetails, we talk about separate connected entities. So let's do some quick and simple example.  \n  \n  \nSpeaker 1\n \n In our realty business, we definitely need to speak with potential customers. We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental. And we need to organize these actions. So we need to \norganize such visits, such conversations. And it's better not to intersect and overlap different visits at same time. So \nwe need to have some kind of schedule for future visits connected to a certain realty record. So it looks like we will \nhave a separate entity called realty visits. And for each house or apartment we will have a list of planned visits for \nfuture we can do it with a separate object and I recommend you to create new details for the first make an object for \nit.  \n  \n  \nSpeaker 1\n \n So let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object. So new object requires new good working friendly code. We can call \nit something like realty visit title will be also good. Sorry realty visit inheritance it makes sense to inherit only from \nbase entity in order to get just six standard system columns here keyfield historical columns. Okay, we do it \ninheriting from base entity and we can create our own custom columns for our new entity. One of the first column \nwill be connection with parent realty because our visit will have no sense if we are not connecting it to any reality. So \nlet's create new lookup column.  \n  \n  \nSpeaker 1\n \n We can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required. We have no default values here, but we have a special lookup behavior. Normal \nbehavior means when we delete value from corresponding reference table from realty Having such connection with \nany other data table will prevent our delete and we will have a foreign key reference error message. Because we can't \ndelete reality if it has some visits and we have a standard delete behavior. So block deletion.  \n  \n  \nSpeaker 1\n \n But in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted. So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care. We also want to delete them as well as addresses or some payment information \nor something else. So anything which is connected to the main record. If we decided to delete main record usually \nwe are interested in silent delete of all the child parts.  \n  \n  \nSpeaker 1\n \n So here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically. This is performed by help of foreign key at the database and with option cascade on delete. \nSo physical delete performs on the database level, not at application level. Unfortunately you can't handle you \ncannot handle such delete at application level because it will be triggered and made by database foreign key tools. \nBut okay, so we have parent reality required special set for delete behavior. Good. This is our column for connection \nbetween visits and parent reality. Now we have to make some columns that will work for business part of us. So any \nvisit will have date and time of visit.  \n  \n  \nSpeaker 1\n \n So we can call this colon visit date time. We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord. And it makes sense especially if you want to change for example till tomorrow. But having similar time \nsetting automatical value here will be quite good. So visit date and time it makes sense to make it required because \nhaving no visit time, it's definitely not good to visit data. One more thing we may know potential customer this is a \nlookup. We can call this potential customer. Why potential? Because we already have a real customer for our realty \nwho asked us to help with sale or rentals.  \n  \n  \nSpeaker 1\n \n So potential customer is a person who probably will buy a house or will rent an apartment. So potential customer, we \ndon't know who it is. So sometimes could be empty. And lookup is contact object which is a very typical way when \nwe need to get some kind of personal reference. So usually we use contacts for this and for context selection. \nMaybe we need full scale selection window instead of list and using normal block delete option here. Also you \nprobably will be interested in some very rare cases you may not need foreign keys at all. For example, you do \nsomething artificial like selecting data not from a real table but from some data view as a lookup. In this case you \nwill not be able to construct a valid foreign key.  \n  \n  \nSpeaker 1\n \n So we have an option do not control integrity which means please do not create foreign keys by default. When you \ncreate a lookup column foreign key is created automatically. But if you enable option do not control integrity it \nmeans that foreign key will be not created. It's interesting fact that such option was used for created by you see do \nnot control and for modified by. The reason why developers need it is performance. So created by and modified by is \nusually set automatically by system. You see system variable, it's a current user contact and usually system sets this \nvalue correctly.  \n  \n  \nSpeaker 1\n \n So such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal. But it's very rare case when you remove contact who \npreviously was a user of your system. So generally we can say that in this example having foreign key is not so \ncritical because value for this column is usually set by system and it's set correctly. So developers also realized that \nif we have no such option and let's imagine we have probably thousand of out of the box objects for our big base \nproduct like sales, service and marketing. So it will produce 2000s of foreign key.  \n  \n  \nSpeaker 1\n \n So for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity. So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company. And then you have a table in this database contacts table which has 2000 foreign keys on it. \nEach time you try to make any changes in these tables, such foreign keys will be invalidated and they will be checked \nand it will be a huge performance impact on your database. And each time you do some operations like inserts and \nupdates, such foreign keys are also checked and the contacts table will take a huge time for blocks that is necessary \nto perform low level database checks for work of foreign keys. So developers decided to sacrifice referential \nintegrity here.  \n  \n  \nSpeaker 1\n \n And that's why they decided to make it with no foreign keys. For created by and for modified by and such behavior \nwas inherited from base lookup. Oh sorry. From base entity. If you will search for a base entity in our packages, open \nit. You will find out that this column created by has option do not control integrity and the modified by also has this \noption do not control integrity. So this is made intentionally and because of performance. So maybe something like. \nInteresting fact, you may need this option in very rare cases when you create some artificial lookups based on \nsomething that is not a table. Like something that is a database view or even something more weird thing like a \nprogrammed stuff at the server side, not a database item at all.  \n  \n  \nSpeaker 1\n \n In this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source. So here we have just standard situation \npotential customer based on contact. We have all standard settings and the only change was selection window. So \nfull scale selection window selected just to make it more comfortable to select potential contacts potential \ncustomers as a context from big selection window. Okay, what else? Probably we need one more column here. This \nis comment. Let's make a text 200 and comments. Sorry. Yep, title will Be comment. So any visit may end out with \nsomething like we need to remember to write down and just to have some notes, maybe some decisions, maybe \nsome ideas.  \n  \n  \nSpeaker 1\n \n So comment after a visit could be really helpful if you want to proceed with this realty. So we can have a comment \nas a text field, very simple, not required and just text value. Okay, so now it looks like our simple detail object is \nalmost ready and we have to save and publish it. Clicking publish as you remember will automatically perform save \nfirst. Now you see it and then it will do publish operation and it also takes couple of seconds. Great, our object is \nready. But what we need to do and what is a bit different from maybe you have some experiences older UI and \nmaybe you have some previous creation experience. So Starting from version 8, objects are connected to page \nobject connected with pages with a separate special setting inside of objects properties.  \n  \n  \nSpeaker 1\n \n So now you can see pages tab and we have to specify edit page for our reality visit. Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page. Our column set is not so big \nand impressive so we can just take some mini page example which will also look good if you have not so many \ncolumns. So I will select mini page and this mini page offers us possibilities. Okay, we can use some code, let's say, \nlet's put some good looking code like realty visit page title Reality visit page. Okay, maybe we can call it form page \njust to make it traditional with realty form page.  \n  \n  \nSpeaker 1\n \n So reality visit form page Its parent packages realty template is mini page. Great, now we have to use existing \ncolumns. As you can see we can add new columns but we already have data model attributes already designed in \nour object so we can just show it up. So what we need here is visit date and time. Probably the first important \ncolumn that we need to display. Second important column is potential customer and third one will be comment. \nOkay, so you may ask me and what about parent reality? It's mandatory. Why don't we show it here?  \n \n \n  \nSpeaker 1\n \n The answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user. So we can hide this column so we cannot show it on the page. And in case of \ncreating a record detail or in case of Updating new record or update an existing record or editing record. In all the \nscenarios we can set parent realty automatically. So we may not allow our user to change reference to a parent \nrealty of an existing visit. And that's why I will not show this column for user at all.  \n  \n  \nSpeaker 1\n \n So it will be just hidden, it will be not shown on the page and our reality visit page will look like this. We can see why \nis there a red asterisk beside visit date and time and parent realty. It means the column is required system will not \nallow us to save data if required column is empty. Okay. And for parent reality we will guarantee that it will be filled \nincorrectly. So even if it's required, we will make we will take care about setting it properly in all possible scenarios. \nSo we don't need to show it in edit page. We can show it and probably make it locked just to display and \ndemonstrate that this visit is connected to some parent reality. But we will always look at this page from realty main \npage so maybe it's not necessary.  \n  \n  \nSpeaker 1\n \n This is very common for details and creature to hide parent column from the page at all. So we can save our page \nnow. So save it fully. No business rules, no code, no any special settings. So try to keep it as simple as possible and \nwhen we did it so we can find this page in this list. So let's search for something connected to visits realty visit form \npage default page here means that it will be used for all scenarios to add, to browse, to edit data. So it will be used \nfor all scenarios. And you can see it's possible to make a separate add record window in case if we need to do it in a \nvery specific way. For example, when you add data you have to specify one set of columns.  \n  \n  \nSpeaker 1\n \n When you edit, you want to specify totally another set of columns. It could be used. And also we have an option for \ndifferent pages depending on some specific field value. This can be helpful in case if your entity is quite big and \ncomplex. We have examples of such big complex entities in creatio and one of them is activity. And personally I \ndon't really like this, but it turned out that activity is used for calls, for emails, for meetings, for to do tasks which you \ncan create for yourself. So you can see a bit of different nature for the same entity. So you have one single section \nand many different purposes in it. Obviously for email we will have a different edit page than for a call and different \nset of columns, different display and different page design.  \n  \n  \nSpeaker 1\n \n And that's why we have this Option multiple pages based on specific field value. So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting. And depending on this column we can use \ndifferent pages. And when you look at activities section, for example, you select an email, try to open its page based \non this information system will show you email edit page. If you do the same for a call, it will open you call edit page \nfor activity. But now I try to keep it simple. So we will have just one single page for all possible visits. Because we do \nit and we just need to get used with the details in general, we need to understand them well. So we have this option. \nThis is mandatory.  \n  \n  \nSpeaker 1\n \n Okay, finally we finished and we can publish our object again. As you can see, we have to do it twice. First to create \nit, second to finalize assigning of a page for the object. Okay, great. Now our object is ready. We can close it. Now we \ncan see that in our package two items appeared. So we have realty visit page, we have object for realty visits. You \ncan find some additional strange items called add ons. And sometimes we have add ons for pages and we can find \nadd ons for objects. Add ons are separately saved pieces of metadata. You can try to open them, but you will see \nread only text in JSON which represents metadata. We have some a bit more user friendly way to read it. You see \nread only way and you can see property names.  \n  \n  \nSpeaker 1\n \n But in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not. In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object. So we don't need to modify it. Attempt to modify. We should not remove it \nfrom the system. Let it be so it's just a separate stored stuff connected with page or an object. Good. So now we \nhave our object and it's time to think how we can put it to our page and display corresponding data. So we can do \nthis with the help of edit page button. As you can see, it's my favorite way to customize your system and other \noptions.  \n  \n  \nSpeaker 1\n \n We have another options like finding your corresponding form page and open it from configuration section to be the \nsame result. Or you can achieve the same result if you go to settings page physically system designer. Then you find \napplication hub. Then you find your realty application. Switch to pages and find form page. So this same way for \nopening. Oh no no. Not visit reality form page the same way to open the Same page editor and I personally prefer to \ndo it from section because it makes less chance to make mistake. And when you click on this to always open \ncorresponding page and you should not focus on its name in the list of pages. Okay, so we opened our editor to \ndesign our page. Our task is to display details and details are usually displayed with the items called list or expanded \nlist.  \n  \n  \nSpeaker 1\n \n I prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it. That's why it's called expanded. I would say it's \nexpandable when it's necessary to see some data from it. So let's use this expanded list component carefully drag \nand drop it on our page. I will use just free space in the bottom of this tab, but it's also possible to use additional \ntabs if you want to. You can organize your data stored in different tabs. It's up to you. So here we have expanded list \nand show part of it includes only settings like buttons and title and so on. And inner part of it represents data list.  \n  \n  \nSpeaker 1\n \n Of course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail. It immediately shows us set of columns. So possibly we have to take care of set of columns. And I would like \nto show here first to be date and time potential customer, maybe comment and then create it on maybe just for \nreference. I would also display parent reality. Then I can hide unnecessary columns. And now you see how we \nshould display our data. We can carefully shrink some columns. Okay, as you can see in Freedom UI system offers \nus horizontal scroll so we can add unlimited number of columns. We can flexibly design their widths and the \nhorizontal scroll will show us. And Classic UI does not allow to do this.  \n  \n  \nSpeaker 1\n \n And there is no horizontal scrolls in classic UI and only 24 available columns to be displayed. So freedom UI is more \nflexible here. Okay, so we have this list of data, but what we need. How did you add the columns again? I just missed \nit. This plus add the columns and then you can select. Please note the order of how you click here matters. So if you \nclick here and here you will see the same columns in corresponding order selected at your list. I first clicked on visit \ndate, then potential customer, then comment in the same order. Columns appeared here and you can specify such \ncolumns in order to provide default column setup for your detail. It will be nice for your users to see your detail with \nsome preset columns so they will easily understand what it is about.  \n  \n  \nSpeaker 1\n \n And if it has some data, they will also see corresponding data and they will see what they expect. So here is our list. \nBut also we need to do some additional settings in the right part. This is detail and detail must show us data only \nconnected to his main entity record only for currently selected realty and not any other realty. So we have to make \nsome filtering of page data. As you can see, this information tells us about that we may use it for example for detail \nfiltering. So let's click on this plus and we have to construct simple filter which will be applied for all the data which \nyou plan to see in this list. This simple filter is based one condition. Some column from reality object must be \nmatched with realty visit.  \n  \n  \nSpeaker 1\n \n In reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this. So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty. That's how we will filter our data and show only visits for corresponding house, not for any \nother another house. Okay, this filter is mandatory, so you must do this. Otherwise you will constantly see big set of \nvisits not related to your selected apartment. For example, no need to use static filters, but if you want you can apply \nthere. And we have some options like row numbering, multi selection, allowed inline editing, inline insert. Okay, I can \nforbid inline insert and we will only use plus button to add new data.  \n  \n  \nSpeaker 1\n \n We can also program bulk actions for list. So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions. For example, you can program additional actions here and that's how you can do some \ncustomization and additional functions that will be running for selected data. They are called bulk actions. Bulk here \nmeans that you can select several records and then perform one single action for such records in order to so to \nprocess data more efficient. So we have element code here and it looks like our main list part is already set. All we \nhave to do now is to find the small plus button. This plus button is designed to add new data to the detail.  \n  \n  \nSpeaker 1\n \n Of course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically. But here we have important setting which column values to set. As I told you, when we create new \ndetailed data, we must take care about parent reality value. So we have to set here some default value for parent \nreality. Parent reality will have its default value. We have not so many options here. So value from another field and \nwe will have parent realty id. That's the only thing which is suitable here. So when anyone clicks on the plus new \nrealty visit page will appear. But parent realty for this data record will be already set up as ID of our reality. This is \nvery important, otherwise we will not be able to normally create visits.  \n  \n  \nSpeaker 1\n \n So please remember this is filling of a column that is used for connection between visits and our realty. Okay, great. \nNo any additional settings. So you just have to remember when you build your detail, you should set up your list and \nthen take care about plus button. That's all. We can save our changes and test how our detail works. We need to \nreload page just to make sure we are not fighting with any kind of browser cache issue. Let's go to apartment in New \nOrleans. Now you see our detail. By the way, it's interesting this status of expanded or collapsed system remembers \nit and it remembers it separately for each user. So if I prefer not to work with this detail, I can collapse it and system \nwill forever remember it. If necessary I can expand it.  \n   \nSpeaker 1\n  \n If other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails. So let's make a quick test of how our detail works. Let's try to add new record. You see default value \nof your visit date and time was set. Okay, let's set it for tomorrow the same time. Probably we do not know any \npotential customers, so let it be James Bond. Here is some trick. If you will click on this hyperlink, it will open \ncorresponding contact page. So it's not what you plan. When we select data, it's better to click on the record but not \non the hyperlink. So somewhere here double click. That's how we will select data in this column and comment some \ntest comment. Save it. You see the data was created and parent reality was automatically set correctly.  \n  \n  \nSpeaker 1\n \n We can copy this data, save it, check it out. You see the parent reality is copyable. It's very important to keep it \ncopyable. So in this case creating a new record was correctly copied previous parent realty. And obviously we can do \nit one more copy. We can edit any record by double click on it or by clicking open. And obviously we can remove data \nif not needed. So our detail looks very good and works correctly. Let's check that for other realty records. We don't \nhave this data. So let's go to select and find another realty. Oh, we have something interesting here. Let's check Out. \nYou see, our page is hanging now. Probably it's because of browser issue. I just updated it recently. So possibly we \nhave some kind of browser related issue. And also we can close all unnecessary pages.  \n  \n  \nSpeaker 1\n \n Maybe it will help our system to work more correctly. Something unusual happens with my browser with my app. So \nlet's check about its CPU and memory. Okay, I will reward the page fully. This is not a result of adding details, so it's \nprobably some kind of crash but not related to our detailed data. So now you can see our apartments and visits for \napartments were done. Okay, another house in Miami, another data. So we have no data. Let's make for a house in \nMiami some visit next month. We don't know who exactly will come. And we can save this planned visit. So \ndepending on the record, you see corresponding detail values at our visits. You see. Okay, great. So now we \nsuccessfully made our detail. Of course we have to take care about saving everything on disk.  \n  \n  \nSpeaker 1\n \n We have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid. Without being afraid of something can be lost in the middle. So I recommend \nyou to do such comments in version control because it helps to keep all your history. And also if something happens \nwith your environment, having such history will be a great help because you'll be able to recover anything that you \ndeveloped. So in my case, now everything was saved. Let's commit it to version control. We have some data here. \nWe have a lot of items modified. It looks like our section was never submitted to Version control. So it means like \nreal tapp edit visits, detail added. Okay, so it would be a quite big commit for us.  \n  \n  \nSpeaker 1\n \n And we will sync changes which means pull and push to common repository. And now it's okay, it's done. So we can \ntrack our changes at our GitHub repository 7commits. You can see all the history, you see how many files were \nchanged and so on. Each time we do this, you'll be able to track all the history and make control over what is going \non here. Okay, so what's next? What we can do next with our details and with our pages you can program something \nin edit page of a detail with the same way how we did programming in our big form page. So this is. This page is \nproduced. As you can see we have a button for edit page. We also will be able to do programming of its handlers or \nvalidation. So rules are the same.  \n  \n  \nSpeaker 1\n \n And also you can use business rules if you want to do some kind of filtering or simple fields hiding or showing you \ncan use all the features. So you should remember that our page for detail is based on a separate client module that \nwas created today. It was a reality visit page. So this reality visit form page, as you can see it's a separate client \nmodule. We can even look at its code if interested. It has its own Vue config view model config and empty handlers, \nvalidators and converters. Maybe you have any questions? Maybe you have some like notes ideas or something. \nAnd in some implementations you may need to create a read only details. In this case you may hide new button, you \nmay construct your object which will have no edit page at all. And you may also disable editing in list.  \n  \n  \nSpeaker 1\n \n So inline edit should be disabled. So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user. Read only details are helpful, \nespecially if you use some kind of integration with third party systems. And you can read data from third party data \nsources using for example some database to database connection if it's on site and then display such data as a list \nyour pages. Okay, so that's how you may do such details and you may organize them in separate tabs of your page. \nOr you can put it down. There is no physical limit on how long you can scroll down. So you can put new items down \nthis page and there are no limitations of number of rows. Let's try to move on.  \n  \n  \nSpeaker 1\n \n And possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications. So let me explain what I plan to do right now. Let's imagine this is very typical by the way, this is a very \ncommon scenario. Let's imagine your business user asks you and says hey, you know, you already created your own \nsections. It's very good we do this. For example, we have realty section, we keep some data there, it's okay. But also \ninside of our customizations we need to do some changes at existing entities.  \n  \n  \nSpeaker 1\n \n For example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it. So we need one more extra column at our accounts section. And simply speaking, we need to add some \ncolumns into existing entities. We can do this easily with no code approach. Let me show you how it's possible to \ndo. You can open account Page account form page. And then you can go and click on this edit page button. Let's try \nto do this. Let's see what happens. As we're running our system as administrators. So our supervisor user is a \nmember of system administrators role. Now you can see account page design. And you may not.  \n  \n  \nSpeaker 1\n \n You may now see some very strange package automatically created. And system does not allow us to change it. \nAnd this strange package will be used. So it will be created by system automatically. And when we customize \nsomething, system will save our changes into this package. Okay, let's agree. Let's allow it to do this. So let's agree \nfor this procedure. So our task is to add one more column to the account. So we will have a text value. Let's put it \nsomewhere here. We can name our new column Website code. We can also provide its code for it. Website code \ncopy sorry. Confirm text 200 great editable. Great element code should be unique. Okay, let it be developer friendly. \nSo we made our new column. This is very typical. We did not use programming at all. This is only customization.  \n  \n  \nSpeaker 1\n \n But you need to know how technically this is done and where it will be finally saved. And how to for example, turn \nyour system back to its previous step, previous stage. If you realize that such change was not designed, was not \ndesired anymore. So when you change like this, you can save it. Also you can hide existing columns. Of course, in \nthis case they will be not removed. You can move some columns. You can reorganize user page of existing section. \nIt's also allowed to do. You can also add a lot of new components on the page, not connect to the database at all. So \nit's up to you how you do this customization. In my case, I try to keep it very simple. I just added one single column \nhere. Okay, and then we save it.  \n \n \n  \nSpeaker 1\n \n Now I should pay your so I attract your attention that we will finally receive new package. Our customization will be \nsaved as a special type of item into this new package. So let's try to do this and then let's see what finally will \nhappen. This is a fully valid flow that valid algorithm how to customize existing tools. You could also customize it \nthe same by going to application hub, finding Customer360 app and then making changes for a page from there. \nOkay, so we made our new column. Let's close the page here, open it again. Probably we already will see it. Yeah, \nWebsite code. You can test some value here. As you can see, it was correctly. It was correctly saved. Now let's save \nit. Some warnings but close maybe let's hide some unnecessary columns in order to display important for us \ncolumns. Website code.  \n  \n  \nSpeaker 1\n \n Yes, it's saved correctly. So everything's good. We can even edit, inline edit. We can even do like this and save our \nchanges. So then open it. You see, everything works just as planned. So we managed to create new column. It is \ndisplayed in our accounts section. Everything looks good. Now let's go to configuration section. Or maybe it's better \nto go here to Application hub because it will be more clear for you to see. Let's go to customer360app. Because our \naccount edit page originated from this section. So it was designed in this section. Let's open it. Now we see some \nchecks, some items. Our pages seems not to be changed. So we have the same set of pages as from out of the box. \nBut when we look at number of our packages, we will see all three standard packages, but they are read only.  \n  \n  \nSpeaker 1\n \n And once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it. And such items are not so easy. Let me show you properties. We have special type \nof object which is called replacing object. It's not usual object, this is replacing object. And also we have special type \nof item which is called replacing client module. You can see replace parent option is on and this is extremely \nimportant for you to understand and feel this difference. So now we are going very close to understand what is \nreplacing object and why it is different from regular object and what is replacing view module or simply speaking \nreplacing client module from any previously known and studied types of client modules. Possibly it's make it's better \nto start from objects here. So what is replacing object?  \n  \n  \nSpeaker 1\n \n Let's open it. Maybe we'll understand it better when we open it. First of all, it's interesting that replacing object it has \nreplace parent option on which clearly states that this is not a usual regular object. Replacing object is used when \nyour original object is present and your task is to customize it. But original object is not in your package and the \noriginal package is not editable. In our case, account entity was designed somewhere in base product creation \npackages. It was additionally customized in Customer360 packages, but they are read only if you want to change \nand save something. We have to use replacing object and save it into our package into new package. This package \nnow is editable. It's very important. Also it's very important that in replacing object, parent object is mandatory. And \nnow you see value here.  \n  \n  \nSpeaker 1\n \n Parent object is account and replacing object code is absolutely the same. This is important rule of creature \narchitecture. So when you replace some entity, its name remains the same, you can change its title. Moreover, it was \nused in base platform bank software products where original account was replaced and sorry, it was renamed with a \nanother name called legal entity. But physically it was still account entity and it's still the same table and the same \nlogical name at program code. So only title was changed. So when you replace some entity, you can change its title, \nbut you cannot change its code. Okay, and the code should be remaining the same. And personally I would like to \nmake it not editable.  \n \n \n  \nSpeaker 1\n \n As you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes. So I think that this editor should not \nallow you to modify code in case if you work with replace an object. Okay? So code must be the same as original \none. What we have as replacement, we have a lot of inherited columns. All the columns from original entity are \nshown here. We can slightly change them, we can change their title, we can modify their default value or make it \nrequired or not required. But we will not be able to rename original column, we will not be able to change its lookup \nproperty.  \n  \n  \nSpeaker 1\n \n And in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range. For example, if original type was text 200, then potentially you can extend it to text 500. But \nI do not recommend you to do this because you will face some additional unexpected difficulties. So it's possible, \nbut I think not so feasible. So it's better not touch types of columns when you make replacing objects. So the main \nreason why you need replacing object, of course is creating your own columns like we did here. So this is our own \nnew custom column website code. And actually this website code is saved into our report place an object. All \ninherited columns are obtained from parent entity. So we cannot remove inherited columns and we cannot edit any \nproperty.  \n  \n  \nSpeaker 1\n \n So we cannot rename inherited columns. We can only change its title. Our custom columns are shown here in \ncolumns list. And usually the reason why developers create replacing objects is need to add your own columns. \nSometimes replacing object is created because you want to change some common properties like title of the object, \nlike some behavior settings or maybe change of access rights settings. When you replace an object, you can modify \naccess rights behavior change. And we have three types of access rights permissions related to objects in creation. \nAccess rights set for general operations to Allow or disable selection, insert, update or delete operation for the \nobject.  \n  \n  \nSpeaker 1\n \n In total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases. You can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only. So three levels of access rights protection and when you make a \nreplacement object you can also change such permission set. Okay, so the main reasons Generally we have two \nreasons of using replacing object, making your own columns or customizing and changing some properties of \nexisting object. What is also important for you to know is that replacing object is saved into your own package and it \nrepresents some changes that you add into existing structure of your entity.  \n  \n  \nSpeaker 1\n \n This can be done. You can see it clearly if you go to configuration section. Let me explain. Let's go to all packages, \nsearch for objects and look for account object and make it strictly searched by equals condition. So only if object \nname equals to account it will be shown here. Now you can see we have some origin of it. Origin of account is \nsomewhere in CRT core base. If we open its properties we will see that it was inherited from base entity base object. \nIt's the same base object is title base entity, it's code and this is not a replacement, so no replacement. So this was \noriginal creating of new entity named account.  \n   \nSpeaker 1\n  \n But then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently. So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it. Finally, our last addition will be from our customer, so from our editable package and it \nwill be like a final layer of all the settings. As you may guess, the order of application of such layers is important \nbecause if this one is applied later than ours, so this one will declare final values of certain properties that we need. \nSo the order of applying of changes is really important. And usually this order follows package dependencies \nDiagram.  \n  \n  \nSpeaker 1\n \n So if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles. Final structure of account is formed by its origin plus all the replacements. It's interesting to \nmention that at the database level we have just only one data table. Let me show you. This is our set of databases \nD1 database which will work for now we have account data table. We can extend and see its set of columns. Now \nyou see for account table we have a lot of base product columns and the last one is our website code that we added \nrecently. So replacing object does not create any new table.  \n  \n  \nSpeaker 1\n \n Replacing object uses existing table and adds new columns there. If you will remove replacing object from your \nsystem logically your new column will disappear physically. It will be present in the database as a kind of leftover. \nBut it will be not so critical, not so important. And I think that end users will notice it at all. If you will recover your \npackage again, you will still resurrect this column logically and it will be available at application. So that's how \nreplacing object works. And you can use it to customize any existing part of creation objects, including some base \nobjects like base entity and base lookup. So you can customize quite flexibly, even some, let's say top level objects \nthat are used for many of inherited child items. So you can use replacement for any existing object.  \n  \n  \nSpeaker 1\n \n And Adrian is asking very interesting question which I plan to move on here. So you work with some account page \nand you would like to keep your settings saved in a proper place. Yes, Adrian, I will show you now and I'm just going \nprobably not so fast with explanations here. So now we have Customer360 app and for this app system created \neditable package. And we have some contents in this editable package. We have some customizations made \nespecially for this app. Let's imagine that you have more apps like you have sales automation app when you add. So \nfor example, you have case management app. It's a base product for service automation. You have some lead \ngeneration, some opportunity management. So let's imagine you have several apps and you want to customize most \nof them.  \n  \n  \nSpeaker 1\n \n By default system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app. But obviously you may not want to work with such many packages. Also you may not \nwant to work with packages with ugly names. Let me explain what I'm talking about. About let's reload our data, go \nto all items. And now you see package with some ugly name, usr CRT customer app and then some strange unique \nsuffix added to it. So the same name will appear on our discord. Probably already appeared. Let me check it out. So I \nexpected to see here. Yes, the same strange name appeared on our disk very soon this name will travel to version \ncontrol and it will be not so comfortable for other developers to see such a strange package.  \n   \nSpeaker 1\n  \n So your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system? And the answer is yes, we can manage this. This is not obvious and you have to \nperform additional steps to enable such management. So let me show you how you should do this. Let's go to \nlookups or we can go to studio lookups. Okay. And then let's search for recently added lookups first. Sorting by date \nof creation. Okay. Then we can register special object as a lookup. This object is named something like packages. \nYes, this name is package installed application and this is quite not obvious. I only knew this from my colleagues. So \nthis is kind of a technological secret and I think it's not very easy to find. But if you know that it exists.  \n  \n  \nSpeaker 1\n \n So you will enable it of course, package installed application and we will provide the same name for our lookup and \ntry to save it. Okay. This is only developer tool so we do not need to transport such registering of package to test and \nproduction. We can open contents. And now you will see all installed applications, all existing packages and you will \nsee settings for all packages. Are they primary for a certain app and are they used as a default current package? \nCurrent package means editable package that is used to save new customizations there. So let me show you how \nwe can do some tricks. Now we have customer 360 app and we have this trench package is used as a primary and \ncurrent package for this app. So any new customization that we do in customer360 will fall into this package.  \n  \n  \nSpeaker 1\n \n We don't really want this, so we want probably to remove this package at all. And maybe we would like to use our \nexisting new package which is a dev package. We have it Dev Classic package. So we would like to use dev Classic \npackage for this. So we can try to do this replacement instead of this. We can clear and then search or maybe just \ntype dev Classic package. So we can put our existing package as a target default package for Customer 360 \ncustomizations and confirm our decision. Of course we will have to take care about package dependencies. Now our \ndev Classic package has no dependencies, but it will appear so it will receive it soon. Let's go to our application hub. \nNow try to customize customer360. Go to advanced settings.  \n  \n  \nSpeaker 1\n \n And now you see our dev Classic package is connected to this app and we can see properties of this package. Let's \ncheck. What about dependencies? You see that System automatically added Customer360 app as a parent \ndependency to this package when we made changes, when we customized this stuff. So we did something like this. \nOh, something like this. Yeah. So we did this setting and it was important. So now we have automatic changes in \npackage dependencies. Okay, great. So you can see Dev Classic is connected to this app. And probably the last step \nthat we will need to do is we have some customization made in this ugly package and we can transport it to our Dev \nClassic because we don't want to use this package at all. We want to get rid of it.  \n  \n  \nSpeaker 1\n \n And we will continue customization of Customer360 in our classic package. Andreen, is it what you were asking for? \nOkay, great. Thank you, Adrian. So now we have multi action move to another package. You should be mentally ready \nthat this movement takes significant time because system performs a lot of checks and sometimes it fails because \nof missing dependencies or some other technical reasons. But in general it's quite safe too. So you will probably run \nit fully correctly if everything is okay with dependencies of target package. So now I'm trying to move items created \nin my ugly package into Dev Classic. Then I will I plan to remove my ugly package at all from my system. It will be \nempty and I can safely remove it.  \n  \n  \nSpeaker 1\n \n As you can see, this transfer takes significant time because it looks like system performance performs a lot of \nchecks of items that we process and it makes sure that we have no other connections to this item. So it does \nsomething like probably some excessive work. But okay, it makes it successful. Now you see, our customization \ntraveled to this Dev Classic package. Now if we go here, you see our customization should be present here. Probably \nit's because of caching. So let's reward. Yes, now it's here. This information probably will. Let's reward this part. Oh, it \nstill remembers of this connection. So we can remove now this package and this line also will be disappeared. Let's \nlet me show you. So this ugly package, now it's fully empty. We can remove it, delete it fully. Also removed from the \napps package. Remove takes time. Okay, please.  \n  \n  \nSpeaker 1\n \n Now it's empty. It should not take a lot of time. Yes, successfully deleted. So we have no ugly package anymore. We \nhave some correctly created packages, good names. We use this good named package as a target package for our \ncustomization of Customer360. Now you see everything looks good. Our changes that we made are saved in a \nproper place. So that's how you can manage connections between packages and applications. I agree this is not \ntransparent, so let's close open this register. Okay. Package installed application. You see no ugly package at all. We \nsee our dev classic as a target for this app for realty. We have only one package, so you can easily add the new data \nhere if necessary to connect some packages with some applications, you can do whatever you want.  \n  \n  \nSpeaker 1\n \n Of course, you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool. If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor. So you should consider yourself before making changes here because it's like architecture but you can manage. \nThank you Adrian for your questions. Okay, it's time for us to have just a short break, probably five or seven minutes. \nAnd Adrian tells us about the question. Customize account Page and Freedom UI generates new package. Yes, it \nwas in. In January 2024 and the answer was from Ryan Farley where we had probably no such tool. So he advised us \nto do something like movement of items and then just use this loop up. Yeah, yeah. Thank you. Thank you, Adrian.  \n  \n  \nSpeaker 1\n \n Okay, thank you for all of your active questions. Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics. Thank you.  \n  \n \n  \nSpeaker 2\n \n Hi.  \n  \n  \nSpeaker 1\n \n Yes, hello.  \n  \n \n  \nSpeaker 2\n \n I have a. I have a small question I have. Yeah, so I said we use the two lookups.  \n   \nSpeaker 1\n  \n Okay.  \n  \n \n  \nSpeaker 2\n \n First one is for country and second one is for city. Right? So in the drop down button we have one plus icon is there if \nyou remember.  \n  \n  \nSpeaker 1\n \n So what about which lookup you're interested? Is it the main realty or.  \n  \n \n  \nSpeaker 2\n \n Yeah, main reality. We have country and city. Right? Country, drop down and city.  \n  \n  \nSpeaker 1\n \n Drop down type.  \n  \n \n  \nSpeaker 2\n \n No country and city.  \n  \n  \nSpeaker 1\n \n This one. So I can't hear. I can't hear properly. Country and city. Okay.  \n  \n \n  \nSpeaker 2\n \n Yeah, yeah. So we have a plus icon over there, right? Adding. So what is the use of that? Or can we hide that button if \npossible?  \n  \n  \nSpeaker 1\n \n So you ask about if it's possible to manually create new city for this.  \n  \n \n  \nSpeaker 2\n \n Okay, Can I, can we hide that button? Disable that button if possible.  \n  \n  \nSpeaker 1\n \n This. Yes, sure you can. I just forgot to do this. Yes, let me show you. We can go to edit page. We can find \ncorresponding lookup country and there is an option to allow add new value so we can disable this. And for city we \nwill also disable enabling new values. So just tick off save it and we will only be able to select from the list without \npossibility to add any new countries. Close open. Now you see some selection. Now you see only available columns. \nThank you. Rakhi states. Oh, we have New Orleans, no corresponding city. Okay, would it be. Thank you for a \nquestion. Any other questions, feel free to ask because now I plan to show you something which will be a final step \nabout user interface.  \n  \n  \nSpeaker 1\n \n And you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects. So you need to get some basic understanding of how classic UI can be managed. And before \nproceed with classic UI customizations, we need to make some preparation that is necessary and very important for \nclassic ui. So in order to create new section in classic UI you need to prepare target package. We already did it. Here \nis our dev classic package. But also you need to tell creatio this package should be used and we will go to system \nsettings, then we will find a special system setting named current package. Open it and by default you see custom \nhere as a current package. Rakhiv is asking can we change the color of collects icon?  \n  \n  \nSpeaker 1\n \n Oh, I'm not sure because it looks like this is hard coded thing. So possibly you may find somewhere in CSS value for \nthis color, but it looks like this is an image designed somewhere in the app. So it was not supposed to be \ncustomizable, I think. Let me show you with CSS it's not possible. Probably it's because of this is an image. Okay, \nlet's try to understand. Let's try to do inspect. Then you see we have so inspect some marker, some kind of div and \nwhat else? It looks like we have some image. As you can see such images are hard coded, but you may find where \nthey are saved. So possibly you can replace such images with something else.  \n  \n  \nSpeaker 1\n \n You see the current source, so you may try to replace actual storage of this image and you may design your own and \nthat's how you will finally make corresponding change. Rakhi, is it clear? Of course it's not recommended way of \ncustomizing creation by changing of its core files, but physically you can try to replace this file with something else \nand check it out how it works at your environment and then you can if it's on site, you can also get this file to the \nother, let's say test and production environment, so it may work for you. You probably will not be able to apply such \nchange at cloud conditions, because cloud engineers will definitely will not agree for changing files somewhere in \ncore part of Creature and it will be not saved into your package.  \n  \n  \nSpeaker 1\n \n So this is part for core which is not designed to Be changeable by configuration changes. But if you really want, you \ncan replace files on disk with another ones and that's how you can do this. Thank you Rakhi, Very interesting \nquestion and let's move on. So I just wanted to explain you that in case if your plan is to use classic UI \ncustomization, then you will have to take care about current package system setting. By default it is set to save \nsettings into custom package and we plan to save it into our dev Classic. We should do this before starting of any \ncustomization. And also take care this system setting is not cached. Cached settings are loaded at the start of user \nsession and cached settings if you change them. So you will need to fully apply changes.  \n  \n  \nSpeaker 1\n \n And if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session. In the current example, current package is not cached, so we may change it without logging out. Okay, \ngreat. So we can change save it then. One more tip that you need to know before starting Section Wizard. We may \nexperience difficulties because of recent changes in object model without compilation without application restart. \nSo we will need to restart our app in order to guarantee normal work of Section wizard. Especially on save object \noperation of Section Wizard. As you remember, restart of the app now can be done quite easily with maintenance \ntools made by our Swiss partner. So restart application. This is necessary to normalize our server side cached data \nabout object structure.  \n  \n  \nSpeaker 1\n \n If you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache. So we need to do this restart. In this case everything will work. Okay, good. Now we \ngo to settings. Then we find item called Section Wizard. And this tool is designed to create new classic UI sections. I \nwill quickly make some simple example not as complex as we made for Freedom UI just to demonstrate you such \ntool. So I will do it fast. May you may not reproduce all the steps after me. So it's up to you. Would you like to do this \nor not? So I will make some new classic UI section. When we do this we have to provide its title. So let's call it Realty \nClassic.  \n  \n  \nSpeaker 1\n \n And we have to be very careful with the code because code will not be able to change if we finish its input. And that's \nwhy we have to type it correctly from the first attempt. Realty Classic. So this is our code. Once we move our focus \nout from this control, you will see system will think for a bit and then we will not be able to change this code. So if \nyou made mistake. Then you only cancel and run section wizard again. Workplace. Okay, let's put it to the same \nstudio workplace and background icon. Let it be green so it will be our icon for the color of our section icon. Okay, \nGreat. Then we go to setup page. We need to do some minor settings. I'm still a bit afraid of what may go wrong \nwhen I save my section wizard section.  \n  \n  \nSpeaker 1\n \n So I will only change something like a name column. I will provide some minor change copyable setting, no any other \nsettings. So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue \ncustomizing of my section. But in case if it fails to save and it will be obvious that I need some more steps to \nprepare my system, then I will not lose time for setting up columns. So saving objects is the most critical step of this \nprocedure. If it goes correctly, then we will successfully continue our customization. If it fails now, it's correct. Yes. \nGreat. So if it fails, we will make something like discovery of what went wrong. But now in our case it looks like \neverything is okay. Great. So we saved our section correctly.  \n  \n  \nSpeaker 1\n \n Now we can edit it. And editing a section is much safer than creating it. So we can go to edit page. Now we can \ncustomize it. And I will quickly add similar columns as we had for Freedom ui. So decimal column drag and drop to \nbe our price. You see a bit different user interface, but the same sense. We add new columns, we provide title code, \nno element code and just save. I provide area I can use lookups. As you remember, we made a lookup for type of our \nreality. We can call this column USR type. The reason why we use prefix is the same. So system asks us to keep \nprefixes for our customized stuff bus telling that he has two leave no problem. Thanks you. Thank you. Thank you. \nAnd you will watch videos. Great. We will finish soon. Don't worry.  \n  \n  \nSpeaker 1\n \n Today's Friday and probably tired a bit. So copyable value type based on existing lookup realty type or Classic UI \nDrop down list block behavior, no redundantly, no hiding titles. Everything is okay here. Save it. Great. I will show you \nhow we can make new lookups in Classic ui. No existing lookup so we have to make offer type. Code is USR offer \ntype and no existing lookup. So we will create one and as usual we'll provide title for this new lookup Realty Offer \ntype Classic ui. So this is how we provide title and code for our new created object that will be inherited from \nbaselookup and register it as lookup by section wizard, drop down list, standard behavior for delete. No any other \noptions. Okay, great. And finally we can make some kind of text just to make comment.  \n  \n  \nSpeaker 1\n \n By the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui. \nComment here in their name is comment. But what is interesting here we can make a special option called multiline \ntext. You will see what will turn it into the column. So multiline text has a very interesting feature which is not \nimplemented in Freedom Live. I will show it for you. Multi line text. Obviously it's designed to make possible multi \nline values here to be said, maybe it also makes sense to have 500 just to make sure we have big enough value. But \nmulti line text has also very interesting property. You will see it soon if necessary we can also add an object for \ndetail and register detail. I will try to keep it simple.  \n  \n  \nSpeaker 1\n \n We have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary. And \nlet's go back keep it simple and save the changes. So I want you to see how Classic UI section looks like. In Classic \nUI we have much more objects created for a section. Now you will see in configuration section close properties of \npackage, probably reward it. Okay, saved correctly. Now I reload section with configuration so we can go to dev \nClassic sort by date of modification and you will see how many new objects were recently created. Let me show you. \nWe have objects for file for folders for in folders for tags feature and also we have object for main Classic reality \nsection and we have an object for our lookup created.  \n  \n  \nSpeaker 1\n \n So we have much more objects for Classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects. And we have more tables for this for the database. And in Freedom UI such tools are \nincorporated into commonly used objects for tags for files for folders and it makes it more efficient storage. Okay, so \nlet me show you how Classic UI section looks like. We will have this realty classic section but it probably will fail \nwhen we try to open so we have to reload because of Classic UI is much more sensitive to cache issues. So you \nshould always reward your page. If you do any client side changes in Classic UI you see it's still faces some troubles. \nLet me show what's happening there. Or maybe we just have to wait. No, it doesn't look good.  \n  \n  \nSpeaker 1\n \n Okay, let's go to another page. Go to reality Classic page. Yes, we have some minor issues here, but in general it \nworks. Okay, Try to add new record. Here you can see how Classic UI edit page looks like. I need to tell you that in \nClassic UI we have a totally different background frameworks used for user interface. In Classic UI we use EXT \nframework EXT versions. So you see it's Quite old, probably 10 years old framework and it's quite old but it works. \nAnd it's a JavaScript framework which keeps controls and some UI stuff. And in Freedom UI we use Angular so \nclassic UI uses EXT and TerraSoft core framework. Freedom UI uses Angular framework so it's totally different and \nmodule structure is similar but still we have some serious differences. When we create new record we didn't assign \nany default values so far.  \n   \nSpeaker 1\n  \n So okay, let it be Paris Ren. The type is apartment. Offer type is not filled in so far. And here is what I wanted to show \nyou. This is voice input and speech recognition piece. So you see it works only in Classic ui. In Freedom UI we don't \nhave it so far. We don't have it in Freedom UI so far. And recognition quality is quite high as you can see. So you may \nuse it for Classic UI implementations. And I think that in Freedom UI system developers should develop something \nlike this and enable it. In Freedom UI now we don't have it and offer type is empty so we have to probably take care \nabout offer type for Classic ui.  \n  \n  \nSpeaker 1\n \n This one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package. So this is important step because such data also should travel to our test and \nproduction. Now if we go to Reality Classic you can see that offer type can be selected and we can save it. Okay, \nlooks good. Some minor steps, minor preparations. For our section we can go to Workplace Setup Studio. Now we \nhave our section for Classic UI quite far in low rows we can put it upper. Maybe we can also bind the contents of this \nworkspace and at the same IoT save it successfully. View details Three items were created but you remember. First \none will be information about workplace. Only one data row, nothing changed.  \n  \n  \nSpeaker 1\n \n This one will be about position of a module in Workplace. Let's check Reality Realty Classic. Great. Third one will be \nabout access rights. That's okay. Rakhi asks about voice languages. It depends on browser. And also I need to tell \nyou this voice recognition feature is browser dependent. For example, if I try to do the same in my Firefox. Let me \nshow you my Firefox here. It still doesn't work in Firefox Let me quickly show it for you. It works in Edge and in \nGoogle Chrome recently. So I asked some colleagues. It looks like it works in Safari as well, but unfortunately it \ndoesn't work in Firefox. Let me show you Firefox here you see no support of this feature.  \n  \n  \nSpeaker 1\n \n So it's also browser dependent and you should check and test it before you advertise this for your customers \nbecause it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this. So \nsome browsers does not. Some browsers do not support this and that's why you see it's not in any browser. Okay, \nthank you, Rahi. And what about languages? So so languages now let me remove this part now. So languages are \nsupported and I successfully used other languages to normally detect it. You should use change. So if you change \nyour user profile and change to another language, then your voice input recognition will also support chosen \nlanguage. So yes, it supports other languages. At least two more languages which I tested. It worked well for me. \nThank you Rakhi for your question.  \n  \n  \nSpeaker 1\n \n So finally we had an example of Classic UI section. We can set columns for our section list set fields to display in \nClassic UI we have different approach for setting up columns. So we can provide column settings type, maybe you \nneed price offer type. Okay. And finally we can have a menu comment. Okay. And then we can save it for all users. \nWhen you save columns in Classic UI for all users, then it's possible to use data binding tool to help us to remember \nsuch column setup in our package bind column setup for Classic UI save it into our target package. And by doing \nthis we can transport setting of columns for this list to other environments. So it will not travel automatically. Only if \nyou make corresponding data item. It will save it and you should do it default settings.  \n  \n  \nSpeaker 1\n \n So you should save for all users and such default profile will be saved as data item to our package. You can find it \nhere reload and that's how we can change and transport Classic UI columns setup to test and production. This one \nis saved in sysprofile data at the same with details. Okay. Probably today's Friday and it's enough for today. And I \nwould just want you to see a couple of images of what client modules in Classic UI looks like. So let's focus on \nclients modules only. Now you see we have section page and we have edit page. This one section page looks like a \nbit weird. We have a not so good looking name of it. We can try to modify it. Let's try to fix it so we can rename Quest \n6 something section.  \n  \n  \nSpeaker 1\n \n But we should do the same code here and here. We should do it very carefully. Save it. Now we will have better \nnames for our client module. Also it will be renamed on disk in our dev classic package. You will see realty classic \nsection. Yes, this one renamed and this one was also renamed. So you see we have full correct renaming on disk as \nwell. And after doing this I recommend you to instantly check it out if your section works well or not. Because now \nyou see we have previous URL. Probably it will fail now and we have to probably simply go back somewhere like this. \nGo to classic UI section. Now you see another URL. So now it works. But we still miss columns because of changes \nand previous column setup was set for previous name of the client module.  \n  \n  \nSpeaker 1\n \n That's why we have to do it once again. Okay, Price type, offer type, maybe comment. Then we save it for all users \nproviding so called default profile. This is important. After we do this we can bind columns to our package creating \none more data item in our classic section data was bound successfully close it. Now we have to review what we got \nin our package in order to remove previously created unnecessary data item here old one is not needed anymore \nbecause it represents old values, old settings which will be not so practical. You see, because we renamed our \nmodule and old name was remembered here. Even if we actualize it, probably we will see there is no data for this. \nOh, it's still here. But we do not need to keep such data in our package so we can remove it.  \n  \n  \nSpeaker 1\n \n It doesn't represent any useful data for us. This one is correct data with new client module. So when you rename \nclient modules because of ugly names, take care about quest API column settings because you will probably have to \nreview them afterwards. Okay, so final quick brief look at our client modules in Classic ui. So in classic UI section \npage looks like this. When you open it you will see this code. You will see define word, module name, dependency \narray, factory function and some body. So this is a body of our function which mainly returns an object with some set \nof settings. In our case it's almost nothing. So we have no any customization here. Classic UI pages are also \ninherited from some parent templates.  \n  \n  \nSpeaker 1\n \n That's why we have a lot of common functionality and no need to implement this functionality each time in each \nseparate section. So our functionality is now in parent one and all the buttons for classic UI section, like new actions, \nview buttons, grid folders, feature tag, everything is inherited. That's why we do not need to customize it and that's \nwhy this code is so small. But for page for edit page code you see much more significant difference. So you can see \nset of sections module name, factory function returns a bit bigger object and you can see set of columns here. So \nthey are different from Freedom ui you should focus on Diff first because diff shows you information about user \ninterface changes and each item in this diff array represents one control as the same as we had in Freedom ui.  \n  \n  \nSpeaker 1\n \n So if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually. And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it. So in some cases, for example you want to \nadd a button, you will find at Academy articles this definition of a button, put it to your code, provide corresponding \nhandler and methods will be used as a place for your JavaScript functions to handle events of your controls. So in \nClassic UI you can also do almost the same programming as in Freedom ui. If really needed, just tell me.  \n  \n  \nSpeaker 1\n \n I can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you. Okay, that's all for today. We just briefly mentioned Classic UI and we probably need to pay some \nattention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers \nwho started questiqi Solutions and unfortunately such migration is not automated yet. So today's session is over. \nThank you very much for your time, for your patience and questions. Next week we will start with some migration \nquestions from Classic UI to Freedom UI and we will move on with server side programming. So we will do some \nserver side examples, we're writing C code, we will do integration with Visual Studio, working with File System and so \non.  \n  \n  \nSpeaker 1\n \n As a final step for today, it looks like I unnecessary caused it. I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history. And any of you who wants to keep how our \nsession proceed, you can also watch our repository at GitHub. Thank you for your time. Our session is over. In case \nif you have any questions feel free to ask. Our session is over and goodbye. Thank you, have a good weekend.  \n \n  \n  \nSpeaker 1\n \n Today is session number six of our development on Creature Platform Guided Learning. Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration. And then we will fully switch to work \nwith server side. So recently we managed to create a fully separate Classic UI solution. And this was a Classic UI \nsection and list inside of this is called also it's called a section list. So we have a set of data records here. When you \nopen edit page, you see Classic UI edit page with columns components. And we decided not to focus too much on \nClassic UI because this platform will be like deprecated probably somewhere in future. Currently it's supported, \ncurrently it's working.  \n  \n  \nSpeaker 1\n \n But in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui. And most development is focused on Freedom ui. And you also remember some interesting feature, \nsome feature for voice recognition, you remember we still missed it in Freedom ui. And you also can do details, you \ncan program buttons or actions. Everything is explained at Academy. So if you ever need it, you can look at it. Also if \nyou go to client module part for Classic UI you will see that code in Classic UI in general is I think a bit more simple \nthan in Freedom ui. Because in Classic UI you can also make your items in diff array for example like a button. We \nwill do it later.  \n  \n  \nSpeaker 1\n \n Then you can create a handler as a function add methods section. And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data. I will show you more \nexamples later. And this is just a quick brief introduction for you. If you will work with some Freedom Classic UI \npages in this case, this possibly can help you. So what I want to show today, this will be a very typical task for future \nI think. And this typical task is your customer who already runs some Classic UI section successfully. And customer \nunderstands the future is in Freedom ui. Customer wants to use some Freedom UI features, tools, components and \npretty look and user interface. So customer asks you to migrate some existing solutions from Classic UI to Freedom \nui.  \n  \n  \nSpeaker 1\n \n Unfortunately we don't have any automated procedures for this. And especially this becomes additionally complex if \nyou have some programmed code in Classic ui. So I will show you the most practical way how you can switch from \nClassic UI to Freedom ui. I will also show you some settings and system settings for this which impact on how you \nsee your system. So you'll be like more expert in it how to make this migration. So as my example I have realty \nClassic section implemented as Classic UI and I will show you how we can switch it in Freedom UI and what we have \nto do for this. So Freedom UI or Classic ui, the only difference is at client side. So we have different types of client \nmodules.  \n  \n  \nSpeaker 1\n \n Such items which have section in their name or page in their name, they usually designed as Classic ui. If you look at \nthe pages and you see form page or list page, it's a Freedom ui. Of course, physically they are totally different. When \nyou go to list page, you will see Page editor like this, it's a Freedom UI page. And when you will go for example to a \nsection page, you will see only code because it's Classic UI and you can configure Classic UI sections only when you \ngo to corresponding section and run Section wizard in it. That's how you can get to Page Editor in Classic ui. But \nnow our task is to make an example of migration.  \n   \nSpeaker 1\n  \n At the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes. So server side part will remain the same. Data, items, \nlookup contents, everything will be the same. The only change we expect to do will be our user interface area. So set \nof client modules and related code that is behind such items. So I will show you how to migrate from Quest CQI \nsection to a Freedom UI section. Please note that it will not it will be not necessary to forever forget about Quest ui. \nIt's still possible and different users may define themselves which type of user interface they want to run.  \n  \n  \nSpeaker 1\n \n So it will be possible to switch. First of all, I need to tell you about some important settings related to such view. And \nI would like you to see this background like frame. You see this name which shows you some funny, some fancy \nbackground image, some kind of item which is called desktop and you can select and edit it. At the left part you see \nset of sections workplaces, you see for different workplaces, different contents and you also can see some image \nbackground and the top line here also use set of buttons items which are designed in angular and they are items of \nFreedom ui. So this left and top area is managed by Freedom UI and we can switch this background frame setting to \nClassic UI if we want to.  \n  \n  \nSpeaker 1\n \n So let me show you system settings and this system setting is called like Freedom use Freedom UI interface. This \nsetting generally turns on or off this background frame stuff. And if we just for test purpose want to turn it off so use \nFreedom UI interface was originally on we turned it off and it's cached. So in order to apply this we will need to log \nout and log in again. Now you will see how system will look like with the Classic UI set of section and the top search \nbar. Now you see system how it looked when we had no Freedom ui. You see a bit difference. Here you see that we \nstill have different works workplaces. It looks like we totally miss Workplace which is based on Freedom UI. We miss \nworkplace with customer360 from here as you can see.  \n  \n  \nSpeaker 1\n \n And we can also go to Workplace Management System Designer. This page go to Workplace System Setup. Let's \ncheck our customer 360 workplace and you see use only in shell in like in usual words. If we want to translate it into \nsomething that you can easily understand, it means that use only in Freedom UI background settings. Now it's not \nFreedom ui, it's Classic ui. That's why this workplace disappeared. Okay, so you can manage how you would like to \nsee background which is a Classic or Freedom ui. Okay, so we can go back because we're interested in migration \nnow.  \n  \n  \nSpeaker 1\n \n So we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections. It's still supported. You see, \nwe have Freedom UI background, but we have Classic UI stuff inside of it. What I wanted you to know next is Special \nsection designed to simplify such transition between Classic UI and Freedom UI sections and user interface. Now \nyou see special section special setting for page which is called UI Management. And we can specify setting for \nFreedom UI for different roles or users, which makes possible to do it quite flexibly.  \n  \n  \nSpeaker 1\n \n For example, some users are really stick to some Classic UI solutions. They are not ready to switch to Freedom ui. \nThey work with some basic UI sections and it's critically important for them. So you can manage this stuff for \ndifferent users. And also we have Form Page Preferences which is also designed to simplify the selection between \nFreedom UI and Classic UI and only in case if both options are enabled for a section. So in this case you see by \ndefault Freedom UI uses Freedom Pages, Classic UI uses Classic Pages by default and we have some exceptions for \nthis. But personally I consider this stuff as over complicated. And once you started to migrate from Classic UI to \nFreedom ui, I think that it's better to finish this Migration and then do not use Classic UI and only invest into Freedom \nui.  \n  \n  \nSpeaker 1\n \n So this is a page which will be temporary important for you, so it will be not forever for you. And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it. So you will not \nreally need to switch back to Classic ui And that's how I recommend you to follow this personally. In our Inner \nAcademy department in Croatia company, we still use some Classic UI solutions, but our plan is to migrate to \nFreedom UI and then to use only Freedom UI sections. So and this stuff like page for settings will be temporary \nuseful for you I think. Okay, let's go back. So finally we have currently for Classic section, we only have classic user \ninterface, so we have no option to display Freedom UI pages.  \n  \n  \nSpeaker 1\n \n So how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way. \nSo let's go to Settings, then go to Application Hub so we can create new app. As you remember, application is like a \nnew top level setting or like application entity which may include one or several packages inside. We already have \nFreedom UI reality section, but we don't have any classical representation for it. So when we create new application, \nsystem will create new package to create. If we ask, it will create new section for us. So now I will show you how we \ncan create new application. We can call it, we can make it based on records and business processes, but we will \nname it Realty Migration. So it means that we migrate from Classic UI to Freedom ui.  \n  \n  \nSpeaker 1\n \n We can compose kind of icon for it. And we will use this very important feature link to an existing object. This is very \nimportant. So this is a key feature of all this migration idea. We will use existing realty Classic UI main realty classic \nentity. This one will be main and it will mean that system will not create new object for us. It will use existing object, \nit will create a new package, it will save all our application information into a new package. It will make dependency \nfrom real to classic existing dev classic package. And finally we'll have new app but based on existing object. And \nlet's try, let's create it. Icon color is okay for me. So let's move it. This will be not so hard because system didn't \ncreate new objects for us.  \n  \n  \nSpeaker 1\n \n It only uses existing object and then creates several client module. So I don't expect it to last longer than 20 \nseconds. So let's see how it works for us. And then you will see the main idea of migration. So Generally it's pretty \nsimple. You will have a new app, you will have template for list and or edit page. And then we will have to manually \nset it up according to our expectations. So you can see there is almost no automation such migration unfortunately \nand a lot of hand work is expected here. So let me show you how we can do this. So we have data models. Our data \nmodel has no new objects, but it definitely has an existing object because it's based on this reality. Okay, let's go to \neasy part. List page I think is easy part and it shows some columns.  \n  \n  \nSpeaker 1\n \n We can hide unnecessary columns. We can add the columns that we need you. Now you see all our classic object \ncolumns are here. So we can specify say okay, we want to see name, price, type, offer type and comment and then \ndate of creation. Order of selection is important here. And we can hide this column. We can also hide this, we can \nshrink, we can move something if necessary. We can swap columns positions if you want. So now this is easy part. \nWe only made our list settings for freedom UI page. Physically this page is saved. Let me show you this page. Page. \nPage here is saved into new package and its parent page is somewhere in template code and title is quite good. So \nwe can save it, no problem.  \n  \n  \nSpeaker 1\n \n I prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools. So I always want to check what is going on there. And that's why we go to \ncorresponding new created package. You see this package must have dependency from dev Classic. Yes, has it. And \nthis package now includes no owner objects. So it uses existing object from parent package from dev Classic. And \nyou see no created objects here. So we did not customize our object model so far. So we use 100% of all existing \ncolumns from classic object. So data model is the same. User interface part is the only change here and we have list \npage changes. Now I will work with form page. So list change is okay. Now let's work with form page.  \n  \n  \nSpeaker 1\n \n Form page is Freedom UI edit page for a section for an object. And as you can see it has its own properties in our \npackage code title. Great. And we can specify columns as we wish. We already have all the classic UI columns, so \nwe only can just drag them at its place where we expect it to work with. So let's go and display types. This is list of \nexisting columns. So such columns were already added at this stage where we created in classic UI we have \ncomment, we don't have any Other columns that could be useful. Also, it's interesting to mention that you see such \nnotes here representing that colon was already added to the page.  \n  \n  \nSpeaker 1\n \n So you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it. Okay, so in \ngeneral it looks like this. We can also try to specify drop down for types. Drop down for offer types. Okay, great. We \ndid not create manager for this object and when we finished we can just click save. As you can see, even if we had \nsome business logic in Classic ui, this business logic is not automatically migrated into Freedom ui.  \n  \n  \nSpeaker 1\n \n There is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui. So if such logic exists, you will have to reprogram it Working at code source code part of the client module. So I \nalready saved it. You can close it. Now you see some changes. We can control what's going on at our package and \nthat's how we can test how it works. So I expect to see new section somewhere here Migration section. Now you see \nthe data which previously was shown in Classic UI also available in Freedom UI user interface. You can try to add the \nnew data record. But now you see still you see Classic UI page.  \n  \n  \nSpeaker 1\n \n This is a result of some browser cache issues. Okay, let's cancel this log out, log in, go to Freedom UI section. Also I \nwould like it to be present in my. Let me show you in my studio Workplace. So let's go to Workplace Studio. I'd like to \nadd my migration migrated section. We will find it Realty Migration Only sections which were not present here are \nshown. That's why only realty migration is shown, because Realty and Realty Classic are already done. Okay, \nmigrations is somewhere at the end. So let's rearrange this as usual and move it upper just below the classic. We \ncan also bind this workplace and save it to the same package where we originally saved it. And system creates \ncorresponding three different data items for us. Okay, we trust that everything saved correctly. So we have three \nsections.  \n   \nSpeaker 1\n  \n Now let's go to Studio Realty Classic and Migration is somewhere at the Antifa world. I expect to see my sections on \ntheir places. Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff. And migration \nis our Classic UI data shown in Freedom UI user interface. Trying to open the edit page shows us Freedom UI page \nfor migrated stuff. So now we made our example with migration and we successfully implemented it's in user \ninterface. So you see that this is a simple and quite straightforward way of how you can do this migration. You will \nhave more difficulties with transferring of business logic making your own filters. Again if you made some filters for \ndropdowns. For example, in Classic UI it's possible to use programming or to use business rules. And business rules \nare not migrated automatically.  \n  \n  \nSpeaker 1\n \n So you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages. \nBut having the data stuff the same. It's so doesn't take too much time because your data is data model is ready. And \nwhat is interesting, we have special parts of section like folders like tags and notes. So nodes will be taken correctly \nfrom Classic UI part. You will see attachments here. And notes is a special component which is missing here and \nthat's why you do not see it. But files will be shown here. So in Classic UI special component to show your files is \ncode. So this detail. Oh, now it's failed. Yeah, because we probably. So as you can see, it's quite hard to make it work \nat the same time where you work with Classic UI and Freedom ui.  \n  \n  \nSpeaker 1\n \n So it's really hard to. Now we switched to Freedom UI and that's why Classic UI edit page is not working normally. \nBut for different users it's possible to set up. So Classic UI open the page. As you can see in Classic UI I open the \npage and I see Freedom UI edit page. Because my current setting is to show Freedom UI page and because of \nFreedom UI shell is activated. So you see this background, top panel and left panel are in Freedom ui. And because \nwe see some background here and because it's made on Angular. So Edit page was chosen to be shown in Freedom \nUI even though we opened it from a section which is in Classic ui. So I understand this is kind of messing with \ndifferent types of ui.  \n  \n  \nSpeaker 1\n \n So finally when you do migration, you will use this help of Application Hub. You will get new package for your \nmigrated stuff. From Classic to Freedom we will have set of client modules and all logic that you miss. You can \nimplement with the help of business rules, with the help of components that are available as no code tools at \nFreedom UI and not available as no code tools in Classic ui. And also you Will be able to write your code for migrated \npages to implement the same functionality that you needed and that you previously used in classic sections. So if \nyou have any questions about this migration, please tell me. Server side part like business processes, like web \nservices, like some C Sharp code, it's the same, so it operates with data model, it doesn't really depend on the type of \nuser interface.  \n  \n  \nSpeaker 1\n \n So server side part of your migrated stuff will be the same and you just need to check that it still works as expected. \nIn case of any questions, I would be happy to hear. As usual, video recording is performed. So if you missed some \npart or if you so just watch this later, all the videos will be available. Peggy? Yes. Questions please.  \n  \n \n  \nSpeaker 2\n \n Yeah, I have a question. Is realty. Sorry, not realty. Is Classic UI ever. Would it still be deployed to new customers or is \nit just mainly targeted towards legacy customers?  \n  \n  \nSpeaker 1\n \n Currently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it. So \nit's like you have an old PC and new PC and you think about installing some program. Of course it makes sense to \ninstall it on UPC unless you have very serious reasons to use Classic UI for it. For example, you already have some \nmarketplace add on which is very useful for your business, but implemented in Classic UI and is expected to be used \nin some Classic UI sections. So if you have some strong reasons like you stuck with some quasiQL solutions, then it \nmakes sense to continue its development, to improve it, to advertise to your customers. But if you have equal \nchances and new customer and new project, of course it makes sense to look at Freedom UI first.  \n  \n  \nSpeaker 1\n \n Because in Freedom UI you have in like in several times more available. No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on. Classic UI is now supported only for existing \ncomponents. No new components are created for Classic ui. We still have thousands of customers with running \nClassic UI solutions and it is quite good. So customers are happy with running what they have. But it's about future, \nit's about development and improvements in future. So if you have choice, of course it's better to select Freedom ui. \nIf you don't have choice because of existing circumstances, then you can decide yourself and choose Classic UI if \nyou do some customizations. That's brilliant.  \n  \n \n  \nSpeaker 2\n \n Thanks Amelia.  \n  \n  \nSpeaker 1\n \n Thank you Paddy. Thank you for your question. Okay, so now you know how to do first steps. Actually we also face \nthe same stuff in our inside like team work and automation. Inside of Creatio we have several big creature based \nsolutions inside of Creature company and it's also so we also like face as most of our customers we face such \nupgrade needs because Freedom UI is now like primary user interface and we still have a lot of Classic UI legacy. So \nwe do some planned work on improvements from Classic UI to Freedom UI and we still work with some sections in \nClassic UI because of too many systems, too many changes to be performed. And one day we plan to switch from \nClassic UI to Freedom UI in most of our currently used sections.  \n  \n  \nSpeaker 1\n \n And we have some tools as I showed you that intended to help you with it. But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui. So not to be \ntoo long in this intermediate stage where some users are working in Classic, others are working in Freedom. You will \nhave double time for support of this intermediate stage. So it's better to try to make it shorter and to implement \nsomething like minimum value product in your Freedom ui, move your users there and then improve quickly, improve \nall necessary remaining things that will make your users fully happy. So not to stay long in this intermediate step.  \n  \n  \nSpeaker 1\n \n Okay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have. Probably so anyone I \nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios. So if you will have something unusual, just tell me, I will try to help with it. So we have to switch from our \nclient side, probably already get tired of it to some server side features. I will try to explain and to make this \ntransition coordinate quite smooth. And now we will talk about more developer oriented things and more related to \nprogramming at Creature server side in C using dotnet framework and talking about compilation libraries, file system \nand so on.  \n  \n  \nSpeaker 1\n \n So probably I have to start that in any package now we see we have some set of items of different types. So we have \nitems with different types. If you try to add an item manually, you now will see we have objects and we also studied \nwhat is replacing object. We have pages, so client modules of different types. And also we have replacing if model \nwhich means replacing client module specially designed to extend and modify existing pages. And we already \nstudied this one, we did not study source code, we will do it a bit later. And we slightly touched the question of \nmaking business processes. So I need to show you some items and explain where they are actually stored and how \nthey actually work. So when you Operate with objects. We already know that it doesn't.  \n  \n  \nSpeaker 1\n \n So object is a server side item, but its changes are applied easily without need to compile. So generally C Sharp code \nis not so let's say heavily used for objects and replacing objects. Of course, C Sharp source codes, if you design it \nseparately in source code item will definitely require some configuration. So it means that when you develop \nsomething inside of item name source code, you will not be able to immediately start it. You need to run a special \nprocedure called compilation and physically it means that creation handles some C Sharp sources at server side and \nwhen you want to apply them and when you want to implement and apply changes. So you will need to compile and \ncreature is capable to collect C Sharp sources of its compilable part.  \n  \n  \nSpeaker 1\n \n Finally to compile and get executable DLL libraries and then use such libraries at its website. So C Sharp sources \ndefinitely require compilation. All JavaScript part this all this JavaScript part obviously does not require compilation \nbecause it's a set of JavaScript files. They are executed as interpreted code at browser side. So when you save and \napply any change in JavaScript part in client module part, it also does not require any compilation. So this is \ninterpreted part fully. Business processes in general, such items as business process it's designed as interpreted \nsetting. But for some processes you can add the C Sharp code and make it compilable. So in some processes, let's \nsay we have plus minus. It means that some processes can include compilable code and we can run it and we can \nuse such advantage of compilation and very fast execution, but it's not mandatory.  \n  \n  \nSpeaker 1\n \n In general, it's recommended to have as less as possible for code in your processes. Because processes are \noriginally designed to be a no code tool and possibility to code into it. It's not its primary purpose. The primary \npurpose of a process is to make your business logic a set of steps that you can easily construct with using of your \nmouse and which will not require programming and then you can get your business work done. But you can also use \nC Sharp code inside of it. And that's why we can call business processes as partly compilable. So I will show you \nexample rest and swap services. They do not require compilation because mainly they are metadata used inside of \nbusiness processes and user task is a C Sharp programmed item that requires compilation. So now SQL scripts \nobviously are not compiled items.  \n  \n  \nSpeaker 1\n \n Data is also metadata, not compiled and import. We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff. So if in general such DLLs if we import them are included into \ncompilation, so we can consider this stuff as involved in compilation. Now you see only four types of items that \nsomehow touch the compilation and in general that's how we can say that creation has compilable server set. Also \nprobably also need to tell you that objects can potentially include its compilable part. But now it's not recommended \nto be used. And in general this is feature that's still supported but probably will not use it. We will talk about object \nprogramming and possibility to use C Sharp compatible code there when we will talk about event handling at object \nlevel.  \n  \n  \nSpeaker 1\n \n So in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into. Let me show you what they are turned into DLLs that you can find in Bin folder here. Or you can also \nfind DLLs as a result of compilation in many packages. For example, we made dev classic package files bin and here \nis our DLO of a package compiled as separate assembly. So why you need to understand such files, DLLs and so on. \nBecause now we will talk about server side functionality and you need to know how it turns into something that \nsystem can execute where you have to search for some sources and you need to like understand it in very general \nthings so you will know where to find some parts of execution executable stuff of creation.  \n  \n  \nSpeaker 1\n \n We will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it. I \nintentionally avoid making our own C Sharp sources at the beginning. So first I plan to show you how we can make \nprocess with some piece of programming inside of it. We need some package for this. I prefer to do it in my realty \npackage. This is Freedom UI solution. So one of our main packages here in total. Now you see we have three \npackages in our solution and it's not the end. So possibly we may have more if you want. You can also minimize \nnumber of packages if you play with you remember we studied it with the search rack setting.  \n  \n  \nSpeaker 1\n \n Or maybe it's better to say lookup package installed application. It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have. And we \nalready did it avoiding creating one more package for Customer360 customization. So this is something that we \nalready studied. You know how to find it just to find and register an object named package installed application as a \nlookup at lookup section. Then you will be able to handle all your applications, all your packages included there. And \nyou can replace current package for some apps making system saving your application customization into a certain \npackage. Okay, so what I plan to do now select my Freedom UI USR realty package, add the business process.  \n  \n  \nSpeaker 1\n \n I need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system. And in general business \nprocesses are interpreted. It means you construct such kind of diagram and then ask system to run it. System will \nread your diagram structure step by step and it will execute your diagram step by step. So in general business \nprocess is saved as set of metadata settings. Technically it's a text with all necessary information about its \nstructure.  \n  \n  \nSpeaker 1\n \n And we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items. Okay, let's start. So I need \nto provide a code usr and I need to explain the business sense of my future process. My business sense will include \nsome calculations and also I will work with database. So I also plan to connect and to use one example for different \npurpose. And this example will be used not only to demonstrate how you can run C sharp code in creatio but also to \ndemonstrate how you can write some a code that operates with the creature database and which operates with the \ncreature data model using its own native tools. For this I will explain it later.  \n  \n  \nSpeaker 1\n \n So my business sense is to make a process which will do some calculation at server side. And my calculation will \ninclude selecting some data and calculating average price for realty record. So my process name will be something \nlike Coke Average Realty Price process and the title of the process will be Calculate Average Realty price. Please \nconfirm do any of you follow me directly at the session or you just watch it as video and then you plan to do your \nown steps? It's important for me to know how long delays I should provide for you and how I should say make poses \nor not. So if you follow me just live during the session, please click Please type plus in our chat it will let me \nunderstand that I have to make poses for you to do the same during the session.  \n  \n  \nSpeaker 1\n \n If not just type Minus which means you are only watching and I can do it faster. Okay, thank you. Thank you. Monica, \nAdrian, Eddie. Thank you to share. Okay, it looks like someone from you also following me. So I will not go too fast. \nNow I made a process with a title and the code. No any other changes and plan to save it in my USR realty package \nwhich is used for Freedom UI example. It also makes sense to name my beginning of the process. I call it like start. \nAnd here we will have successful finish. So normal end of the process. Okay, save it. As you can see, first time it \ntakes a while to save it. But in general, now our process represents a diagram which has a starting point. Generally \nprocess will start from all items which have no incoming flows.  \n  \n  \nSpeaker 1\n \n So if your process has no incoming flow, it means it's the start of your process. So take care. If you accidentally drop \nitems on your diagram without incoming flows, it will be treated as a beginning. So please be careful. Okay? So my \nplan is to show you not all the process engine tools, but only developer part of it. So part where it makes sense to \nwrite code and include some, let's say developer skills into your product. Because also Business Process Engine and \nGeneral Process Editor has a lot of no code tools which we will also use but without explaining all the possible \nfunctions. So I will show you only major things that we will need for our example. So my main focus today is to show \nyou items that are included in development.  \n  \n  \nSpeaker 1\n \n In general, you know that Business Process Editor has two types of items that you can add. System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side. And \nwe have items called user actions. User actions are designed to show some page for a user, usually waiting for \nsome feedback after it. And user actions are designed to stop your process execution for some time till user will \nrespond something till user will provide some input or will confirm that user gets some output. So user actions will \nmake your process much more interactive. Okay, we have some other types of items like starting events, \nintermediate events, finishing event and logical gateways. So I will show you on the developer part of it which you \nneed to know if you're really interested in like becoming a process expert.  \n  \n  \nSpeaker 1\n \n You can also consider going to our customization course where my colleagues teach how to manage processes. So \nwhat my plan is I user. I use system action script task, the only item in all business process which requires coding in \nthis diagram. So this item should be carefully put on the diagram. I can intentionally show you how you can do it \nincorrectly. Like this. Then you move it like this and then it looks like you added this item to the diagram. But in \nreality this is not correct. I will show you that this item does not say connect to this flow. And if you do it like this \nitem has no incoming flow. So it will be started at the process beginning, not as you plan. And that's why you should \ntake care of it and put it properly.  \n   \n Speaker 1\n \n Now you see when you slightly move it then you correctly put it on the flow. So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly. Now this item has incoming flow, it has its own C \nsharp body. And we have some notes here, but it's only for long lasting operation. And then we have finish item. So \nwhat we can do here, this is a C script that physically will turn into a method of automatically generated class. \nCreature is capable to generate such some C sharp sources for it and then it's capable to compile them.  \n  \n  \nSpeaker 1\n \n So now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method. It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation. So I already have some example which will work for us. Probably I should \npaste it into our chat and paste it for you because it's quite big. I will put it into parts because Zoom has some \nlimitations on chat messages size so we can take chat messages. Probably we will slightly need to replace names \nhere like this, but you will see it.  \n  \n  \nSpeaker 1\n \n Okay, so I copy and paste this code to the editor. We can also expand this editor to see like in more comfortable \nways. And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code \nto type code like this. Unfortunately for business processes it's not intended to be used so it's not supported. And for \nbusiness processes writing a short code here in this editor in general it's okay. So you will not suffer too much by \nwriting just 10 or 20 lines of such code. But if your plan includes to run very complex calculations, including different \nclasses, including a lot of other things, libraries and tools, it makes sense to implement complicated logic \nseparately. You can use C sharp source code for it and then just to create corresponding instances of your classes.  \n  \n  \nSpeaker 1\n \n Probably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou. Then you can just make corresponding setting and run corresponding methods. That's how you may keep this \ncode quite small sized and do not need to create very complicated logic just here. So it was not intended to be used \nfor complicated logic. It was created with ideas of using of existing classes and making this code not so big. So if \nyou need big logic, please implement it separately as normal classes with source codes where you will be able to \nuse Visual Studio to develop so you will have comfortable conditions for it. And here it's not so comfortable. I agree \nthis editor is not so powerful, but you can bypass this disadvantage because of not writing too much code here.  \n  \n  \nSpeaker 1\n \n Okay, so I will save my code example. It's not finished yet. I will just show you what happens if you try to save. So if \nyou have a changes in your script task and you save, your process system asks you to compile here publish means \nstart compilation and I do not plan to do it right now because my code needs some improvement and I need to \nexplain what is going on and explain you step by step what is happening here. So in general I need to explain you like \ncommon idea of what we are doing. The common idea is to run a business process which will accept some \narguments at the beginning and then we will do calculation of average realty price based on our existing data. But as \nyou may guess working with realty data, we have different types of data records.  \n  \n  \nSpeaker 1\n \n Let me show you a bit more examples like apartment in will be an apartment for sale. Okay. And yeah, it should be \nreloaded probably. I just feel okay, it's apartment and this also is an apartment for sale. So what I wanted to show \nyou we have different types of realty like houses and apartment. They have different pricing values, they have \ndifferent pricing models. So it's not good in general to mix apartments and houses. Also we have different offer \ntypes like sale and rental which are totally different. So it's totally incorrect to mix values for rental, monthly \npayments and full cost of some realty records. So it's not correct to mix them and try to calculate some average \nprice because between it. So we have to do quite smart filtering.  \n  \n  \nSpeaker 1\n \n We need to take into consideration only records with a certain type in order to split apartments from houses. And \ndefinitely we have to filter data according to offer type splitting sales from rentals. So when we do this average price \ncalculation we will need to have filters or offer type to include only rentals or only sales and general realty type to \ninclude only apartments or only houses. And then we will calculate total Amount of all selected records, total price. \nThen we will divide by total area of them in order to include and consider different areas for different objects. So \nwe'll count, in general, we will count like average price of a real to per square foot of the area. And that's how we will \nfinally get our result. So the real sense is just counting similar objects and getting average price per area.  \n  \n  \nSpeaker 1\n \n And physically how we do this is the C Sharp code written in this editor. And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes. So if you type some code here, if it has mistakes, \nsystem will not show it immediately for you. For example, if you write something like this with a missing name of \nyour method, so if you do some mistake with spelling, then you will note about it. So you will know about this \nmistake only when you start to compile. So unfortunately there is no background syntax check that will show you \nwith a red color that you have some mistakes here in this text. But it's designed to be quite small and it should be \nquite obvious. So we do not think that it's a real issue.  \n  \n  \nSpeaker 1\n \n Okay, so let me explain in general what is happening here. I plan to operate with creation database. We have two \ndifferent ways to operate with the database. And now I'm using the approach which supports entity data model. \nSimply speaking, IT supports items like objects and respects object structure, object columns and references and \neverything that we design at creature orm Object relational model ORM of creation is based on objects and we can \ndesign them when we save and publish. Object structure is applied to the real database tables and columns. So \nthat's how it works and working with this class entity schema query Class means making selections of data records \nfrom creation data model, respecting objects, respecting all their column structures. So using this information.  \n  \n  \nSpeaker 1\n \n Another approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model. So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model. But now this approach shows you this possibility with \nsupport of object model. And this is one of two major approaches to get data. There are some advantages of using \nsuch approach and it supports access rights restrictions. So if this code is running under single user credentials, it's \npossible that user will have no enough access rights to operate with data. So if you run your data selection with \nentity level with support of object model, so it will restrictions, it will read no data if such Data is not available \naccording to access rights.  \n  \n  \nSpeaker 1\n \n Also Entity schema query supports caching at server side. If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient. So entity schema query supports caching. Also it supports paging when you need to \nprocess a very big set of data records and you prefer to do it by parts working with portions of data pages and entity \nschema query also supports complex query structures including hierarchical queries. That makes sense when you \noperate some data which can be displayed in tree view. Okay, let's not go too hard and too deep. So currently simple \nanswer.  \n  \n  \nSpeaker 1\n \n Entity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database. It has some arguments when we run its constructor. We have several overloaded constructors \nfor this class and it has arguments. One of them is quite standard so you will always use it. And second argument is \na text representing our object code. As you remember our code is USR realty so we have to correspondingly modify \nthis one. So you should do this at your own. I will also note it in chat and this is how we can create an instance of our \nclass which will be used for data selection of our entity schema query. We have to specify its settings, we have to \nmake it work properly for us. So we need first to select columns.  \n  \n  \nSpeaker 1\n \n Also you may ask me if we type this code like this how we know about present functions, methods properties and so \non. We have some Academy server side documentation. Let me show you backend development.net classes \nReference Go here and we have set of cluster libraries for creation. Server side you can search for entity schema \nquery class. Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four \ndifferent overloaded constructors. I'm using this 1/3 one and we have a lot of public properties. A bit below you will \nsee public methods and so on. So if interested you may find this SDK information at Academy website and we'll go \nback to our code. I agree. Currently it looks like a bit boring stuff so I try to go through it quite quickly.  \n  \n  \nSpeaker 1\n \n We only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here. So let's look at our reality Object just to match our columns we need to select price and area. Here we \nhave USR price USD column and USR area. Okay, so it looks like the same. We can add columns to our query. You \nmay also face a method named addall schema columns. But I strongly warn you from using this method because \nwhen you add all schema columns may happen that you are working with a quite big entity with hundreds of \ncolumns and without thinking you can add a lot of columns which you will never use later in your code. So it's better \nto save system resources and do not add all the columns until you really need it.  \n  \n  \nSpeaker 1\n \n So it's better to always add only columns into your selection which you really need to analyze later. In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns. So the part of our selection statement that we will finally start at the database overcrowc select then set of \ncolumns that we do from our realty table. From this table is called root entity which is the first one which will be \nused for construction of our query. It's possible to use joins and add other columns to our selection. But in my case I \nneed just very simple example. I will use the only one table. In general it's possible to make joins with other entities \nand in my case it's just not necessary.  \n  \n  \nSpeaker 1\n \n But it's possible you can use this argument as a special column path expression. Column path may include joins if \nyou use lookup columns of your main entity. In this case it's called direct join or if you use lookup columns of join the \nentity. In this case construction will be a bit more complicated and it's called reverse joins. If interested I can show \nyou where I can get more information about this ORM programming. So let me show you database tools. No, no, no. \nIt's about architecture probably second no, it's about architecture, Object events, data operations, Direct access, \nORM overview. Yes, somewhere here.  \n   \nSpeaker 1\n  \n So we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to. Or in this case it looks like \nyou select cities and you would like to join all accounts from this city. And this article will let you know more about it. \nSomething like theoretical stuff. In my case it's pretty simple so I will select only one Table one Couple of columns \nfrom this table, no joins at all. And here is how I do this. But then I will need filters because my plan is to select only \ndata for a certain realty type and certain offer type.  \n  \n  \nSpeaker 1\n \n I plan to get corresponding values for my filters with the help of no code tools. So I expect to get such values. I will \nshow you how to operators process parameters a bit later. Now we consider we getting it with a special get \ncommands from process parameters. So we get couple of guids type and offer type and then we make filters. Such \nfilters are made with the create filter with parameters method, which is I think the most popular method for building \nfilters for entity schema query. And this filter condition is pretty simple. Column equals value and finally our where \nstatement will look like this column equals one value and another column equals another vote. By default, a logical \ncondition to join all the filters we have in filters collection is logical and that's why we do not modify it.  \n  \n  \nSpeaker 1\n \n Because we know for sure that by default our ESQ filters has end logical connection logical conjunction operator. \nThat's why we have it without any special setting. So if you want only for debugging purpose, you can get SQL text \nfrom your query, so it's possible it's supported. You can get SQL text and we can save it and then to use it for some \ndisplay, but only for debugging purpose, especially in like especially highlight this for you because for real execution \nyou do not actually need this SQL text. It will work even without your asking of SQL. And this is just for your better \nunderstanding of how selection is performed. So this will be necessary only for debugging for us.  \n  \n  \nSpeaker 1\n \n So when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data. This is getentity collection method, which finally returns \nas some collection. Also you may notice that we use special arguments here and here. And this argument is called \nuser connection. This is very important instance of a class which represents current user connection context. So \nuser connection is unique for each user session. Even if you have supervisor user and you started your system \ntwice, for example in two different browsers, you will have two different user connection instances for this. So user \nconnection has a lot of useful properties like current username, current user id, current user contact and some \nsystem stuff like information about database connection, some security stuff which is also important to know.  \n  \n  \nSpeaker 1\n \n So generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database. So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select. But user connection is an important argument which tells the system who exactly is running this \nquery. System will include access rights permissions if necessary if this user is not an administrator. So user \nconnection is a very important context information for system and it's mandatory for any database related \noperation. Okay, we finally got our collection as a result, this result is set of records. Each one represents an entity \nclass entity represents one single data row of a certain object.  \n   \nSpeaker 1\n  \n And as we get this collection, we have to process it line by line. So we can use for each statement or there are other \nways to process collection. In my case I prefer to use for each and we use it for each row or as many rows we have \nin collection. We will have as many runs of our cycle body inside of our cycle. We can have this entity reference \nwhich implements just one data row of the collection and we can run. So this entity record is actually a supports an \ninterface called Entity I entity and that's why it has methods. So we can run methods like get typed column value. \nGet typed column value lets us to get certain value of a certain column from our data row.  \n  \n  \nSpeaker 1\n \n So simply speaking, this is the line how we get exact decimal price from our data. And next line is getting the same \napproach for getting decimal area. We have some counters here which we use to collect all the prices and all the \nareas. This example is pretty simple and so I'm just going into so many details only for those of you who probably \nhave not so much experience of C Sharp. So you will understand in general how it works and you'll be able to \nreproduce it and fix it if something goes wrong. Finally, when we finished we'll have counter for prices and for areas \nand then total result will be a result of division of all the prices by all the areas and we will have a final result and we \nwill save it into a certain parameter.  \n  \n  \nSpeaker 1\n \n Currently it looks like our code is ready. We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish. But it looks like we need some like say five or ten minutes or break. So let's \nmake it break and then we will continue this stuff and you will see that finally it's not so boring. And I will also show \nyou how to debug such code today. So let's make a break. If you have any questions in the break also please note \nplease Type them or just ask. I will come back in less than 10 minutes. Thank you for waiting. Let's move on. And \nnow we have to think of how to actually use this code into our process. So we have this part and we fixed all the \nitems here. Now we have to think of parameters.  \n  \n  \nSpeaker 1\n \n C Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part. The best way to do this is to use parameters. So parameters can be \nconsidered as a variable for the process and process. Items also may have their own parameters. So in general we \ncan think of parameters as global variables for the process or for certain values of process items. I plan to work with \nglobal process parameters and we need some of them like reality type id. So we plan to register such parameter as \nunique identifier. Code is used inside of programming title can be used for user interface settings in process \ndiagram. That's why I use popular so title and code I copied it from the code. So here I used this one.  \n  \n  \nSpeaker 1\n \n And when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type. So I copy its name \nshow it for you Go to process parameters. Also I need to explain if you click on some process item it will show you \nselected item properties. If you click on the blank or if you click on this green button you will see process from \nproperties. I prefer to click on the blank because it's easier and parameters add unique identifier offer type id we \nneed it as arguments for our code. Okay, couple of arguments are ready. Then I plan to return back debug sqltext \nparameter so it will be text 500.  \n  \n  \nSpeaker 1\n \n So creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal. So add decimal parameter and I will do it like this. Okay, I hope you are quite good \nin doing it. So my question is for Monica and Paddy. Please confirm when you finish this part. We create couple of \nGuids unique identifier, 1 text 501 decimal. Monica and Paddy, please confirm when you're ready with this. Thank \nyou Monica. Thanks Paddy. Okay, great. So we can move on. So we plan to use such parameters, but also I will tell \nyou that unfortunately we have so fortunately we have possibility to run process as a no code tool with no \nprogramming from section list or section page in Freedom UI and unfortunately we can only pass one single value \nas an argument.  \n  \n  \nSpeaker 1\n \n So my plan is to Use as much as possible of no code here. And for example we can select a source certain record or \nwe can open certain page. Then I plan to make a button which will run the process, but unfortunately we can only \npass one single data value as argument when running no code parameter processes. So in no code mode we can \nonly pass ID of the currently selected record argument. And I plan to use it in my process. So my plan is to get this id, \nthen to use no code tools to select corresponding data values from the database and then to provide corresponding \nparameter set. So as example in my case in my parameters I plan to get an input process parameter and we can \nname it reality id.  \n  \n  \nSpeaker 1\n \n It will be also unique identifier so we can call it realty ID parameter and here its title will be reality id. Title is \nimportant for user display and code is important for programming. Okay, and we can set this parameter as input \nparameter. Input parameter will be designed as read only. So process expects this data to be set at the beginning of \nthe process when process is called and it's not expected to be changed it. So input parameters will be treated as \nread only. You will not be able to save its changes. We have no initial value, so we expect this data to be provided \nfrom input. You can see that input parameters only one single green colored arrow and the directional parameters \nare used with two sides arrows and green and red. Okay, so we expect to get this reality id.  \n  \n  \nSpeaker 1\n \n What we will do with this id, I will use a bit of no code tools. Read read data item carefully placing it on my diagram. \nYou see there is a special display when you put it properly. Okay, my read data item will be used to get ID of type and \noffer type. So read first record of separate selection. Okay, what object? Reality object which is a Freedom UI \nexample. In reading one single record, it makes sense to make filtering. Otherwise we will randomly get some data \nrecord and we want to get a corresponding proper one. So I will make a filter, click here, add condition type ID for \ncomparison equals with parameter and I will select my process parameter realty id. This is and then click select or \ndouble click here. That's how I will make this filter.  \n  \n  \nSpeaker 1\n \n This filter will be enough to make read data to select just single record from my database and we can name it read \nreality. Read reality will be its title and it will be also shown here. In general, it's good idea to provide corresponding \ntitles for all of your items and no need to sort if you have just one record and reading all columns. I do not \nrecommend you to use this option. So reading all Columns means you don't care how many columns will be there. \nAnd in some cases it can happen that you will have too many columns. So it will mean that you unnecessarily load \nyour system with querying of all the data you have. So it's much better to set read data only for selected columns \nonly. And we can specify what columns we are interested at.  \n  \n  \nSpeaker 1\n \n We are interested in type and offer type. So originally we expect to get only ID of the certain reality record. Then we \nwill look into database to get its type and offer type and then we will use read data item to get such type and offer \ntype. Once we obtain it when process is started, results of such data records will be saved somewhere inside of this \nread data item. It turned out to be not very easy to get it outside from it with programming. So I decided to have a \nseparate two parameters at process level. So I have specially designed parameters for type and author type and \nwhen the parameters are at the process level makes it not so hard to get and from the C sharp code.  \n \n \n  \nSpeaker 1\n \n So we will use getting data from read data into process level parameters and we can do it easily with formula. \nFormula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to. This is for example type ID and right part is formula expression value which will be used now just to get \nsome data out from deeps of read realty parameter and offer and type. When I click double click here you see a \nspecial macro which displays formula expression and this expression will be interpreted in runtime and replaced by \ncorresponding value in runtime. Formula is an interpreter tool so it will be started and run according to its settings.  \n  \n  \nSpeaker 1\n \n My process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id. So parameter target parameter is offer type ID and form of value takes data \nfrom process elements. Read data offer type double click and then we have this macro save it. That's how we save \nthis offer type ID here this item. We can call it calculate average price or calculate AVG price. This is our calculation \npart. Now it looks like we prepared with the set of no code tools parameters that we use for filtering. And now it's \ntime for us to save our process. But first of all I want you. I want Monica and Padik to confirm that you are good at \nthis stage.  \n  \n  \nSpeaker 1\n \n So if anything should be shown or explained, tell me please if it's not clear what we are doing also please ask thanks, \nBetty. Thanks Monica. If you have any questions, don't. Don't be shy, don't hesitate to ask. I'm here to help you \nunderstand that listening and doing examples at the same time, it's really harder than just listening. So if any \nquestions or some misunderstanding, tell me please. I will be happy to assist. So our recent steps included taking ID \nthat we expect to get at the beginning of the process reading corresponding ID of reality. I read only two columns, \ntype and offer type. Then I used two formulas to get it out from results of read realty. And then that's how we get \nsuch parameters and then pass this data at our script task part.  \n  \n  \nSpeaker 1\n \n So Monica, if any assistance needed, just tell me that we know. Now. You see, I saved my process and I did not \nexplain what is happening here. So when I saved it system. Oh, thank you, Monica. Thank you. So system told me \nthat oh, you changed your C sharp part so it requires compilation. And now it saved my metadata and then started to \ndo publishing, which physically means compilation. We can check what's going on at our application server side. We \ncan see who exactly consumes most of our system resources. Now we can also look at memory consumption and \npossibly I looked here too late because I already do not see any traces of compilation. But CPU high volt CPU is quite \nloaded, so possibly we will see. Oh yeah, we see it here. We saw dotnet Exe at the top of consumption of cpu.  \n  \n  \nSpeaker 1\n \n You saw dotnet Xeno you see. So here we have parts of. NET core framework which is used for creation and it's \ncompiling our assembly in a dot NET library. As a result, we extract expect to get set of DLLs and our package is set \nto be compiled as a separate assembly. Let me explain now, probably I will be not happy. No, I will not be able to look \nat it the property of my package. So when we designed our package, it was automatically set compile as separate \nassembly while compilation is going on. Unfortunately, our system will be not response it will not display some data. \nSo we will see forever hanging requests. And this will happen until our compilation finishes. When it's successfully \nfinished, then we will see unfreeze of all pending queries.  \n  \n  \nSpeaker 1\n \n So now you see our realty package has initial setting compiled into a separate smart. This option means that our \ncontents that we did design in our. Oh Monica, you have to leave. Thank you. Thank you. Thank you very much for \nthis. Well, soon we will finish very soon. Thank you. Okay, so our package is compiled to separate assembly. So it \nmeans special mode when package compilable Part is saved separately and compiled separately into a library that \nwill be saved somewhere on disk nearby to our package stuff. So here we have USR realty. Here we have auto \ngenerated code. This code was generated by creatio according to the process structure. You see class definition. \nClass name is designed as name of our process plus process methods wrapper suffix. So we have class name as \ncombined stuff from process name and some suffix.  \n  \n  \nSpeaker 1\n \n Then we have method inside of it and you can see oh, this method is a constructor. Okay, not so interesting. This \nmethod is implementation of our script task. As we did not name our script task into something useful, then this \nscript task has named Script Task 1. Let me show you our process. This script task has parameters and this is just \nname Script Task 1. That's why inside of our code we saw Script Task 1 execute. The text for 8 is exactly the same \nas we typed and saved. And finally this class will be used into compilation to get final result of compilation which is \nsaved into files bin. And this is our DLL which includes results of our logic. Probably if we look here we may find \nsome code.  \n  \n  \nSpeaker 1\n \n But until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code. But you may just trust me that finally this code includes business logic and our class stuff here. Okay, so \nfinally we compiled our solution. It turned out into a DLL saved on disk. This DLL is used as part of our application \nwebsite. We have approximately 200 of similar DLLs and if our package for example was not compiled a separate \nassembly. So if you disable this option for a package, then it will turn to much longer compilation. Because a lot of \nbase product packages, they have no such option. Compile a separate assembly. So they all compile into one big \nDLL which is saved here in terms of configuration auto generated folder.  \n  \n  \nSpeaker 1\n \n So we have this set of C files and bin folder here turns into this DLL. So now you see 11 megabytes of executable \ncode, which is quite a lot. And this is result of compilation of big number of base product packages that finally form \nthis dll. So recompilation of such DLL takes much longer, probably three or four times longer than compiling of \nseparate assembly. Adrian is asking what the difference of setting parameter value formula and by directly selecting \nthe withered parameters section by process elements. Oh, Adrian, probably you are asking about this. We have a \nparameter, we have value for it. So we could provide value into this parameter and saving it directly from read data.  \n  \n  \nSpeaker 1\n \n Yes, I understand this idea, but I Do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value. So possibly we \ncan do this. You can try. And each time when your read data changes or it gets new results, your parameters should \nhave corresponding mapped values from read data. But I prefer to make it clear and obvious according to the \nmoments when we have some changes. So this is read data. As we finished with this item, it will have its own \nparameters and some results of selection will be saved somewhere here. Then we have formulas to get data from \nthis and put it into parameters here. And it looks like quite exact moment when we change parameter values.  \n  \n  \nSpeaker 1\n \n With this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed. And so I think that our example will lack obviousness and lack visibility of what is going \non. And is it more secure to use formula? Oh, I think it's the same. So it should work when you map parameter \ndirectly, but mapping parameter directly. So it's something that we can do like this, we can map it to process element \nlike type like this. Mapping it directly makes it harder to analyze. So personally I do not like this, but I think it's \nsupported on the platform, so you can do this. Thank you Adrian for your very interesting question. And let's move \non. So now our simple example is ready.  \n  \n \n  \nSpeaker 2\n \n I have a quick question about the.  \n  \n  \nSpeaker 1\n \n DLLs, if that's okay. I do.  \n  \n \n  \nSpeaker 2\n \n Is it possible when we're creating them this way that we can call other DLLs maybe outside of this package?  \n  \n  \nSpeaker 1\n \n Okay, we can. Sure it's possible. Let me show you. We have also process level methods. This is kind of a method \nthat is inside of script task, but we have also process level methods which can be used globally on the process level. \nFor example, if you make a big logic and you finally realize that you do the same steps from different parts of your \nprocess, maybe you can implement it once in methods area and then call it many times with different script tasks in \nyour process. So it makes it more organized and better constructed, so you make it easier to support in future. Also \nwe have usings and you can include additional DLLs and namespaces here. So you can include necessary DLL \nnecessary namespaces from DLLs from other parts of your system and that's how new namespaces will be \navailable.  \n  \n  \nSpeaker 1\n \n And this will be normally compiled and executed. So it's quite common thing how you can add other libraries and \nnamespaces with usings and these usings will form into Let me show you pkg configuration pkg Then your package, \nthen your source automatically generated source. Here you can see on this table standard set of usings. If you add \nyour own, it will be added into this list. So that's how sometimes developers really need to use for example \nnewtonsoft JSON library to make it simple with serializing or deserializing values and maybe other libraries. So you \ncan add it here by providing using in process methods part okay, so we successfully saved and published our \nprocess and you saw it was no problems with compilation.  \n  \n  \nSpeaker 1\n \n But in real life when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally. Please note if your system is saved in a state, that means you \nhave compilation errors. You will not be able to apply any changes in compilable area until you fully fix your issue \nwith compilation. So it's better and it's like strong advice for you. It's better to keep your system always in fully \ncompilable mode. I mean making your solution. If you try to compile, it always compiles successfully. Because if you \nkeep your solution with compilation errors, you will never know that something is working good or not.  \n   \n Speaker 1\n \n And you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors. So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully. So we already have some part of our process which finally performs some \ncalculation. We can register our process at our section. I will show you how we can do this. So we can run a process \nas a action in our list, or we can run a process by action or a button in edit page. From edit page it looks a bit easier. \nSo let's start from this opening our Freedom UI edit page, then go to its editor. We will finish soon today's session, so \ndon't worry.  \n  \n  \nSpeaker 1\n \n I understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more. So \nthis is our page design. My plan is to run my process by a button, but I predict that I will have a bit more different \nactions, so possibly I can use a button with sub menu. Let me show you how we can do this. For example, we can \nPut a button somewhere here, modify its size, style and title like actions. And we can also provide some kind of \ntypical icon used for actions. Something like this. This is very typical for creation no its own action. But we will have \nmenu items. Let's make a subordinate menu items like calculate average price.  \n  \n  \nSpeaker 1\n \n This will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price. And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument. This is good for us. And also we have new mode which appeared recently the selected records in list it \nwill get list argument. It's not for our case here, but this is feature which appeared just recently in 8.1.2. I guess so \njust very recently. Okay, select the page and we have process where the record ID is passed. We have only three \nsuitable parameters. Thanks developers for filtering this.  \n  \n  \nSpeaker 1\n \n In previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff. So realty will be recipient of our ID of currently edited record. And as you can see this is a no code \nsetting so it doesn't require any special coding for us. So we can do it with no code tools by passing this data. Okay, \ngreat. We can also use this icon for this stuff. We can do some calculation icon that will demonstrate make it a bit \nmore attractive menu item.  \n  \n  \nSpeaker 1\n \n We can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do. Let's go back to actions list and we can check how it \nworks. So action will be always available. We can just save this page. Also in recent version we had an unique option \nto run processes by for list for selected records in the list. Let's do this. Let's go back to list page. We can also make \ncustomization here. Now we can make an action it will be started for list. We have a special settings here Filter \nelement bulk actions Such bulk actions is called by so we can call it. We can find it here when we start to select \ndata.  \n  \n  \nSpeaker 1\n \n So let's make one more bulk action like cultivate average price Our action will be again run process where. Oh, it's my \nfault, I do it incorrectly. Sorry for this. Not. Not this Way. Okay, let's go back. So it was not correct approach. I need to \nmake a. But instead. Okay, let's make a button. Let's put it somewhere here. Size. Okay. Action run process which \nprocess to run? Calculate average realty price for selected records in list. And we have the unrestrictable list here \nData table this one. Okay. No subordinate items. So it will be just an example for you how you can run process in \nlists. This feature supports is supported only starting from version 8.1.2. So quite recently only for recent months. I \nthink if you have a bit older version, you will not be able to implement this easily. Okay, save it.  \n  \n  \nSpeaker 1\n \n Let's just start to test it. So we can close the editor. You can also close this one. Maybe let's reload just to fight with \nany possible occasion of browser cache. So let's calculate something for houses for sale. For example, for this \nrecord calculate average price. Something was started with name undefined. Not found something is not good here. \nOkay, we can also check process log. Did we have any start of the process day? No, means that we faced something \nwrong. I did not start. Okay, and let's go to reality edit page. Okay. Apartments for sale. Opening it. So as an \nargument we have this ID Actions calculate average price successfully started. Now we have no visual output. So we \nonly know that process started. We can go to process log. We can see that process successfully completed. We can \nopen history execution of this item.  \n  \n  \nSpeaker 1\n \n Sort by date of start. Read set formulas, calculation finish. It looks like everything went correctly here. We do not \nknow exact values, exact numbers. We will study debugging of it tomorrow. Now we just make sure that the process \nstarts and normally finishes. Okay, now let's fix our stuff with the list. Looks like I missed something very simple. So \nlet's go to customize list again. Here is our button that runs process this process. How to run the process? Oh yeah, I \njust missed very important parameter where the record is passed. Real TID parameter. So it was my fault. I \noverlooked it. Okay, save it. Save this stuff and then we see how it goes. Okay, close probably to work. No, we have \nto reward it Houses for sale. No, no. We wanted to run it in list.  \n  \n  \nSpeaker 1\n \n Okay, so this one is our list Selected data Calculate average price successfully started. I expect to run only one \ninstance of a process here. Yes, it was correctly started seconds ago. We can see all the steps were done. We can \nalso see execution diagram which will show us these steps executed. And tomorrow when Monica returns and you \nwill be not so tired. So we will move on with. We will move on with debugging this code and also making it visible \nvisual. So today we made only part of the work. Today we implement the main calculation part of the process. We \ngot some result data, but we do not know how to actually see it. So tomorrow I will show you. Today we only \nfocused on C sharp part.  \n  \n  \nSpeaker 1\n \n But in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations. I just wanted you to see how we can run this calculation for \nmultiple scenarios. For example, houses for sale, houses for rental and apartments for sale. We have three selected \nrecords. We can run this process and I expect to run three instances of processes. Let's check out. Yes. Now you \nsee the last minute we have three instances of processes started and each one with its own input arguments. So \nhow many records you run? The same number of records you will see here in calculate average price Process log \nrecord Process log shows you history of all started processes in your system. And for each process started you see \nits elements.  \n  \n  \nSpeaker 1\n \n You see start and end date is status. We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance. So today's session is over. The most interesting part will be tomorrow when we \nwill run this process and display some data and also how we will debug this process. Thank you very much for your \ntoday attention and education case. In case of any questions, please ask and we'll see each other tomorrow. Thank \nyou very much. Adrian, Paddy Kratz, Francisco Rakhi and others. Thank you.  \n  \n \n  \nSpeaker 2\n \n I have a quick question, if that's okay.  \n  \n  \nSpeaker 1\n \n Yes, yes, please.  \n  \n \n  \nSpeaker 2\n \n It's just about business processes. So at the moment we're tying them to. We're binding them to buttons. But like \nwhat can we bind them to? Like how robust is this? Can we bind them to like objects or can we bind them to \nwhenever a data is changed on a certain object or something like that?  \n  \n  \nSpeaker 1\n \n It's possible, sure. But I try to keep it simple and use it as possible of no code. That's perfect.  \n  \n \n  \nSpeaker 2\n \n I understand.  \n  \n  \nSpeaker 1\n \n I'm just curious manually. But yes. Later I will show you how we can trust trigger some business logic that will start \naccording to data change. So we will do data change and for example insert of new reality. And then we can run \nsome business process that will start only in certain conditions. And for example, only if house or apartment for \nreality was added. I will show traitor. It's not so difficult. So we are looking only at small part of available tools that \nwe have on board on business process platform. So I'm trying to show it simply. But in general it could be much \nmore complicated and also processes can be more complicated. We have a sub process item which makes it \npossible to develop big processes that contain smaller processes inside.  \n  \n  \nSpeaker 1\n \n So you can do it in much more complicated way and trying to keep it simple. Because we are studying. We need to \nsee some simple examples, understand how it works, understand how you can control it, and then go further with \nmore complicated scenarios and topics. Thank you. Brilliant.  \n  \n  \nSpeaker 2\n \n \n Thanks a million.  \n  \n  \nSpeaker 1\n \n Thank you. See you soon. See you tomorrow. As usual, you will receive video recording very soon. Thank you. \nGoodbye.  \n \n  \n  \nSpeaker 1\n \n Foreign number seven and today we will continue study of our server side of creation and we will continue to do our \ndevelopment. And let me show you where we finished at during our last yesterday's example. So we worked with our \nFreedom UI package. We made business process to make some calculations and we tried to. So we used a \ncombination of no code items and coded stuff. So we used C code. We already compiled it successfully, we even \nstarted it. So today I will show you how we can debug such code. Generally you can manage processes not only \nfrom configuration section, you can also do the same from Application Hub or from process Library. Process Library \nat settings page is at the top position. So possibly it can tell you that it's something that Creatio thinks is really \nimportant.  \n  \n  \nSpeaker 1\n \n Process Library on the top position here. This is a special section also available in Studio Workplace. Process \nLibrary we have a lot of existing designed processes for base product and also we can create our own processes. \nProcess library has some advantages in comparison with just opening diagram from configuration section. So here I \ncan see in process library we can go to process properties and that's how we will enable additional features that will \nbe really helpful for us to run our processes and to get additional information. So let me show you what they are. \nFirst of all I wanted to tell you about tracing. By default this option is off and if you enable it shows so it collects \nadditional data related to process execution. And we will be able to look at this data for process steps after they are \nexecuted.  \n  \n  \nSpeaker 1\n \n And this tracing will help us to keep parameters values. We will be able to check how parameters are changed \nthrough process steps. And in general this is really helpful in case if you investigate why your process is not working \nas expected. So you'll be able to see parameter values their changes and it will explain you process behavior much \nbetter. Also we have some options like display in run process button list this one, this is a run process button and \nwhen you start it you see some message that quick process run is not configured and we will not be able to get any \narguments if we start process from here. So that's why we usually design processes to be started from sections in \norder to get some input parameters input data. So if you want you can run process from here.  \n  \n  \nSpeaker 1\n \n Our process is active and it's also possible to deactivate it. So if you don't like some process, for example you have \nsome base product functionality that you really don't like, you want to stop it, you can deactivate any process you \nhave in your system. This process will not be able to start regardless of the way how you expect it to start with a \nstart signal or with the Start simple event. So for manual start and so on, deactivated processes cannot work at all. \nAnd also you will see versions of processes can be useful in case if you develop, test and run in production of your \nprocesses at the same environment. For example, you have version one which is actual and your customers end \nusers are working with it. Then you start to develop version two of your process.  \n  \n  \nSpeaker 1\n \n But while you are developing it will be not ready for end users and you still want to save some intermediate progress. \nOnce you start to develop version two, you still keep version one as actual. Version two, for example will be under \nconstruction. And once you realize that version two is okay, it's ready. Then when you save a process you can make, \nyou can run an action set. Here you will have an action set as actual and it means that any other process version \ncould be manually set as actual version. That's how you will switch your users from working with previous versions \nto new versions. And older started processes will still keep going with previous diagram and new starter processors \nwill go with a new diagram. But what I wanted to tell you about this.  \n \n \n  \nSpeaker 1\n \n So managing of processes versions is good if you develop directly on production, but if you have a separate \ndeveloper environment, if you have separate test environment and so on, it probably will additional difficulties for \nyou. And that's why I prefer not to enable this versioning or processes. And each time when system asks me to save \na new version for process, I usually reject and overwrite existing version. Because when you have many versions of \nyour processes, you also will have many items in your configuration. You have more items like this for your business \nprocesses and eventually all the items will be expired, so they will be not necessary, but they will present in your \npackage. And if you attempt to delete them manually, you will finally delete the whole process including all of its \nversions. So it's risky.  \n  \n  \nSpeaker 1\n \n You should take care and save some items as exported metadata here, then recover it. So it's something that looks \nlike unnecessary difficulty. And it's better to avoid if you have a standard transition of your solution from developer to \ntest and to production. So I recommend you to keep your version only one single version. It will be easier for you to \nhave to control all your situations with your business processes, but it's up to you. So at least the platform offers you \npossibility to handle process versions. Okay, so what I want. Oh, sorry, this is setting which I planned to save also as \nyou can see there is a red warning message that tells us about performance impact. So if we enable trace process \nwill work a bit slower, but it's not so critical. Probably 5% slower. This is not a big deal.  \n  \n  \nSpeaker 1\n \n And compared to what functions and what features it shows us. So usually we sacrifice a bit of performance here \nand enable this trace in case. So it really happens. Helps in case if we need to debug our process and to see how \neach step was executed. And to see process parameter values at each step. So this is significant in important \ninformation, especially when you develop and debug your process. Okay, so how we start our process? We went to \nreality section. We can select some data or we can use its page. But now let's say house for rental. Calculate \naverage price Calculation was successful, but we did not see anything. We only can see some history of execution. \nAnd now we will be able to see trace data. Trace data became available because we turned on this option.  \n  \n  \nSpeaker 1\n \n Trace data can be extremely helpful because it helps us to see our input parameter data which we had at the \nbeginning of the process. Then we have parameter values of selected item. And finally, when we will move on. \nUnfortunately, not all of the items keep such trace and allow us to see it a bit later. I will show you how to see final \ntrace data. You will understand how we can display it. So we can use some items later in our process. Then select \non it and it will show us trace data with process parameters. And I want to. I wanted to show you one more \nadditional feature which is important for processes. It's performance counters. Let me show you. So we can try to \nmake a columns setup shrink a bit. And we can display execution time. Execution time is duration.  \n  \n  \nSpeaker 1\n \n So let's display duration in milliseconds. This works good for system actions. And milliseconds are perfect for this. \nAnd also we can display the same duration, but in minutes. It will be useful in case of debugging, in case of some \nuser actions used and some display messages shown. So users are usually not so fast as system. So we will see \nthis performance. Now you see our process element performance for last response recent start. And you see that \nreading data took 21 millisecond. Then we have some more calculations. Also it takes some time. And in general \nyou see that in total, not so much. But we can also enable duration display in process log. Let me select fields to \ndisplay and close unnecessary columns in order to display duration in milliseconds for process in general.  \n   \nSpeaker 1\n  \n And also we can set duration in minutes just to see some processes which were executed. Quite slow. So. So now \nyou can see that we have total 130 and we have some items and you should be ready that it will never match. So \ntotal duration of items will not be matching the total duration of the process. Because it looks like business process \nengine has additional spending of resources for process start, maintaining it and then correct finish and such \nprocess elements duration is only part of overall resource spending and time spending of process engine. But \nprocess elements duration will show you relative speed. So it will make it clear that read realty takes longer than \ncalculations in our C sharp code. And also you can see that formulas are almost lightning fast in comparison with \nany database related operations.  \n  \n  \nSpeaker 1\n \n So you can see what items are fast and what items are slow in this list. Even in case of such numbers will be not \nreally representative. And our total process execution is a bit more than 130 milliseconds. So it looks like 100 \nmilliseconds were spent on process start and finish. But this is in general which will give you general understanding \nif the process is fast or not. For example, you see some other processes they take sometimes they take much more \ntime for calculator. And we have a lot of system processes here. Everything is shown in this log. And you can try to \nimprove your processes. You can try to implement some changes and then check its overall duration and the \nduration of items. Let me show you one more example. Let's go to houses for sale and run calculation. Then go to \nprocess logs.  \n  \n  \nSpeaker 1\n \n Now you see second execution in even though it processed more records, but it was faster because of so called \nwarm up effect. First time when you start process system takes a lot of resources to deploy process engine service \nin memory to organize and allocate all necessary class instances. So prepare everything to work with processes \nnext time when you start a process system uses a lot of allocated classes and a lot of allocated objects in memory. \nSo it takes much less time. And obviously your next start of the same process, the same data may work much \nfaster. Next consequent starts will also be quite fast. And it will be I think not longer than the first one. And you can \nsee items inside, you can see that still read data is lower than calculation.  \n  \n  \nSpeaker 1\n \n And you still see that formulas are quite fast and takes almost no time. So that's how you can analyze performance \nof your processes. And you may think that it looks like everything is very good. So like 10 milliseconds, 15 \nmilliseconds, even overall hundreds of milliseconds is very good time. Yes, I agree for this. But in real life processes \nand real Life environments, working in high load conditions, your situation will be different. You will work with much \nmore loaded entities. And currently I'm running on my single PC as a single user, so I have almost no simultaneous \naccess, no any concurrent activities. And that's why my website is working fast. And in real life conditions it may be \ndifferent. So analyzing such performance, analyzing duration of items will help you to find bottlenecks in your \nprocess automation.  \n  \n  \nSpeaker 1\n \n You will exactly and easily and clearly see what items take the most of system resources and you may think of how \nto improve it. Okay, so that's how you can in general check your process execution and analyze its speed. But now \nwe will come back to our code. So we are interested in real debugging of this code. So we need to see how the C \nSharp code is executed line by line and happily so we will be able to do this. And fortunately system offers us \npossibilities to do this. And first of all I need to show you that this code finally turns into automatically generated \ncode that we discussed recently in our terrasoft web app. Terrasoft configuration pkg Then we go to our package \nfolder and then we go to auto generated sources. Here you see automatically generated class.  \n   \n Speaker 1\n \n It is generated by creatio and then used by compilation. So this class is saved on disk. You probably think of oh, we \nhave C file. Possibly we can edit it. Unfortunately not here. And if this class is in so if you have a file in auto \ngenerated folder, you will not be able to modify this because each time you compile again it will be overwritten by \ncreation. But you can use this file for debugging. I will show you how we can do this. For debugging we need some \npowerful tool. I will use Visual Studio, I'm using Community Edition. I will have to do some trick with administrator \nprivilege. Just a second. Remember, in my administrator credentials I have to use a separate environment, separate \nWindows credentials for this. Okay, so I'm starting my Microsoft Visual Studio. Not now, sorry.  \n  \n  \nSpeaker 1\n \n Here, this is Microsoft Visual Studio. I installed it recently. It's a community edition and 2022. So this is community \n2022 version. You can install it almost for free from Microsoft website and download. So currently I use it for my \npersonal developer needs and it works well. So Community Edition I only installed C Sharp Tools here, not so much. \nAnd it works for simple development and for debugging I have to run Microsoft Visual Studio as administrator, \notherwise I will fail with the bargain. And debugging is important because we have code which we are not sure how \nit runs and we Want to run it line by line and check it out so to see if it works fully as expected. So I will show you the \neasiest possible way to debug our website and just please be very attentive here.  \n  \n  \nSpeaker 1\n \n After you install Microsoft Visual Studio Community Edition, you need to perform some settings into it. If you do not \nperform such settings, if you skip this step, you will not be able to debug. Your breakpoints will not work. Let me \nshow you Tools options here. Visual Studio usually hangs for some time. I have to click now it works more or less. \nOkay, so let's go to Debugging General. You see it's hanging. Okay, click back and forth. Now you see it shows more \nor less correct settings and we need to go tools Options Debugging General. And then we need to find the most \nimportant setting here, which is called Suppress Git Optimization on module board. This setting was off by default \nand we must turn it on. Otherwise our breakpoints will not work. So this is critically important setting. Don't forget \nabout this.  \n  \n  \nSpeaker 1\n \n This is important. Just my code was originally on. It's recommended to keep it on. But unfortunately Edit and \nContinue is not supported. So we can shut it off and so we can turn it off. It's not supported because compilation \nwill be not done by Visual Studio. We will use libraries created by Creation and it's not good idea. Ask Visual Studio, \ntry to recompile them. So Edit and Continue is not supported. Edit and Continue is a feature which helps us to \nmodify code, recompile on the fly and to see how it works after recompilation. But in case of creation, compilation is \ndone by Creation System, not Visual Studio. So this feature is not supported so far. Other items could be just out of \nthe box. It's hard to remember all such settings. So I will show you where you can find the technical details.  \n  \n  \nSpeaker 1\n \n This is about development tools external IDE basics. Scroll down till we find Visual Studio screenshots here and \ncopy links. So now you see Suppress Git Optimization module Wallet must be on the most critical setting that you \nmust do if you want to debug with Visual Studio. Okay, the corresponding link is in your chat. Okay, looks like we did \neverything that we need. We have to save our changes and then we have to perform our debugging steps. File Open \nand here you will be. You will see some surprise. File Open file so it's possible and it's enough for debugging to open. \nJust file that we plan to debug. Let me show you. No solution, no project. We just go to Terrasoft configuration pkg \nThen we go to our package folder. Then we go to auto generated and find corresponding C Sharp source.  \n   \nSpeaker 1\n  \n Of course we will not modify it, we only open it. Visual Studio will create automatically generated solution for this. \nIt's okay, we can go to its inner code and put breakpoint in order to stop execution of our code at this point, at this \npart, when we will finally run to this line. But now it's very tricky ways because as you can see, we only made it \nbreakpoint. But we need to attach to our worker process. Let me show you how we can do this. Debug attach to \nprocess. And here it will be really important to run your Visual Studio as administrator as we did it. So we need to \nfind the worker process. It's named W3WP and you can see its title and you can see username in case if you have \nmany creation instances, you'll see the proper one.  \n  \n  \nSpeaker 1\n \n So this is the way how you can select the proper worker process. W3WP . This is your worker process from IIS and of \ncourse we have to select it. And if you don't see it, you may try to show processes from all users. Here you will see \nmuch more processes. W3WP . Attach mode is automatic. And then we click just attach. Okay. System tells us that \nwe are probably doing something suspicious, but we will agree attach anyway. Now you see that our breakpoint is \nnot fully ready. Studio says us that it will be not currently hit some problem with symbols. So how to fix this? And I \nthink that the easiest possible way to get started normally is to restart our app. You already know that restarting of \nthe app is possible with the help of maintenance tools made by Neo Technologies from Switzerland.  \n  \n  \nSpeaker 1\n \n So let's go to restart application button. This button appears as a result of installation of maintenance tools from \nMarketplace. Okay, we'll be restarting. Great, let's continue. It takes just 10 seconds to restart. But now you'll see \nwhat happens inside of Visual Studio. Visual Studio starts to show us this big red debugging line and. And also we \nwill see some blinking messages. And finally our breakpoint became fully available. So this means that our restart \nmade Studio able to correctly load symbol files necessary for debugging. So now we are fully ready, we can do \ndebugging. And now Studio just waits for this line of code to be executed. So let's go. Let's try to. Now you see, \nrestart of the app is finishing. Go to Real T section. So now our studio is attached to our process and it will stop its \nexecution.  \n  \n  \nSpeaker 1\n \n If we will run corresponding business process. Okay, let's calculate average for apartments for sale. We have two \ndifferent departments here. Calculate price and what. Let me check process log. It looks like something is going not \nas expected, but it just took a bit longer time. And yes, we got our debugging. No exceptions. Everything looks good. \nWe have just breakpoint and execution stopped at the moment where we have script task in our business process. \nSo you remember the process structure. Now we are somewhere here and we can run this code line by line. I \nunderstand that this part is probably boring for those who do not plan to do a lot of development in creatio. But this \nis something that will let you understand how your code is actually started. And this is only possible if you run your \ncreation locally.  \n  \n  \nSpeaker 1\n \n Because you need access to file system, you need Visual Studio to attach to your worker process. So this type of \ndebugging can only be performed in local environment conditions. Unfortunately when you work in cloud conditions, \nyou will not be able to do this kind of debugging. Okay, so let's start. We can run lines one after another with the \ncommand F10 step over. You probably remember some debugging sessions in Google Chrome development \nconsole. So here we have something similar and even hotkeys are very similar. So F10 is very popular. We will use it \nand pressing F10 several times. Now you see 1, 2. We can also handle locals or watch variables. Let's try to look \nlocals type. You see it was changed. Offer type was changed. Great. Filter was created and collection changed. \nAnother filter, another add in. Then SQL text.  \n   \nSpeaker 1\n  \n Now you see SQL text changed. We can view it. Here is our actual SQL text which will be running in the database. So \nthis is important possibility for you. If you make some more complicated scripts, more complex filters, maybe some \nparameters that you don't know how to work with. So this is something that will let you understand much better how \ndata selection is working in creation. Currently we got this SQL script out from entity schema query instance. We \nused get select query method. Then we used get sqltext method in certification questions. One of the questions will \nask you about entity schema query available methods. So this will be one of the answers how to get SQL text out \nfrom esq. The answer is get select query and then get SQL text. Okay, we can save obtained result into parameter.  \n  \n  \nSpeaker 1\n \n Then we run the most important line in this code. This is for getting collection data. You can see that we have \ncollection number, collection records number two. We have two records there. So let's go to start our counters run \ncycle for our data records so we have only two apartments for sale. You see Austin and Florida apartments for sale. \nSo we process such data, but we only can get their prices. Here you see price area and then we update our total \ncounters, price and area and then go to the next line, another price, another area, update counters and finish the \ncycle. Finally total area, total result. Here you will see result was calculated like this. And we can save this result into \ndecimal parameter and then return true. I did not tell you importance of this return true or return false.  \n  \n  \nSpeaker 1\n \n So let me spend a minute on this C Sharp script task has options to inform process engine about is it successful \nexecution or not? In case if your script task finishes with return true, it means that process engine is ready to \nexecute next step immediately and no errors detected. If you return false, it means you tell to the process engine \nthat your execution experience serious errors. So you have to stop process execution fully and process will be \nstopped with the error state. So if you return false, it means you perform unexpected, let's say like emergency stop of \nyour process. And that's how you can manage this. Also you may create one more action for this you can handle no, \nyou can raise exceptions inside of your C sharp code. This will be also treated as a emergency stop.  \n  \n  \nSpeaker 1\n \n But also it will tell to the client side some exception text. And that's how you can provide some reason for stopping \nof your process. So you can throw exceptions with some error message text and user who started process step will \nsee this error message. In our case everything is okay. Process executed normally. We have to continue our \nexecution by pressing F5 means normal continue. In this case our process finishes its execution and now we can \nsee so we have no data changes here. We can only see that calculations was done. If you go to process log the \nrecent execution. You see, milliseconds have a huge value and we have more than six minutes of total execution \ntime of our process. This is important for us to check how fast all execution was done.  \n  \n  \nSpeaker 1\n \n And as you can see, our read data executed more or less according to expectations. But our coded part took \nenormous time of six minutes because of our debugging session. So you can check what steps take too much and \nyou can think of how to improve it. In my case, you see, debugging definitely made it longer. But it's just our, let's say \ndesign and development attempts in real life it will be not so slow. Okay, I think that currently you understand how it \nworks. So let's try to run it once again in a bit different conditions. So let's open house for Sale as an argument, we \nwill only have this ID when we start a process. This ID is transferred as argument. We will get corresponding values \nand parameters. Now we already debug only our programmed code.  \n  \n  \nSpeaker 1\n \n So you may ask about is it possible to debug no code items? Unfortunately no. And they will just execute it without \nany stops. But. But if you want to intentionally stop your process at some step in order to investigate status \nparameters, variables and so on, you can additional temporary items into your process that will display some data \nusing any kind of show message, any kind of messaging like pre configured page or automatic auto generated page. \nSo you can use it for like artificial process stop. And that's how you can get additional information about the process \nexecution if you go to process log and see trace data. So in my case I plan just to run this process once again. Now I \nexpect debugging debugger to be activated again. As you can see it takes significantly longer than expected time.  \n  \n  \nSpeaker 1\n \n Oh yeah, it's already finished here. So just my fault. Okay, running in, running it again now you see all the decision, all \nexecution goes. We can see this SQL text conditions parameters are saved separately. Selecting data again we have \ntwo records but different records. Working with price and area, updating totals, another pricing area updating totals \nagain and calculating final result. Then we can just press F5 for normal execution. Oh, it looks like I accidentally \nstarted one more time. Okay, let's run the five again. Okay, so it was just my fault. I started this process twice. Let's \ngo to processor log. Now you see this was my debugging stuff. This was just maybe three or four seconds to debug \nin the next time.  \n  \n  \nSpeaker 1\n \n So you can see that all of your execution or your processes is tracked and also you can handle and check process \nparameters. Unfortunately this trace data is not shown for any item. Personally I have a question why? But possibly \nit's somehow connected with the type of executed item. And we still have good enough options to look at parameter \ndata and to check it out during debugging. I mean during investigating how process executed and process was. But \nof course we cannot propose our customers to go here in order to check some result data. We need to have a fancy \ngood looking way to do some kind of output. When we start a process like this, we want to provide some kind of \ngood looking output for a user. And of course obviously we will do this.  \n  \n  \nSpeaker 1\n \n So now we have process which only calculates data and saves its results into page into process parameters. We can \nuse some items to make a good looking display of such data and I plan to user actions for this. Meanwhile, we \nalready do not need to debug. So it's better to avoid unnecessary system resources spending. As you can see, 1.3 \ngigabyte of memory was allocated and for my app and visual studio can track it. So let's detach our visual Studio \ndetach all. It will save a bit of our RAM for our creation. And let's check now you see that 1 gigabyte of RAM was still \nalready eaten by creation process creature in general creature web worker process. Okay, so my plan is now to show \nuser some output I plan to use. Oh, it looks like I lost my title here. Yes. Calculate average price.  \n  \n  \nSpeaker 1\n \n Okay. The most important is not to change the code in C sharp part. In this case, system will allow us to save our \nprocess without any questions and without asking to recompile only if you change code here. System will detect this \nand ask you to perform compilation again. So my plan is to use some kind of output window. I will user actions and \nthe most recommended option, I think the most popular, the most let's say useful is now pre configured page item. \nPre configured page offers you possibility of fully to show fully customized page for a user. It means you have no \nany, let's say connection with existing data as you may find in open edit page item.  \n  \n  \nSpeaker 1\n \n So open edit page can only show you pages connected with existing objects and pre configured page can show you \nany random page designed in your system. So let's use this option reconfigure a page and carefully put it on the \ndiagram. Pre configured page is designed to show some pages for user according to process execution. Obviously \nthis page will appear at user side. But you need to remember that in general business process is a server side \nfunctionality. So when we have a process, when we start it server side process engine service starts to collect \nmetadata and process it step by step. It performs almost silently without showing any messages, without showing \nany UI changes. In general and only if you want to show some pages for user, we can use some special items for \nthis. Pre configured page is one of such items.  \n  \n  \nSpeaker 1\n \n I think one of the most recommended features for this task. Pre configured page will show some page for user at \nuser browser which page to open. We don't have any suitable. We have a lot of out of the box pages, but they are not \nsuitable for our task. And we want to display average price decimal value. And also we want to display SQL text only \nfor debugging purpose. So we can simply create new page, add the new page and then we can decide which type of \nthis page is a Freedom UI or Classic ui. Of course it makes sense to work with Freedom UI right now. So let's do this \nsystem will open new page editor dialog. We can use different types of pages. And let's use this one tabbed page \nwith area on top.  \n  \n  \nSpeaker 1\n \n Of course this is too big page for our purpose. But this is a simple example. In real life you may need a process \nwhich will ask user about some parameters, about some arguments. And in general business scenario it may \nhappen that you will have quite a big list of some data for input. So in general you can create pages with unlimited \ncomplexity. As many parameters you want to input you can implement. So no limitations here. Great. And we can \nuse different page parameters. They are not connected to any existing entities. So you see just set of controls. And \nin my case I need to display number. So use number control. Of course I will rename it into average price US dollars. \nThe inner code will be maybe USRAVG price and format will be decimal two digits.  \n  \n  \nSpeaker 1\n \n And as this is an output value, I do not want user to modify this. So I'll make it read only. It's quite obvious. You see \nit's no code settings, so very easy to do. Next parameter that I want to use will be a text. Or maybe I can try rich text. \nBut first let's try text and make it a bit multiline like this and SQL text. It's just for demo purpose and for debugging \nreasons only SQL text parameter 500 probably multi line text will be a good option here. Okay, as you can see, I don't \neven care about element code because I do not plan to modify code of the page. But physically it's possible. This will \nbe a Freedom UI page where you can also make your own handlers, you can add your own buttons or other types of \ncontrols. So you.  \n  \n  \nSpeaker 1\n \n You see very rich possibilities to build your page. In my case, SQL text will be also read only because this is only for \ndata output. So my SQL text is for data output. That's. That's it. Only two parameters here. In real life, of course you \nmay use much more components and widgets and parameters. So this is just to make it simple and easy. You'll be \nable to reproduce it easily. My page will finish its work by clicking Save or close. Maybe we can hide cancel button. Is \nit possible to hide? No. Okay, we can save our page now. And also I need to check where is the page package. Let \nme check page settings. Okay, Reality, the same package as my main process is saved to the only disappointing \nFeature is a code automatically set for this page.  \n  \n  \nSpeaker 1\n \n So I will use something like average price output page and we can also use the same title just to make it good \nlooking at our configuration section. So it will be named and coded properly. Save it again. So now you see our page \nis ready well named, we can save it again, saved correctly, close it and then we can use this page. As you can see it \nstill shows us a bit old code, but we can probably select this one. Yes, now it's correct. So our editor remember it \ncreated page so it shows us its title and its code. So whatever you prefer the most. And also we can name it \nsomething like show results. Who will see this page? User who performs a task. It means who will see the page? \nUser.  \n   \nSpeaker 1\n  \n There are other options like someone's manager or a role some member from a role. In my case, user is like simple \nand easy because server side will detect exact user session based on the contact value we provide here. So here we \nhave to provide a contact of a user who we plan to show this page for. And current user contact is very like frequent \ntypical value here. So we simply will show the page for current user. But it's possible to include several different \npersons into your business process logic. So it's possible to calculate another person or someone's manager or just \nread some specific place where you can handle another person's involved into some business activity. And you can \nprovide here not only current user contact, but you can simply provide any contact of existing user that you need for \nyour business logic.  \n  \n  \nSpeaker 1\n \n Okay, show page automatically means that once this item will be executed page appears immediately you can hide \nit. So do not show page automatically. In this case, this item will be still pending, so it will still wait for user to start to \nshow it. And user will see this item in this notification panel in business tasks list. So user will be able to find the \npending item. And that's how it's possible to see such item in case if we do not use show page automatically. \nRecommendations and hints were used for classic UI examples of pre configured pages. Unfortunately it's not \nsupported for Freedom ui. Probably developers decided not to keep it in Freedom ui. So it's up to you. Okay, we can \nskip this part and what buttons complete the page.  \n  \n  \nSpeaker 1\n \n It's important to understand that when some page is shown for a user as a business process item, then this page \nwill wait for a time user decision. So page will decide when its work is done. And in our case we can do it by buttons. \nIf we do not press any button and we Just switch focus to another section and go on to work with another data. In \nthis case, process will still wait for our decision and will not move on. So simply speaking, we can even stop our \nprocess. We can like block it at some stage without moving forward until we will specify some condition and make \nsome condition in order to proceed with our process. In my case, let's make save and close buttons are enough to \nfinish work with our page and move on.  \n  \n  \nSpeaker 1\n \n And such options are important to specify how we plan to continue our execution. Okay, at the end this item has \nparameters page parameters. We need to load here data from our process. We will use parameters mapping here \nand it's very easy. We will just click on this lightning button, select process parameter, select corresponding \nparameter and click select. That's how we matched process parameter with page parameter. Let me explain how it \ngoes. So here somewhere we have a process parameters somewhere like a memory of business process engine and \nwe use it here, here we finally transmitted such parameters to our C Sharp code. Later on we expected to get such \ndata back to process parameters and then such process parameters are held at process level. We can move our \nparameters back to. Sorry, we can move our parameters back to page.  \n  \n  \nSpeaker 1\n \n So this is important for you to understand that data will go from process parameters to our page parameters. Now \nwe set SQL text parameter and then average price for the page. We'll take its value from corresponding average price \nof a process. So in process parameters we have this select and this is called parameters mapping. And when this \nprocess item start, according to this mapping, SQL text will load data from SQL text parameter and average price \nUSD will load data from corresponding average price process parameter. No need to run items next items in the \nbackground. No need to create a technical additional record in activities section for this. So we will not use this. We \njust set parameters and save. Each time we save, our process diagram saved in our package will be changed.  \n  \n  \nSpeaker 1\n \n So if you do not save, your progress is only in your browser and will not work until you save it. So it's obvious I think. \nOkay, so now we made this item to display some results. If you work in classic UI usually so it's mandatory to reload \nthe page in Freedom UI sometimes it's not mandatory, but I just want to make sure that everything works well. That's \nwhy I just reload the page for sure. Okay, let's open some house in Seattle and start our calculation. Now you see \nthat our calculation was quick. We got average price calculated. We also have debugging SQL text just for developer \nneed for debugging purpose. And our process seems to stop here. But if you go to so let's imagine you went to \nanother section.  \n  \n  \nSpeaker 1\n \n So you didn't finish this page, you went to another section, you started to work with different data. You almost forgot \nabout your process. But if you go here into notification panel and find business process tasks list here you will see \npending items. You will see items that are waiting for your response and they will be hanging here until you finally \nfinish them. So that's how system reminds you about items that current users should do. And this list will include all \npending items from all different processes started from our started for our user. So show results. We click here, we \nsee again this page. We remember save or close button will finish work of this page. Okay, click save and process \nfinishes. We can go to process log to see its execution.  \n  \n  \nSpeaker 1\n \n It took 1.4 minutes and now you see that most of the time system spent on showing page and waiting for user \nresponse. Such analyzing of duration may help you to understand how actually your process is used. Where there \nare some tricky steps which make users to work longer to spend more time. So it will be helpful for you to \nunderstand your business and your level of automation and you will finally see what can be improved here. So this \nshowing page also as you can see it enables trace data. For this step. If we enable show trace data you will see final \nvalues of our process parameters. This is our input value.  \n  \n  \nSpeaker 1\n \n Here we have calculated offer type and so we have type and offer type input data is here and as a result we have \naverage price and we have SQL text for debugging purpose. In case if you have any questions feel free to ask \nbecause we almost finished this step and now you see we made a process which is able to show us some data and \nalso I need to explain you some side effects and the side questions. So for example user started our process but \nthen okay, process can be quite long and the user had previous steps there. So it may happen that user just did not \nsee this page. Something happens like something is broken and user was too quick to switch to other parts. User \nthought that something was hanging, then switched to another section and so on.  \n  \n  \nSpeaker 1\n \n User can easily go back to the process by looking at notification panel business process tasks show corresponding \npage, save it and that's how the page will be fixed. I mean the process will be correctly finished. And you see now \nuser has no items to execute. It's possible to include many different users into one business process. And also you \nneed to understand that process is still executed at server side. So when we have some page Displayed for client \nuser. This is a mechanism which sends special messages from server side to the client side. I think it was done with \nthe help of websocket. Then client side page listens to such websocket and if it gets it then it shows you the page \nand also displays business process tasks data here.  \n  \n  \nSpeaker 1\n \n So user can look at any time even if user accidentally closed the page at all. User can go anytime here and see what \nprocesses are waiting for the feedback. So this is quite efficient way of making your process interactive, making your \nprocess able to input some complex data to display some intermediate or finishing results of calculation. And all of \nthis is possible thanks to user actions. We only used pre configured page. We have a lot of other options here like \ndialogues, open any page of existing section. Auto generated page is a very old item, probably 10 years old item and \nit is designed to just display different columns, different fields in one column and it also can be used for input and \noutput.  \n  \n  \nSpeaker 1\n \n We have send email item which will show you some email text before sending it and approval tool which can be \nhelpful in case if you need to automate some kind of approval logic. When one user creates something and needs \nconfirmation from another user or even set of users that everything is okay. And usually it's used for something \nwhich makes commercial importance like contracts, invoices or some other types of documents where some other \npeople must confirm that everything is okay in some documents or data. So approval is a base product mechanism \nwhich helps to organize such kind of confirmation by different people and make it well automated inside of creation. \nIf you want to know more about different process items, I recommend you to attend our customization course. \nThere are more examples there and they are fully no code.  \n  \n  \nSpeaker 1\n \n But our sessions are intended for developers. That's why we focus on coding. That's why we see how we can get \nparameter values, how we can save them and how finally we can merge this coded development approach with no \ncode stuff which can be designed with no programming. In case if you have any questions feel free to ask. This \nexample is over and probably it's time for us to have a 10 minutes break. So if you have any questions feel free or \ntype your question during the break. So next topic for our session will be about processing events. So processing \nobject events and I need to explain why you need to know about it. So this is a server side functionality and its \npossibility to handle some operations and possibility to react for system at some changes that we perform in our \ndata.  \n  \n  \nSpeaker 1\n \n Let me show you three ways to handle object events. But before it makes sense to download everything to file \nsystem to commit it to version control. Because it's our next step that we successfully did. We will save everything \non disk in case if you have any questions, feel free to ask. So we save all of the changes we recently did at file \nsystem. You see, it takes a bit time, more than expected. Okay, we have real changes. We have migration settings. \nOkay, now we can commit our changes to version control. You see, I have two big topics here. Okay, we can commit. \nGreat. Sync, pull and push. Yes. Okay, so now we finished finalized our steps that we did in previous example. And I \nplan to show you and explain what is event handling and how we can handle it.  \n  \n  \nSpeaker 1\n \n We have three different ways to handle events at creation objects. Let me show you free handle handling object \nevents. First one is very easy. This is no code solution. And using business process start signals, I will quickly made \nan example. I will make an example for you. You'll understand how it works to be very easy and very quick. But it has \nalso disadvantages. It has only three supported events and relatively low speed. But it's really fast to develop. So I \nwill show it for you. And let me show you this easy way of handling data changes. So let me explain some business \nsense. Let's imagine we create new realty. Like we press new, we fill in some data. Okay, so this is an apartment for \nsale sound test comment. So let's imagine when we save data. So physically we do insert into new realty.  \n  \n  \nSpeaker 1\n \n So we insert a new reality record into our data model. And if we do the such insert, we want to create several realty \nvisits automatically. Let's imagine we want to do this task. So once insert happens, we want system to automatically \ncreate some visits for us. This is possible to do and even with the easiest way of doing this, with the help of start \nsignal, we can do this easily and make it using business process. Let me show you. Let's go to process library. And \nyou should be very careful when you create processes from process library. Because when you click new here, \nsystem will take into consideration current package system setting. So this is a classic UI stuff. But you should be \ncareful because you can create processes even for any kind of solution.  \n \n \n  \nSpeaker 1\n \n So go to settings and you see target package is dev classic. So you should change it for usr realty. Yes, modify. Also \nthere is some side effect which I can't easily understand and explain here. Now you see some strange packages. Usr \ncom something and combination home another something. So it looks like system dreams about some packages \nbut we cannot find them in our packages structure. So we will not see it here in our packages. Also, even if you go \ndirectly to look at the database and we will search for packages, could choose information or maybe like this. No, it \nwill be not so good. Okay, we can just select everything from this package, show a new one first and you see that we \ndon't have any USR special packages here.  \n  \n  \nSpeaker 1\n \n So it looks like here we have something artificially created, possibly used for future customizations of some apps, \nbut we don't have it now. Okay, so we will select only one package here and our code will be USR2 Add Reality Visits \nprocess. So now you see Auto add realty visits process and you see we have code and title. Great. So the main idea \nof handling object events the help of start signal. Of course it's simply to turn our start simple event clicking on this \nbutton, change type button enter start signal event. Why I say start signal? Because technically we have another \ntypes of signals. So we have wait for signal or now we have throw signal. So we also have intermediate signals, they \nhave a bit different functionality. So start signals are designed to start your processes and by default it's an object \nsignal.  \n  \n  \nSpeaker 1\n \n Technically you can use custom programmed signal, but object signal is the most commonly used and we have to \nspecify object which we want to listen for our event handling. Of course, this is our reality hidden UI object, this one. \nAnd we have only three supported events so far. Developers have plans to improve this functionality to have three \nbefore events and three after events. Now we have only after events and we have after record added, after record \nmodified and after record deleted. With delete we have some additional functionality which looks like this is actually \nbefore event because when we will handle record deleted and try to select record that is about to delete, it's still \npresent in database. So for delete we use before delete event.  \n  \n  \nSpeaker 1\n \n But for added and modified it's definitely after add and after modification because when we do selection from the \ndatabase, it shows that data was already added or modified. So in my case I plan to handle insert event. So record \nedit and in. So in general you can use additional conditions here and such conditions could be helpful if you want to \nrun your process not for any reality insert, but for some certain data, for example only for houses or only for \napartments or some complex condition. So now I will just skip this part. But run following elements in the \nbackground is really useful feature.  \n  \n  \nSpeaker 1\n \n If you run your process with no background option, it means that from user point of view, insert or update will take \nsome time plus time for running of your process because it will Be started at the same scope at the same thread. So \nwithout background perceived speed of your solution will be not so perfect. It's if you set run following elements in \nthe background physically system performs scheduling of your process according to insert event into one time \nexecution with the help of background process scheduler and it will finally start in a separate thread. And from user \npoint of view insert will be processed faster and corresponding event handling will be done in a separate thread \nwithout any visible delays for end user. So in general, running in the background is recommended to guarantee better \nuser experience, better perceived speed.  \n   \nSpeaker 1\n  \n We can name this signal realty added which means that once the signal is triggered, it means that some new record \nwas added. Okay, so we can start the process with the help of signal. But what we have at the moment of start, \nunfortunately we don't have so much. We can switch to advanced module advanced settings and we only have one \nsingle parameter unique identifier of record which triggered our signal. So this record triggered this signal. And the \nonly value we have is ID of the record. So no price, no name, no anything. And if you really need so you have to select \nthis data from the database. In our case, I should explain the business sense of it. My plan is to automatically add \nrealty visits after we add the new realty record.  \n  \n  \nSpeaker 1\n \n To insert a visit we need parent realty and some additional columns. So let me use add data item which object to \nadd data of course to the visit. Be able to visit one record. Okay, and we can specify columns of added visits. Of \ncourse it will be parent realty. This is mandatory column, we have to specify it. We probably can try to calculate \npotential date and time. And possibly we can specify comment or some other columns as ID and historical columns \nwill be filled in automatically. Okay, parent reality, we can take it from start signal so we can take it from process \nparameters switching to process elements reality added and then double click on unique identifier. That's how we do \nthis. Setting comment will be something like auto added visit. Physically it turns into a C sharp string here with \ndouble quotes.  \n  \n  \nSpeaker 1\n \n Okay, and visit date and time can be something like current date and time and then we can go to formula. So for \nexample, we can add some days, add days and let it be just one day forward. So one day into future from current \nmoment. This is just a simple example. We can name it add visit. This will be just one visit. You can use copy and \npaste approach if you need many. But of course it's better to organize some cycle to make it more efficient. So now \nlet's Test how it works with just one visits first so we can save this process. And you should remember once you \nsave the process with start signal and if your process is active so it's not disabled. Now you see it's active and this \nprocess will work each time you have new insert.  \n  \n  \nSpeaker 1\n \n Let me show you go to realty section, try to copy data, save it, look at it. Now you see new visit was automatically \nadded. Automatically added and visit date and time is somewhere in future. So you see that it works. We can make \nmany visits as one operation. I will quickly make a cycle for you. This cycle will include parameter. I will use integer n \nparameter just to make kind of a cycle variable for me. Initial value it will be for example 3 so it will be variable which \nI will decrease one by one and I will use formula to decrease my cycle parameter. So I will save value to n and \nformula value will be N minus 1. Especially use spaces here because so tiny formulas are hard to read and having \nspaces will make it better and like more visual.  \n  \n  \nSpeaker 1\n \n Monica and possibly Paddy, are you following me today? Should I make poses for you? Please confirm if everything \nis okay with speed of our solution. Thank you Monica. Okay Adrian. Okay? Yes, Adrian. Sorry, not Paddy. Adrian. \nOkay, just a formula which makes it easy and you see we can just decrease n by 1 and rahi thank you. Thank you. \nGreat. So we have something like n equals n minus 1 in this formula, this very easy expression. But then we have to \norganize a cycle and we can use conditional flow going back to this stage. Now this is a sequence flow, but we can \nconvert it with this change type button to conditional flow. Conditional flow will only work if a certain boolean \ncondition is true. So I have to compose this condition.  \n   \nSpeaker 1\n  \n This condition will include double click on n parameter then comparison greater than zero. So if this boolean \nexpression is true, then my conditional flow will work and will be used here otherwise. So this is another sequence \nflow. I will turn it into default flow. Default flow has a difference, you see a small dash at the beginning. Default flow \nworks as a else statement for an if operator or default statement for a switch operator which probably is better \nalternative. So default flow will work in case of no one from conditional flows executed. By the way, I made here a \ncondition and also I can make a title for it and I encourage you to provide enough titles to make your process self \nexplanatory to make it easy to understand.  \n  \n  \nSpeaker 1\n \n So while n is greater than zero, we go back, we do one more insert and then we go back to this formula and \ndecrease N Again here we have N equals to zero. This is just a title, but it will show us that it's the end. Here it will be \nlike finish item. Okay? And as you can see, it's very easy process. And also we can just make it a bit more useful for \nus. So for date and time calculation, we add some number here and we can add n days. Double click. And now you \nsee special macro for n parameter was added here. So first time we will add three days. Next time we will add two \ndays, then one day and then we will finish the process. As you can see, we can make simple cycles in business \nprocesses. Save it.  \n  \n  \nSpeaker 1\n \n Once I save it, this process is already actual. So I do not need to start it with a special button. Then I will go and \ncheck it again. For example, we have an apartment in Florida. We have no details, okay. And we can copy it some \nnew save it. When saved, we can see its detailed data. And you see we have three days ahead, two days ahead. And \ntomorrow you see all three visits were added successfully and our process executed correctly. We can go to process \nlog to see our recent execution. And also it's interesting to look at the cushion execution diagram. This diagram \nshows number of items, how many times this step was actually started. So you see we had three cycles here, cycle \nbodies, then we finished our execution.  \n  \n  \nSpeaker 1\n \n So execution diagram sometimes may help you to understand how exactly your process started, how it worked. And \nthis can be helpful if you go to process work details. You see we add visits, add parameter and again if we enable \ntrace, then we will see all the values of the parameters at each step of our process. You can also see duration in \nmilliseconds. And you can analyze and understand what is the slowest part of your process, what is the fastest part, \nwhere you spend the most of resources. Such things as duration can be really helpful to analyze overall \nperformance. So it was very easy. Simple example of handling object event with the help of start signal. As you can \nsee, it doesn't so take too much time. It's very easy and fast to develop. But we have quite simple three events and \nrelatively low speed.  \n  \n  \nSpeaker 1\n \n When I say about low speed, you see point two second. It means 200 millisecond for execution. It's probably not so \nmuch, but if you work with multiple records. If your task is to process data with as fast as possible way. So having \nsuch time spent on it probably will be not the perfect, not the best idea. So we have two more options of handling \nobject events. Both of them require coding. And the second is object embedded process. Let me Explain what it is \nabout. We will focus on objects. Now let's open so any object. We can open any object and you can see its events \ntab. Events. Now you see 13 supported events. So it's a lot. We have 13 different options to handle events.  \n  \n  \nSpeaker 1\n \n And once you start to use it, for example before insert you see system generated some code, we can copy it. Then \nwe can look at open process button. So it's important to mention that any creatio object has its own unique \nindividual embedded process. This embedded process is designed only for one process purpose only to handle \nobject events. The way how you can handle it includes using of events sub process using its start message item and \nwe have to paste our code that we initially copied from this into this. Then you can use items like script tasks, \nformulas or user tasks. And the most commonly script tasks are used. And then you can connect your start \nmessage with this script task. In this script task you can also operate with embedded.  \n  \n  \nSpeaker 1\n \n So with your current entity with its data row, you can use entity methods for it. But there is a very strong \ndisadvantage of using this approach in general, and this disadvantage is quite serious. This type of event handling \ndoes not work in packages compiled as separate assembly, simply speaking for all. So for any modern package \nwhere this option is turned on in order to make fast compilation, your event handling with embedded process will not \nwork. And it only works in old styled packages where you have no compiling into separate assembly. For example \nCRT base this package, as far as I remember is not compiled as separate assembly and we can look at its objects. \nFor example, we can find the contact object. It's one of the best examples. Contact. It's not here. Okay, let me find \nwhere it is placed properly.  \n  \n  \nSpeaker 1\n \n Crtui let's check or maybe base something. CRT core base package. Yes, CRT core base this one Contact object if \nwe open it, as you remember Creature has open source for base product configuration. We can see events. We have \nsome events settings here for our object and before insert, after insert, before delete, after delete and then we can \ngo to open process to see examples of implementing it. So you see some examples of event sub process, start \nmessage then script task for execution of some useful logic and in many cases it's based on script tasks. Also you \ncan see examples where we have some methods running and methods can be implemented in embedded process \nproperties here and also as well as using of some additional usings. Where we have my usings it should be \nsomewhere here I believe Parameters. Oh, usings are here.  \n  \n  \nSpeaker 1\n \n Sorry, quite obvious. So methods include Decoration of the class fully and including methods that you need here. \nAnd the using can be also typed manually if you want. But this stuff works only in this package because we have \nCRT core base package which is not compiled a separate assembly. But if you want to develop such code, if you \nwant to compile it, ULIPs experience quite big delays. So in general use of packages not compiled a separate \nassembly will make it hard for you because long compilation time. And you may ask me about. Okay, so if this \npowerful tool with 13 supported event does not work, so how we can use it? How we can handle object events \nefficiently and supporting all modern package features?  \n  \n  \nSpeaker 1\n \n The answer is third answer is Object events layer the most, let's say the most modern and like the most \nrecommended way to handle object events. It also still needs coding. So it means we will have a compiled code and \nit has a bit less events. Only eight supported events, but it is the most flexible and I will explain why. So now you will \nsee this example. We need some documentation for this. This is about backend server side data operations and I \nneed to find object events. Yes, some here somewhere here. Great. This is our article that you need to study if you \nwant to understand better how this mechanism works. We have eight supported events and the definition is before \nand after insert, before and after update, date, before and after delete.  \n  \n  \nSpeaker 1\n \n And also we have very interesting and unusual event called saving before and after save. But what is save? It's \ninteresting that save was used in order to make the same handler if you want to organize the same logic for adding \ndata and for updating data record. So saving is triggered in case of insert and in case of update. And here we can \nsee the exact order of execution. Saving, inserting, then actual add of data is performed in database, then inserted \nand saved. So that's how order of execution events is performed. Sara tells that has to leave and will be finished \nlater. Thank you very much, Sara. Sorry for making my sessions a bit longer than expected. Possibly we had to plan it \nto run for 2.5 hours. Okay, Sara, thank you very much for your time. Have a good. Have a good Tuesday.  \n  \n  \nSpeaker 1\n \n Thank you. So here we have a set of events for creating record, set of events for updating and obviously for delete. \nThank you, thank you. So eight supported events and I told you that it's very flexible. So why it is flexible, I will try to \nexplain. In previous examples we had to create a process which starts by signals or we had to make changes in \nobject if you want to add some event handling. But in this case in this third way of event handling, I call it Object \nevent layer or Object events or entity events. So in this approach we can create our own class which will not require \nany changes of the object that we plan to listen. So we will just specify object code and that will be enough for our \nclass to operate normally.  \n  \n  \nSpeaker 1\n \n So we can listen any existing system object, no matter how far it is developed inside of our package hierarchy. This \napproach does not care about package dependencies at all. The only condition for it to work is presence of \ncorresponding object at our environment. And this is a C code that can be designed with the help of special item \ncalled C source code. So we will use this tool, we will use professional integration with Visual Studio and I will show \nyou how we can make event handling with it. It will not take too much time. For those of you who do not really like to \nprogram in C Sharp, this will be a bit boring, but I will try to make it fast and you will see business results right now.  \n  \n  \nSpeaker 1\n \n And it's important to mention that this kind of event handling will be performed as well at server side. So no matter \nhow technically this insert will happen. Like we add data from user interface page or we add data with the help of \nbusiness process, or we add data with the help of API calls, processing it at server side will trigger this event \nhandling. So this event handling is inevitable for server side and there is no way how you can suppress such event \nprocessing. So it's quite reliable and that's why it is suitable to perform server side validation. Let me explain some \nbusiness sense of it. Let's imagine our task is to make some limitation on data input. For example, we will have a \nvery big price for our realty and we will put some very immense number here.  \n  \n  \nSpeaker 1\n \n So okay, it's not correct too much. Yeah, you see we have some limitation here. Okay, what about this? Okay, looks \ngood. So here you see our commission, our huge price with 9000 of three dawns. So okay, very big price and system \nstill allows us to save it. So we want to limit this value. We want to make some server side limitation and we don't \nwant to save such big prices in our system because it's obvious mistake. So I will show you how to make server side \nvalidation with the help of entity events. Let's go. So according to the manual, by the way, I did not share the link with \nyou object business process. Oh, already shared. Okay, so according to the manual we have to make a C Sharp \nsource code and implement the this kind of text there.  \n  \n  \nSpeaker 1\n \n So let's do this, select our package add source code. This is a special type of item which is designed to provide a \npure source of a C Sharp which we can develop inside of creature. Or we can create it separately using powerful \nexternal editors. But creating of C source should be done from this editor. Adrian is asking when do we use the \nserver side validation instead of client side? This is a great question, Adrian. Server side validation is much more \nreliable because client side validation is only working when you operate with the page. You remember our client side \nvalidation does not allow us to put negative prices like this. So it will not allow us to save it. But it can be easily \nbypassed. So for example, you can make a business process which will do this.  \n   \nSpeaker 1\n  \n Or we can make a hack now trying to edit data in our list utilizing our editable list features. And when you see that if \nwe have no any event handling and we did not care about the handle, by the way, we don't have any no code options \nso far to make a custom handling of list edit events. So now you see we easily bypassed this. So I just wanted to say \nthat client side validation is good, but it's not perfect. You can use bypass with list edit. You can use a bit more \ncomplicated approach with business process that you can run and it will not follow client validation. Or even more, \nyou can use API call to insert new data and it will also do not use client side validation. So client side is not reliable.  \n  \n  \nSpeaker 1\n \n This is only for page and it's limited on the page. So if data comes some other way not from your page. So your \nvalidation will not work if you do it in client side. Server side is much more reliable. It will work anytime when entity \ndata model is used. No matter if it's used from ui, from API call from a business process. So it will work anytime \nwhen you use data model. So let's go back to our C sources. We have to create it. I selected a package add C sharp \nsource code and that's how I get this tab. It makes sense to provide better friendly name here. Let's say it will be \nnamed USR realty events. So my code for this configurable item will be realty events.  \n  \n  \nSpeaker 1\n \n I'm too lazy to compose a different title, so I will make the same title because it's technical thing. No one will be \nselecting it from any list. So let it be my package no description because I'm lazy again. And we have this example \nnow you see all we have here is list. So just small set of properties and no localizable string and here we will have C \nSharp code here. Of course we can type it in this editor, but it's not so powerful, not so quick and it will not display \nhighlight some errors, syntax and other stuff. So I will show you powerful integration with Visual Studio if you work \non local on site environment. Of course, if you work in cloud conditions, you will have to type your code here. And \nRakhi is asking, oh, have to leave. Okay, thank you, Rakhi.  \n  \n  \nSpeaker 1\n \n We will finish probably in 10 minutes, so it's not so hard. Thank you for your time. You will watch videos. So I will \nshow you how to integrate it with Visual Studio because it's much more efficient than typing your code manually \nhere. So we can save our new created source code schema source code item into our package. Physically it saves it \non disk, so we can see it on disk. And of course we can also see it in our configuration in our package. This is our \nnew item. This is a fully server side view feature. So it includes C sharp code and it's necessary to compile if you \nwant to see how it works. Let's go to file system and check it out. So let's go to our package, then go to schemas and \nthen we have to find realty events.  \n  \n  \nSpeaker 1\n \n That's why having a friendly name is important because it will be good looking at our disk and also at our version \ncontrol. So here we see some bit of metadata. We do not care about it too much, but a real T events CS file. It's a \npure C Sharp code that we can develop into and we can develop with Visual Studio. So let me show you how to use \nVisual Studio for this. We still have to run it as administrator if you want to debug. We can close previously opened \nfiles. Probably we can close automatically generated solution, close solution. So no solutions at all. Then I will show \nyou how we can use Visual Studio for efficient development. I also need to show you some file system settings that \nwe have thanks to Creature.  \n  \n  \nSpeaker 1\n \n So inside of a package folder we have files and we have csproj file. This project file was generated by creatio. It has \nseveral sections of libraries with references which makes it possible to add the custom libraries if you want to \ninclude them into this project. But the most important is that this csproj file is used to get your compiled library of \nyour package. So what you need to know that all necessary for your Visual Studio to run and to work with your code \nis already created by creation by its own. So I will use Visual Studio file open project. Then I have to carefully select \ncorresponding folder. As you can see, my previously opened projects were in D5. I go to D1 Webep, there's of \nconfiguration pkg. Then I will find my realty folder for my package files.  \n  \n  \nSpeaker 1\n \n And then I have to open this C Sharp project file CSProj open it. Studio will think for a couple of seconds, but it will be \nstill very quick. And if you want to do the same with a package which is not compiled as separate assembly, you \nhave to look at special part in terms of configuration. SLN solution. This is a very big solution, includes more than \nseveral thousands of C files. So it will take couple of minutes for Visual Studio to digest all of its sources to \nunderstand everything all the references. And it will be possible for you to use it for development of C Sharp sources \nin case if you operate with the package that is not compiled a separate assembly. But in our case, luckily we use this \noption. And that's why opening this project is quite easy and quick thing.  \n  \n  \nSpeaker 1\n \n So if we can find this C sharp file C sharp code of course, I already created an example, it will not take too much \ntime. Entity event listener so my code is ready. I only have to copy it for you into chat. You'll be able to download chat \nmessages along with video files. And I will use the same code into my own. I need to tell you that here we have full \nfeatures traditionally supported by visual studio like IntelliSense using for example, like this Terrasoft. Sorry, you see \nin Auto IntelliSense you see autocomplete, you see system highlights text and you see that when I type something \nwith mistakes, it will immediately show error messages. It will show that we have something wrong in our text. It will \nhighlight this text and tell us that we have something missing.  \n  \n  \nSpeaker 1\n \n So this is quite powerful editor with intellisense and Autocomplete we have to perform a class with couple of usings \nand inside of some namespace. There is a tradition to keep your configuration code into terrasoft configuration \nnamespace. But in general you can decide yourself and you can create and support your own namespaces if you \nwant. So here we have terracelot configuration just because of tradition using some system namespaces. And what \nis the most important here is how we decode declare our class. This class for listening of object events must be \ninherited from base entity event listener and also this class must be decorated with entity event listener C sharp \nattribute special part of C sharp code which sets additional properties to our class. And this property includes \nschema name parameter. That's how system will understand what Exact object you plan to listen.  \n  \n  \nSpeaker 1\n \n So this line number seven is very important because it shows what object we plan to listen. Very important. We can \neasily make a mistake here. If we do, then nothing will happen and we will have no listening at all. You have to \nspecify name of existing object here. Okay, then we have from one to eight supported methods that are virtual \noverridden methods over base class. So we have to make public override void and then provide corresponding \nmethod name. We have article explaining all supported methods here you can see and in my case I plan to make it a \nbit more interesting and useful. So I plan to use on saving event which will work in case of insert and in case of \nupdate. As this is an ing event, saving it will happen before insert and before update of record.  \n  \n  \nSpeaker 1\n \n According to our documentation we have some arguments here and for before events we have reference to our data \nrecord which is an instance of an entity class and also we have some before arguments. Such arguments are quite \ninteresting and important. We can check out what are the values there and you will see that inside of traditional \nproperties we have is validation enabled boolean property key value which is ID of selected record which is currently \nbeing processed and also we have is cancelled property we which helps to organize graceful reject of execution of \nour event. And if you want to make it gracefully without any notes for end user you can just enable is cancel true and \nyour event will not happen. But this approach has a disadvantage and this silence which user will notice probably is \nnot self explanatory for the caller side.  \n  \n  \nSpeaker 1\n \n So for example, if user tries to add new data and provides too big price then system says okay, no error messages. \nBut when user will start to check it will turn out that corresponding record was not inserted or updated. So this \nsilence sometimes is not so desired and we can make our operation like with some noise and it will be quite rude \nloud noise with throwing exception. So we can compose message text and put some data there and then throw an \nexception to make our message code dependent from language. We can use localizable strings. So let's save our \ncode and we need to use localizable strings here. This will be also example for you and then we can go back to C \nsharp source code.  \n  \n  \nSpeaker 1\n \n We already saved our code, open it from embedded editor and we can create localizable strings and our code is \nvalues too big. We use this localizable code and our localizable text message is here. Prices more than certain limit \nare not allowed. This text helps us to get localizable string from properties of this schema. Then we use String \nformat to replace some pattern with a certain number with a certain string and then we show this message for user. \nAs result, this throwing exception will finally make an error 500 at server side. So it will be internal server error. That's \nwhy I say it's quite loud and rude behavior. But it works. So it's very practical for our case. User tries to do something, \ngets error message, gets error text and everything is quite clear.  \n  \n  \nSpeaker 1\n \n And user will see that operation was not done and there is a reason why it failed. So we will see this error message. \nOkay, sorry, not ready. Just a second. It okay, so we can save our C sharp source code. We did not change any line \nhere with embedded editor and as you can see it works well. So we can use the same item with internal editor or you \ncan use the same item with external editor. It asks us to reload. Okay, no problem. So we can reload it, we can save \nit, no problem. As you can see, it's up to you how you can, how you prefer to work with it. So finally we must make \nsure that everything was saved and then we go back to our application and start to compile code.  \n  \n  \nSpeaker 1\n \n We can compile our package the first time we have to manually to do this our package and compile action \ncompilation takes some time and first time probably it will take maybe 30 or 40 seconds. Next time for the same \npackage it may take just 10 or 20 seconds. So it's quite good performance and it will be way faster than compile all \nof your system. So now you can see it probably took 30 or 40 seconds to compile and it finished with no mistakes, \nno errors. And you see that this compilation finished with no errors and we can check how it works. Once we created \nand successfully compiled such C Sharp source code, it automatically becomes active and will work with any kind of \ninsert. Let's try to copy this big price as one more time data. Let's say two.  \n  \n  \nSpeaker 1\n \n So we have definitely greater than 1 billion. So our logic, our comparison condition here checks. I did not explain how \nit works actually. So sender is an argument object. We can run some parent implementation of the same handler if \nnecessary. If present, then we can turn our sender into entity. This is important to make possible running of entity \nmethods for our data argument. Then we try to get price value. Our column is named USR price USD. Let me check \nto make sure that it's correct. Realty columns price USD yes, it's correct, no problem. So it's correct operation to read \nprice. Then if price is greater than 1 billion we do throw in messages. If not greater, then it's okay, we do nothing. So \nit works like server side validation for us. And now I expect that system will not show me.  \n   \nSpeaker 1\n  \n So it will show me some error message now because can also enable browser developer console control shift I in \norder to make so and go to network tab in order to see all text or requests that will happen here. So this value is \ndefinitely greater than 1 billion. So let's try to create new record. Now you see that insert failed prices more than 1 \nbillion are not allowed. And you see that insert query finally finished with error 500 internal server error. Quite rude \nmistake from a server side when you perform your business logic. So it's like a crash, but it's okay, it's effective crash \nfor us. We see some response, we see error message. It's quite obvious. And client side also was capable to handle \nsuch error. And when we try to do this, as you can see, we see error message.  \n  \n  \nSpeaker 1\n \n Everything is quite obvious that something is wrong. So we can fix our data. Let's make it not so big like this. When \nwe save it's okay. And you see that insert query now executed successfully. We have no troubles. We have data at \nour database and everything looks quite well for us. Existing data will be not. Will be not. So we can try to update it. \nOkay, let's try to update it with an edit page. So like slightly less clear save. We still have troubles. Prices cannot be \nallowed. Okay, cancel close. Now let's make trick make an update using list like this Clear. Try to save. As you can \nsee, still favor because it's server side. Server side is efficient. And you see we still have error message. We have \nerror description, prices are not allowed.  \n  \n  \nSpeaker 1\n \n So you see we cancel such attempt only if we will edit it in a value that is below our limit. Then we can save it and \nupdate will work normally. Data is processed normally and it works efficiently. The same business logic will work in \ncase if insert is performed from business process or if insert is performed with the help of API calls. We will study \nAPI calls and integration techniques. A bit later you will see possibilities for it and we will check again that this \nvalidation is quite reliable and works for any kind of insert or update attempts. Okay, that was the third option for our \nevent handling. So we already finished with the creating examples of handling events. And if you have any questions \nfor today, please ask me. I will finalize my today's session.  \n  \n  \nSpeaker 1\n \n Save everything to file system because we had changes at our localizable strings business processes. So save \neverything and then committed to version control. Thank you very much for your time. Our session is over. In case if \nyou have any questions, feel free to ask. You will receive video recording as usual. So our session is over. Thank you \nvery much. See you tomorrow and goodbye.  \n \n  \n  \nSpeaker 1\n \n Today is session number eight of our development on Creature Platform Guided Learning and we will continue to \nwork with server side features and functionality. So today we will focus on the web services, making our own \nclasses at creation server side and make it work at the web service, write C Sharp code and practice with calling of \nweb services from Creature client side and from third party applications. So today is quite big plan. I hope we will \nhave enough time for this. So possibly we will spend a bit more than two hours. I will try to squeeze it into our \ntoday's session. So what about web services and why we need it? In general, web services are server side items that \nwe can easily call from client side with the help of HTTP queries.  \n  \n  \nSpeaker 1\n \n So when you look at your network tab, for example, when you open any record page, you see plenty of different web \nservice requests, different HTTP calls that were executed from server side. So from client side to the server side \nwith different request body with different responses and in general all our website operation is set of different \nqueries, different HTTP requests and then getting some responses at client side. Creature has a lot of embedded out \nof the box web services. Some of them are system web services, some of them are developed at configuration. And \nwe can create our own web services if necessary. So we can do some certain functionality. And it will be much more \nefficient than to do the same functionality at client side. Because client side is less safe, it's less powerful. Not so \nfast as server side.  \n  \n  \nSpeaker 1\n \n So client side definitely is not the place where you would like to perform some sensitive data operations or \ncalculations. So server side is a very natural place to do some complicated business logic like doing some \ncalculations, data processing, file processing and so on. So web services can be created in configuration and if \nyou're interested you can look at existing examples. If you search for C Sharp sources that contain the word service \nin their name or title condition is contains. Okay, you will see a lot of examples. You can randomly select any item \nand you will see some C code inside. So the reason why we have so many web services is need to have and to run \ndifferent functionality at server side.  \n  \n  \nSpeaker 1\n \n Usually it's written in C Sharp and today I plan to explain how you can create your own web service, how you can \nmake it run and how it can be useful for you. So we have a lot of existing examples, but the most important you need \nto remember that web service is a special piece of functionality that was specially designed to be called from client \nside. And this piece of functionality usually has no own user interface. It can only be called with the help Of HTTP \nqueries like this, you can see examples of HTTP query. Here you can see request URL request method type, you can \nsee some payload which means data parameters, you can see some response and so on.  \n  \n  \nSpeaker 1\n \n So in general web service is something that we can call from client side which works at server side, usually gets \nsome argument data, usually returns some result data and also makes some useful work etc. Side and that's why we \nneed it. So it's a very common functionality to use to run different business logic. We have a lot of standard based \nplatform web services like web services to get data like this one. This web service is called data service. We have a \nlot of other web services like file API services, like system setting services and a lot of other services. So probably \nhundreds of them. And also creation configuration offers us possibility to build our own web service to provide our \nown server side functionality that can be called from client side. And it doesn't matter which kind of client side you \nare using.  \n   \n Speaker 1\n \n Is it a freedom user interface or if it's a classic UI so you can use web services? Absolutely the same because server \nside is on the single item and requests and payload and response data will be parsed and will be processed \nabsolutely the same way. So we will study how to make our own web services. I also want to mention that web \nservice can be used with a third party applications. So this is a tool of other system may call some functionality at \ncreation ask and may probably transfer some arguments and then get some results. So we will study how to do this \nand before we continue I recommend you a couple of very useful examples. As you can see, we have plenty of \nexamples here in base configuration.  \n  \n  \nSpeaker 1\n \n If you randomly select then you probably will face unnecessary complex examples which will be hard to use it for \ntraining purpose for your study. So that's why I recommend you to use couple of very useful and simple examples. \nFirst one is a cryptographic service located in CRT base package. So it's a base platform item and it will be found in \nany creatio system. So you can find it at any environment, you can open it to see its code. So physically this is a C \nsharp source code item piece of code written in C and then to be compiled inside of a package or inside of an \napplication. By the way, it's interesting, CRT base seems to be a package that is not compiled as separate assembly. \nYes.  \n  \n  \nSpeaker 1\n \n So it means that contents of this package will be compiled in all terasoft configuration sln and you will have terse of \nconfiguration DLL as A result. Okay, so this is a simple C Sharp code as I told you at the beginning, just expected but \nthat creation developer has some experience in C, in JavaScript and also in SQL scripting. So here your C Sharp \nknowledge will be requested to be important. So physically what we have here we have a class which is declared in \nthe C sharp module. We have set of usings and also namespace decoration. There is a tradition to put your custom \nclasses into terrasoft configuration namespace but you can also make your own namespace and put your logic \nthere. So it will work absolutely the same.  \n  \n  \nSpeaker 1\n \n We use set of standard base platform and system namespaces that are necessary to declare our class to use some \nof functions that we need inside of it. And mainly all these stuff is made possible thanks to system service model \nnamespace and I need to say that creatio uses. NET framework backed tools to create web services based on WCF \nWindows Communication foundation web services. So there are several conditions how we can make such a WCF \nweb service. We have to declare a class. In our case it's recommended, strongly recommended to inherit it from \nbase service. I will explain it a bit later why this is so recommended. But generally you have to create a class and \ndecorate it with a special C sharp attribute, service contract attribute and ASP NET compatibility requirements \nattribute.  \n  \n  \nSpeaker 1\n \n And then inside of this class you should make at least one method to turn it into endpoint something that we can \ncall and this endpoint must be decorated method. This method must be decorated with operation contract attribute \nand some additional web invoke attribute. All such rules how to make it were delivered from WCF so it was not \ninvented by creative developers. We just used WCF based approach for making creation web services. So when we \nhave such class decorated with attributes, when you have at least one method decorated with corresponding \nattributes, when we compile our package or when we compile our full creation solution system will make DLL based \non it and also it will host so it will register endpoints and it will host our web service at our website.  \n   \nSpeaker 1\n  \n So after compilation this web service will be fully operational and it will be ready for calls that will be done from \nclient side. It could be done from creation client side or even from third party applications client side. We will \ndemonstrate how you can use it. So I will show you so the main reason why we need web services is to make some \nfunctionality that can be easily called from client side of creature page or from client side of third party application. \nSo we can also use it for integration purpose. Okay, let's look Closer how in general it works, we can create at least \none method decorated with attributes, and it makes sense to organize some kind of attributes that will be passed \ninto this method and get some results back.  \n  \n  \nSpeaker 1\n \n Also we will have some business logic functionality that also can include access to database, operating with some \nfiles, running other web services and so on. So we can use some useful method body. But in general you should \nexpect that web service method can get some optional parameters, can return some results. If your data type of \narguments and results if display the type is simple and standard like string, decimal, integer, guid or boolean or \nsomething like this, which is very easy for creation, to decode, to parse, then you need no additional settings and the \nsystem will be capable to run such a service and you will be able to transfer such relatively simple parameters as \narguments or get result data.  \n  \n  \nSpeaker 1\n \n But it can happen that you will need more complicated arguments like structures like instance of classes, objects \nand so on, and you may need to return some complex responses and complex result data. As example, you can see \nwhen we run some query at our creation list page, you see some request and response which usually includes a lot \nof properties, a lot of different values. Definitely for such complicated request body, we need some classes and we \nneed to organize it in more or less structured way. And also response usually includes a lot of additional subordinate \nproperties, values and so on. So it's also important to have a corresponding data types. So in case if you transport \nas arguments or get as results complex data arguments, you need some additional classes to let WCF know how to \nde serialize of arguments and serialize of results.  \n  \n  \nSpeaker 1\n \n Why I'm saying about serializing because server side will be a dll, a library with a runtime code which will be capable \nto operate with some data with a certain data type. When client side calls a web service, it usually packs so parses, \nmaybe encodes your arguments into a string. Here you can see an example of a big JSON string. So when server \nside receives such string, it must know how to convert the string into an instance of a class. And this procedure is \ncalled deserialization or deserializing, which means getting a string and then convert it into a class instance. This \ndeserializing should be done according to some class information, and that's why we need definition of the class \nwhich was used to transfer this data.  \n  \n  \nSpeaker 1\n \n The same task will happen when server side already finished execution of a method and needs to return some data. \nSo server side returned data also represents some class with some properties, and then it's necessary to serialize it \nback into a string because originally HTTP query will transport some string for you as result. So serializing and \ndeserializing is important part of any web service call. And in case if your data is complex so system will fail to \ndeserialize it without additional information, you should use special classes such as data classes. Let me show you \nanother example. So let's remember first one is cryptographic service which I recommend you to look at as a very \nsimple and very useful template for your own services. And one more, a bit more complicated data. No, no, no. Visa \ndata service, we need to look at all packages.  \n  \n  \nSpeaker 1\n \n Visa data service web service is a good example of a web service which is designed to get some arguments and \nreturn some results using complex data type. In this example, Request options is a complex argument that is \nprovided as an argument for your method. So we need to find corresponding class somewhere here. This class is \ncalled request options and you can see that in case if you need to transfer complex data arguments, you must create \nsuch a data type such class for your data transfer and you must decorate it with data contract C sharp attribute for a \nclass and data member C sharp attribute for all fields or properties that you plan to serialize that you plan actually to \ntransport. So this is example of much more complicated arguments for your data transfer.  \n  \n  \nSpeaker 1\n \n And if you need it, so you have a lot of examples how to do this. You have samples in Creature, you can easily open it \nand find it. So don't forget about this Visa data service a bit more complicated example, so it will really work well for \nyou. Why you need such examples? Because it's really hard to remember all necessary settings and implement it just \nby your memory in next example. So decorating a class with such attributes, decorating methods with such \nattributes, it's quite hard to remember. So I prefer when I need to create my own new web service, I prefer just to \ncopy and paste some pieces from this example. It works well and it saves your time. So I think it's one of the most \nefficient ways to create your own web services.  \n  \n  \nSpeaker 1\n \n Now I will show you how to make our own web service. How to use Visual Studio for its development, to make it \nmore efficient and to make possible development of complicated functionality with a powerful editor. So let's do our \nown example and also later I will show you how to run it from Creature side, from Freedom ui, from Classic UI and \nalso from third party application like post one. Let's go to our Freedom UI package and our creation of a web service \nstarts with making of a new C source code item. We can create it only from embedded editor. So we select our \npackage add source code. When doing it makes sense to provide some good looking friendly name because this \nname will also appear at file system, it will travel to version control.  \n  \n  \nSpeaker 1\n \n So having this name well spelled is a good idea in general. So let's call it realty service and we can make the same \ntitle for this source code item saving our package no description and just apply. So as you already remember from \nyesterday example with handling object events, C source code item is just a big set. So it's just a code part of a C \nmodule and possibly you can also add some localizable strings into it. So we can put our code here if you work in \ncloud conditions or I just put some sample code if I work in my local environment. I have to save this item because \nwe need to properly organize and make this item saved before running of Visual Studio to make our development. \nAnd now I need to explain you some business sense of it.  \n  \n  \nSpeaker 1\n \n So my plan is to create a web service that will work at server side and will be capable to calculate maximum price of \nreality objects filtering them by type and offering type. This is important because it's not good idea to mix \napartments, houses, parkings and so on. And also it's a good idea to filter by offer type because it's definitely not \ncorrect to mix rentals and sales. So the business sense of my web service will be to do some database calculations \nto do some operation with database. And also it will work as a good example for you how you can use alternative \nways to operate with data without use of object model. So let's move on. Here is our C item. Some dummy code is \nhere. No localizable string so far. Okay, great.  \n  \n  \nSpeaker 1\n \n We can as you can see we have a star here which means not all the items were fully saved on disk. So let's do this. \nDownload packages to file system. This usually is a safe action. It helps us to get all things right at the database. \nNow you still see this star. So sometimes you will get this star. But it's it doesn't show that something is really \nmissing on your disk. So sometimes we have scenarios where this star doesn't disappear. But in general everything \nis okay with our data and all the stuff was saved on disk. Let me show you what you can see on disk now. So we go \nto our app folder test of the web test of configuration pkg. Then we go to realty package folder schemas realty \nservice. Now you will see some metadata files.  \n  \n  \nSpeaker 1\n \n I strongly recommend you not to modify Anything manually here and C sharp file which we will fill in now with the \nright good looking code. As usual I prefer to use local environment advantage and one of them is use of file system \nand use of external editors. So we can use Microsoft Visual Studio. I'm using Community Edition to operate with this \ncode using external powerful editor. And previously we worked with realty events. Now we have one more item here, \nso possibly it will be updated quite soon. Now you see some realty service code and it's just not set properly. Okay, \nso let's do something here. As you remember from yesterday's session, here we have full support of intellisense \nautocomplete and you can put using system service model and so on.  \n  \n  \nSpeaker 1\n \n I already have an example which implements all this logic and that's why probably it makes sense to do it faster. So \nlet me show you. Here is my example of code. It's too big to fit into one zoom message in chat. So we try to fix it in \ntwo messages. Okay, this one and another is this. Okay, good. So now if you want you can get it from chat message. \nSo I will put it into my C sharp code when I develop using Visual Studio. Finally I must save my changes otherwise \ncreation will not see it and will not include it into our compilation. What is inside here? This example was originally \nmade based on cryptographic service example. So I copied this part from it. And of course we have our own name \nfor the class. My class is named realty service.  \n  \n  \nSpeaker 1\n \n There is a tradition of creature developers to name classes which represent web services with the help of service \nsuffix. So if you do something when you develop C sharp class for the service of it will be do something service. And \nit's quite common tradition. You may find a lot of examples in base product logic. So we made a class realty service \nand inherit it from special base service class. I need to tell you a couple of boring sentences about why we need to \ninherit from base service and generally the most important reason. So let's go and use Visual Studio tools to help us \nto understand what web service is. So we can click here you can see decompiled sources of base service class \nbecause its namespace is telesoft web common provided as a dll. So actually we don't have original services of this \ncloud.  \n  \n  \nSpeaker 1\n \n But thanks to decompilation features of Visual Studio we can see some code from it at least interface part of it. And \nit has a lot of useful things. And the most important I think is property that is named user connection. Let me show \nYou a lot of libraries abstract class service. Yes, this one the most important property, user connection. So user \nconnection is a reference to a class that keeps context of our current user session and current user connection to \nthe database. As you remember, user connection is used always when you operate with the database and it's used in \nmany other places where you have to provide some current user credentials data and the current user session \ninformation. So if you make your own web service without inheritance of base service, you have to get this user \nconnection, for example from HTTP context yourself.  \n  \n  \nSpeaker 1\n \n Let me show you here you can see examples. So we have HTTP context usually like this, and this works only for. \nNET framework version. But also this code and this application may run in. NET core conditions in for example Linux \noperating system. So for Linux there is another way of getting user connection. And this base service class helps us \nto hide all this complexity of getting user connection reference and we just use it as a property. So you can see \nexamples here. This property User connection is inherited from base service and you feel no troubles. So use of \nbase service is strongly recommended, especially if you plan to make your solution that will be portable, so it will be \ntransportable and compatible with. NET core version on Linux. So inheriting from base service is strongly \nrecommended. We have also other useful properties.  \n  \n  \nSpeaker 1\n \n But now you should remember that inheriting from base service helps to get user connection and helps to get it \ninitialized properly. When your method started, your user connection property of your class will be already initialized. \nThis is important also. Next, what you can see here is a strange interface named iReadonly session state. This \nmakes sense only for Windows and doesn't makes any difference for Linux. And this is a marker interface, which \nmeans it has no methods, but it tells to the IIS that your web service has no code inside that changes session state \nvariables. And if your code does not change such session state variables, it means that IIS can afford running your \nmethods simultaneously utilizing multi thread support, utilizing multi core CPU and generally making your web \nservice calls processed much faster.  \n  \n  \nSpeaker 1\n \n So in general, declaring of support of this interface costs you nothing because you have no methods to implement \nfor it. But it tells IIS that it can process your web service calls with the fastest possible way. So in general it is a good \nresult for high load conditions and for situations when you have performance issues at IIS because of multiple calls \nor the same service and not so fast processing inside of these calls and just for better performance. Okay, so I \nrecommend you to use it. And if you are curious, you can also find how many times let's go and make some \nresearch. We look at all terrace of configuration folder and for the beginning we can search to find any not any all \nfiles that include service contract attributes.  \n  \n  \nSpeaker 1\n \n So now I'm searching through C files which include service contract attribute and I will find approximately 200 web \nservices created out of the box in creatio based studio product. Okay, 157 files and possibly a bit more web services \ninside because one file may include more than one web service, but in general. Okay, so 157. Now let's search for I \nread only session state interface usage. So now we find only 54 places where this interface was used. In general it is \nrecommended to be used for any windows based creation web service. And you see that each time when developers \nmodify some code, when they improve existing web services, when they rewrite such code, reorganize it, refactor it, \nthey usually add such interface declaring declaration into code and that why from time to time the number of such \nitems is increasing from release to release.  \n  \n  \nSpeaker 1\n \n Okay, so this is only for better performance. What we have inside we have some method, but probably I have to start \nwith this. This is a simple method which is just gets no argument, returns some string and is organized as a web \nservice method because of operation contract attribute. So it tells to WCF that we have to turn this method into \nendpoint and register it at our website. And we have setting get HTTP method the easiest possible way to call a web \nservice. So we will be able to run this web service from an browser address bar. The reason why we do this is to \nmake sure that our service is normally hosted, is normally operational. So our compilation was successful and no \ntroubles with server side. So this method is only to check availability of our class and our web service in general.  \n  \n  \nSpeaker 1\n \n You can create a lot of other methods in your class and some of them maybe will be decorated with operation \ncontract. If method is decorated with operation contract it will turn into endpoint. If it's if you have just a single \nmethod which has no decoration, it means that it will be just a regular method that can be called by other methods, \nbut not by HTTP query, not an endpoint which is registered at our web server. So as you can see, creating of web \nservices in WCF is not so technically complex, especially if you understand how to write C sharp code. So in my \nexample I have two methods.  \n   \n Speaker 1\n \n One of them is very easy get example so this is just an example of a method which will return us okay string and if it, \nif we get it means that our web service is present Normally compiled and fully operational, this method get max \nprice by type id. So I decided to name this method like this will go to the database and search for realty records with \ncorresponding type offer type and also I plan to make it more universal and to call my service from different \nsections. That's why I need to transfer my source table which I plan to use for my calculations. So for Freedom UI \nsection my source table will be USR Realty and for classic UI example I will have USR realty Classic. So different \nsource tables, but very similar columns, similar conditions and filters.  \n  \n  \nSpeaker 1\n \n And that's why I will use the same selection statement to work with different tables inside of my code. At the \nbeginning it makes sense to make a very simple check of our arguments and if any of them is empty then we will \nreturn minus one. So we will do nothing. By the way, we return decimal result and we get three string arguments. So \nwe use only standard data types, which means we will have no problems with serializing and deserializing and we do \nnot need any additional data contract class in case if you have more complicated scenario, of course it makes sense \nto use data contract and so you may pass much more parameters properties and you can easily extend such \nstructures.  \n  \n  \nSpeaker 1\n \n Okay, we have several arguments, we check it out if they are empty or not and then I will show you another approach \nto get data. Previously you probably remember we used entity schema query approach to get data. Let me show you \nbusiness processes and calculate an average realty price. It was couple of days before and we used this code and \nwe used entity schema query class to make data selection and then we processed it with for each statement and we \nused entity data model here because as a result we get collection of entity class instances where we have special \ncolumns with data values and we can get such values from each data row. So this approach with support of data \nmodel worked for us and it respected column names, it respected columns lookups and joins and access rights \nrestrictions and so on.  \n  \n  \nSpeaker 1\n \n Now I will show you another approach to operate with data which will not use data model at all. So this is alternative \napproach to operate with data, but of course we need to know source table name. Here entity name is used as table \nname at the database. Of course we need to know exact column names and also for lookups you need to remember \nthat at database Corresponding columns have id suffix, but @ your object level such columns have no ID suffix. Let \nme explain what I'm talking about. Let's go to objects, find our reality freedom UI object and let's Take a look at type \ncolumn. Now all the columns will be loaded here. USR type this is a lookup column named USR type based on the \nreality type lookup. And we have a dropdown list here.  \n  \n  \nSpeaker 1\n \n And as you can see, no ID suffix at column code. But when you go to the database. Let's go and check our database \nD1 you can make filter for tables contains USR. Now we'll have just a little set of tables USR realty columns. Now you \nwill see the type column as suffix id and you may also notice such suffix ID for offer type, for city, for country and \neven for created by ID and modified by id. So for any lookup column in your object here system creates \ncorresponding GUID column at the database table. But let me show you. You see that at the database table it always \nadds ID to column name. So it's kind of creature architecture. It's not likely that it will be changed in future. So you \nmay rely on it.  \n   \nSpeaker 1\n  \n And you should expect exactly the same data columns of your tables. And in general, when you operate with \ndatabase like this, you must go to the database physically to see corresponding table, corresponding columns, just \nto make sure that all your columns that you work with are present and so they represent what you expect from them. \nOkay, my case I'm using direct database operation with select statement. It's also possible to use insert, update, \ndelete and even stored procedure classes which will operate with the database directly without use of object model. \nAnd the best way how you can study how to use such classes is I think searching for existing examples. Let me \nshow you how you can do this. You need to use some tool that will help you to find out files at file system. You can \nuse Visual Studio code.  \n  \n  \nSpeaker 1\n \n You can use Visual Studio or Total Commander. Or in my case I'm using far manager tool inside of JSoft Web folder, \nmaybe even inside of JSOP configuration. We can use search for all C files where we have for example new select \nclass usage. We will find more than 200 of examples, maybe even 300 examples, almost 300 examples. And there \nare a lot of different so randomly selecting them a lot of different examples. How you can create such class \ninstance, how you can set it up, how you can use it and finally get result data from it. Let's look at another random \nexample, maybe not so perfect. Here you see creating of a select example from where it's possible to use hints. It's \npossible to use different operators like group by like having.  \n  \n  \nSpeaker 1\n \n And sometimes you will notice that use of direct database approach gives you More flexibility and more powerful \ntools than using just entity support and using entity schema clearer method. So depending on your task you can \nchoose proper tool. And this select class works a bit faster because it doesn't include entity data model, it doesn't \ncreate corresponding instances for working with entities, and in general it consumes less memory. And I think it will \nwork a bit faster than entity schema query. So we have a lot of examples of select class usage. I'd like you to see \none of the best examples. I think this one it's I canonic iconic examples. So here you can create class instance. Then \nyou already finish with settings and filters.  \n  \n  \nSpeaker 1\n \n And also it's important to mention you create class instance and then in order to set it up you use different methods \nlike top method, column method, maybe many times from method makes to run it one time where method is equal \nmethod and a lot of others. So finally running such methods will configure your class to read corresponding columns \nfrom corresponding tables. You can use joins, you can use different conditions and types of filters. And finally you \nwill have select class. You also have to turn it back to select type and then you can use it for data selection. Data \nselection must be performed in two steps. First you need to ensure DB connection physically.  \n  \n  \nSpeaker 1\n \n It means get one of the three database connection threads from thread pool from connection pool because \nconnection to database is pooled and you have like set of available threads for it. Then you take it and this is DB \nexecutor reference and then you run your select statement with the chosen DB executor and finally you will get data \nreader. This data reader holds your data and offers you possibility to process it row by row. And you can run its read \nmethod to get next line of data. And you can use get column value method to collect corresponding result values \nfrom your result data collection row. In case if you have many rows you can use while or if statement or something \nelse which will organize your cycle.  \n  \n  \nSpeaker 1\n \n So while read returns you true, you can try to get some data and you can put it somewhere in order to analyze in \nfuture. So this tool is helpful to get data selection with many columns, as many data rows. And also you may notice \nsome strange things here and here. Normally C code correctly operates with data allocates and releases memory \nwith the help of garbage collector. But here as you can see, developers do not trust into garbage collection. The \nreason is when you run ensuredb connection or when you run execute reader, some subordinate functions are \nexecuted which are implemented in visual C and they implemented as a non managed code. Simply speaking \nAttempt to get some data from the database, runs some code that is part of Microsoft SQL Server client software \nwritten in non managed way.  \n  \n  \nSpeaker 1\n \n And that's how that's why you need to handle memory yourself. So when this method was executed, some memory \nwas allocated and in order to properly release it you need to dispose created class instance, you need to dispose the \nSTB executor or you need to use special using operator which will do this dispose automatically when this code \nfinishes its work. So you need to correctly dispose memory from ensuredb connection and also connect dispose \nmemory after executing reader. If you will not follow such recommendations, your code will be compiled and \nworking almost normally, but in high load conditions. Especially in high load conditions when there are many calls of \nthe same logic in short period of time, you will notice so called memory leakage. This leakage will look like \nenormous memory consumption in your system resources.  \n  \n  \nSpeaker 1\n \n So now you see 1 gigabyte, so 900 megabyte it's more or less okay, but you may see much more memory up to all of \nyour available virtual memory and one it will come to a certain limit. IIS will suddenly restart your website and you \nwill not know why this happens. So it will be very unusual for you. And the reason is that non allocated so not \ndisposed memory will be leaked and so you have no way how to fix it until you will make this using operator \nprotection. So you may find a lot of examples where creature developers do exec ensure the connection and \nsupporting it with using operators. This is mandatory. If you do not follow this you will have memory leakage. And \nthis works well for selections of some number of columns and number of rows.  \n  \n  \nSpeaker 1\n \n But in my example you may notice that we don't have using protection, we just use execute scalar method which is a \ngeneric method and it accepts expected data type of our result. And execute scalar is useful in case if you plan to \nread only one data row and you expect to read only one column value there. So execute scalar returns you first row \nand first value of the first column that you select. In my case, running this aggregate function guarantees that I will \nhave just one data row having only one column in my columns selection list is obvious and I will get only one column \nas a result. And that's why execute scalar is perfect for such scenarios. All necessary protection to using to use \nusing for two methods for data selection is already performed inside of execute scour.  \n  \n  \nSpeaker 1\n \n You can try to see it would possible to decode scalar async probably no, but let's see, you see decompiled stuff DB \nexecutor you see using yes so first using is already used here ensure special DB executor then internal execute \nscanner sync probably here failover execute and somewhere so you probably may find another using here in this \ndecompiled code. But you can just trust me that execute scalar performs all code correct operation with memory so \nyou do not need to handle and to care here with additional protection. Finally it returns your expected data type \nvalue. In my case this is decimal and this is our maximum price from some records where type equals certain \nargument and offer type also equals to another certain argument. So this is quite simple data selection procedure \nwhich makes one single SQL query and runs our data selection.  \n  \n  \nSpeaker 1\n \n So my example here is not only how to organize your web service, but it's also how to operate with the database and \nhow to use alternative data selection approach with some data that we expect to get and return. I try to make it \nsimple without need to collect many data records with many data columns inside of it. If you want you can find more \nexamples in these variation sources and make more complex calculations. This example just shows you general \napproach and you can see we have user connection as argument thanks to base service class.  \n  \n  \nSpeaker 1\n \n We get this user connection as a property and this property is ready for use when at the moment when our method \nis called so WCF and our base service class makes all that is necessary to initialize user connection at the moment \nwhen our customer runs this HTTP post method. By the way, we used post because it's very common for creation. \nYou may find that for example we can search for all sources where we have just get method information. We will find \nprobably 50, 15 or 16 places including ours. So 15 base product places where a get method is used like this so you \ncan see not so many. We have 150 plus examples and only 15 base product examples. And when we will search for \nthe post example, you'll find more than 150 examples.  \n  \n  \nSpeaker 1\n \n Because this is very traditional, very typical, difficult to create for creation to use post. It offers us quite comfortable \nway to handle data. You can serialize almost anything as a post request body. So post request data, that's why it is \nso comfortable and also it's well protected. It's better protected with security settings. Again if we compare it with \nget, I will explain and you will see it later. So post is very typical and okay, when we finished we can just save it. All \nthe code samples are available for you so we can save this code. As you remember, configuration must be \nperformed inside of creation so our code is Ready we can just check that column are the same as we expect to get \nit. And let's go back to our app and select our package.  \n  \n  \nSpeaker 1\n \n We can also see our recent reality service item. It has all this code already, so it was loaded from the file system and \nwe can compile it. Compiling package makes collection of all of its sources including automatically generated items \nand like process code. If process includes C sharp tasks and then it performs compilation of our CS proj C sharp \nproject. So this one, this C sharp project will be compiled. We have several compilable stuff here. We have set of \nassemblies used in this project and that's why we can compile it normally without any error messages. And in \ngeneral this compilation was quite fast. But in your case probably you will face some additional difficulties mainly \ncaused by lack of assemblies, lack of some references or just incorrect code which operates with classes which \nwere not mentioned in usings.  \n  \n  \nSpeaker 1\n \n So in my case compilation was successful. And in case if you have compilation error, you will see a big error page \nwith information about lines of code, type of the error and you will be able to look at it. Even after you close this \npage, you will have a special button in this list compilation error. So developers tried their best to support you. And if \nyou have some troubles, you will be able to look at the list of your troubles in order to fix it. So once our web service \nwas successfully compiled, it is already hosted at our application server and we can easily check it out. So we can \ncheck with get example method that our service is present. Let me show you how we can do this. We can use our \nbrowser to run get HTTP queries easily.  \n  \n  \nSpeaker 1\n \n We need to get our browser URL copy go to separate tab paste. So this is my web server address including zero \napplication alias. This zero is very important. Let me remind when we registered our application our website at \ncreation at iis. So I have a structure of default website which uses port number 80. Then I register at my D1 Studio \napp this one. This is part of URL. And then we have zero application alias for main application part which is \nphysically saved in chiras or the web folio. So this zero is very important. You will face it almost everywhere when \nyou combine when you compose your URLs for creation. So this zero is pointing to main application part of creation \nplatform. If you run creation on Linux, you will not see this 0 on Linux.  \n   \n Speaker 1\n \n In net core we have all the stuff placed in one root folder. So it's a bit different, but all creature configuration will work \nabsolutely the same. So we have functions that Return main application URL and for Linux it also returns everything \ncorrectly. So don't worry if you write something and run it on Windows there is a very high chance but it will also \nnormally work on Linux. Okay, so let's move on. We have this main web server part of URL including zero application \nalias. What's next? We have to use special word that is used for automatic registering of all our configuration \nendpoints. So this word is rest. Okay, rest. Then we have some standard how creatio registers all our endpoints and \nit uses class name. Let's go to studio find our class name copy paste so we use 0rest/reality service/method name.  \n  \n  \nSpeaker 1\n \n If you use URI template your method name may be different. I mean your code URI will be different. But in my case \nit's very simple. I will just use this get example method name. I'm lucky to have no arguments here so my query will \nbe not so hard to do. I will copy this URL for you so you can also practice and check it out how it works and let's \nmove on. Let's check also enabling browser developer console going to network tab clearing all the console. So let's \nsee how it works. I press enter now you see that my get example was successful. 200 means successful execution. \nHere is my full request URL I have some request headers, I have some response parameters and here is you see my \nresponse JSON string returned some data. It looks like everything is okay.  \n  \n  \nSpeaker 1\n \n So this is a very easy and quite practical way to check availability of your web service. For example, if you have \ncompilation issue your web service will not be hosted at creation web server and your query like this will return you \n404not found. So it will show you that there is no registered web service with this address. So in my case it looks \ngood and it was get query which is very easy to get from your browser. But our main working query is a post query \nand we have to make a special steps to do this from our creation page let's make a five or seven minutes break. So \njust a quick. I hope to make it quick. I understand some of you have other plans after the finishing of the session.  \n  \n  \nSpeaker 1\n \n So let's make a 7 minutes coffee break and then we will move on with calls of our web service. We will make call of \nweb service from creature page and also I will show you to make how to make it from Freedom UI page, from classic \nUI page and from third party applications. In case if you have questions please type in your chat and we'll answer so \nlet's make a quick break right now. So today, now our task will be to call creature service from our client side page. \nHow we can do this? You already probably guessed that we will have to write some code. Unfortunately we still don't \nhave no code options to call a web service. Like we start a process for example. So possibly we will have something \nlike this in future.  \n  \n  \nSpeaker 1\n \n And now we have to write some code at our creature client side in our browser JavaScript in our browser page \nJavaScript part. So let me show you. I already had all of the examples. It will not take too much time today. So I will \nshow you how we can call the web service from creation client side. Of course we need to go to our page code. Let's \ngo to edit page and then we can open its code. Also I can show you faster way to open source code and save and \nopen it. Or you can go to client module. In my case it's a real T form page. You go to this right part, this actions three \ndot button. And then we have open source code action. I think it's more practical and faster than to do like this.  \n  \n  \nSpeaker 1\n \n But okay, I will recover closed page. This one go to front page. Okay, this one. Let me show you what we need first. \nSo we need first some button that will start our code and then we will implement it. So that's why I recovered this \npage first. Let's go to our actions menu. We already have one item here, so we can create another one. Another \nmenu item. This menu item will include calculate max price and the action could be just some random action that \nwe need temporary here because we will replace it with our own programmed method. Programmed handler. Let's \nuse data, let's use icon. Let's do some. Some we can use some kind of things. Okay, let's take this one. So we will \nuse it for calculations and element code. Okay, let's call it max price menu item and confirm.  \n  \n  \nSpeaker 1\n \n So and then we have to save this. Our menu item will appear in actions menu and then we go to its code part. So \nlet's go to open source code. You can close this editor so not to accidentally resave anything. Let's search for our \nmax price item. And as you can see, this is somewhere like number 116. So here we have our menu item in view \nconfig div area. And we will just remember this line 116 because we need it a bit later. So let's collapse view config \ndiv, your model configuration. Collapse everything. Now we will make one More handler in our code, so please be \ncareful. I put comma and I plan to paste here an example of handler for my calculation Example of a web service call \nwork from Freedom ui. Example run web service in Freedom ui.  \n  \n  \nSpeaker 1\n \n So this code will be quite big. I will copy it into parts for you. But first of all let's pay attention on the definition of our \nmodule. I copied it for you, so you'll be able to reproduce the same in this line where we define our module, we \nstarted to request one more additional module named Creature Dev Kit command. This module is kind of utility set \nof tools which includes a lot of useful things including HTTP service. So we requested this module to be created in \nour dependency modules list. So our require GS framework will first look at this array, find this array item, create its \ninstance, return it as an argument when our factory function will be called. So we can call it SDK as we did it here, so \nwe call it SDK here.  \n  \n  \nSpeaker 1\n \n And if you forget about line number one here, your next code samples will not work because you have no these utility \nmodules. Okay, we have this SDK now and it's time to implement our handler for our menu item. I will copy and paste \nit in parts for you because Zoom has limitations on size of code that is possible. So size of chat messages. Okay, \nthree parts. And then of course I will copy it fully into my handlers area here. Taking care about commas, taking care \nabout syntax. If you do some kind of syntax mistakes like this, you will immediately see this parsing error. So please \nbe careful, avoid such errors and provide correct indentation. Don't forget about any brace here. And now I have to \nexplain how it will work. So this is one more handler in my handlers array.  \n  \n  \nSpeaker 1\n \n And this handler has its own request property. So it's like handler name. And you see, there is a tradition to name \nyour own custom handlers with usr Prefix and base product handlers are usually provided with crt. Okay, we can \nname it as we wish. Then we have a handler implementation asynchronous function. So this function finally makes \nsome useful code for us. And first of all we do some console output just to make sure that our button so our menu \nitem normally worked. Then we have to compose some arguments to call our web service. And the main idea is we \nselect a page which already has type value and offer type. So if we selected for example, apartments for sale, we \nhave this type value and offer type. That's what we need to run our web service.  \n  \n  \nSpeaker 1\n \n So we plan to get type from our page, but when we operate with it, we will get an object in JavaScript. This object \nwill include several properties and if we need ID of selected data record we will look at value property. If you need to \nlook at display text of a lookup value like this apartment, you have to operate with display value property of this \nobject obtained from a lookup column. I also need to make sure that I'm using correct names here. Let's go to view \nmodel config search for type and now we see this attribute name. I will collapse unnecessary parts so you will easily \nsee what we have here. So we need to look here.  \n \n \n  \nSpeaker 1\n \n Type represents this attribute name so I have to copy it, find my handler and paste it this one so PDS usr type and \nthere is a unique name for this attribute. So that's how we will get with await operator we will get our type lookup \nvalue which represents an object and if this object is not empty so it includes something then we will try to get value \nproperty in case if it's empty we will keep it clear so we will not use it. The same with offer type. Let's go and find \noffer type attribute copy paste and we get offer type. If it's not empty we get its value. This is important to get \ncorresponding arguments for type and for offer type that is required for our webshop.  \n  \n  \nSpeaker 1\n \n Now we will use our dev kit library in order to get HTTP client service out of it so we can ask SDK to create one and \nthat's how we get this JavaScript class instance in our code. We have to combine and collect correct viewers URL \nfor our web service. I'm using Terasoft base product client side JavaScript framework. It's a core framework, you \ncannot change it easily and it has some functions to provide web service. Base URL so we have this base URL then \nwe combine path in order to get rest then class name then method name. By the way my method name is called \nwhere is my visual studio here My method main is called get max price by type id I have to fix it.  \n  \n  \nSpeaker 1\n \n I have to fix it in my code here get max price by type id so it was mistake because I renamed this method recently \nand finally my endpoint URL will be combination of the base URL/method name slash this rest like template part \nthen class name then method name. Okay great, my endpoint is ready and here you can see some example of brick \nof my endpoint. I will name it better here something like this. Okay, now we have to prepare parameters and perform \nsending of an HTTP post query we have params. This is a JavaScript object with several properties and it's very \nimportant. Property names must match your web service method parameter names. Reality type ID here must \nmatch this offer type ID here must match this and entity name here matches with this.  \n  \n  \nSpeaker 1\n \n And also I have to fix my code because this one already changed its name so my object is named usr reality. Okay, \nthis is important part and parameters will be passed as a part of our request HTTP request body. So parameters will \nbe encoded into a stream and thanks to this SDK library it will be done by this method post method, not by us. So we \njust wait for getresponse running post method. If you need to run get method you will have a get instead of post \nhere. Endpoint is a URL and params is a JavaScript object with parameters. Now you can see we have an \nasynchronous call here. It actually includes two parts. Sending a request, then waiting for some time and then \ngetting response. So physically it may take some time, like 30 or 50 or hundreds of milliseconds.  \n  \n  \nSpeaker 1\n \n So you should understand that even if it looks like easy thing and line by line execution, physically it is asynchronous \ncall which means we send request, then browser waits, then we get some response. Okay, we got response object \nwhich is a JavaScript object instance. We can look at its properties. This object will have a body property and then \nwe'll have property name the same as our method name + result suffix get max price by type id result so this is our \nmax price response and when we finish we just continue normal execution of potential other handlers with this \ntypical return. So I had to make fixes in my video and such fixes were not down in the code in our chat. So please \ntake care and modify this code accordingly to the video.  \n  \n  \nSpeaker 1\n \n If you plan to perform your own examples of the same then we have to save this carefully because if you have \nmistakes of course you will see it doesn't work. And also let's remember about our your request name and return \nback to line number 115 or something like this. Let's go. Here we have our menu item, our action item and we have \nclicked event with the request name. Originally we set it to some random save request, but of course we will replace \nit with our own code. So I will highlight it in our chat. So don't forget about this. We need to organize running of our \nhandler by manual changes in our diff view config diff array. This is responsible part, so please be careful. Please \ndon't accidentally Remove any breakage, any comma or something like this. So please be careful.  \n  \n  \nSpeaker 1\n \n And then we can save it. Great. Everything saved correctly. We can close this editor. Probably can just close and \nopen the page. So now we have apartment for sale. That will be argument and let's try to find our action calculating \nmax price. Go to network and clear all previous history. So now let's check how it will work for us. It looks like status \n200 means it was collected correctly. Web service runs and returns our maximum price for apartments for sale. \nOkay, let's see network tab details. This is our request properties. This is full URL was created correctly. We have \nsome request headers, response headers. Our request payload physically was a string, but we can parse it into look \nat it a bit more comfortably. So here we have all the parameters that were sent as arguments.  \n  \n  \nSpeaker 1\n \n Then we have response with some number correctly calculated by our server side and returned and some timing \ninformation. Now you see it's quite fast execution. So it took only 31 milliseconds to run. It's very good speed. Okay, \nlet's look at another example. We have a lot of apartments for maybe houses for sale. Let's search for random house \nand calculate max price. Now you see it's calculated correctly. We return the data. This is our max price returned by \nour system. And let's check out what was the paywall, what is the response? So here we have our response date. We \ncan check it out if we go to our main list and sort by price. Yes, it looks like 99999 millions. Yes, it's okay. This is our \nmax price according to current data. So it looks like correct calculation.  \n  \n  \nSpeaker 1\n \n So our Freedom UI page calculation worked well. In case if you have any questions, please ask. I'll be happy to \nanswer. Now I want you to see the same call how it can be done in Classic ui. Some of you probably will do some \nClassic UI customizations. So you may need to know how to do some simple programming steps. In classic \nprogramming page, let's go to our edit page in Classic ui. But it turns because of our migration into Freedom UI page. \nSo okay, we can try to temporary switch all our user interface into Classic ui. So use Freedom UI interface. Open it, \nturn off, save, close, log out, log in. Now we see background in Classic UI we go to classic section. We open edit \npage and it's also classic. Great.  \n  \n  \nSpeaker 1\n \n So now I will show you how to program some buttons in Classic ui. Go to view and open section wizard. So this is an \nalternative of what you get used to work with edit page in Freedom ui. So open Section wizard from this edit page \nwill open as an editor for a button. Unfortunately you can't easily add a button using this page. So in Classic UI we \nhave a lot of limitations according to controls used on the page and we will have to use code part for it. Okay, we can \ngo to code part. Here we have Classic UI code. We need to look at default array and add one more button there. \nAdrian, question possibility of web service returns Is it possible to call a third party app that returns base 64 and how \nto handle? Yes.  \n  \n  \nSpeaker 1\n \n So in case if you want to call third party application from Creature. So Creature will initialize this call and do it. It's \neven possible to make it no code solution for this. We will study it a bit later. Probably tomorrow I will show you how \nto make integration with third party apps and how to call third party web services. This is a bit separate from our \ntoday topic because today we create our own web services and call it from client side. Third party web services is \nbetter to call from creature server side. So you will see it's quite comfortable. Okay, I'm trying to make a button in my \nClassic ui. So here you see diff array which represents set of items and each item looks like definition of one control \non the page. In my case I have name price area. Price area.  \n  \n  \nSpeaker 1\n \n You see this is area and somewhere here just nearby I plan to put some code for a button I need to steal some \nbutton definition from Academy. So so I will show you how you can find it. Go to guides. By the way, our training \nladies will write next. So current 813 release highlights with a video that will be released in a week. So you will see \nsome news and it will be so probably interesting for those who keep an eye on evolution of Creature tools \ncapabilities. So now we go to development front. Oh no. Platform customization Classic UI page button examples \nSo I will find some simple button to the page and I need to copy piece of code which represents button properties \nbecause it's really hard to remember them. So I just copy this part paste it into my code.  \n  \n  \nSpeaker 1\n \n Of course I will have to fix it. I will have to make it look correct. So comma is missing here. Here's my button \ndefinition and I. Oh, I have to exclude unnecessary stuff here. And yeah it looks like I have a lot of extra things \ncopied. So this one is proper piece of code that I need to copy insert current name. So I will do it quite fast because \nprobably you should not focus so Much on quisecure this will be just an example. So my parent name will be the \nsame as for nearby fields because I want to put it nearby to area and values will include location and size settings in \nlayout and here layout means position and size columns. So this is 012 column two for area. Here you see row two.  \n  \n  \nSpeaker 1\n \n Then I will have row three because I want to put it a bit below Parent name is the same button. We can call it Run \nweb service button. It will be our button name button title button caption should be localizable string. This editor \ndoes not allow me to do this. Okay, red color always enabled so I will do it always enable it. I will have to rename this \non run web service button click I will have to make a method for it and the localizable strings should be managed in \nits editor. Okay, so I will do it a bit later. This is our button. It will have a red color. It will have some caption item type \nname. Okay, I hope I have no. Now you will see this button representation here. Go back to section wizard and save.  \n  \n  \nSpeaker 1\n \n Probably it was not the best idea because I need to implement method for the button. I also need to make my in my \nclassic package. I also need to make localizable string for the page. So let's make localizable string. I called my \nbutton action could be run service okay and try to save. Do we have any troubles with localizable strings? In previous \nversions we had okay, my button caption is okay, go to div in order to search for my new button here. I expect it to be \npresent somewhere here and caption should be like this My button caption okay, great Method or click Run service \nbutton click. We have to implement in methods collection so usually you do it like this function and then we have \nsome function body. Now I plan to get examples of running web service in client side.  \n  \n  \nSpeaker 1\n \n So here is my own run web service button click. Okay, and also I need to have a callback function here. So we have \ntwo methods and that will fix it. Okay, so when I need to do this is my method name. I use it for a button and method \nis in classic UI it's easier way to call some functionality because it just implements some function in your JavaScript \nobject. We will get type column and get its value. If it's not empty, we'll get offer type and get its value. We'll \ncompose parameters. Let's check our entity name. It's called reality Classic. Yes, looks good. And we can run our \nweb service run our method name let's check this method name. Get Max Price by type ID. Okay, great.  \n  \n  \nSpeaker 1\n \n And we need to provide callback method to accept our result because in Classic UI we don't have so fancy stuff like \nawait. And so it's because of the tools used here. So your JavaScript of course will run Await normally. But the tool \nthat we use to call service expects to get this callback function and parameters should be executed. By the way, this \ntool is called Service Helper and we must ask for this module Service Helper and get its reference here. So this is \nalso an important part in Classic ui. This is my set of methods for you in Classic ui. And this is a divide or a button. \nOh, probably I should care about index, but okay, so it was already saved Item type originally was button but when \nSection wizard saved it replaced with just a number.  \n  \n  \nSpeaker 1\n \n So it's a value of that enumeration item that we found in our article. So item type. This one turned to be a constant, \nwhich means five by the way, you can also study your client side framework. So you can just do terasoft. Then you \nsee a lot of properties like item. Let's see how it looks like View item type. Sorry View item type. Then you see a list \nof approximately 30 different options here. So it means items available for Classic UI pages. In my case I used \nbutton. So looks like everything is ready. And this is how we use special utility module. It helps us with calling of web \nservices. We have two steps, call service which means send request and provide response callback function. And \nwhen response will come, this callback function will be called.  \n  \n  \nSpeaker 1\n \n That's how we will do some console output and show us returned data. Okay, finally we can save it. In Classic UI we \nhave to constantly think of browser cache. So we have to reload the page in order to fight with cache. Now we have \nhouses for sale. Okay, let's make a copy cheaper one. So we have two houses for sale in our database in Classic ui. \nLet's open. Now you see a button. Okay. Okay, let's check how it works. And the web service is the same, but we have \ndifferent tables to calculate. So let's try. Our call was successful. You see maximum price was calculated. And also \nyou can see history. You see request URL 200 it was a post query. We have payload. This is our request body. And \nwe have response. And also it's timing. Timing is quite fast. 21 milliseconds.  \n  \n  \nSpeaker 1\n \n So perfect time. Very good speed. Okay, great. We're almost done. And now we already practiced with Sending of \nqueries from client side. But you may notice so we only worked with Creature client side. It's also possible to call \nsame queries from third party apps. Let's go back to Freedom ui. We have better data there. System settings, put it \non your interface, enable it, save, log out, log in. So I plan to show you how we can use third party app to perform \nsuch web service calls. As example, I will use Postman app. I already installed Postman app on my own and maybe \nyou'll be interested also in some alternatives. Postman is a very helpful and useful and very like handy software. I \nhave a collection of different tools which also work for the same purpose.  \n  \n  \nSpeaker 1\n \n Postman is on first position but we have Thunder client. You may use Advanced Rest client, Rest, Wet Insomnia and \na lot of other names. The recent one was Mako Kuhn and Talent API Tester. Or you can use hard code old tools like \nFiddler Swap UI or Wireshark. So it's up to you what to use. Postman is one of the best from them. And no, no, don't \nupgrade now. So I need to show you. Let's close all existing. Don't say close all tabs. Okay. Don't save. Okay. Here is \nPostman app which is designed to test. To test queries, to test web service requests. We can try to run it so we can \ncreate new post query and we can take all the parameters we need it. For example, let's make calculation of the \nmost expensive apartment for sale. So we go there network.  \n  \n  \nSpeaker 1\n \n Try to run this button here. We can steal all necessary parameters. So this is our request URL. Okay, copy it, go to \nPostman, paste it here carefully. So this is our request URL. Great. This is a post query. Great. Body should be row \nJSON. Okay. And we will provide request body value, payload, view source so we can copy all of this and paste it into \nour Postman beautify a bit just to make it good looking view of what we're trying to do. And then we have originally \nno cookies and let's try to run this query. We will see what happens. Obviously creation server side will reject such \nexecutions because it means that we are trying to run some business functionality without any credentials. So trying \nto run it anonymously of course. Course rejected and unauthorized error 401.  \n  \n  \nSpeaker 1\n \n Now you need to know that if you want to call Creature Services from third party apps, you have to pass \nauthentication. Creature has different ways of authentication. Now let's go to our documentation about integration \ntopics. We have authentication articles, basics and overview. So we have different authentication types. The most \npractical are forms authentication based on cookies or OAuth version 2 authentication based on application name \nor client name and client secret. I will show you forms authentication because it's out of the box and it doesn't \nrequire any other secret special settings. Any other preparation for my system? If interested how to make OAuth \nversion 2 authentication, you can read corresponding articles. So here you will see all necessary data and I will show \nyou forms authentication forms. Authentication is based on running a special web service. Let me show you \nexamples and this one.  \n  \n  \nSpeaker 1\n \n No, no, no. I need to reference for our service. So we need to run special web service providing request body with our \nname and password. As a result, we will have set of authentication cookies. And such cookies will include necessary \ndata that will work like a temporary ticket. So for us to operate with creature. So in order to run this business logic \nquery, we must provide special cookies. Originally we don't have such cookies and we will get it with the help of \nauthentication query. So let me show you how we get how we make authentication query. This should be a post \nquery. According to the article, we must use our web server address, service model or service login. Okay, Copy this \npart here and then take our address without 0als because we work with root folder.  \n  \n  \nSpeaker 1\n \n So what we have here, this is our web server address. This is our root folder pass to our web service. Let me show \nyou this. My is my web server folder service model O service. You see some definition of this web service class and \nsome technical information from it. So this is in root part of our application. We have to provide body row JSON and \nwe have to make this body with two properties. Okay, we can copy it from here. Username should be our name. We \nwant to use and password like this. Okay. No special headers. Only body is required here. So let's try to run it. First of \nall, I would try to run with incorrect password. You will See error message. SO200 here, but error message code 1 \ninvalid username or password. Okay.  \n  \n  \nSpeaker 1\n \n And obviously we will not get full set of cookies. So we are getting only just one temporary cookie, which is not \nenough, of course. Okay, let's provide correct value. Now you see 200, which is okay. No error messages in response. \nAnd four cookies obtained. Only four? It's strange. I expected five cookies here. Let me think. What is missing? Oh, it \nwas missing USR name. Okay. It's not. Not so. Not so difficult. Okay, we have four cookies. Normally it's five cookies, \nbut probably something changed. The most important are BPM CSRF and aspx auth. Okay, so we have some set of \ncookies which will be working as a temporary tickets. Such cookies will work not forever, it will work just within our \nuser session inside of having such cookies we can run query using postman.  \n  \n  \nSpeaker 1\n \n In this query we already have set of cookies thanks to postman sharing cookies with the same sites. And then we \ncan run our query. And it looks like we have one more error 403. But this time this error is not because of \nauthentication. This is because of additional protection from CSRF attacks. If you have time you can find what is \nCSRF attack? It's a cross site request forgery special type of attack where a hacker may use current user session \ncredentials and ask a user to run specific code which will turn into some change that was intended by hacker. So use \nof current user session in order to do some malicious functions across site request forgery. So we have special \nprotection for it for this type of attacks.  \n  \n  \nSpeaker 1\n \n And in order to run post queries you have to make a header in post query named BPM CSRF and the value for this \nheader must match the same cookie BPM csrf. So I take cookie value carefully put it to value of our BPM CSRF \nheader and in this case my calculation is correct. Response is 200 and I have some response data. So now I \nsuccessfully called creation method from third party app from my Postman application. That's how you can do this. \nAnd also you probably will be interested to know that this session initialized by Postman is not forever and it has \nsliding expiration. We have default timeout for user sessions. Let me show you. It's about some session data \ninformation. So we almost finished for today. And let's go to system settings, I can show you Timeout user session \ntimeout.  \n  \n  \nSpeaker 1\n \n And you see original value was 60, which means 60 minutes 1 hour. I've already changed this timeout to 600 which \nmeans 10 hours. The maximum value here is 720 which means 12 hours and minimum value is 10, which means 10 \nminutes. So this is user session timeout. If you run any query within this timeout, then your session will be extended. \nSo creature has sliding expiration of such cookies. And simply speaking, if you run queries too often, so often \nenough like every 10 minutes or every 20 minutes, you will have everlasting session. So your session will never die in \npractice. In real practice, such sessions will be finished if you do nothing for some time.  \n  \n  \nSpeaker 1\n \n So in case if you plan to do some integration, of course first you will do authentication, then you Will do some \nintegration steps and also you can check how it goes and you can check current user sessions. If you go to system \nusers, find your user, go to access rules detail, then sort by start of the session. Now you see two different sessions \ninitialized by our supervisor user. And one is browser based by our Chrome, another is made by Postman. Both \nsessions are active. Now you can close such sessions if you want. That's how you can track history of your users. \nAnd in general you can see this history also in database if you will do something like this sys user session.  \n  \n  \nSpeaker 1\n \n So if you do something like this in your database, you will see all user sessions created initialized by any user in your \nsystem. And you will see session end date, session start date. You can calculate how long your users were working, \nwho worked and who did not work in your system. So this may be really helpful for you. And you see we have \ndifferent session end methods. Session end means the way how system finished to your session. And we have like \nlog out scenario, we have timeout scenario. And you see different stories here, different history. Okay, at the end of \ntoday's session, I wanted to mention that it's also possible to make your own web services which will not require \nauthentication at all. Such web services are called anonymous services, but you should be very careful \nimplementing them.  \n  \n  \nSpeaker 1\n \n Because anonymous web service is simply a back door or kind of place which could be utilized by anyone without \nany credentials. So potentially making it possible to do some kind of DDoS attack on your website. So generally it's \nnot safe. You can read more data about anonymous web services at our documentation. So let me find it in backend \nweb services examples Anonymous subservice so anonymous web service is similar to traditional one, but it has \none difference in the code. You will have no user connection, but thanks to inheriting from base service you will have \napp connection. And also it's possible to get system user connection from it. So anyway, application has its own \nembedded system user session which is created actually by user who is specified into special system settings and \nthe system operations. User System operations user system setting.  \n   \nSpeaker 1\n  \n By default it's supervisor, but you can change and this user will be used for this Background Started and created user \nsession used only for system purpose and running anonymous services is also based on this approach. So if \ninterested in running anonymous web services, here is the article. And the difference is that you have to check out \ndo you have user connection or not? If not, you can take app connection system user connection instead and then \nyou can do all the same operations as you planned.  \n  \n  \nSpeaker 1\n \n But in order to implement anonymous web service, you have to perform a lot of changes in file system, which is not \na problem if you deploy your anonymous service at on site environment, where you have access to file system, but \nwhich will be a trouble if you deploy it in cloud conditions, because you simply cannot modify such files in cloud. You \nonly can provide manual for support team and ask them, hey guys, please, I need to deploy anonymous web service \nat cloud environment. Could you help me and provide them all the necessary manuals for your web service to be \ndeployed at cloud conditions. And as you can see, a lot of steps here. So it requires manual for support team, what \nexactly you plan to save, what file to modify.  \n  \n  \nSpeaker 1\n \n And you may know that we have already a lot of base product anonymous services. You can find it inner web config \nfile. Let me show you Inner it means inside of terrasoftware web config search for allowed locations. And you'll be \nsurprised how many anonymous web services we already have on board. More than 30 items that could be called \nwithout authentication. So you see, when you run anonymous web service, you should not provide any \nauthentication cookies and it will work for you even without any authentication. But potentially this makes a threat \nfor you, because anyone can run such queries and anyone can use such endpoints to make some kind of DOS \nattacks denial of service, running it too often. So please be careful with making your own anonymous services.  \n  \n  \nSpeaker 1\n \n And I will just show you a quick example of a web service which may work anonymously. The biggest difference is \nthis. If you have user connection, you can just get it. If not, you can get it from app connection, system, user \nconnection. That's how you use this user connection obtained with this code and can just copy it for you. So if you \never need it, you'll know what to do. And then you work with the same query, but using user connection obtained with \nthis example. Okay, that's all for today. Thank you very much for your time. We already finished the questions with \nmaking our own web services, running it anonymously, making postman queries. And tomorrow we will continue \nwith data exchange tools with integrations with coding of third party web services. So thank you for your time today.  \n  \n  \nSpeaker 1\n \n Dimitri, I have one question, if that's possible. Yes, yes, please. It is a bit off topic, but we have an opportunity where \nwe can also leverage the business to business portal users. And we would actually like to apply row level security. Is \nthat possible? No, sure. We already have cloud powerful security tools in creation. We just did not cover it because \nit's something that is described and discussed at Customization course. So we have roles, we have users. And you \ncan see list of users here you can create your own users, you can provide different role permissions. So everything is \njust out of the box here. We do not need to program specially things for it. Is it what you asked before or something? \nAnd also not if they are not allowed to see each other's data or is it still?  \n  \n  \nSpeaker 1\n \n It's possible, but I would not recommend you to make such strict restrictions because your end users usually work \nas a team. And if one created a customer, someone else may need to look at it. But in general it's possible if you plan \nto implement couple of competitive teams or competitive users, so they should not see data from each other. It's \npossible to implement with the help of default record level permissions. You can find it here and object permissions. \nThen you can select corresponding entity like real T. You can enable record level permissions. And it's possible to \nmake situation when first user creates some record. And obviously first user can see this record, but other users will \nnot be able to see this record. If necessary, you can do this only in case if users have single user privilege, \nadministrators will see data anyway.  \n  \n  \nSpeaker 1\n \n So they will see all the data. Okay, that's clear. Let's try that. Thank you. Yes. And also Adrian was asking about \nbusiness processes and call web service and to put our web service inside. Oh, in case if you run call web service. \nSo it was designed to run third party web services. Let me show you. We had our own examples. And when you use \ncall web service item, it is designed to run third party web services. We will study how to do this tomorrow. If you \nneed to run your own service, you can write some code at client side. Or technically you can use code web service \nfor your own web service. But in case, in this case you have to take care about all necessary things like \nauthentication, passing cookies, passing parameters.  \n  \n  \nSpeaker 1\n \n And in my practice we had successful examples where two different creation systems were communicating with \neach other using no code call web service tool. So it's possible. And what's the difference between implementing a \nbutton handler and launching web service from business process? There is a big difference. Because core web \nservice is designed to run third party systems, third party endpoints, you can use it for your own, but you will have to \nprovide too many technical parameters so the same number of settings that you will do it from client side. Also I \nneed to mention, which is not obvious, that when we run our web service methods for creature web service from \nclient side, we did not care about authentication. The reason Was we already have all necessary cookies in our \nbrowser in client side. Let me show you.  \n  \n  \nSpeaker 1\n \n So let's look at our call again. Now you see this query, but if you look at headers part you will see that we have \ncookies. So this is our cookies parameter and such cookies were provided by our browser because we are running \nour creation page in a browser that was authenticated to work with this website. Browser supports all queries made \nfrom client side with cookies. And that's why our queries were executed without any error messages related to \nsecurity. So we had cookies in our client side when we call any query. So for example, when you do some simple \nstep like reward data, you see select query was performed. You see also cookie was passed from browser side and \nthat's why we have no any issues with running the same query from the same page.  \n  \n  \nSpeaker 1\n \n If we will steal all this data and try to make it from another browser without cookies, of course it will fail. And it was \nshown by postman, we will have 401. So Adrian, is it clear what we're talking? Okay Adrian, thank you very much. \nThanks all of you for today. Attention. We will see each other tomorrow. Tomorrow we will talk about integrations. I \nwill show you examples of onboard protocols supported by Creation, odata and data service. You will see how you \ncan use it for integration with third party apps. And also we will practice with scope of web service and we will do \nsome calls to third party apps without programming using no code tools.  \n  \n  \nSpeaker 1\n \n At the end of tomorrow session I'm going to show you Clio tool, explain why you need it, how you can do some \nsystem maintenance with it and how you can organize delivery with help of Clio. So thank you for your time today \nand see you tomorrow. Please prepare questions because we will have Thursday and Friday sessions. You have \nchance to ask your questions related to development organizing or architecture of Croatia. I'll be happy to answer. \nSo tomorrow we will work with integration tools and on Friday we will prepare for the developer action. Thank you \nvery much for your time. See you tomorrow.  \n \n  \n  \nSpeaker 1\n \n Today is session number four of our development on Creature Platform Guided learning set of practical sessions \nthat we do for developing different features and functionality that requires some programming on Creature Platform \nand previously we finished with building our own section named Realty and we managed to set up List View, we \nmanaged to make a form page for it, we also added some default values and we.  \n  \n \n  \nSpeaker 2\n \n Made some required fields and it was.  \n  \n  \nSpeaker 1\n \n Pretty much easy and we used only.  \n  \n \n  \nSpeaker 2\n \n No code customization tools for this.  \n  \n  \nSpeaker 1\n \n Also we managed to make a button which had a custom handler.  \n  \n \n  \nSpeaker 2\n \n So we made a button push me button and this custom handler shows some console output. We can also display \nsome pop up.  \n  \n  \nSpeaker 1\n \n Messages and also we can do any kind of JavaScript code behind this button. Today I will show you a bit.  \n  \n \n  \nSpeaker 2\n \n More complicated examples of how you can.  \n   \n Speaker 1\n \n Do some programming and coding and also we will discuss debugging. So you will see how it's possible to stop \nexecution of your code and.  \n  \n \n  \nSpeaker 2\n \n Make it executed line by line.  \n  \n  \nSpeaker 1\n \n By line and to see all the.  \n  \n \n  \nSpeaker 2\n \n Variables and to see all the conditions.  \n  \n  \nSpeaker 1\n \n So so to make something that you probably get used to do when you operate with any like modern version, modern.  \n  \n \n  \nSpeaker 2\n \n Development environment like Visual Studio or other so today question today's session I would.  \n  \n  \nSpeaker 1\n \n Like to warm up with Simple Question.  \n  \n \n  \nSpeaker 2\n \n Which is about organizing of your sections. It's probably not so obvious so I.  \n  \n  \nSpeaker 1\n \n Will tell you all apps it's like Synthetic Workplace which includes all registered sections in one list.  \n \n \n \n  \nSpeaker 2\n \n We have Studio out of the box.  \n  \n  \nSpeaker 1\n \n Workplace, we have customer360 because it's a result of loaded contacts and accounts.  \n  \n \n  \nSpeaker 2\n \n So our loaded customer360 app also caused creation of new Workplace. Such workplaces also can be created, you \ncan manage them and you can put your sections into it. You can also create data items for workplaces if you want to \ntransport them between environments.  \n  \n  \nSpeaker 1\n \n I would like to show you something.  \n  \n \n  \nSpeaker 2\n \n That I think will be useful. It's about organizing of Workplace for your users and for my developer purpose it will be \nquite often when we will.  \n  \n  \nSpeaker 1\n \n Need to switch between our created section.  \n  \n \n  \nSpeaker 2\n \n And some system sections like Process library, process logs or lookups and system settings.  \n  \n  \nSpeaker 1\n \n So I plan simply to put my new Created Reality section into this Studio Workplace. That will be very easy, but I need \nto demonstrate it. To show how you can do this, go to Settings.  \n   \nSpeaker 2\n \n  \n Then find Workplace Setup. Workplace Setup helps us to create new workplace or to manage existing workplaces. \nAs you can see, some workplaces are.  \n  \n  \nSpeaker 1\n \n Present but not shown even if we are administrators.  \n  \n \n  \nSpeaker 2\n \n So that it's very interesting because it's one of not so many places where.  \n  \n  \nSpeaker 1\n \n User permissions Are still matter when we run system under administrator privilege.  \n  \n \n  \nSpeaker 2\n \n So now you can see I see only four workplaces.  \n  \n  \nSpeaker 1\n \n But in total it looks like we.  \n  \n \n  \nSpeaker 2\n \n Have at least 5. And productivity workplace seems to not showing anything and not having any permission settings.  \n  \n  \nSpeaker 1\n \n So that's probably why we are not seeing it. Okay, let's go to studio workplace.  \n  \n \n  \nSpeaker 2\n \n We have set of sections for a workplace. Also it will be interesting for you to know that sections have positions.  \n  \n  \nSpeaker 1\n \n Let me show you columns set up for sections list. We can arrange and add the position column.  \n  \n \n  \nSpeaker 2\n \n Now you will understand why I display this position. Any section in a workplace has its position and position \norganizes order. So it is used to specify order of sections in a workplace.  \n  \n  \nSpeaker 1\n \n If we rearrange such items such sections.  \n  \n \n  \nSpeaker 2\n \n Position will be changed. And finally your sections will be displayed in a different order.  \n  \n  \nSpeaker 1\n \n Sometimes this order is not so consistent.  \n  \n \n  \nSpeaker 2\n \n You see UI management and message templates, they have the same position.  \n  \n  \nSpeaker 1\n \n And sometimes UI management will be on top.  \n  \n \n  \nSpeaker 2\n \n Sometimes message templates will be on top.  \n  \n  \nSpeaker 1\n \n Depending on how data will be loaded at a certain time. Because sorting by this position it makes some ambitious \nresult. Okay, so what I plan to do.  \n  \n \n  \nSpeaker 2\n \n I plan to add one more section in the list system will show me only sections that are not listed here. And it's \ninteresting to see here that we have couple of accounts section.  \n  \n  \nSpeaker 1\n \n It's very unusual.  \n  \n \n  \nSpeaker 2\n \n Couple of calls and couple of contacts. One of the possible explanation why we.  \n  \n  \nSpeaker 1\n \n Have two different account section is that.  \n  \n \n  \nSpeaker 2\n \n One of them is section for Classic.  \n  \n  \nSpeaker 1\n \n Ui, another is Freedom UI section. We can also display columns here which.  \n  \n \n  \nSpeaker 2\n \n Will let you understand what we are looking at.  \n  \n  \nSpeaker 1\n \n So we can just squeeze a bit title display e.g.  \n   \nSpeaker 2\n \n  \n Created on column save column settings.  \n  \n  \nSpeaker 1\n \n Now when we try to add you.  \n  \n \n  \nSpeaker 2\n \n Will see title, you will see created on and one of them is 19, another is 24.  \n  \n  \nSpeaker 1\n \n And it looks like first one is classic UI, second one which is younger.  \n  \n \n  \nSpeaker 2\n \n This is freedom UI.  \n  \n  \nSpeaker 1\n \n So that's how you can detect which one is necessary for you to add.  \n  \n \n  \nSpeaker 2\n \n In my case, I plan to find realty section created recently and we can see it at the end of this list. You see, its position \nis also not so consistent.  \n  \n  \nSpeaker 1\n \n But it guarantees that it will be at the end.  \n  \n \n  \nSpeaker 2\n \n But it's not so comfortable to see this item at the very end of this list. So possibly we would like to move it upper.  \n   \n Speaker 1\n \n So let's go to do this.  \n  \n \n  \nSpeaker 2\n \n You can move it even on the first top position. Unfortunately we cannot move it upper than home. And if you don't \nreally like, we can suppress this home page for a workplace. You can see homepage you can clear.  \n  \n  \nSpeaker 1\n \n It if you want and realty will be position zero. So when we save it we can.  \n  \n \n  \nSpeaker 2\n \n Also reward this page.  \n  \n  \nSpeaker 1\n \n Probably we will see our reality section.  \n  \n \n  \nSpeaker 2\n \n Directly at Studio Workplace at zero position. But it's also important to say that other items were changed so they \nchanged.  \n  \n  \nSpeaker 1\n \n Their position because reality shifted them.  \n  \n \n  \nSpeaker 2\n \n So if we want to transport such change, we must make a corresponding data item.  \n  \n  \nSpeaker 1\n \n Or we can use help of data binding tool.  \n  \n \n  \nSpeaker 2\n \n This data binding tool helps us to.  \n  \n  \nSpeaker 1\n \n Remember positions of O sections here and we can just click Bind Workplace, specify.  \n  \n \n  \nSpeaker 2\n \n Target package and click save. Then we can see what was created. It was three different data items. One of them is \nsysworkplace studio. It doesn't really necessary because this workplace is already present at our system.  \n  \n  \nSpeaker 1\n \n And when we for example try to.  \n  \n \n  \nSpeaker 2\n \n Actualize data and save it, we will.  \n  \n  \nSpeaker 1\n \n See warning and this warning will tell us that such Studio Workplace was already.  \n  \n \n  \nSpeaker 2\n \n Registered somewhere in parent package.  \n  \n  \nSpeaker 1\n \n And even more it was registered one more time in another parent package.  \n  \n  \nSpeaker 2\n \n \n But it's not a big mistake. So it's not a mistake at all. This is warning that tells us that.  \n  \n  \nSpeaker 1\n \n Such data is already present somewhere in parent packages data items. So maybe we are doing it. So something \nthat is unnecessary, but let it be. You can save it this warning, but.  \n  \n \n  \nSpeaker 2\n \n It'S not a mistake. Another one is sys module in Workplace. This is a system table which keeps information about \nsection which is called module and workplace.  \n  \n  \nSpeaker 1\n \n So you can see data and you can see all the sections in Workplace.  \n  \n \n  \nSpeaker 2\n \n Studio were listed here. And also it's important to mention that forced update option must be applied for.  \n  \n  \nSpeaker 1\n \n Position column because otherwise update or position.  \n  \n \n  \nSpeaker 2\n \n Will be not performed.  \n  \n  \nSpeaker 1\n \n You probably remember from our Tuesday session that when you create data items, it's.  \n  \n \n  \nSpeaker 3\n \n Possible that you will make data item that will perform update, not an insert.  \n   \n Speaker 1\n \n In case of update in case of.  \n  \n \n  \nSpeaker 3\n \n Target record was found.  \n  \n  \nSpeaker 1\n \n By the way, I prefer to make it not by this key.  \n  \n \n  \nSpeaker 2\n \n I prefer to make it by this.  \n  \n  \nSpeaker 1\n \n Key and found by id.  \n  \n \n  \nSpeaker 3\n \n So if record was found by ID.  \n  \n  \nSpeaker 1\n \n And then it will update target database.  \n  \n \n  \nSpeaker 3\n \n According to loaded data and in our case only position will be updated. Okay, we can save it.  \n  \n \n  \nSpeaker 2\n \n Now you can see that save was.  \n  \n  \nSpeaker 1\n \n Successful, but we have a lot of warnings related to parent data that was already registered in base product. And \nthis is valid set of warnings because our change caused the change of position of all previously registered sections \nin Studio Workplace. So simply all of the registered sections had different position because we moved our reality to \nthe top and we.  \n  \n \n  \nSpeaker 2\n \n Had a warning that tells us that you're trying to Change the data which was originally declared somewhere else.  \n  \n  \nSpeaker 1\n \n So maybe you're doing it wrong.  \n  \n \n  \nSpeaker 2\n \n So please take care. Here is your warning.  \n  \n  \nSpeaker 1\n \n But this warning is still so we can ignore this. And last one is admin unit in workplace.  \n  \n \n  \nSpeaker 2\n \n This is about access permissions. System administrators have full access to Studio.  \n  \n  \nSpeaker 1\n \n Workplace and probably this data is also.  \n  \n \n  \nSpeaker 2\n \n Present in our database.  \n   \nSpeaker 1\n  \n Yes, so maybe not so necessary to save it.  \n  \n \n  \nSpeaker 2\n \n So it's warning, not an error in case if you have an error. For example, you save the same data twice in the same \npackage.  \n  \n  \nSpeaker 1\n \n In this case, save button will show you error message and save button will not disappear. If save button was \ndisappeared, means your.  \n  \n \n  \nSpeaker 2\n \n Data item was normally saved.  \n  \n  \nSpeaker 1\n \n If save button did not disappear, it means an error. It's like serious mistake and the system.  \n  \n \n  \nSpeaker 2\n \n Will not allow you to save such data. It happens only when you save the.  \n  \n  \nSpeaker 1\n \n Same data twice in the same package. Okay, so it was set of client modules of sorry, set of data items.  \n  \n \n  \nSpeaker 2\n \n Automatically created by help of data binding tool.  \n  \n  \nSpeaker 1\n \n When we registered our reality section in a studio workplace, now we have comfort. Here is our new created section. \nHere is set of processes we will manage very soon.  \n \n \n \n  \nSpeaker 2\n \n Here we have lookups which we also often look at.  \n  \n  \nSpeaker 1\n \n And we'll use it and some other.  \n  \n \n  \nSpeaker 2\n \n System sections that we may need.  \n  \n  \nSpeaker 1\n \n So we now have very comfortable conditions and easy transitions between different sections. So it was just a \nsimple example how you can organize your workplaces in.  \n  \n \n  \nSpeaker 2\n \n More complicated based products like sales, service and marketing.  \n  \n  \nSpeaker 1\n \n You will see more workplaces, more sections inside.  \n  \n \n  \nSpeaker 2\n \n And you also can create your own workplace with sections that you think will be necessary to use for your end.  \n  \n  \nSpeaker 1\n \n Users with particular roles.  \n  \n  \nSpeaker 2\n \n \n And you can provide permissions for such.  \n  \n  \nSpeaker 1\n \n Sections and for such workplaces.  \n  \n \n  \nSpeaker 2\n \n And what is important for you to understand that you can create many different.  \n  \n  \nSpeaker 1\n \n Workplaces and include the same section many times. So if you added some section to some workplace, it doesn't \nmean that you can't do it with another workplace. So one context section can be added.  \n  \n \n  \nSpeaker 2\n \n In different places with no limitations.  \n  \n  \nSpeaker 1\n \n In my case, I have my applications.  \n  \n \n  \nSpeaker 2\n \n Workplace with real T section and I also have.  \n  \n  \nSpeaker 1\n \n Just a second. So what I wanted to show you.  \n  \n \n  \nSpeaker 2\n \n We can use the same section in.  \n   \nSpeaker 1\n  \n Different workplaces and it's not a problem if we specify the same section in.  \n  \n \n  \nSpeaker 2\n \n Different workplaces many times. So physically this is the same section.  \n  \n  \nSpeaker 1\n \n The same data shown in different places. Just a second. Okay, so what we will do today, it was a warm up example \nthat.  \n  \n \n  \nSpeaker 2\n \n I think will be interesting for you to know. So let's do something more serious. Let's think of improvements of our \nfuture section of Our reality section. And now I want you to see how you can do some calculations, how.  \n  \n  \nSpeaker 1\n \n You can do some more serious programming.  \n  \n \n  \nSpeaker 2\n \n Inside of Creature client side page using.  \n  \n  \nSpeaker 1\n \n Some JavaScript and using creature tools and let's say data platform. First of all I will explain you some business \nideas. So what we plan to do, my.  \n  \n \n  \nSpeaker 2\n \n Plan is to show you some recalculations and it could be a good example.  \n  \n  \nSpeaker 1\n \n If we for example create one more column, call it commission. So it will be our future profit from the deal. And this \ncommission will be dependent on price. So it's normally and very typical for realty to have commission as some \npercent from price.  \n  \n \n  \nSpeaker 2\n \n And also we have to take care.  \n  \n  \nSpeaker 1\n \n About the type offer.  \n  \n \n  \nSpeaker 2\n \n So for sale we have one formula.  \n  \n  \nSpeaker 1\n \n And for rental we will have another formula.  \n  \n \n  \nSpeaker 2\n \n Okay, let's do it step by step. So first of all we need new column.  \n  \n  \nSpeaker 1\n \n New column can be added to this very easily. We can just go to modify our page. Then we can add new number \ncolumn.  \n  \n \n  \nSpeaker 2\n \n Carefully dropping it here it will be named Commission. And as we have a price in.  \n  \n  \nSpeaker 1\n \n US dollars, so let it be a commission. Also in the same currency, the inner column name will be USR.  \n   \n \n Speaker 2\n \n Commission.  \n  \n  \nSpeaker 1\n \n And we confirm such code for this column. The data format will be decimal with two digits. Okay, great. Decimal \nwith two digits. And we want to make this commission calculated automatically so we don't allow users.  \n  \n \n  \nSpeaker 2\n \n To manually change it. That's why I will set read only.  \n  \n  \nSpeaker 1\n \n Option on I temporary hide place attachments tab. So my commission will be read only.  \n  \n \n  \nSpeaker 2\n \n And also just to make it easier.  \n  \n  \nSpeaker 1\n \n To find in div array, I will name its element code so we can type it as we wish Commission USD. Let it be our element \ncode.  \n  \n \n  \nSpeaker 3\n \n This element code will be used in.  \n  \n \n  \nSpeaker 2\n \n View config, div and also physically it.  \n   \nSpeaker 1\n  \n Will be used for building real page.  \n  \n \n  \nSpeaker 3\n \n HTML markup with set of divs inside.  \n  \n  \nSpeaker 1\n \n And this code will be used.  \n  \n \n  \nSpeaker 3\n \n To name set of items and div HTML tags inside of our page.  \n  \n  \nSpeaker 1\n \n So element code, it's about physical component.  \n  \n \n  \nSpeaker 2\n \n Representation on the page.  \n  \n  \nSpeaker 1\n \n Okay, you already know this and that's all I can just save System will.  \n  \n \n  \nSpeaker 2\n \n Automatically modify our object.  \n  \n  \nSpeaker 1\n \n It will save changes to our page code which we can find here if.  \n   \nSpeaker 2\n \n  \n We click open source code. So now let's just click save and.  \n  \n  \nSpeaker 1\n \n That'S probably will be enough for the beginning. So this change will be made in objects and in our client module. \nOkay, finally it's saved.  \n  \n \n  \nSpeaker 2\n \n Okay, we can move on.  \n  \n  \nSpeaker 1\n \n And now we can close this page editor. Go to main page.  \n  \n \n  \nSpeaker 2\n \n As you can see, I did not even reload it.  \n  \n  \nSpeaker 1\n \n We can just open it again and.  \n  \n \n  \nSpeaker 2\n \n Probably we will immediately see our new column and it's read only.  \n  \n  \nSpeaker 1\n \n So you see this lock sign which.  \n  \n \n  \nSpeaker 2\n \n Tells us that column is read only. So now we need to think of.  \n   \n Speaker 1\n \n Implementing read calculation and it will be.  \n  \n \n  \nSpeaker 3\n \n Triggered by change of price. And also we want to make it.  \n  \n  \nSpeaker 1\n \n Dependent on offer type. So for the sales offer type it.  \n  \n \n  \nSpeaker 3\n \n Will be more or less okay if.  \n  \n  \nSpeaker 1\n \n We make commission like 2% from list price from our price of realty shown here. So to be quite fair and good \nenough commission for our business and for.  \n  \n \n  \nSpeaker 3\n \n Sales it's totally okay.  \n  \n  \nSpeaker 1\n \n Now let's create some sample for house for rental.  \n  \n \n  \nSpeaker 3\n \n Our rental price will be 1200 bucks.  \n  \n  \nSpeaker 1\n \n For some house in Miami.  \n \n \n \n  \nSpeaker 3\n \n I'm not sure that can we find.  \n  \n  \nSpeaker 1\n \n So cheap houses in Miami for maybe it's not like not in a high.  \n  \n \n  \nSpeaker 3\n \n Season and some area. And as you can see, commission will be recalculated. And we need to make another formula \nfor rentals. So for rentals probably it will be quite enough if we will ask for.  \n  \n  \nSpeaker 1\n \n 50% from monthly payment price if this is a rental.  \n  \n \n  \nSpeaker 3\n \n So for rentals we will have another percentage. So for sales it will be 1% or 2% value.  \n  \n  \nSpeaker 1\n \n And for rental it will be 50% from price value.  \n  \n \n  \nSpeaker 3\n \n So when we will do some calculation we have to take care about it. But also you should be mentally ready.  \n  \n  \nSpeaker 1\n \n That in real life business it really.  \n  \n  \nSpeaker 3\n \n \n Often happens that such ratios, such formulas.  \n  \n  \nSpeaker 1\n \n Can be changed from time to time.  \n  \n \n  \nSpeaker 3\n \n And once we introduce hard coded value like 2% a month later our customer.  \n  \n  \nSpeaker 1\n \n May call us and say, you know.  \n  \n \n  \nSpeaker 3\n \n Now conditions were changed so we need to modify this percent and now it will be 2.5. Could you please change it? \nAnd if we hard code it, of course it's not so good idea to go into code and change it. Then deliver changes to \nproduction.  \n  \n  \nSpeaker 1\n \n So it will be really expensive.  \n  \n \n  \nSpeaker 3\n \n To make such changes.  \n  \n  \nSpeaker 1\n \n And our customer will be not ready.  \n  \n \n  \nSpeaker 3\n \n Will be not really happy if we.  \n   \n Speaker 1\n \n Ask for example for half, maybe for a couple of hours of work to be paid. If we want to change just one number.  \n  \n \n  \nSpeaker 3\n \n Ideally customers should be able to change such ratios themselves. We have several options to do this. For \nexample, we can make a separate.  \n  \n  \nSpeaker 1\n \n Table which will keep necessary percents.  \n  \n \n  \nSpeaker 2\n \n Or we can use some system settings for this.  \n  \n  \nSpeaker 1\n \n Or as you can see, our ratio is really stick to offer type.  \n  \n \n  \nSpeaker 3\n \n So probably we can add new column.  \n  \n  \nSpeaker 1\n \n To offer type lookup in order to save one value in percent for sales.  \n  \n \n  \nSpeaker 3\n \n And another value in percent for rentals. I will show you how we can do this. Let's focus on objects Again, now we \nhave offer type object, we can open it for edit. I prefer to work from configuration section. Maybe you would like to \nfocus on application first.  \n  \n  \nSpeaker 1\n \n In this case you can do the same if you. Oh, I did not save it. Oh, sorry. Okay, my fault. Ruby House for rental Save it.  \n  \n \n  \nSpeaker 3\n \n Great. So if you prefer to focus on application, you can go to Application hub, you may find your realty app, you.  \n  \n  \nSpeaker 1\n \n Might check your data models and that's.  \n  \n \n  \nSpeaker 3\n \n How you can find corresponding object. Or you can switch to advanced settings to see all the contents of your \nsolution. So you may practically do almost the same as you can do it here.  \n  \n  \nSpeaker 1\n \n So I just get used to work.  \n  \n \n  \nSpeaker 2\n \n With this configuration section.  \n  \n \n  \nSpeaker 3\n \n Also it has some useful actions like.  \n  \n  \nSpeaker 1\n \n Save packages to file system. So that's why I stick to this.  \n  \n \n  \nSpeaker 3\n \n Approach and I feel more confident when.  \n   \n Speaker 1\n \n Work here because I have full available.  \n  \n \n  \nSpeaker 3\n \n Set of tools to manage my system set my system configuration setup. So we opened corresponding object, we have \ninheritance from base lookup and that's why we have eight inherited columns and we did not add any other own \ncolumns so far.  \n  \n \n  \nSpeaker 2\n \n So for each reality offer type for.  \n  \n \n  \nSpeaker 3\n \n Rental or sale, we can add one more column to be number. Maybe we can do it with quite high precision.  \n  \n  \nSpeaker 1\n \n Okay, two digits after decimal point.  \n  \n \n  \nSpeaker 3\n \n We can call it something like commission percent.  \n  \n  \nSpeaker 1\n \n So we can even specify what is.  \n  \n \n  \nSpeaker 3\n \n The available range of our data values here just to make it clear for any user what type of value should be put here. \nSo if we specify from 0 to 100 it means from 0 to 100%.  \n   \nSpeaker 1\n  \n And it will be clear how to.  \n  \n \n  \nSpeaker 2\n \n Put some value here if you want.  \n  \n \n  \nSpeaker 3\n \n To save for example 2%. One more column is not a big deal, so we can easily add it save and publish.  \n  \n  \nSpeaker 1\n \n But after we do this we may.  \n  \n \n  \nSpeaker 3\n \n Start to get some additional unexpected difficulties. Now I will show it. Probably sometimes I get it, sometimes not. \nBut anyway I have to tell you about this. So we added new column to some object that was already present for today \nmorning. So it was already created recently. That's why we can face some unexpected behavior. Let me show you \nwhat I'm talking about. Now you can see it's very close and easy to switch between our section.  \n  \n  \nSpeaker 1\n \n And for example lookups.  \n  \n \n  \nSpeaker 3\n \n Let's go to reality offer type lookup and let's try to see its data. Now we have name and description. Okay, let's try to \nset up columns to display. Name is okay here description is also okay and we can try to display one more column. \nCommission percent looks good and we can save it. Okay, here this commission percent looks good. We need to \nProvide some initial data. Because we have to support our solution.  \n  \n  \nSpeaker 1\n \n With some initial values for calculations.  \n   \n \n Speaker 3\n \n And we agreed that for a sale it will be enough for us to specify 2%. According to this helpful message, 2% will look \nlike this 2.00, so it means just 2. And for rentals we expect to earn 50% but from monthly payment. So our price will \nrepresent monthly payment. That's why for rentals we will have significantly bigger value. So it looks like our data is \nokay here, but we changed columns and we added some data. So possibly we have to look at data part and find \ncorresponding object reality.  \n  \n  \nSpeaker 1\n \n Offer type object.  \n  \n \n  \nSpeaker 3\n \n So not object data item for this. Let me find it. This one Offer type. It looks like it was created by data binding tool, so \nwe could also. No, no. This is lookup registering. Now I need to find it here this one values. So now we have one \nmore column here. We can update this data item with the help of data binding tool. Or we can manually modify it by \nadding one more column. As you can see, originally this column was not present here because we created data item \nbefore adding new columns to the object. So now we have one more column here we have new data. 2% for sale, \n50% for rental. We have to save it. Everything is okay. So our new column, our new values are here in our data part. \nGreat.  \n  \n \n  \nSpeaker 3\n \n It looks like we still did not need to do any additional steps related.  \n  \n  \nSpeaker 1\n \n To adding new column into existing object.  \n  \n \n  \nSpeaker 3\n \n But some of you may start to feel some difficulties and such difficulties are connected with the way how server side \nsystem remembers information about objects. And unfortunately it may happen that your kind of difficulty which you \nwill finally face will be inability to display data here or inability to use new column a bit later. In order to fix this, you \nmay need maintenance tools for creation so which we already installed. Maintenance tools can help us to restart the \napp or clear regis if I need it. I will do this restart but a bit later. Now I will try to avoid this to show you what will \nhappen if you did not perform a restart. So let's check will we be able to make all the way all the settings as I plan to \ndo this and will we need restart or not?  \n   \nSpeaker 3\n \n  \n So let's go. Now we have offer type which also has additional data. For sale value we have one additional data and \nfor rental value we also have another additional data. And it's really lucky for us that it's possible to get such \nadditional data out from this lookup somewhere at.  \n  \n  \nSpeaker 1\n \n The top where we can easily use such data columns.  \n  \n \n  \nSpeaker 3\n \n Now I plan to show you how to get data out from a lookup. We will use again page editor. Our task is to get decimal \nvalue from this offer type lookup and display it somewhere. The reason why we need to display is to make it visual \nand also to make it fully no code.  \n  \n  \nSpeaker 1\n \n So.  \n  \n \n  \nSpeaker 3\n \n Now you will see this trick how we can make data out from existing lookup. We have new fields here, but if you add \nany it will add new.  \n  \n  \nSpeaker 1\n \n Column to your object and it will.  \n  \n \n  \nSpeaker 3\n \n Add a new control to your page. So such columns I would like to call data fields and data fields represents \nconnection between controls and real life data column of your main object that this page works with. But if you \nscroll down you will find interesting set of components called inputs. Inputs are designed to organize input only \nwithout direct connection with your main data object and without direct save of any data that you input into this call. \nSimply speaking, inputs are controls that you use for inputs but not intended to.  \n  \n  \nSpeaker 1\n \n Save data from them or at least.  \n   \n \n Speaker 3\n \n Not save into main primary object with the standard tools. So maybe you will save it somewhere somehow else. Let \nme show you how I can use this for our task. I need number control. So I will take number and carefully drag and \ndrop it somewhere on my page. This is a just control just input field with no any connection to any kind of objects \nand the data model. But we have additional function which will be really helpful for us. We can ask system to fill this \nnumber control from some column that we can take out from existing lookups or existing from existing fields. Let \nme show you how we can do this. We go to data source, click on this lookup button and then we will search. So \nselect some data field that we will use to fill this control. Realty related objects.  \n  \n \n  \nSpeaker 3\n \n It will show us all existing lookup columns in our realty object and then we will find offer type extended and system \nwill show us only suitable on the compatible field which will be you can be used within decimal number control. This \nis our commission percent so we will select it and here now you will see some changes. Title appeared the same as \ntitle of your column inside of your offer type lookup Code appeared and cannot be edited. This is read only and also \nyou can unlock it. So this column will be constantly read only. Title position okay title on the page and element code \nnumber input. So we can call it something like commission percent okay and save change of our element code.  \n  \n \n  \nSpeaker 3\n \n So simply speaking we made read only column that will be automatically loaded each time offer type is set and each \ntime offer type changed or cleared. Let's save our changes and we will see how it works. By the way, please confirm \nwith plus in our chat if you follow me directly during the session. So I need to know, should I allow you some pause \nto do some steps after I demonstrate it? Marcel, thank you, Andre. Thank you. Okay, I will go. Not too fast. So you \nwill have enough time. If something is not good and you would like me to stop for.  \n  \n  \nSpeaker 1\n \n A while, tell me please.  \n  \n \n  \nSpeaker 3\n \n Okay, Monica, thank you again. Secret and Rakhi, thank you for mentioning. Great. So we saved our page. Then we \ncan go to our page close, open it again. Now you see this commission percentage shown. Okay, Maybe we can \nreward the page just to suppress any possible issue with the browser cache. So let's open again. Apartment of New \nOrleans we have offer type sale. But you see this commission percent is not shown. Okay, let's try to select another \none. Rental or I chose sale again. Okay, rental 50 sale 202. Okay, save it. Close. Such data will be not possible to see \nin list. So we have no reality column which will represent our commission percent.  \n  \n  \nSpeaker 3\n \n \n We can read it from the database if we use related objects, if we use offer type and if we display commission \npercent and this commission percent will be obtained from corresponding record from our offer type. But you see, \nnow we have some troubles. We have some troubles and system does not recognize commission percent column \nfully. Probably it also shows us some error messages, I believe. Let's try to reload it and see what happens. No, no \nerror message. It just doesn't show us corresponding values. But they are definitely there. So we can go to lookups, \nwe can find our offer type lookup. We can find columns there. So our commission percent is here. So what is \nhappening and why we have such a trouble? And if you open the page, you see no initial value here.  \n  \n \n  \nSpeaker 3\n \n But if you click there and back to sale now you see this value is okay, save, close, open and still it doesn't work. So \nwe still have some problem with this additional column.  \n  \n  \nSpeaker 1\n \n And this problem unfortunately cannot be solved.  \n  \n \n  \nSpeaker 2\n \n By logging out and logging in.  \n  \n  \nSpeaker 1\n \n So let me show you. I try to log out.  \n  \n \n  \nSpeaker 2\n \n Maybe thinking.  \n  \n  \nSpeaker 1\n \n There is something like a user session cache issue. Then I try to log in.  \n  \n \n  \nSpeaker 2\n \n When you work with client side, it's.  \n   \nSpeaker 1\n  \n Better to keep your browser console on.  \n  \n \n  \nSpeaker 2\n \n Probably you will see some interesting messages.  \n  \n  \nSpeaker 1\n \n There or a lot of red messages.  \n  \n \n  \nSpeaker 2\n \n In case of errors.  \n  \n  \nSpeaker 1\n \n So it's important to see it quick.  \n  \n \n  \nSpeaker 2\n \n Okay, opening our realty section, ignoring all.  \n  \n  \nSpeaker 1\n \n Warnings here, open it once again and you see no, it did not help us. So unfortunately logging out and logging in.  \n  \n \n  \nSpeaker 3\n \n Doesn'T help you and the only solution.  \n  \n  \nSpeaker 1\n \n Which we can do is restart our app or shut it down and start.  \n   \n \n Speaker 3\n \n It again for example with the help of IIS Manager. But it will take more than minute for us to normally shut down and \nstart. So we have a quick solution.  \n  \n  \nSpeaker 1\n \n This is restart our app and we.  \n  \n \n  \nSpeaker 3\n \n Have a maintenance tools for this restart application. This is the only way to quickly fix this issue.  \n  \n  \nSpeaker 1\n \n Now you see we have some.  \n  \n \n  \nSpeaker 2\n \n Errors in browser console, but it looks.  \n  \n \n  \nSpeaker 3\n \n Like not very critical.  \n  \n  \nSpeaker 1\n \n So now restart is being performed.  \n  \n \n  \nSpeaker 3\n \n We can check what's happening with our memory and with our processes using task manage.  \n  \n  \nSpeaker 1\n \n W3WP . Looks like we have the same worker.  \n  \n \n  \nSpeaker 3\n \n Process, but it has a comment to.  \n  \n  \nSpeaker 1\n \n Restart so possibly to rewards some of its assemblies.  \n  \n \n  \nSpeaker 2\n \n Okay, so we restarted our app.  \n  \n  \nSpeaker 1\n \n We go to reality section.  \n  \n \n  \nSpeaker 2\n \n Now we already will see the difference.  \n  \n  \nSpeaker 1\n \n Now you see that commission percent here.  \n  \n \n  \nSpeaker 2\n \n Was normally displayed in this list previously it was not normal.  \n  \n  \nSpeaker 1\n \n And if we open any record now.  \n  \n  \nSpeaker 2\n \n \n Commission percent will be fully normally loaded.  \n  \n  \nSpeaker 1\n \n When we just open the page. So you see commission percent loaded correctly if you take any other value. Yes. If you \ngo to rental. Yes, it's okay.  \n  \n \n  \nSpeaker 2\n \n So now we fixed it.  \n  \n  \nSpeaker 1\n \n And that's why I had to use this add on called maintenance tools for creature.  \n  \n \n  \nSpeaker 2\n \n Such add on helps me easily restart.  \n  \n  \nSpeaker 1\n \n The app with just waiting approximately 10 seconds. And it's much easier than restarting my app by shutting down \nand starting again.  \n  \n \n  \nSpeaker 2\n \n My worker process or recycling worker process.  \n  \n  \nSpeaker 1\n \n It's possible, so it will take significantly longer.  \n  \n \n  \nSpeaker 2\n \n Okay, so we fixed this question with.  \n   \n Speaker 1\n \n The commission percent and now.  \n  \n \n  \nSpeaker 3\n \n Our task.  \n  \n \n  \nSpeaker 2\n \n Is.  \n  \n  \nSpeaker 1\n \n To make actual calculation.  \n  \n \n  \nSpeaker 2\n \n So now we can think of how.  \n  \n  \nSpeaker 1\n \n To trace changes of price or commission percent.  \n  \n \n  \nSpeaker 2\n \n Luckily commission percent will be available for.  \n  \n  \nSpeaker 1\n \n Us the same as any attribute for a real column.  \n  \n \n  \nSpeaker 2\n \n So commission percent will be also an attribute for us.  \n  \n  \nSpeaker 1\n \n So if this value changes or if.  \n  \n \n  \nSpeaker 2\n \n This value changes, as you can see.  \n  \n  \nSpeaker 1\n \n It will be changed in case if you clear in case if you set.  \n  \n \n  \nSpeaker 2\n \n Some offer type or if you change to another offer type, commission percent is changed.  \n  \n  \nSpeaker 1\n \n So price or commission percent should trigger recalculation of commission.  \n  \n \n  \nSpeaker 2\n \n I will show you how we can do this. Let's go to our configuration section.  \n  \n  \nSpeaker 1\n \n Find client modules. We are working with form page. So when we look at this stuff you can see this is a real T form \npage. That's why I know where to open corresponding code. So you can also open the code from page editor if you \nwant. I just feel it's more comfortable to work here. So form page open source code. That's how we can go directly \nto the JavaScript part of it and See what's happening.  \n  \n \n  \nSpeaker 2\n \n Andrean is asking is it possible to use this add on in a cloud environment?  \n   \nSpeaker 1\n  \n Yes, all creation apps from Marketplace can be installed on cloud systems.  \n  \n \n  \nSpeaker 2\n \n Absolutely the same as you can install it locally. When you install any add on, you.  \n  \n  \nSpeaker 1\n \n Use only web interface.  \n  \n \n  \nSpeaker 2\n \n So it will work absolutely the same.  \n  \n \n  \nSpeaker 3\n \n Let me show you.  \n  \n  \nSpeaker 1\n \n So you go to Settings, you go to Application management, Application Hub and then you click Install or Add new \napplication.  \n  \n \n  \nSpeaker 3\n \n And you can select something from this.  \n  \n  \nSpeaker 1\n \n List or you can select Marketplace Powered.  \n  \n \n  \nSpeaker 2\n \n And it will work absolutely the same.  \n \n \n  \nSpeaker 1\n \n If you run it in cloud. Thank you Adrian for your interesting question. Let's move on with your code. So we found \nreality form page.  \n  \n \n  \nSpeaker 2\n \n We decided to open directly its source code.  \n  \n  \nSpeaker 1\n \n That's how we open this tab.  \n  \n \n  \nSpeaker 2\n \n We can try to find our commission diff part.  \n  \n  \nSpeaker 1\n \n You can see this our commission column. It was added by help of page editor.  \n  \n \n  \nSpeaker 2\n \n So practically we should not modify this. But it will be interesting to see how it will be connected with the.  \n  \n  \nSpeaker 1\n \n Data attribute PDS USR commission USR so.  \n  \n \n  \nSpeaker 2\n \n This is our attribute name.  \n  \n  \nSpeaker 1\n \n Okay, we can collapse temporary all such things.  \n  \n \n  \nSpeaker 2\n \n I will only show you.  \n  \n  \nSpeaker 1\n \n So price. Okay, we need price, we need commission so we can collapse all other new config div items till we will face \nview model config. So attributes of view model config represent.  \n  \n \n  \nSpeaker 2\n \n Set of variables that can be saved.  \n  \n  \nSpeaker 1\n \n On the page level.  \n  \n \n  \nSpeaker 2\n \n And we already started to work with.  \n  \n  \nSpeaker 1\n \n It yesterday I just tried to explain you such attributes and now we will work with them. So for the price column we \nsee this attribute name. Okay? And for the percent here.  \n  \n \n  \nSpeaker 2\n \n We have this attribute name and finally.  \n  \n  \nSpeaker 1\n \n We will save our data into commission.  \n   \nSpeaker 2\n \n \n \n Attribute which has this name.  \n  \n  \nSpeaker 1\n \n This is important. Okay, I will collapse anything else to make it clear and quite compact for you. So we are interested \nin price attribute.  \n  \n \n  \nSpeaker 2\n \n Percent attribute and commission attribute.  \n  \n  \nSpeaker 1\n \n Okay? Nothing else.  \n  \n \n  \nSpeaker 2\n \n Model config is not interesting. And then we will do something with handlers.  \n  \n  \nSpeaker 1\n \n I already have an example which will.  \n  \n \n  \nSpeaker 3\n \n Make it possible for us to do it quickly. So let me show you this example of the code examples reading UI and then \nwe need calculated field example.  \n  \n  \nSpeaker 1\n \n Field example. So now I will use a special.  \n  \n \n  \nSpeaker 3\n \n Pre designed handler name. Probably we need to look at Academy.  \n  \n  \nSpeaker 1\n \n To explain all possible handler names.  \n  \n \n  \nSpeaker 3\n \n So let's go to Academy, let's go.  \n  \n  \nSpeaker 1\n \n To go to guides development.  \n  \n \n  \nSpeaker 3\n \n Front end.  \n  \n  \nSpeaker 1\n \n Freedom UI and somewhere we will see some client schema references handlers.  \n  \n \n  \nSpeaker 3\n \n Yes, this is an article explaining handlers and their definition. So we have some set of standard names for handlers \nand they represent some.  \n  \n  \nSpeaker 1\n \n Important steps of page life cycle. In our case, we are interested in the handler which is triggered each time when \nsome data, some attribute data changed.  \n  \n \n  \nSpeaker 3\n \n At our page changes the attribute.  \n  \n  \nSpeaker 1\n \n So this handler is called handle view.  \n  \n \n  \nSpeaker 3\n \n Model attribute change request. Let me show you my example. Handle view model attribute change request.  \n  \n  \nSpeaker 1\n \n So simply speaking, this handler will be.  \n  \n \n  \nSpeaker 3\n \n Called each time when any column value.  \n  \n  \nSpeaker 1\n \n Changes at our user at our client.  \n  \n \n  \nSpeaker 3\n \n Side page in our browser. So this handler will be triggered quite often. We copy this code.  \n  \n  \nSpeaker 1\n \n We will also.  \n  \n \n  \nSpeaker 3\n \n Paste it for you and we will copy it and put it to our examples in our handlers area. So this is an array, we have to \nkeep syntax well. And that's why I try to paste.  \n  \n  \nSpeaker 1\n \n It like this, keeping commas, brackets and so on.  \n   \nSpeaker 3\n \n \n \n So now you see, this piece of code was just simply added.  \n  \n  \nSpeaker 1\n \n This piece of code was added and let's check what we can do with it. Of course we have to take care about attribute \nnames because they are always unique. Each time you do the same example again, you will see different unique \nnames.  \n  \n \n  \nSpeaker 2\n \n So how we can check it?  \n  \n  \nSpeaker 1\n \n This handler will be called quite often for each column change.  \n  \n \n  \nSpeaker 3\n \n And in order to make it efficient.  \n  \n  \nSpeaker 1\n \n We need to check if some column.  \n  \n \n  \nSpeaker 2\n \n That we are interested had changed or not. If yes, then we do our recalculation.  \n  \n  \nSpeaker 1\n \n If not, we should do nothing in.  \n  \n \n  \nSpeaker 2\n \n Order to save system resources. So we check request property here and.  \n  \n  \nSpeaker 1\n \n We have attribute name. And if this attribute name is our price, then this is logical or attribute name is our \ncommission percent.  \n  \n \n  \nSpeaker 2\n \n Then we do some calculation, but we.  \n  \n  \nSpeaker 1\n \n Have to actualize our names so you.  \n  \n \n  \nSpeaker 2\n \n Can see our list of attributes for the price.  \n  \n  \nSpeaker 1\n \n Here is our attribute name. Let's copy it and carefully paste here. And also as we already have it in our clipboard here \nwhen we need to read it, then the same for commission percent. Let's make sure this is our attribute name. Let me \nshow you. Yes, it looks like it is already the same because generated by system and I usually do same examples. \nThat's a bit strange shifts. Okay, Very unusual. Okay, we did this. So so now you see if price changed, if commission \npercent changes, then we take price value. We take commission value.  \n  \n \n  \nSpeaker 2\n \n So how we do this? I already showed you yesterday.  \n  \n  \nSpeaker 1\n \n We have to use operator await. Then request is our argument dollar context and then we have access to our certain \nattribute.  \n  \n \n  \nSpeaker 2\n \n So we have just a variable in.  \n \n \n  \nSpeaker 1\n \n Our JavaScript code for price for percent. Then we do calculation of commission as result of multiplication and don't \nForget to.  \n  \n \n  \nSpeaker 2\n \n Divide by 100 because commission percent represents.  \n  \n  \nSpeaker 1\n \n Percent, not just a decimal value. Okay, and then we will save our commission percent. We have to Provide correct \nvalue. Here is our commission attribute.  \n  \n \n  \nSpeaker 2\n \n If we do it incorrectly, we will fail.  \n  \n  \nSpeaker 1\n \n So this is important. Our commission value will be finally saved into this. Okay, now it's ready and we can check how \nit works by saving our code.  \n  \n \n  \nSpeaker 3\n \n I provided an example for you, so you can also check out your example.  \n  \n  \nSpeaker 1\n \n Just a second. Okay, saving was successful and we can move on with our checks. Let's go to realty section, open \nthe page. Let's try to trigger change of price or change offer type, for example. Like this, nothing happens.  \n  \n \n  \nSpeaker 2\n \n Probably it's because of cache.  \n   \nSpeaker 1\n  \n So let's reload the page. Reloading helps to fight with browser cache effect. Open again, try to make changes.  \n  \n \n  \nSpeaker 2\n \n Now you can see that recalculation works well.  \n  \n  \nSpeaker 1\n \n So we have our price for rental of our apartment.  \n  \n \n  \nSpeaker 2\n \n And you see our commission is correctly.  \n  \n  \nSpeaker 1\n \n Recalculated and we can save our data.  \n  \n \n  \nSpeaker 2\n \n Commission will be also saved.  \n  \n  \nSpeaker 1\n \n We can see it here. Commission is our legal valid column, so it will be saved.  \n  \n \n  \nSpeaker 2\n \n Let's open some sale example.  \n  \n  \nSpeaker 1\n \n Now you can see.  \n   \n \n Speaker 2\n \n Okay, price was not changed.  \n  \n  \nSpeaker 1\n \n Commission is already calculated. Let's check if we switch from sale to rental.  \n  \n \n  \nSpeaker 2\n \n You see, commission was recalculated.  \n  \n  \nSpeaker 1\n \n If we switch back to sale, it's.  \n  \n \n  \nSpeaker 2\n \n Also quite well calculated.  \n  \n  \nSpeaker 1\n \n So now you see that our commission is quite fair for this amount of price for the house.  \n  \n \n  \nSpeaker 2\n \n So our recalculation also works well and.  \n  \n  \nSpeaker 1\n \n It shows even when page is opened. It looks like when page is opened our data filled in client side. So it triggers \nrecalculation even if we.  \n  \n \n  \nSpeaker 2\n \n Do not change anything.  \n  \n  \nSpeaker 1\n \n But just open the page. Yes, we'll see.  \n  \n \n  \nSpeaker 2\n \n So it looks like our calculation is.  \n  \n  \nSpeaker 1\n \n Already done and works quite well.  \n  \n \n  \nSpeaker 2\n \n And of course everything works quite smoothly.  \n  \n  \nSpeaker 1\n \n When we have a pre programmed examples where everything is correct.  \n  \n \n  \nSpeaker 2\n \n But in real life you will do.  \n  \n  \nSpeaker 1\n \n Your own examples where some errors or mistakes could happen. So you will need to know how to debug this code.  \n  \n \n  \nSpeaker 2\n \n I will show you how to make.  \n  \n  \nSpeaker 1\n \n Such debug and you will see that's not so difficult. One of the easiest ways to debug.  \n  \n \n  \nSpeaker 2\n \n Is to put a special debugger breakpoint into your code.  \n  \n  \nSpeaker 1\n \n Like this, the word debugger. If you provide such debugger statement, it means that you ask for debug session and \nyou stop execution of your JavaScript code. And if your browser has opened browser developer console.  \n  \n \n  \nSpeaker 3\n \n So if browser developer console is on.  \n  \n  \nSpeaker 1\n \n Then your debugging will work for you. But this approach has also disadvantage.  \n  \n \n  \nSpeaker 2\n \n And when you finished your debugging, you.  \n  \n  \nSpeaker 1\n \n Should not forget to remove all your debugger lines.  \n  \n \n  \nSpeaker 2\n \n Save your changes again.  \n  \n  \nSpeaker 1\n \n And ideally you have to run your.  \n  \n  \nSpeaker 2\n \n \n Logic again just to make sure you did not accidentally damage anything.  \n  \n  \nSpeaker 1\n \n Because when you save, you have chance that something will be incorrectly saved. Something will go not so well. \nOkay, so let me show you how we can do this type of debugging.  \n  \n \n  \nSpeaker 2\n \n I need to explain and I need to show you.  \n  \n  \nSpeaker 1\n \n We can go to this is easy.  \n  \n \n  \nSpeaker 2\n \n Way to put debugger word. I will show you a bit more professional way to debug. We can go to our section open \npage which we plan to debug.  \n  \n  \nSpeaker 1\n \n Then we enable browser developer console.  \n  \n \n  \nSpeaker 2\n \n You can do it by F12 or control shift I.  \n  \n  \nSpeaker 1\n \n And when you do this, you then.  \n  \n \n  \nSpeaker 2\n \n Go to Sources tab. You see, we already opened some set of scripts here. We don't need it now.  \n   \n Speaker 1\n \n Let's close everything and then we can.  \n  \n \n  \nSpeaker 2\n \n Just search and you see we have.  \n  \n  \nSpeaker 1\n \n A USR reality form page part of the URL.  \n  \n \n  \nSpeaker 2\n \n So it's a page, it's a name.  \n  \n  \nSpeaker 1\n \n Of client module and we can try to find it.  \n  \n \n  \nSpeaker 2\n \n Control p Open file.  \n  \n  \nSpeaker 1\n \n Let's try Control p open file. Which one? Reality form page USR realty form page. We have two options here, probably \nbecause of browser cache.  \n  \n \n  \nSpeaker 2\n \n Okay, if you do not want to.  \n  \n  \nSpeaker 1\n \n Guess which one is correct, we can go back reload the page.  \n \n \n \n  \nSpeaker 2\n \n So we will suppress any kind of.  \n  \n  \nSpeaker 1\n \n Cache and then we will open it again. And we have just one option, single option to select corresponding file Control \nP . Okay, open the page, then control p open file and press ctrl P realty.  \n  \n \n  \nSpeaker 2\n \n And you see only one form page here.  \n  \n  \nSpeaker 1\n \n So no any cached, no any duplicates that will make you confused. And you probably may select Incorrect 1. So let's \nopen the only one you.  \n  \n \n  \nSpeaker 2\n \n See set of equalizable strings here. But the most important of course is our code. And you will see our module text \nhere.  \n  \n  \nSpeaker 1\n \n Big part with view config div some.  \n  \n \n  \nSpeaker 2\n \n Part view model config. And finally you will have your header handlers. Part we are interested in debugging \nsomewhere here.  \n  \n  \nSpeaker 1\n \n For example, we can click on this.  \n   \nSpeaker 2\n \n  \n Line number which will make a breakpoint for us.  \n  \n  \nSpeaker 1\n \n So it's the same as debugger, but.  \n  \n \n  \nSpeaker 2\n \n It doesn't change the source of our client module.  \n  \n  \nSpeaker 1\n \n So we can use browser debugging tools for this.  \n  \n \n  \nSpeaker 2\n \n Click on the line number.  \n  \n  \nSpeaker 1\n \n That's how we activate breakpoint. So here we have one breakpoint that we just clicked here. Then when your \nbrowser developer console is on and execution comes to this line.  \n  \n \n  \nSpeaker 2\n \n Execution will be stopped. Let me show you.  \n  \n  \nSpeaker 1\n \n If you change for example offer type from rental to sale, you see These.  \n  \n \n  \nSpeaker 2\n \n Lines are executed and now code stops and we can go line by line.  \n  \n  \nSpeaker 1\n \n Now we have to use tools that.  \n  \n \n  \nSpeaker 2\n \n Will help us to proceed with this piece. The most popular, I think the Most.  \n  \n  \nSpeaker 1\n \n Efficient is F10 which is a step over running of a line without going into sub functions for it. So I will press F10. Now \nyou see my price was taken from the column percent. Now you see new percent was taken when offer type \nchanged.  \n  \n \n  \nSpeaker 2\n \n Then you can see commission was recalculated.  \n  \n  \nSpeaker 1\n \n Now you will see commission will be set here. So my commission is now 26, so I expect it to be saved here.  \n  \n \n  \nSpeaker 2\n \n Yes, 26 and then we move on.  \n  \n  \nSpeaker 1\n \n So here we can use resume F8 hotkey to normally continue execution.  \n  \n \n  \nSpeaker 2\n \n That's how we can check this code. If we change the price.  \n   \nSpeaker 1\n  \n You will see the Same I press F10 I have another commission F8.  \n  \n \n  \nSpeaker 2\n \n Okay, we can make more serious price.  \n  \n  \nSpeaker 1\n \n For an apartment.  \n  \n \n  \nSpeaker 2\n \n And obviously we'll have more serious commission. So that's how you can debug your code.  \n  \n  \nSpeaker 1\n \n Also, if your code has something has.  \n  \n \n  \nSpeaker 3\n \n Some obvious mistakes and causes runtime errors, you will also see such runtime errors in your sources tab. You \nwill also see your console which will be full of red messages. So in case if your code fails in runtime of course you \nshould take care about it and look at your console tab and check if everything works well or not. When you finished \nyour debugging you should click on wine number again removing your breakpoint and then your code will run \nwithout stops. It's interesting to see what value we will see in case if we will clear overtype.  \n  \n  \nSpeaker 1\n \n Now let's check. You see that percent is empty so percent is null. Trying to multiply null on price results in zero.  \n  \n \n  \nSpeaker 2\n \n So that's how we will clear.  \n  \n  \nSpeaker 1\n \n Okay, when we have some valid percent, we can move on with F8 and you see setting is done.  \n  \n \n  \nSpeaker 3\n \n If you have any questions related to this debugging, please tell me. As you can see, debugging can be.  \n  \n \n  \nSpeaker 2\n \n Really effective if your code is more.  \n  \n \n  \nSpeaker 3\n \n Complex, if you have sub functions. If you are not sure what values you finally get from your code so you can check \nit out with the help of browser developer tools. Okay, probably we got an hour of our session, so let's make a few five \nminutes break and then move on with next topics related to programming. I also plan to show you some examples \nof programming of validation. So I plan to show you validation.  \n  \n  \nSpeaker 1\n \n And.  \n  \n \n  \nSpeaker 3\n \n Different validators so different clones will be used for universal validation. And also I plan to show you some \nexamples of so we already displayed debugging but also you need to know a bit more about logging. Okay, so let's \nmake a five minutes break.  \n  \n  \nSpeaker 1\n \n Foreign.  \n  \n \n  \nSpeaker 2\n \n So today I want you to see.  \n  \n  \nSpeaker 1\n \n Some more technical things about how client side works and how we can do.  \n  \n \n  \nSpeaker 3\n \n Some technical steps with it. So we already know how to debug our code. I would also like to you to see that we \nhave quite developed logging.  \n  \n  \nSpeaker 1\n \n So I will show you login mechanisms.  \n  \n \n  \nSpeaker 3\n \n That are available on Creature platform. Here is our installed app and this is our folder with installed application. We \ngo to terrasoftware web and you already know that Creature uses analog libraries.  \n  \n  \nSpeaker 1\n \n To provide the different logs and save them In Creature web server.  \n  \n \n  \nSpeaker 3\n \n The most important log file for us is invoke targets config because here we can change default file to save our all \ndefault folder to save all our logs. You may be interested in the way how we can do some logging. So we have so \ncalled appenders and targets and probably have to start from appender first. So analog config I should use analog \nconfig first. And we have a lot of loggers.  \n  \n  \nSpeaker 1\n \n As well appender so they are synonym.  \n  \n \n  \nSpeaker 3\n \n Logger or appender they are synonyms. So you can see a lot of different loggers registered and appenders are \nsettings that will collect log messages. And finally appenders will be connected with physical files. So you see we \nhave more than 100 different loggers and logger is a.  \n  \n  \nSpeaker 1\n \n Logical thing that you can use in your program code. Appender is a place that is used to collect your data and save \nit.  \n  \n \n  \nSpeaker 3\n \n So we have a lot of loggers, a lot of targets. Sorry, targets. And you see we have so appenders it means it's a setting \nthat represents physical file. Also targets are synonym and appenders shows us that we also have a lot of different \nlogs that are saved here. And you can see different messages, different settings. So what do you need to know \nabout this? So Croatia has a lot of default types of logs and all of them will be saved in a folder which we specify \nwhen we install our application. So in Analog Targets config line number three we have setting to save our logs to.  \n  \n \n  \nSpeaker 3\n \n By default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we can find logs \nand as you can see we have zero which means main application logs and log folder which.  \n  \n \n  \nSpeaker 2\n \n Which.  \n  \n  \nSpeaker 1\n \n Sorry.  \n  \n \n  \nSpeaker 3\n \n A log folder which means loader part is not so interesting because it has no customizable items that will be \ninterested for us to Interesting for us to see so loader is very technical and we have just several log files here, \nnothing very spectacular. And zero folder is what we really need because it's a log set of logs for our main \napplication. And then we go inside, we see logs for each separate date. So you see for different days you have logs \nin different folder which makes it easy to find. And then you see different logs here. In total we have more than 50 \ndifferent files with logs saved here. So a lot of different logs, a lot of different files. And what is the most important \nfor.  \n  \n  \nSpeaker 1\n \n You from the maintenance point of view?  \n  \n  \nSpeaker 3\n \n \n I think the most important is error log. Error log represents all exceptions and keeps information about all exceptions \nthat happened in your system. So error log shows all errors and of course you should take care about.  \n  \n  \nSpeaker 1\n \n It because usually it is important and.  \n  \n \n  \nSpeaker 3\n \n Sometimes you may find some errors which are not related to your changes. So you may simply speaking find some \nerrors from base product like this 1 error parent schema is now parent ID sets to empty and so on. But it looks like \nnothing very critical for our application. You see the same error many times and it looks like not very important. But \nif you will get some error messages here related to your functionality and your users will start to complain about \nsomething is not working. Of course you cannot ignore this. You may ask me why we have some errors in a wait \nproduction release software. The answer is that Croatia is quite big and we have more than 200 libraries. We have \nmillions of use cases that could be checked and used.  \n  \n  \nSpeaker 1\n \n So it's really hard to test everything.  \n  \n \n  \nSpeaker 3\n \n And to polish any line of code.  \n  \n  \nSpeaker 1\n \n So it should show it so it.  \n  \n \n  \nSpeaker 3\n \n Could not fail in any way. So in real life, in any big system, some errors usually happen.  \n  \n  \nSpeaker 1\n \n But in our case it's not so.  \n  \n  \nSpeaker 3\n \n \n Critical so you can simply ignore. But if you will find another errors with some user complaints, of course you should \ntake care of it. So from maintenance point of view, I think looking at such error log is quite important. And this is \nsomething that you should do regularly. If you support some big creation implementation by your own. In cloud \nconditions, looking at such logs is complicated because you will not be able to directly go to cloud based file system \nto get it. So you only can ask for help at support team. By the way, you should know Support team lives here support \ncreation.com so they work 24, 7. It means you can ask them any time, anytime you need, even on weekends. And if \nyou ask for example for a yesterday logs for a searching website, they can give it for you.  \n  \n \n  \nSpeaker 3\n \n But it will be more efficient for you if you can Collect logs by yourself. And that's why I plan to show you some \nspecial tool which makes it easier if you need to collect logs from cloud based environment. So I will show you Now \nI'm talking about telemetry log for creation. This is a special add on which we can get from Application Hub New \napplication Marketplace powered. Then we can just search for the word log and we will easily find this Hokku app or \ntelemetry log for creation. So Hoku is a company physically this company is like founded by our creation employees \nand this is something just so you should consider it made by creature and you can install this telemetry log. This is \nfor free. Agree Confirm. You see it was just updated 2023 November. Okay. And install it.  \n  \n \n  \nSpeaker 3\n \n It takes just almost no time, maybe 20 seconds. And you will see that new app is installed to our system. So you'll be \nable to collect vlogs but you'll be able to collect only runtime created logs. So it's like listener for logs. You will not be \nable to collect yesterday logs, but if you do some experiments and you need to see how logs look like when you do \nyour experiments in cloud. So this app will be extremely helpful for you because it shows you all the messages all \nthe log messages that are saved on disk. So you can listen to any logs saved on disk. Let's patiently wait for its \ninstallation. Surprisingly it takes a bit longer than I expected. But it's okay now it's not so critical. Maybe we can look \nat browser developer console here. But usually no trouble should be present.  \n  \n \n  \nSpeaker 3\n \n Okay, wait for a minute. And I'm also curious about what is happening at my website. Oh, dotnet exe was running so \nit looks like compilation was done. So system decided it needs to compile and that's why it was so slow. Okay, finally \nour compilation finished. We can download installation log to see what it took so long and what operation took so \nlong to install. So now you will see results. Okay, great. Here's our installation logs started 26:58, so almost 27, \nfinished 29. It looks like 2 minutes and 3 seconds and yeah, it's a bit longer than usual. And 27:15, 28:56 so it looks \nlike full configuration compilation was performed. That's why it took so long and okay, no problem, we can live with \nit. So now you will see one more app here in this list Telemetry and you can reload this tab.  \n  \n \n  \nSpeaker 3\n \n Now you will see one more item at our settings page. Previously called System Designer, currently it's called \nSettings. So I Will show you how you can use this telemetry log here. Yes. Now let me show you.  \n   \nSpeaker 1\n  \n We can check.  \n  \n \n  \nSpeaker 3\n \n You probably remember we looked at our logger and appenders. So we have appenders, we have loggers here.  \n  \n  \nSpeaker 1\n \n So we can listen for a certain.  \n  \n \n  \nSpeaker 3\n \n Logs in order to get some error.  \n  \n  \nSpeaker 1\n \n Messages for the certain, let's say subject or certain area of functionality.  \n  \n \n  \nSpeaker 3\n \n And you can also listen everything like this, which will mean that you look and get every message. And I'll try to find a \nlogger for SQL. Do we have anything? No, Let me find a corresponding logger. SQL. Oh, so it's called JSoft Core DB.  \n  \n  \nSpeaker 1\n \n Executor SQL log appender.  \n  \n \n  \nSpeaker 3\n \n Okay, will it be DB executor? And we're only interested in for example errors.  \n  \n  \nSpeaker 1\n \n So I plan to make example of.  \n   \nSpeaker 3\n \n  \n Listening of DB execution errors. And I especially will do some example which makes such an error. Let's go to \ncustomer360, find accounts and let's try to remove some account. Obviously we will not be able to do this because it \nhas some connections with existing contacts. So I try to delete this account. Now you see no messages here. Try to \ndo this. Of course I see error messages and here I expect to get. I expect to get error messages. Oh, I should \nsubscribe. I should remember to subscribe.  \n  \n  \nSpeaker 1\n \n Okay, let's try to delete once again. Yes, error message appears.  \n  \n \n  \nSpeaker 3\n \n Logger pattern.  \n  \n  \nSpeaker 1\n \n Maybe you should use info subscribe.  \n  \n \n  \nSpeaker 3\n \n I will try to delete it once again.  \n  \n  \nSpeaker 1\n \n Yes, now you see, funny thing, but.  \n  \n \n  \nSpeaker 2\n \n It was not an error, it was just a warning.  \n  \n \n  \nSpeaker 3\n \n So like yellow color, which means this is not an error, just a warning.  \n   \n Speaker 1\n \n And okay, so I got some text.  \n  \n \n  \nSpeaker 3\n \n Message from our DB executor and you see that my message has an error. So exception occurred, statement \nterminated. And you see that we get some text messages and logs.  \n  \n \n  \nSpeaker 2\n \n You can also get the same logs.  \n  \n  \nSpeaker 1\n \n If you go to your files, you.  \n  \n \n  \nSpeaker 3\n \n Will find SQL JSON here we will have similar information. So you see my delete statement failed.  \n  \n  \nSpeaker 1\n \n So it conflicted with foreign reference constraint.  \n  \n \n  \nSpeaker 3\n \n And it's interesting that for the SQL.  \n  \n  \nSpeaker 1\n \n Errors, system logs only queries that were failed.  \n  \n \n  \nSpeaker 3\n \n So only queries that failed to be executed at the database. In my case, I intentionally made an error for the database \nlevel and showed.  \n  \n  \nSpeaker 1\n \n You how you can handle it and.  \n  \n \n  \nSpeaker 3\n \n How you can track it. You can also use all existing loggers for all messages subscribe. You will have plenty of \ndifferent messages here. Just when you go to any part.  \n  \n  \nSpeaker 1\n \n Of your system, when you open any.  \n  \n \n  \nSpeaker 2\n \n Section, you will start to get more.  \n  \n \n  \nSpeaker 3\n \n And more Logs because system usually writes.  \n  \n  \nSpeaker 1\n \n Something to logs and it has quite verbose logging. So you will have more and more data.  \n  \n \n  \nSpeaker 3\n \n You see more messages appeared, some of.  \n  \n  \nSpeaker 1\n \n Them are useless for you and so.  \n   \nSpeaker 3\n \n  \n You have to play a bit with it. But finally you will be able to do the same as you can do with log files. So this telemetry \nlog for creation will be extremely helpful in case if you need to make some experiments and get logs directly in \nonline mode from your cloud environments, including even production systems.  \n  \n  \nSpeaker 1\n \n So this can be really helpful for you. Please remember about this telemetry log and we have some buttons here.  \n  \n \n  \nSpeaker 3\n \n What is this? As you can see we have some help message explaining how to use this some button which shows or it \nruns.  \n  \n  \nSpeaker 1\n \n And stops a listening of logs.  \n  \n \n  \nSpeaker 3\n \n So green means run, red means stopped and that's how you can also use it. So listening all of the logs will provide \nyou a lot of verbose noisy messages. It's up to you. So maybe this will be interesting for you. So just remember the \nname of the tool is telemetry for Creatio.  \n  \n  \nSpeaker 1\n \n You can easily install it from Marketplace.  \n  \n \n  \nSpeaker 3\n \n Okay, so what else you need to know about client site?  \n  \n  \nSpeaker 1\n \n We will work with details soon and.  \n  \n  \nSpeaker 3\n \n \n Before we doing this I need to explain you how to do validation. As you can see my previous program was a bit more \noriented on classic ui.  \n  \n  \nSpeaker 1\n \n So sometimes I jump from topics topics and that's why we are not following directly from this schedule.  \n  \n \n  \nSpeaker 3\n \n So I plan to provide you material like step by step slightly improving complexity of topics. So I think it's not so hard, \nnot so difficult for you to study.  \n  \n  \nSpeaker 1\n \n This material this way.  \n  \n \n  \nSpeaker 3\n \n So let's move on validation. What it is about and this is.  \n  \n  \nSpeaker 1\n \n Check of data before it will be.  \n  \n \n  \nSpeaker 3\n \n Saved at server side. Let's return back to our reality section and let's look at our data value. So when we add new \nvalues it may happen that user may save some very incorrect values. For example, we can try to save.  \n  \n  \nSpeaker 1\n \n Negative price as you can see as.  \n  \n \n  \nSpeaker 3\n \n A result we have negative commission. It's also possible to save negative area and also system does not prevent us \nfrom doing such things. So we can save it. And as you can see from system point of view, there is no troubles, no \nerrors. But of course we have trouble from business point of view because we can't normally summarize values, we \ncan't normally calculate commission.  \n  \n  \nSpeaker 1\n \n So we have to make some kind.  \n  \n \n  \nSpeaker 3\n \n Of protection for our data input. And luckily we have this on the platform level as existing validation tools. Let me \nshow you how to use it. We also need to program this. Unfortunately, validation is only available when you do \nprogramming, so it's not a no code setting. But we are not afraid of this. Let's go to our configuration section, find.  \n  \n  \nSpeaker 1\n \n Our form page again, open its source code again.  \n  \n \n  \nSpeaker 3\n \n And I need to show you some examples at our Academy documentation which will really help you. So we have some \narchitectural SDK things at front end documentation, but we have.  \n  \n  \nSpeaker 1\n \n A lot of useful examples in platform.  \n  \n \n  \nSpeaker 3\n \n Customization area of our academy. And we have examples for Freedom UI for fields examples and we have \nexamples of population of fields. So it's example of calculations that we already discussed. And we have example of \nvalidation of.  \n  \n \n  \nSpeaker 2\n \n Field which we are interested right now.  \n  \n  \nSpeaker 3\n \n \n So I will share useful links for such articles.  \n  \n  \nSpeaker 1\n \n I recommend you to read it or.  \n  \n \n  \nSpeaker 3\n \n Just maybe look at it. So let me explain how we plan to move on. We have special area in our code named \nvalidators. Let me show you. So we have handlers and we have validators.  \n  \n  \nSpeaker 1\n \n So it's a special designed place for us to program special functions that will be used for checks of data during input. \nAnd luckily we have examples at Academy.  \n  \n \n  \nSpeaker 2\n \n Which will help us to make it.  \n  \n  \nSpeaker 1\n \n Smoothly without spending too much time. So validators is a collection, this is not an array.  \n  \n \n  \nSpeaker 2\n \n Now you see, this is a collection. Each collection item should include its name.  \n  \n  \nSpeaker 1\n \n And implementation and validation.  \n  \n \n  \nSpeaker 2\n \n Implementation includes validator property which is a.  \n   \n Speaker 1\n \n Function that finally should return something set of parameters and async property. Then when we finish with this \npart, we will connect our created validator with set of columns. So we may use one validator for many different \ncolumns by connecting them to our page attributes. So let me show you how we.  \n  \n \n  \nSpeaker 2\n \n Can do this and I already have.  \n  \n  \nSpeaker 1\n \n An example, we will not spend too.  \n  \n \n  \nSpeaker 2\n \n Much time on it.  \n  \n  \nSpeaker 1\n \n So now you will see how we can do this validation.  \n  \n \n  \nSpeaker 2\n \n First of all we go to validators.  \n  \n  \nSpeaker 1\n \n Area and we will provide some code here. I already have example, no difficulties. So Freedom UI validation example \nand I need to provide this example of code.  \n  \n \n  \nSpeaker 2\n \n Okay, let me copy and paste for you.  \n  \n  \nSpeaker 1\n \n This is example of our validation. Okay, no need to use cameras to show. Okay, so this is example of code.  \n  \n \n  \nSpeaker 2\n \n And I will also implement it.  \n  \n  \nSpeaker 1\n \n It's my own validators area. So copy and paste. What do you see here? So we register my validator with a specific \nname. So this is a kind of type or maybe validator type, let's call it so. And we can declare different numbers or \nunlimited number of different validators. This validator includes three major properties, whether it validator, function \nparameters and async property.  \n  \n \n  \nSpeaker 2\n \n So probably we have to Start with parameters first.  \n  \n  \nSpeaker 1\n \n Because parameters are values that we can provide for each validated column and for different columns, we can \nprovide different parameter values.  \n  \n \n  \nSpeaker 2\n \n Here we have to declare what parameters we will have.  \n  \n \n  \nSpeaker 3\n \n In my case there are two parameters.  \n  \n  \nSpeaker 1\n \n Min value and message parameter.  \n  \n \n  \nSpeaker 2\n \n Validator function has a bit complex structure. This is one function, it returns another. \n \n  \n  \nSpeaker 1\n \n Function and first function requests config, Another function requests control inside of control. Unfortunately we \nonly have value so it makes it difficult for us to analyze several values from different columns on our page.  \n  \n \n  \nSpeaker 2\n \n But it makes it universal.  \n  \n  \nSpeaker 1\n \n If we have value, we don't know exact column. So we can use the same validator for many different columns or \ndifferent columns and it will be universal for us. So we can take value and from.  \n  \n \n  \nSpeaker 2\n \n The config we know what parameters to expect. So we have min value parameter and we have message parameter.  \n  \n  \nSpeaker 1\n \n Our check is quite simple.  \n  \n \n  \nSpeaker 2\n \n We get value and then compare with min value. And in case if our value is.  \n  \n  \nSpeaker 1\n \n Greater or equal than min value then we think that data is correct and our returned result will be null, which.  \n  \n \n  \nSpeaker 2\n \n Means no warnings, no messages, everything is okay. But in case that value is not.  \n   \nSpeaker 1\n  \n Correct we have to return special type.  \n  \n \n  \nSpeaker 2\n \n Of result which is a JavaScript object with a specific name, the property inside.  \n  \n  \nSpeaker 1\n \n And with the message property inside of this property. So it's kind of nested JavaScript object and our message here \nwill be text, it should be displayed nearby problem control.  \n  \n \n  \nSpeaker 3\n \n And also this message will be explained.  \n  \n  \nSpeaker 1\n \n Displayed when we will try to save our page. So we will say try to save data system will check all the validators and it \nwill find that some columns are not correct and it will not allow to save it.  \n  \n \n  \nSpeaker 2\n \n So this is our example of a.  \n  \n \n  \nSpeaker 3\n \n Validation, but it's not applied yet.  \n  \n \n  \nSpeaker 2\n \n So we have to set up some.  \n  \n  \nSpeaker 1\n \n Columns which will work with this validator.  \n  \n \n  \nSpeaker 3\n \n Otherwise our validator is useless because no.  \n  \n  \nSpeaker 1\n \n Column expect checks with it.  \n  \n \n  \nSpeaker 2\n \n So I do not need to change anything here. This code is universal as you can see. No any hard coded column names.  \n  \n  \nSpeaker 1\n \n Only one hard coded thing is a validator type name. Next step is connection of validator with.  \n  \n \n  \nSpeaker 2\n \n Certain columns or it's better to say with attributes.  \n  \n  \nSpeaker 1\n \n So I will show you examples how we can connect. Maybe I should do it here. How we can connect validators to \ncolumns. I will put example so I have to find my price attribute. Let's go to my view model config div area. Here we \nhave attributes. Here is my price attribute inside of its structure.  \n  \n \n  \nSpeaker 2\n \n After module config I have to provide.  \n  \n  \nSpeaker 1\n \n Validators setting so I should carefully copy this and paste it here.  \n   \nSpeaker 2\n \n \n \n And that's how I will put it. So here's my price attribute.  \n  \n  \nSpeaker 1\n \n Here is my validator. The type of validator should be matched.  \n  \n \n  \nSpeaker 2\n \n With what we created and parameter.  \n  \n  \nSpeaker 1\n \n So the minimum value for the price.  \n  \n \n  \nSpeaker 2\n \n I think it will be 50.  \n  \n \n  \nSpeaker 3\n \n So we will not allow to save.  \n  \n  \nSpeaker 1\n \n Any reality object with the price less than 50 bucks. Okay, and also we can use message, not just a plain string \nconstant which.  \n  \n \n  \nSpeaker 2\n \n Is also supported, but also we can use localizable string. Here is an example of a macro.  \n  \n  \nSpeaker 1\n \n That you can use for localizable strings.  \n   \n \n Speaker 2\n \n And localizable strings are saved separately and can provide translations into other languages.  \n  \n  \nSpeaker 1\n \n So let me show you what localizable strings I plan to use. I will put it for you. And first, localizable string about price. \nSo my localizable string is named price cannot be less.  \n  \n \n  \nSpeaker 2\n \n I go to localizable strings. Probably we can save it before modifications.  \n  \n  \nSpeaker 1\n \n But now I will modify non localizable.  \n  \n \n  \nSpeaker 2\n \n Strings.  \n  \n  \nSpeaker 1\n \n Take significantly longer than usual. As you can see, my worker process consumed quite a lot of ram. It's more than \nusual. Okay, we can try to create localizable string with the code price can't be less and the value is price cannot be \nless than something. Okay, try to add and then I expect some troubles here.  \n  \n \n  \nSpeaker 2\n \n That's why I will try to save now.  \n  \n  \nSpeaker 1\n \n If it saves correctly, okay, no problem.  \n  \n  \nSpeaker 2\n \n \n But in previous versions I experienced some.  \n  \n  \nSpeaker 1\n \n Troubles with localizable strings here and it turned out to save it. So when I added once, it physically.  \n  \n \n  \nSpeaker 2\n \n Added it twice and then denied to.  \n  \n  \nSpeaker 1\n \n Save because it tells that such localizable string already exists. In case, if you face this kind.  \n  \n \n  \nSpeaker 2\n \n Of issue when you add localizable string.  \n  \n  \nSpeaker 1\n \n Try to save and then get error message about duplicated localizable strings. You can just remove that visible one \nthat you created.  \n  \n \n  \nSpeaker 2\n \n Another one which is invisible will be still saved.  \n  \n  \nSpeaker 1\n \n So that's how you can bypass this bug.  \n  \n \n  \nSpeaker 2\n \n As you can see, Creature also as.  \n   \nSpeaker 1\n  \n Any software, it has its own bugs. Sometimes bugs are detected, fixed new bugs appeared. So it's normal, more or \nless normal for any software.  \n  \n \n  \nSpeaker 2\n \n Another localizable string that we will need is about area.  \n  \n  \nSpeaker 1\n \n So localizable string for area.  \n  \n \n  \nSpeaker 2\n \n And for its.  \n  \n  \nSpeaker 1\n \n Value here, save it.  \n  \n \n  \nSpeaker 2\n \n Area can't be less. Let's try to save.  \n  \n  \nSpeaker 1\n \n And my intention when I save each time I add the localizable string is to check do I have any bugs with localizable \nstring. It looks like in this version this.  \n  \n \n  \nSpeaker 2\n \n Bug was finally fixed.  \n  \n  \nSpeaker 1\n \n That's nice. So for the price we already set.  \n  \n \n  \nSpeaker 2\n \n Settings, now we do the same for area. So let me show you what we.  \n  \n  \nSpeaker 1\n \n Do for area we will set validators setting for one column. We can use multiple validators so it's possible to make \nchecks with different criterias.  \n  \n \n  \nSpeaker 2\n \n And in my case for the area.  \n  \n  \nSpeaker 1\n \n I will use the same validator but.  \n  \n \n  \nSpeaker 2\n \n Minimum value will be 100 square feet.  \n  \n \n  \nSpeaker 3\n \n So it's close to 10 square meters. We think that we will not input any kind of realty less than 10 square meters or 100 \nsquare feet.  \n  \n  \nSpeaker 1\n \n And that's our limitation here.  \n  \n \n  \nSpeaker 2\n \n And we will use localizable string that.  \n   \n Speaker 1\n \n We already successfully saved. Okay, now we have this example, save.  \n  \n \n  \nSpeaker 2\n \n It and then it's our turn to.  \n  \n  \nSpeaker 1\n \n Test and check out how our data were saved. How well it looks, we can close.  \n  \n \n  \nSpeaker 2\n \n Our editor, go to main app probably.  \n  \n \n  \nSpeaker 3\n \n Let'S reward it just to fight with.  \n  \n  \nSpeaker 1\n \n Any potential impact of browser cache issue. Then let's open any record and specially intentionally open the record \nwhich has incorrect stuff here.  \n  \n \n  \nSpeaker 2\n \n Now you see that once we finished.  \n  \n  \nSpeaker 1\n \n And moved focus out of control, you see we have some checks and this checks displays error message.  \n  \n \n  \nSpeaker 3\n \n Price can't be less than 50 bucks. Area can't be less than 100 square feet. If we try to save such data, system will \nreject it tells us we have problems and we have to fix them. Okay, let's fix only price try to save. We still have trouble \nwith area. When we fix area, then our troubles are over and system saves it normally. Please note that if you do \nsomething like this and try to save your data Validation works at client side so it doesn't send any messages to \nserver side. Now you see nothing appeared in network tab until we will fully fix our rental price. In this case you see \nupdate query executed. So physical data was sent to server side only in case of successful client validation.  \n  \n \n  \nSpeaker 3\n \n So this validation may help you to improve your logic to make it more protected to get rid of like silly mistakes made \nby end users.  \n  \n  \nSpeaker 1\n \n And I think that this is something that will be quite important in your future projects and implementation.  \n  \n \n  \nSpeaker 2\n \n Now I plan to show you some.  \n  \n  \nSpeaker 1\n \n Simple topic and it's simple but it's very important because such topic will be.  \n  \n \n  \nSpeaker 2\n \n Quite often faced in your projects. It will be not really directly connected with programming, but it's something that \nyou definitely should know about.  \n  \n  \nSpeaker 1\n \n I'm talking about typical settings of columns.  \n  \n \n  \nSpeaker 2\n \n That you need according to some conditions.  \n  \n  \nSpeaker 1\n \n For example, some column must be visible.  \n  \n \n  \nSpeaker 2\n \n Only in case of a certain condition and otherwise should be hidden or another.  \n  \n  \nSpeaker 1\n \n Column must be required according to some conditions and otherwise should be optional. And also you may need \nsome like talk about visibility, about required settings or about read only columns. So such Typical settings for \ncolumns are.  \n  \n \n  \nSpeaker 3\n \n Frequently faced in requirements from business owners and that's why such functionality was decided.  \n  \n \n  \nSpeaker 2\n \n To implement as a no code Tools.  \n  \n  \nSpeaker 1\n \n And developers code such functionality. Business rules Let me show you how you can manage such business rules \nand I will show you a couple of examples. We can go to modify our page so edit page. Then we go to special button \nbusiness rules. Please note we have two types of business rules.  \n  \n \n  \nSpeaker 2\n \n Page business rules mainly used for controls.  \n  \n  \nSpeaker 1\n \n Visibility, maybe required property, read only property and also we have object business rules here it's called realty \nbusiness rules, but.  \n  \n  \nSpeaker 2\n \n \n You should understand this is about object. Object business rules also offer us possibility.  \n  \n  \nSpeaker 1\n \n To make some filtering and depending on the type of business row, it will be physically saved into metadata of a.  \n  \n \n  \nSpeaker 2\n \n Page or into metadata of an object.  \n  \n  \nSpeaker 1\n \n So let me show you.  \n  \n \n  \nSpeaker 2\n \n Let's imagine our task is quite simple.  \n  \n  \nSpeaker 1\n \n To show comment only in case of type is not empty.  \n  \n \n  \nSpeaker 2\n \n So when we add new data, type.  \n  \n  \nSpeaker 1\n \n Could be not specified. In this case, comment should be hidden. Let me show you how we can do this.  \n  \n \n  \nSpeaker 2\n \n We can use page level business rules.  \n   \nSpeaker 1\n  \n Because it's about column visibility add new rule. This rule will have automatically generated title to be applied to the \npage and it has triggering condition, page is open or some condition changed.  \n  \n \n  \nSpeaker 2\n \n So we have if scenario and then action. Okay, let's start with if and now we will think of something like.  \n  \n  \nSpeaker 1\n \n I should do it a bit better with initial status. Okay, so if our type is not empty, then comment should be visible.  \n  \n \n  \nSpeaker 2\n \n Let's try to do this attribute or.  \n  \n  \nSpeaker 1\n \n Data field realty and our type okay, if type is not empty so we can use condition is filled in. If this condition is true, \nthen we will use action show elements on the.  \n  \n \n  \nSpeaker 2\n \n Page and we can decide what element.  \n  \n  \nSpeaker 1\n \n Will be shown to be Input column of a comment text comment okay, so if type is filled in comment will be visible.  \n  \n \n  \nSpeaker 3\n \n Otherwise comment will be hidden.  \n  \n  \nSpeaker 1\n \n So let's try to test how it works.  \n   \n \n Speaker 3\n \n We can save it.  \n  \n \n  \nSpeaker 2\n \n Save our page.  \n  \n \n  \nSpeaker 3\n \n Now and let's check how it will be physically working for us.  \n  \n \n  \nSpeaker 2\n \n As you can see, each time you.  \n  \n  \nSpeaker 1\n \n Develop something, this is very important to immediately test it when it's ready and.  \n  \n \n  \nSpeaker 2\n \n When you make many different changes you.  \n  \n  \nSpeaker 1\n \n May think of okay, I will do many changes, then I will test them in total.  \n  \n \n  \nSpeaker 2\n \n I do not recommend you to follow this approach, so it's much better and more safer.  \n   \nSpeaker 1\n  \n If you will do some small step.  \n  \n \n  \nSpeaker 2\n \n Then you go to your system and.  \n  \n  \nSpeaker 1\n \n Start to test it.  \n  \n \n  \nSpeaker 2\n \n Then you do another small step, then you do another test.  \n  \n  \nSpeaker 1\n \n The reason is that creature client side sometimes could bring you surprises and it will be not so clear according to.  \n  \n \n  \nSpeaker 2\n \n The error message text in your browser console. To understand what exact part is gave you such a surprise.  \n  \n  \nSpeaker 1\n \n So it's better to make small steps and to test it frequently. So once you get and start to.  \n  \n \n  \nSpeaker 2\n \n Get some error messages and you will.  \n  \n  \nSpeaker 1\n \n Easily understand that it was caused probably the most latest recent changes and you.  \n   \nSpeaker 2\n \n  \n Should take care about it and maybe.  \n  \n  \nSpeaker 1\n \n Revert them maybe to look carefully and.  \n  \n \n  \nSpeaker 2\n \n You will find some errors. So small steps and frequent testing. This is what I recommend to you. So let's open any \nrecord.  \n  \n  \nSpeaker 1\n \n Type is set, Comment is visible. It's clear the type. Now you see it's a bit uncertain, so it's not cleared and let's set it \nagain. Okay, if you clear it doesn't work.  \n  \n \n  \nSpeaker 2\n \n I think that we have a problem because of initial state of the square column. Let me show you how we can fix it.  \n  \n  \nSpeaker 1\n \n Initial state should be aligned with our business rule and in case if we.  \n  \n \n  \nSpeaker 3\n \n Check some condition and turn this column on. So make it visible. So by default this comment should be hidden. \nLet's select comment, let's set its visibility default visibility not visible and then save our changes. So by default \ncomment will be hidden and according to the business rule, it will be enabled if type changed and became not \nempty. Let's check it out. We need to reload. Fighting with browser cache.  \n  \n  \nSpeaker 1\n \n Clear.  \n  \n  \nSpeaker 3\n \n \n Now you see our comment disappeared. If we set some type, it appeared again. If we change type, it appears again.  \n  \n  \nSpeaker 1\n \n If you clear, it hides.  \n  \n \n  \nSpeaker 3\n \n Hides? Yes. So that's how you can manage visibility and such setting. As you can see, it's a no code setting. So you \ncan make all the settings with your mouse. It doesn't require any programming. I would like you to see another \nexample. So you can also see visibility, editability and required property. And one more thing which is interesting I \nthink is about selecting values in lookups. Now we have selection of manager from contact. We can display \nadditional columns here. For example, contact type. Okay, I'm too lazy to scroll. I will type this. Now you see some \ncontexts have customer type, some contexts have employee type, and so on. Finally, my contacts list will include \nmany different persons and only some of them will represent my company employees.  \n  \n \n  \nSpeaker 3\n \n When I want to specify manager here, I definitely want to specify someone who is company employee and not just a \nrandom contact. So I want to make some simple filter here which will help me to select only context with a certain \ntype. And we can do such filtering with the help of business rules. So let's go back to our page, go to business Rules. \nNow I plan to use object level business rules. So here you see real to business rules which means realty object \nbusiness rules. Here was page. Now here is object level.  \n  \n \n  \nSpeaker 3\n \n Okay and first of all I will check available action here and in comparison with page level we have more options here \nand I plan to use simple static filter Business rule Static filter will not require any as you can see static filter will not \nrequire any special conditions I mean for triggering so it will be applied always. That's why it's called static. And I will \nhave a column which column I plan to use for filtering. This will be manager column and what filter I plan to use I \nhave to specify it with additional condition. Please note here those of you who use Windows Home probably you \nmay experience difficulties because it was found that users with Windows Home experienced troubles opening this \ntab and it was simply not possible if you use Home Edition.  \n  \n \n  \nSpeaker 3\n \n So please be careful when you use this home version and just know about this. So this will be temporary not \navailable for you. I can make condition here. Contact type equals to a constant employee. So if this filter will be \nconstantly applied on my lookup, save it.  \n  \n  \nSpeaker 1\n \n And then save it again.  \n  \n \n  \nSpeaker 3\n \n Now I save page and I will reload my main tab and you will see how this manager filter will work for us. Go back. \nOkay, let's save changes. Close reload this reloading is necessary only to work with browser cache. Let's check. Now \nlet's try to select values. Here you select data. Now you see only context with employee type.  \n  \n \n  \nSpeaker 2\n \n Okay, let's make more examples better examples.  \n  \n  \nSpeaker 1\n \n And go to customer 360 add more contacts to make it representative and let's make a contact name something like \nJames Bond and type will be customer. Okay, one more Bruce Lee will be our employee and Bruce Willis will be also \nour employee. So you will see we have some different contexts, different types and let's go back to our realty, try to \nselect manager system only shows us only context with a certain type.  \n  \n \n  \nSpeaker 2\n \n This is very simple filtering tool.  \n  \n  \nSpeaker 1\n \n As you can see we just used only mouse to set up this type of customization. But it's very efficient and that's why.  \n  \n \n  \nSpeaker 2\n \n I think it's important for you to know about it.  \n  \n  \nSpeaker 1\n \n Because even if it doesn't require programming.  \n  \n  \nSpeaker 2\n \n \n But if you did not attend our.  \n  \n  \nSpeaker 1\n \n Customization course, you still need to know.  \n  \n \n  \nSpeaker 2\n \n That such type of filtering is supported. Also I can quickly show you another filtering of connected fields like filtering \ncities by countries.  \n  \n  \nSpeaker 1\n \n So or maybe if we focus on us only. For example we can filter cities by states but Maybe for countries it will be more \nclear and understandable.  \n  \n \n  \nSpeaker 2\n \n So let's go again to our page. In order to filter something by something.  \n  \n  \nSpeaker 1\n \n Of course we need to have connected lookups.  \n  \n \n  \nSpeaker 2\n \n Luckily in base product cities and countries are already connected.  \n  \n  \nSpeaker 1\n \n Each city has corresponding country reference. Let me show you cities lookup already has connections with country. \nLet me select fields to display. We have names. I don't need time zone at all. But I want you to see country. Okay, \nsave it. Now you see a lot of different cities from different countries and it looks like data lookups. Data in our \nlookups is already well, so let's do such settings. I will add two drop down columns to my page and it will be.  \n  \n \n  \nSpeaker 2\n \n Probably we have to start from country. \n \n  \n  \nSpeaker 1\n \n Because we plan to input data starting from country providing country value and then USR country copy and lookup. \nWe will use standard lookup. Country that is already present will be drop down list. Okay. And here element code will \nbe also country related. So that's how I add new lookup. Now I will show you CT's lookup. So it will be city confirm \nlookup.  \n  \n \n  \nSpeaker 2\n \n That will be based on.  \n  \n  \nSpeaker 1\n \n It's also CT drop down list. And here we can name something like city. It will be enough. The most important is \nuniqueness of this column. But city is good enough.  \n  \n \n  \nSpeaker 2\n \n Good unique value for us.  \n  \n  \nSpeaker 1\n \n Okay. Is it okay? Should be. I don't like. Yeah, probably there are limitations about the length of this. Okay, so what we \nhave here is country and city and we need to save it first in order to apply.  \n  \n \n  \nSpeaker 3\n \n Changes to the object level.  \n  \n  \nSpeaker 1\n \n And so to fully modify our data model properly to take maybe less than a minute our time. It okay, saved. Well, now \nwe go to business rules. So I will show you how we can make a object level business rule for connected lookups. \nLet's add one more lookup. Action will be apply filter.  \n  \n \n  \nSpeaker 3\n \n This is a special type of filter.  \n  \n  \nSpeaker 1\n \n Which is I think originally designed for connected lookups. And we can specify what column to filter. Obviously we \nwill filter cities by what another column by country. And this editor will automatically detect connections.  \n  \n \n  \nSpeaker 2\n \n Between cities and countries. So it will show us where city.  \n  \n  \nSpeaker 1\n \n Country which means country value inside of city lookup equals to value of country.  \n  \n \n  \nSpeaker 2\n \n Provided in our realty page and also automatic settings for clearing when country changed.  \n  \n  \nSpeaker 1\n \n Clearing cities when country changed or automatically set country if city was set and for example country was \nempty. So you can do this also then country will be automatically populated.  \n  \n \n  \nSpeaker 2\n \n So this rule will work good for us.  \n  \n  \nSpeaker 1\n \n But what I need to add here is triggering condition.  \n  \n \n  \nSpeaker 2\n \n We need to change such Filter each.  \n   \nSpeaker 1\n  \n Time when country changes, so page is opened or some changes and when country. Okay, we can select here is \nfilled in. Then we have to apply this filter. So if country changes and becomes filled in, then filter should be applied. \nOtherwise you may face some glitches in.  \n  \n \n  \nSpeaker 2\n \n Working with this filter.  \n  \n  \nSpeaker 1\n \n Sometimes it will work, sometimes not.  \n  \n \n  \nSpeaker 2\n \n So you should not forget about this condition. Let's save it.  \n  \n  \nSpeaker 1\n \n Save page and then we will test it. You will see how it works. Great. You see data was successfully saved, page \nsaved.  \n  \n \n  \nSpeaker 2\n \n Okay, let's test. We need to reward it. And now let's check it out.  \n  \n  \nSpeaker 1\n \n So let's say Miami and you see.  \n  \n \n  \nSpeaker 2\n \n Country, you see city.  \n  \n  \nSpeaker 1\n \n Okay, Country, States, United States.  \n \n \n \n  \nSpeaker 2\n \n Cities. As you may see, cities are filtered by country. You only see cities.  \n  \n  \nSpeaker 1\n \n Oh, Hartford, Frankfort.  \n  \n \n  \nSpeaker 2\n \n Looks like only.  \n  \n  \nSpeaker 1\n \n US cities I think. Okay, so now you see it looks.  \n  \n \n  \nSpeaker 2\n \n Looks like. Well, okay, let's take another example.  \n  \n  \nSpeaker 1\n \n No country, you see all cities from different country. Ararat, Astrakhan, Baghdad, you see Bishkek, you see Bratislava.  \n  \n \n  \nSpeaker 2\n \n So from different countries from.  \n  \n  \nSpeaker 1\n \n Okay, so if you set some city.  \n  \n \n  \nSpeaker 2\n \n Country will be populated automatically in this case.  \n  \n  \nSpeaker 1\n \n But if you clear country, city was cleared automatically. So if we provide some country like Bangladesh, you will see \nonly filtered cities. Here if you change country to something else like Egypt, you will see only Egypt city. So filtering \nworks well.  \n  \n \n  \nSpeaker 2\n \n Let's go to our states.  \n  \n  \nSpeaker 1\n \n Now we have to search for Seattle.  \n  \n \n  \nSpeaker 2\n \n Yes, you see it finds and filter works well. So this type of filtering can be.  \n  \n \n  \nSpeaker 3\n \n Done not only for citizen countries. For example, you can make two connected hookups.  \n  \n  \nSpeaker 1\n \n One is type of document and second one is for example subtype.  \n  \n \n  \nSpeaker 3\n \n And subtype should have a lookup column.  \n  \n  \nSpeaker 1\n \n Referencing to corresponding type.  \n   \nSpeaker 3\n \n  \n And in this case when user specifies type, it will be technically possible to.  \n  \n  \nSpeaker 1\n \n Filter subtypes according to selected type. But this canonic example with countries and cities, I think it's the easiest \nto.  \n  \n \n  \nSpeaker 2\n \n Understand examples so you can also use it.  \n  \n  \nSpeaker 1\n \n Don't forget about business rules triggering by changing country. So save it. Probably that's enough for today and \nwe.  \n  \n \n  \nSpeaker 2\n \n Have one more session tomorrow that will.  \n  \n  \nSpeaker 1\n \n Be dedicated to our client side.  \n  \n \n  \nSpeaker 2\n \n I plan to show you how to.  \n  \n  \nSpeaker 1\n \n Make details and also probably answer your questions if appear. If you ask something about some cases with \nprogramming inside of our pages in Freedom UI later we probably will also invest a bit of time into classic.  \n  \n \n  \nSpeaker 2\n \n UI examples and I think you'll be. \n \n  \n  \nSpeaker 1\n \n Interested in migration from Classic UI to Freedom ui. It will be only client side, so objects will be the same. I will \nshow you how you can do such migration.  \n  \n \n  \nSpeaker 3\n \n Thank you very much for your time.  \n  \n \n  \nSpeaker 2\n \n Today our session is over. In case. If you have any questions with your.  \n  \n  \nSpeaker 1\n \n Environments, with your homework, tell me please. It's important for me to know. Do you have any troubles or other \nnotes, any questions?  \n  \n \n  \nSpeaker 4\n \n I have one. Did we go over. I could have just missed this now. It could have just been me. Did we go over the \noverriding. I think it was on the list of the. The kind of schedule for each day we had Parent overriding. Overriding a \nparent method. Did we go over that and I just. Or is that something we have to go back to?  \n  \n  \nSpeaker 1\n \n You probably asked about something that you.  \n  \n \n  \nSpeaker 2\n \n Already saw in Classic UI with overriding of methods or this is something else. So can you explain the business \nexample?  \n  \n \n  \nSpeaker 4\n \n No, sorry, I just saw it on the list on. So you know you have the list of the breakdown of each day. It was an. It's kind \nof what you open up with this. With the start of each day.  \n  \n  \nSpeaker 1\n \n Oh, you mean this one?  \n  \n \n  \nSpeaker 2\n \n This is.  \n  \n  \nSpeaker 1\n \n Yeah, yeah. So this schedule is a bit outdated unfortunately. Okay, try to find some time and yes, there are some \ntopics that are not so applicable to Freedom UI and you may find something like alternative JavaScript editors. Okay, \nI can explain you something and overriding of methods.  \n  \n \n  \nSpeaker 4\n \n That's it.  \n  \n  \nSpeaker 1\n \n It was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui. In Classic UI you \ncould rewrite or interfere into some life cycle stages of page by replacing its like critically important methods. In \nFreedom UI you can write your.  \n  \n \n  \nSpeaker 2\n \n Own methods, but system does not allow.  \n  \n  \nSpeaker 1\n \n You to significantly change this life cycle. So it looks like I tried and.  \n  \n \n  \nSpeaker 2\n \n It looks like when you have for.  \n \n \n  \nSpeaker 1\n \n Example some handler and you already know that there is a base product handler which is declared somewhere in \nparent.  \n  \n \n  \nSpeaker 2\n \n Templates, you cannot replace it with your own. Rejecting execution of all parent implementation.  \n  \n  \nSpeaker 1\n \n So in Freedom UI you can write your own part and it will be.  \n  \n \n  \nSpeaker 2\n \n Just part of all the steps executed.  \n  \n  \nSpeaker 1\n \n In total and you can't break the way how pages code and what handlers are called there until you will write your own \ncontrol, I think so in Freedom UI we have different conditions for programming. I plan to update this program for.  \n  \n \n  \nSpeaker 2\n \n Our sessions and it's a bit outdated.  \n  \n  \nSpeaker 1\n \n Here, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural. So \nwhen you do simple settings, then.  \n  \n \n  \nSpeaker 2\n \n You do a bit more complex.  \n   \nSpeaker 1\n  \n And so our flow of real topics that we study, I think it's quite optimal for current version.  \n  \n \n  \nSpeaker 4\n \n Thanks Mario.  \n  \n  \nSpeaker 1\n \n Thank you Paddy for questions and any.  \n  \n \n  \nSpeaker 2\n \n Any, any difficulties with your Homework.  \n  \n  \nSpeaker 1\n \n When you do examples, when you make your sections, Maybe. Maybe you have something to say.  \n  \n \n  \nSpeaker 3\n \n It happens that most of our participants watch videos like you now and then they decided to process video files \nmuch later than finishing of the sessions. So I recommend you to invest some time between the sessions to watch \nvideos and practice. Because in this case you will easier understand our next topics. You will get more experience at \nthat topics and think it will be in general faster for you. So it will be faster boarding faster, let's say getting necessary \nexpertise for you as developers. So at the end of the sessions you'll be able to pass an exam. We call it Fast Track \ncertification, which includes homework very similar to what we do here and test. This test will require some time for \nyou to prepare.  \n  \n \n  \nSpeaker 3\n \n So at the end of the sessions next week, I will explain you some details how we will prepare for the exam, how it will \nbe organized and this is optional thing. So if you feel confident, you may apply for it. If not, you may use Academy \nwebsite and apply for certification much later. So if interested in preparation for the exam, also keep it in your mind. \nAnd if you have some questions, feel free to ask. Also maybe you will want to write me some messages. Here is my \nemail. I will be happy to answer you and support you during your practicing with examples in our sessions. Thank \nyou for your time today. See you tomorrow as usual. And as usual, you will receive videos of today's session very \nsoon, maybe 40.  \n   \nSpeaker 1\n  \n Or 50 minutes to get this video.  \n  \n \n  \nSpeaker 3\n \n Thank you and goodbye. See you tomorrow. Bye.  \n  \n  \nSpeaker 1\n \n It.  \n \n  \n  \nSpeaker 1\n \n So today's day five of our development on Creature platform guided learning and we continue to work with some \nparts of Creature user interface slightly moving forward to so to study some server side items. And also I need to tell \nyou about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui. So what I need \nto tell you first today, this is about details. Because this is a very important piece of Creature configuration and you \nwill face it almost everywhere. Let me show you what detail is go to customer 360 because it's a good example of \ndetails. We go to accounts section and then we can open any account record. Detail is separate entity which keeps \nsome data in connection to our main record. Here we can see an example. Main record is account and detail is \naccount address.  \n  \n  \nSpeaker 1\n \n And you can see that for one main account record we can save unlimited number of addresses. So we can put \nunlimited number of addresses here and they will be usually displayed in a list. And the reason why Creature has \ndetails is need to save additional data in connection to our main entity. So our main entity is a single record and then \nwe need to keep information for example about different types of addresses for our customer or different emails. Or \nmaybe it's just simple list of contacts connected to this account. So you should understand that detail is usually \nbased on a separate entity. So account is one entity, Account address is a separate entity, it means separate object \nand it means separate physical date table. Usually we have one too many relationship between details and main \nrecords.  \n  \n  \nSpeaker 1\n \n So one account connected to as many detail records. And this physical connection is provided by use of lookup \ncolumns, correctly filled in for detail records. Vikrat, thank you very much for confirmation. Thank you for working \nwith your redis and I'm really happy that you finally made your system working correctly. Thank you. And so details, \nthey are usually connected with main entity with the help of lookups, lookup columns. And each detail record has \ninformation about its parent account. And that's how system can filter through all addresses and show only \naddresses related to this currently selected data record. Details are very common in creation. If you will turn on \nbigger product like sales service and marketing, you will see details almost everywhere. And we have big entities like \ncontacts or accounts and they have plenty of details like addresses in accounts.  \n  \n  \nSpeaker 1\n \n We have contacts list, we have also emails or sorry, we have probably it's better to say communications. If you go to \ncontacts open any record, you will see communications detail. So here you see we have mobile phones, email, \nbusiness phone, but in general we have plenty of Supported communication options and communications are saved \nas a detail connected with main entity in context. We also have detail named job experience. And when we have \nseveral entities, sometimes they are connected with each other with the help of lookups. And that's why and that's \nhow we can make some details. For example, we can look at accounts and see list of connected contacts because \ncontact has a reference to account. Let me show you here Account select. And now you see that we have contacts \nand they have reference to account.  \n  \n  \nSpeaker 1\n \n And that's how we can select a company and to see all its connected contacts. So usually connection is one too \nmany. Maybe some of you will ask about is it possible to make a connection one to one or data connection many to \nmany. Physically this is possible, but you should use for one to one you still will have to use separate object. And for \nmany to many we will have to use supporting additional object which will use two lookups for two connected \nentities. So the easiest to implement and I think the most commonly used case is use of one to many relationship. \nAnd now let's return back. Let's return back to our reality section. So we will study and we will learn how to make \ndetails.  \n  \n  \nSpeaker 1\n \n And some of you who already participated in our develop and in our customization course, you already know how to \ndo this and you already saw building details. So this is nothing special for you. But some of you who never attended \nany of creatio training sessions, so you need to know what detail is how to build it because it's almost the same \nimportant as knowledge how to build sections. So I will show you step by step example of building details and I will \nexplain why we need it. The main reason is our business requirement to keep a lot of connected information for our \nmain record. And this connected information usually should be saved in a separate entities. So when we talk about \ndetails, we talk about separate connected entities. So let's do some quick and simple example.  \n  \n  \nSpeaker 1\n \n In our realty business, we definitely need to speak with potential customers. We need to provide some kind of show \nfor them or our apartments or houses set for sale or rental. And we need to organize these actions. So we need to \norganize such visits, such conversations. And it's better not to intersect and overlap different visits at same time. So \nwe need to have some kind of schedule for future visits connected to a certain realty record. So it looks like we will \nhave a separate entity called realty visits. And for each house or apartment we will have a list of planned visits for \nfuture we can do it with a separate object and I recommend you to create new details for the first make an object for \nit.  \n  \n  \nSpeaker 1\n \n So let's go to our configuration section select our package where we will work on maybe we focus on objects first \nand we will create manually create new object. So new object requires new good working friendly code. We can call \nit something like realty visit title will be also good. Sorry realty visit inheritance it makes sense to inherit only from \nbase entity in order to get just six standard system columns here keyfield historical columns. Okay, we do it \ninheriting from base entity and we can create our own custom columns for our new entity. One of the first column \nwill be connection with parent realty because our visit will have no sense if we are not connecting it to any reality. So \nlet's create new lookup column.  \n  \n  \nSpeaker 1\n \n We can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI \nUSR realty and we can make it column required because it's not good idea to keep it empty if we create any valid \nvisit so this colon will be required. We have no default values here, but we have a special lookup behavior. Normal \nbehavior means when we delete value from corresponding reference table from realty Having such connection with \nany other data table will prevent our delete and we will have a foreign key reference error message. Because we can't \ndelete reality if it has some visits and we have a standard delete behavior. So block deletion.  \n  \n  \nSpeaker 1\n \n But in details it's very common that detailed data is not as important as main record and when we plan to delete \nmain record delete data should be deleted. So our child detail data should be deleted without any questions like \nwhen we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact \ncommunication so we don't care. We also want to delete them as well as addresses or some payment information \nor something else. So anything which is connected to the main record. If we decided to delete main record usually \nwe are interested in silent delete of all the child parts.  \n  \n  \nSpeaker 1\n \n So here our reality visit is something that is not very important in case if we delete parent reality so we can set \ndelete records from current object it means when parent reality is deleted, all connected visits will be removed \nautomatically physically. This is performed by help of foreign key at the database and with option cascade on delete. \nSo physical delete performs on the database level, not at application level. Unfortunately you can't handle you \ncannot handle such delete at application level because it will be triggered and made by database foreign key tools. \nBut okay, so we have parent reality required special set for delete behavior. Good. This is our column for connection \nbetween visits and parent reality. Now we have to make some columns that will work for business part of us. So any \nvisit will have date and time of visit.  \n  \n  \nSpeaker 1\n \n So we can call this colon visit date time. We can make some default value just to make it easier to set up new values \nand will be system variable current time and date Default value will be provided in case if you try to add the new \nrecord. And it makes sense especially if you want to change for example till tomorrow. But having similar time \nsetting automatical value here will be quite good. So visit date and time it makes sense to make it required because \nhaving no visit time, it's definitely not good to visit data. One more thing we may know potential customer this is a \nlookup. We can call this potential customer. Why potential? Because we already have a real customer for our realty \nwho asked us to help with sale or rentals.  \n  \n  \nSpeaker 1\n \n So potential customer is a person who probably will buy a house or will rent an apartment. So potential customer, we \ndon't know who it is. So sometimes could be empty. And lookup is contact object which is a very typical way when \nwe need to get some kind of personal reference. So usually we use contacts for this and for context selection. \nMaybe we need full scale selection window instead of list and using normal block delete option here. Also you \nprobably will be interested in some very rare cases you may not need foreign keys at all. For example, you do \nsomething artificial like selecting data not from a real table but from some data view as a lookup. In this case you \nwill not be able to construct a valid foreign key.  \n  \n  \nSpeaker 1\n \n So we have an option do not control integrity which means please do not create foreign keys by default. When you \ncreate a lookup column foreign key is created automatically. But if you enable option do not control integrity it \nmeans that foreign key will be not created. It's interesting fact that such option was used for created by you see do \nnot control and for modified by. The reason why developers need it is performance. So created by and modified by is \nusually set automatically by system. You see system variable, it's a current user contact and usually system sets this \nvalue correctly.  \n  \n  \nSpeaker 1\n \n So such a column is usually not edited by end customer and it means that we have pretty no serious reasons to \ncontrol it with the help of foreign keys only in case if you try to remove corresponding contact then such created by \nor modified by columns should prevent this data from Removal. But it's very rare case when you remove contact who \npreviously was a user of your system. So generally we can say that in this example having foreign key is not so \ncritical because value for this column is usually set by system and it's set correctly. So developers also realized that \nif we have no such option and let's imagine we have probably thousand of out of the box objects for our big base \nproduct like sales, service and marketing. So it will produce 2000s of foreign key.  \n  \n  \nSpeaker 1\n \n So for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing \nto contact entity. So now let's imagine you have a database which pretends to be quite fast and comfortable for \nwork for big company. And then you have a table in this database contacts table which has 2000 foreign keys on it. \nEach time you try to make any changes in these tables, such foreign keys will be invalidated and they will be checked \nand it will be a huge performance impact on your database. And each time you do some operations like inserts and \nupdates, such foreign keys are also checked and the contacts table will take a huge time for blocks that is necessary \nto perform low level database checks for work of foreign keys. So developers decided to sacrifice referential \nintegrity here.  \n  \n  \nSpeaker 1\n \n And that's why they decided to make it with no foreign keys. For created by and for modified by and such behavior \nwas inherited from base lookup. Oh sorry. From base entity. If you will search for a base entity in our packages, open \nit. You will find out that this column created by has option do not control integrity and the modified by also has this \noption do not control integrity. So this is made intentionally and because of performance. So maybe something like. \nInteresting fact, you may need this option in very rare cases when you create some artificial lookups based on \nsomething that is not a table. Like something that is a database view or even something more weird thing like a \nprogrammed stuff at the server side, not a database item at all.  \n  \n  \nSpeaker 1\n \n In this case do not control integrity will save you because otherwise system will fail to save your object where it can't \nfind physical data based at your point on selecting your lookup data source. So here we have just standard situation \npotential customer based on contact. We have all standard settings and the only change was selection window. So \nfull scale selection window selected just to make it more comfortable to select potential contacts potential \ncustomers as a context from big selection window. Okay, what else? Probably we need one more column here. This \nis comment. Let's make a text 200 and comments. Sorry. Yep, title will Be comment. So any visit may end out with \nsomething like we need to remember to write down and just to have some notes, maybe some decisions, maybe \nsome ideas.  \n  \n  \nSpeaker 1\n \n So comment after a visit could be really helpful if you want to proceed with this realty. So we can have a comment \nas a text field, very simple, not required and just text value. Okay, so now it looks like our simple detail object is \nalmost ready and we have to save and publish it. Clicking publish as you remember will automatically perform save \nfirst. Now you see it and then it will do publish operation and it also takes a couple of seconds. Great, our object is \nready. But what we need to do and what is a bit different from maybe you have some experiences older UI and \nmaybe you have some previous creation experience. So Starting from version 8, objects are connected to page \nobject connected with pages with a separate special setting inside of objects properties.  \n  \n  \nSpeaker 1\n \n So now you can see pages tab and we have to specify edit page for our reality visit. Obviously we don't have any \npage for this, so we can easily create with the add new page button we can create new page edit page for our detail \nwe can specify select some parent template that will be used as a basis for our page. Our column set is not so big \nand impressive so we can just take some mini page example which will also look good if you have not so many \ncolumns. So I will select mini page and this mini page offers us possibilities. Okay, we can use some code, let's say, \nlet's put some good looking code like realty visit page title Reality visit page. Okay, maybe we can call it form page \njust to make it traditional with realty form page.  \n  \n  \nSpeaker 1\n \n So reality visit form page Its parent packages realty template is mini page. Great, now we have to use existing \ncolumns. As you can see we can add new columns but we already have data model attributes already designed in \nour object so we can just show it up. So what we need here is visit date and time. Probably the first important \ncolumn that we need to display. Second important column is potential customer and third one will be comment. \nOkay, so you may ask me and what about parent reality? It's mandatory. Why don't we show it here?  \n \n \n  \nSpeaker 1\n \n The answer is that in case of detail management, when we add new data from the main edit page from main realty \npage, our parent realty will be already known and we should not allow to change it for user and we should probably \nshould not even show it for a user. So we can hide this column so we cannot show it on the page. And in case of \ncreating a record detail or in case of updating new record or update an existing record or editing record. In all the \nscenarios we can set parent realty automatically. So we may not allow our user to change reference to a parent \nrealty of an existing visit. And that's why I will not show this column for user at all.  \n  \n  \nSpeaker 1\n \n So it will be just hidden, it will be not shown on the page and our reality visit page will look like this. We can see why \nis there a red asterisk beside visit date and time and parent realty. It means the column is required system will not \nallow us to save data if required column is empty. Okay. And for parent reality we will guarantee that it will be filled \nincorrectly. So even if it's required, we will make we will take care about setting it properly in all possible scenarios. \nSo we don't need to show it in edit page. We can show it and probably make it locked just to display and \ndemonstrate that this visit is connected to some parent reality. But we will always look at this page from realty main \npage so maybe it's not necessary.  \n  \n  \nSpeaker 1\n \n This is very common for details and creature to hide parent column from the page at all. So we can save our page \nnow. So save it fully. No business rules, no code, no any special settings. So try to keep it as simple as possible. And \nwhen we did it so we can find this page in this list. So let's search for something connected to visits realty visit form \npage default page here means that it will be used for all scenarios to add, to browse, to edit data. So it will be used \nfor all scenarios. And you can see it's possible to make a separate add record window in case if we need to do it in a \nvery specific way. For example, when you add data you have to specify one set of columns.  \n  \n  \nSpeaker 1\n \n When you edit, you want to specify totally another set of columns. It could be used. And also we have an option for \ndifferent pages depending on some specific field value. This can be helpful in case if your entity is quite big and \ncomplex. We have examples of such big complex entities in creatio and one of them is activity. And personally I \ndon't really like this, but it turned out that activity is used for calls, for emails, for meetings, for to do tasks which you \ncan create for yourself. So you can see a bit of different nature for the same entity. So you have one single section \nand many different purposes in it. Obviously for email we will have a different edit page than for a call and different \nset of columns, different display and different page design.  \n  \n  \nSpeaker 1\n \n And that's why we have this option multiple pages based on specific field value. So for example, activity entity has a \nfield value category which shows us is it an email or a call or a meeting. And depending on this column we can use \ndifferent pages. And when you look at activities section, for example, you select an email, try to open its page based \non this information system will show you email edit page. If you do the same for a call, it will open you call edit page \nfor activity. But now I try to keep it simple. So we will have just one single page for all possible visits. Because we do \nit and we just need to get used with the details in general, we need to understand them well. So we have this option. \nThis is mandatory.  \n  \n  \nSpeaker 1\n \n Okay, finally we finished and we can publish our object again. As you can see, we have to do it twice. First to create \nit, second to finalize assigning of a page for the object. Okay, great. Now our object is ready. We can close it. Now we \ncan see that in our package two items appeared. So we have realty visit page, we have object for realty visits. You \ncan find some additional strange items called add ons. And sometimes we have add ons for pages and we can find \nadd ons for objects. Add ons are separately saved pieces of metadata. You can try to open them, but you will see \nread only text in JSON which represents metadata. We have some a bit more user friendly way to read it. You see \nread only way and you can see property names.  \n  \n  \nSpeaker 1\n \n But in general this is only makes sense to base core creation developers who wants to check if everything is okay \nwith metadata or not. In projects development and the end user customization, add on is just something that is \nsaved in addition for the page or object. So we don't need to modify it. Attempt to modify. We should not remove it \nfrom the system. Let it be so it's just a separate stored stuff connected with page or an object. Good. So now we \nhave our object and it's time to think how we can put it to our page and display corresponding data. So we can do \nthis with the help of edit page button. As you can see, it's my favorite way to customize your system and other \noptions.  \n  \n  \nSpeaker 1\n \n We have another options like finding your corresponding form page and open it from configuration section to be the \nsame result. Or you can achieve the same result if you go to settings page physically system designer. Then you find \napplication hub. Then you find your realty application. Switch to pages and find form page. So this same way for \nopening. Oh no no. Not visit reality form page the same way to open the same page editor and I personally prefer to \ndo it from section because it makes less chance to make mistake. And when you click on this to always open \ncorresponding page and you should not focus on its name in the list of pages. Okay, so we opened our editor to \ndesign our page. Our task is to display details and details are usually displayed with the items called list or expanded \nlist.  \n  \n  \nSpeaker 1\n \n I prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it \nand it will take less space if it's not necessary or you can expand it. That's why it's called expanded. I would say it's \nexpandable when it's necessary to see some data from it. So let's use this expanded list component carefully drag \nand drop it on our page. I will use just free space in the bottom of this tab, but it's also possible to use additional \ntabs if you want to. You can organize your data stored in different tabs. It's up to you. So here we have expanded list \nand show part of it includes only settings like buttons and title and so on. And inner part of it represents data list.  \n  \n  \nSpeaker 1\n \n Of course we have to specify object first and as you probably guess, we have to find our real table visit object for our \ndetail. It immediately shows us set of columns. So possibly we have to take care of set of columns. And I would like \nto show here first to be date and time potential customer, maybe comment and then create it on maybe just for \nreference. I would also display parent realty, then I can hide unnecessary columns. And now you see how we should \ndisplay our data. We can carefully shrink some columns. Okay, as you can see in Freedom UI system offers us \nhorizontal scroll so we can add unlimited number of columns. We can flexibly design their widths and the horizontal \nscroll will show us and classic UI does not allow to do this.  \n  \n  \nSpeaker 1\n \n And there is no horizontal scrolls in classic UI and only 24 available columns to be displayed. So freedom UI is more \nflexible here. Okay, so we have this list of data, but what we need to do how did you add the columns again? I just \nmissed it. This plus add the columns and then you can select. Please note the order of how you click here matters. \nSo if you click here and here you will see the same columns in corresponding order selected at your list. I first \nclicked on visit date, then potential customer, then comment in the same order columns appeared here and you can \nspecify such columns in order to provide default column setup for your detail. It will be nice for your users to see \nyour detail with Some preset columns so they will easily understand what it is about.  \n  \n  \nSpeaker 1\n \n And if it has some data, they will also see corresponding data and they will see what they expect. So here is our list. \nBut also we need to do some additional settings in the right part. This is detail and detail must show us data only \nconnected to his main entity record only for currently selected realty and not any other realty. So we have to make \nsome filtering of page data. As you can see, this information tells us about that we may use it for example for detail \nfiltering. So let's click on this plus and we have to construct simple filter which will be applied for all the data which \nyou plan to see in this list. This simple filter is based one condition. Some column from reality object must be \nmatched with realty visit.  \n  \n  \nSpeaker 1\n \n In reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for \nmain record for this. So here you see this filter by page data will be based on ID of realty and it must be equal to \nrealty visit parent realty. That's how we will filter our data and show only visits for corresponding house, not for any \nother another house. Okay, this filter is mandatory, so you must do this. Otherwise you will constantly see big set of \nvisits not related to your selected apartment. For example, no need to use static filters, but if you want you can apply \nthere. And we have some options like row numbering, multi selection, allowed inline editing, inline insert. Okay, I can \nforbid inline insert and we will only use plus button to add new data.  \n  \n  \nSpeaker 1\n \n We can also program bulk actions for list. So when you operate with a list it's possible to select multiple records and \nthen we have bulk actions. For example, you can program additional actions here and that's how you can do some \ncustomization and additional functions that will be running for selected data. They are called bulk actions. Bulk here \nmeans that you can select several records and then perform one single action for such records in order to so to \nprocess data more efficient. So we have element code here and it looks like our main list part is already set. All we \nhave to do now is to find the small plus button. This plus button is designed to add new data to the detail.  \n  \n  \nSpeaker 1\n \n Of course its action will be open new record, it will be new reality visit object and system will find its page \nautomatically. But here we have important setting which column values to set. As I told you, when we create new \ndetailed data, we must take care about parent reality value. So we have to set here some default value for parent \nreality. Parent reality will have its default Value we have not so many options here. So value from another field and \nwe will have parent realty id. That's the only thing which is suitable here. So when anyone clicks on the plus new \nrealty visit page will appear. But parent realty for this data record will be already set up as ID of our reality. This is \nvery important, otherwise we will not be able to normally create visits.  \n  \n  \nSpeaker 1\n \n So please remember this is filling of a column that is used for connection between visits and our realty. Okay, great. \nNo any additional settings. So you just have to remember when you build your detail, you should set up your list and \nthen take care about plus button. That's all. We can save our changes and test how our detail works. We need to \nreload page just to make sure we are not fighting with any kind of browser cache issue. Let's go to apartment in New \nOrleans. Now you see our detail. By the way, it's interesting this status of expanded or collapsed system remembers \nit and it remembers it separately for each user. So if I prefer not to work with this detail, I can collapse it and system \nwill forever remember it. If necessary I can expand it.  \n   \nSpeaker 1\n  \n If other users prefer to expand it, they also may use this management and they can collapse or expand only \nnecessary tails. So let's make a quick test of how our detail works. Let's try to add new record. You see default value \nof your visit date and time was set. Okay, let's set it for tomorrow the same time. Probably we do not know any \npotential customers, so let it be James Bond. Here is some trick. If you will click on this hyperlink, it will open \ncorresponding contact page. So it's not what you plan. When we select data, it's better to click on the record but not \non the hyperlink. So somewhere here double click. That's how we will select data in this column and comment some \ntest comment. Save it. You see the data was created and parent reality was automatically set correctly.  \n  \n  \nSpeaker 1\n \n We can copy this data, save it, check it out. You see the parent reality is copyable. It's very important to keep it \ncopyable. So in this case creating a new record was correctly copied previous parent realty. And obviously we can do \nit one more copy. We can edit any record by double click on it or by clicking open. And obviously we can remove data \nif not needed. So our detail looks very good and works correctly. Let's check that for other realty records. We don't \nhave this data, so let's go to select and find another realty. Oh, we have something interesting here. Let's check out. \nYou see, our page is hanging now. Probably it's because of browser issue. I just updated it recently. So possibly we \nhave some kind of browser related issue. And also we can close all unnecessary pages.  \n  \n  \nSpeaker 1\n \n Maybe it will help our system to work more correctly. Something unusual happens with my browser, with my app. So \nlet's check about its CPU and memory. Okay, I will reward the page fully. This is not a result of adding details, so it's \nprobably some kind of crash. But not related to our detailed data. So now you can see our apartments and visits for \napartments were done. Okay, another house in Miami, another data. So we have no data. Let's make for a house in \nMiami some visit next month. We don't know who exactly will come and we can save this planned visit. So \ndepending on the record, you see corresponding detail values at our visits. You see. Okay, great. So now we \nsuccessfully made our detail. Of course we have to take care about saving everything on disk.  \n  \n  \nSpeaker 1\n \n We have to submit our changes to version control just to finalize this step of our settings so we can like more \nconfidently move on without afraid. Without being afraid of something can be lost in the middle. So I recommend \nyou to do such comments in version control because it helps to keep all your history. And also if something happens \nwith your environment, having such history will be a great help because you'll be able to recover anything that you \ndeveloped. So in my case, now everything was saved. Let's commit it to version control. We have some data here. \nWe have a lot of items modified. It looks like our section was never submitted to version control. So it means like \nreal tapp edit visits, detail added. Okay, so it would be a quite big commit for us.  \n  \n  \nSpeaker 1\n \n And we will sync changes which means pull and push to common repository. And now it's okay, it's done. So we can \ntrack our changes at our GitHub repository 7commits. You can see all the history, you see how many files were \nchanged and so on. Each time we do this, you'll be able to track all the history and make control over what is going \non here. Okay, so what's next? What we can do next with our details and with our pages. You can program something \nin edit page of a detail with the same way how we did programming in our big form page. So this is. This page is \nproduced. As you can see we have a button for edit page. We also will be able to do programming of its handlers or \nvalidation. So rules are the same.  \n  \n  \nSpeaker 1\n \n And also you can use business rules if you want to do Some kind of filtering or simple fields hiding or showing. You \ncan use all the features. So you should remember that our page for detail is based on a separate client module that \nwas created today. It was a reality visit page. So this reality visit form page, as you can see, it's a separate client \nmodule. We can even look at its code if interested. It has its own Vue config view model config and empty handlers, \nvalidators and converters. Maybe you have any questions, Maybe you have some like notes ideas or something. And \nin some implementations you may need to create a read only details. In this case you may hide new button, you may \nconstruct your object which will have no edit page at all. And you may also disable editing in list.  \n  \n  \nSpeaker 1\n \n So inline edit should be disabled. So read only details make sense when you have some data automatically \ncalculated for it and such data is not expected to be added or modified by end user. Read only details are helpful, \nespecially if you use some kind of integration with third party systems. And you can read data from third party data \nsources using for example some database to database connection if it's on site and then display such data as a list \nyour pages. Okay, so that's how you may do such details and you may organize them in separate tabs of your page \nor you can put it down. There is no physical limit on how long you can scroll down. So you can put new items down \nthis page and there are no limitations of number of rows. Let's try to move on.  \n  \n  \nSpeaker 1\n \n And possibly before we moving on and work with classic ui, I need to show you something important related to \ncustomization of existing pages and also important things about customization of about managing your \napplications. So let me explain what I plan to do right now. Let's imagine this is very typical by the way, this is a very \ncommon scenario. Let's imagine your business user asks you and says hey, you know, you already created your own \nsections. It's very good we do this. For example, we have realty section, we keep some data there, it's okay. But also \ninside of our customizations we need to do some changes at existing entities.  \n  \n  \nSpeaker 1\n \n For example, we have accounts which represent list of companies and we want to connect such accounts with \nsome kind of third party website where we have a list of our customers and we need to make some connections \nwith it. So we need one more extra column at our accounts section. And simply speaking, we need to add some \ncolumns into existing entities. We can do this easily with no code approach. Let me show you how it's possible to do \nyou can open account page, account form page and then you can go and click on this edit page button. Let's try to \ndo this. Let's see what happens. As we're running our system as administrators. So our supervisor user is a member \nof system administrators role. Now you can see account page design. And you may not.  \n  \n  \nSpeaker 1\n \n You may now see some very strange package automatically created and system does not allow us to change it. And \nthis strange package will be used. So it will be created by system automatically. And when we customize something, \nsystem will save our changes into this package. Okay, let's agree. Let's allow it to do this. So let's agree for this \nprocedure. So our task is to add one more column to the account. So we will have a text value. Let's put it \nsomewhere here. We can name our new column website code. We can also provide its code for it. Website code \ncopy sorry. Confirm text 200 great. Editable. Great element code should be unique. Okay, let it be developer friendly. \nSo we made our new column. This is very typical. We did not use programming at all. This is only customization.  \n  \n  \nSpeaker 1\n \n But you need to know how technically this is done and where it will be finally saved. And how to for example, turn \nyour system back to its previous step, previous stage. If you realize that such change was not designed, was not \ndesired anymore. So when you change like this, you can save it. Also you can hide existing columns. Of course, in \nthis case they will be not removed. You can move some columns. You can reorganize user page of existing section. \nIt's also allowed to do. You can also add a lot of new components on the page, not connect to the database at all. So \nit's up to you how you do this customization. In my case, I try to keep it very simple. I just added one single column \nhere. Okay, and then we save it. Now I should pay your.  \n \n \n  \nSpeaker 1\n \n So I attract your attention that we will finally receive new package. Our customization will be saved as a special type \nof item into this new package. So let's try to do this and then let's see what finally will happen. This is a fully valid \nflow that valid algorithm how to customize existing tools. You could also customize it the same by going to \napplication hub, finding Customer360 app and then making changes for a page from there. Okay, so we made our \nnew column. Let's close the page here, open it again. Probably we already will see it. Yeah, Website code. You can \ntest some value here. As you can see, it was correctly. It was correctly saved. Now let's Save it some warnings, but \nclose. Maybe let's hide some unnecessary columns in order to display important for us columns website code. Yes, \nit's saved correctly.  \n  \n  \nSpeaker 1\n \n So everything's good. We can even edit inline edit. We can even do like this and save our changes. So then open it. \nYou see, everything works just as planned. So we managed to create new column. It is displayed in our accounts \nsection. Everything looks good. Now let's go to configuration section. Or maybe it's better to go here to Application \nhub because it will be more clear for you to see. Let's go to customer360app. Because our account edit page \noriginated from this section. So it was designed in this section. Let's open it. Now we see some checks, some items. \nOur pages seems not to be changed. So we have the same set of pages as from out of the box. But when we look at \nnumber of our packages, we will see all three standard packages, but they are read only.  \n  \n  \nSpeaker 1\n \n And once we need to save some customizations system created automatically new package with this strange name \nand it created several items for it. And such items are not so easy. Let me show you properties. We have special type \nof object which is called replacing object. It's not usual object, this is replacing object. And also we have special type \nof item which is called replacing client module. You can see replace parent option is on and this is extremely \nimportant for you to understand and feel this difference. So now we are going very close to understand what is \nreplacing object and why it is different from regular object and what is replacing view module or simply speaking \nreplacing client module from any previously known and studied types of client modules. Possibly it's make it's better \nto start from objects here. So what is replacing object?  \n  \n  \nSpeaker 1\n \n Let's open it. Maybe we'll understand it better when we open it. First of all, it's interesting that replacing object it has \nreplace parent option on which clearly states that this is not a usual regular object. Replacing object is used when \nyour original object is present and your task is to customize it. But original object is not in your package and the \noriginal package is not editable. In our case, account entity was designed somewhere in base product creation \npackages. It was additionally customized in Customer360 packages, but they are read only if you want to change \nand save something. We have to use replacing object and save it into our package into new package. This package \nnow is editable. It's very important. Also it's very important that in replacing object, parent object is mandatory. And \nnow you see value here.  \n  \n  \nSpeaker 1\n \n Parent object is account and replacing Object code is absolutely the same. This is important rule of creature \narchitecture. So when you replace some entity, its name remains the same, you can change its title. Moreover, it was \nused in base platform bank software products where original account was replaced and sorry, it was renamed with a \nanother name called legal entity. But physically it was still account entity and it's still the same table and the same \nlogical name at program code. So only title was changed. So when you replace some entity, you can change its title, \nbut you cannot change its code. Okay, and the code should be remaining the same. And personally I would like to \nmake it not editable.  \n \n \n  \nSpeaker 1\n \n As you can see here, this editor offers us possibility to change its code, but physically system will not allow us to \nsave it and it will show us big red messages when we try to save such changes. So I think that this editor should not \nallow you to modify code in case if you work with replace an object. Okay? So code must be the same as original \none. What we have as replacement, we have a lot of inherited columns. All the columns from original entity are \nshown here. We can slightly change them, we can change their title, we can modify their default value or make it \nrequired or not required. But we will not be able to rename original column, we will not be able to change its lookup \nproperty.  \n  \n  \nSpeaker 1\n \n And in general it's not recommended to change its type, even though system offers us such possibility to change the \ntype in its subtype range. For example, if original type was text 200, then potentially you can extend it to text 500. But \nI do not recommend you to do this because you will face some additional unexpected difficulties. So it's possible, \nbut I think not so feasible. So it's better not touch types of columns when you make replacing objects. So the main \nreason why you need replacing object of course is creating your own columns like we did here. So this is our own \nnew custom column website code. And actually this website code is saved into our report place an object. All \ninherited columns are obtained from parent entity. So we cannot remove inherited columns and we cannot edit any \nproperty.  \n  \n  \nSpeaker 1\n \n So we cannot rename inherited columns. We can only change its title. Our custom columns are shown here in \ncolumns list. And usually the reason why developers create replacing objects is need to add your own columns. \nSometimes replacing object is created because you want to change some common properties like title of the object, \nlike some behavior settings or maybe change of access rights settings. When you replace an object, you can modify \naccess rights, behavior change. And we have three types of access rights permissions related to objects in creation. \nAccess rights set for general operations to allow or disable selection, insert, update or delete operation for the \nobject.  \n  \n  \nSpeaker 1\n \n In total we have record level access rights where some records can be editable and others will be protected and will \nbe read only and some other records maybe will be only hidden and shown only for developers and also for some \nrare cases you can also use column level protection of data where some columns are shown and other columns are \nhidden and other columns are read only. So three levels of access rights protection and when you make a \nreplacement object you can also change such permission set. Okay, so the main reasons Generally we have two \nreasons of using replacing object, making your own columns, or customizing and changing some properties of \nexisting object. What is also important for you to know is that replacing object is saved into your own package and it \nrepresents some changes that you add into existing structure of your entity.  \n  \n  \nSpeaker 1\n \n This can be done. You can see it clearly if you go to configuration section. Let me explain. Let's go to all packages, \nsearch for objects and look for account object and make it strictly searched by equals condition. So only if object \nname equals to account it will be shown here. Now you can see we have some origin of it. Origin of account is \nsomewhere in CRT core base. If we open its properties we will see that it was inherited from base entity base object. \nIt's the same base object is title base entity it's code and this is not a replacement, so no replacement. So this was \noriginal creating of new entity named account.  \n   \nSpeaker 1\n  \n But then after creating it in CRT core base package we had several reasons to do changes in completeness package, \nin email mining package and in some other packages including this weird package related to Customer360 app \nmade recently. So you should understand that we have original structure of the account entity and then we have \nsome add ons added to it. Finally our last addition will be from our customer, so from our editable package and it will \nbe like a final layer of all the settings. As you may guess, the order of application of such layers is important because \nif this one is applied later than ours, so this one will declare final values of certain properties that we need. So the \norder of applying of changes is really important and usually this order follows package dependencies Diagram.  \n  \n  \nSpeaker 1\n \n So if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no \nproblem for us to specify final properties of our object, for example disable some access restrictions or change \nsome column titles. Final structure of account is formed by its origin plus all the replacements. It's interesting to \nmention that at the database level, we have just only one data table. Let me show you. This is our set of databases \nD1 database which will work. For now we have account data table. We can extend and see its set of columns. Now \nyou see for account table we have a lot of base product columns and the last one is our website code that we added \nrecently. So replacing object does not create any new table.  \n  \n  \nSpeaker 1\n \n Replacing object uses existing table and adds new columns there. If you will remove replacing object from your \nsystem, logically your new column will disappear physically. It will be present in the database as a kind of leftover, \nbut it will be not so critical, not so important. And I think that end users will notice it at all. If you will recover your \npackage again, you will still resurrect this column logically and it will be available at application. So that's how \nreplacing object works. And you can use it to customize any existing part of creation objects, including some base \nobjects like base entity and base lookup. So you can customize quite flexibly, even some, let's say top level objects \nthat are used for many of inherited child items. So you can use replacement for any existing object.  \n  \n  \nSpeaker 1\n \n And Adrian is asking very interesting question which I plan to move on here. So you work with some account page \nand you would like to keep your settings saved in a proper place. Yes, Adrian, I will show you now and I'm just going \nprobably not so fast with explanations here. So now we have Customer360 app and for this app system created \neditable package. And we have some contents in this editable package. We have some customizations made \nespecially for this app. Let's imagine that you have more apps like you have sales automation app when you add. So \nfor example, you have case management app. It's a base product for service automation. You have some lead \ngeneration, some opportunity management. So let's imagine you have several apps and you want to customize most \nof them.  \n  \n  \nSpeaker 1\n \n By default, system will create separate editable package for each scenario, for each case when you want to \ncustomize some existing app. But obviously you may not want to work with such many packages. Also you may not \nwant to work with packages with ugly names. Let me explain what I'm talking about. About let's reload our data, go \nto all items and now you see package with some ugly name, usr CRT customer app and then some strange unique \nsuffix added to it. So the same name will appear on our discord. Probably already appeared. Let me check it out. So I \nexpected to see here. Yes, the same strange name appeared on our disk. Very soon this name will travel to version \ncontrol and it will be not so comfortable for other developers to see such a strange package.  \n   \nSpeaker 1\n  \n So your question and Adrian question is asking about is it possible to use your own package instead of such ugly \nstuff that was created by system? And the answer is yes, we can manage this. This is not obvious and you have to \nperform additional steps to enable such management. So let me show you how you should do this. Let's go to \nlookups or we can go to studio lookups. Okay. And then let's search for recently added lookups first. Sorting by date \nof creation. Okay. Then we can register special object as a lookup. This object is named something like packages. \nYes, this name is package installed application and this is quite not obvious. I only knew this from my colleagues. So \nthis is kind of a technological secret and I think it's not very easy to find.  \n  \n  \nSpeaker 1\n \n But if you know that it exists, so you will enable it. Of course, package installed application and we will provide the \nsame name for our lookup and try to save it. Okay. This is only developer tool, so we do not need to transport such \nregistering of package to test and production. We can open contents. And now you will see all installed applications, \nall existing packages and you will see settings for all packages. Are they primary for a certain app and are they used \nas a default current package? Current package means editable package that is used to save new customizations \nthere. So let me show you how we can do some tricks. Now we have customer 360 app and we have this trench \npackage is used as a primary and current package for this app.  \n  \n  \nSpeaker 1\n \n So any new customization that we do in customer360 will fall into this package. We don't really want this, so we \nwant probably to remove this package at all. And maybe we would like to use our existing new package which is a \ndev package. We have it Dev Classic package. So we would like to use dev Classic package for this. So we can try to \ndo this replacement instead of this. We can clear and then search or maybe just type dev Classic package. So we \ncan put our existing package as a target default package for Customer 360 customizations and confirm our \ndecision. Of course we will have to take care about package dependencies. Now our dev Classic package has no \ndependencies, but it will appear so it will receive it soon. Let's go to our application hub now try to customize \ncustomer360.  \n  \n  \nSpeaker 1\n \n Go to advanced settings. And now you see our dev Classic package is connected to this app and we can see \nproperties of this package. Let's check. What about dependencies? You see that System automatically added \nCustomer360 app as a parent dependency to this package when we made changes, when we customized this stuff. \nSo we did something like this. Oh, something like this. Yeah. So we did this setting and it was important. So now we \nhave automatic changes in package dependencies. Okay, great. So you can see Dev Classic is connected to this app. \nAnd probably the last step that we will need to do is we have some customization made in this ugly package and we \ncan transport it to our Dev Classic because we don't want to use this package at all.  \n  \n  \nSpeaker 1\n \n We want to get rid of it and we will continue customization of Customer360 in our classic package. Andreen, is it \nwhat you were asking for? Okay, great. Thank you, Adrian. So now we have multi action move to another package. \nYou should be mentally ready that this movement takes significant time because system performs a lot of checks \nand sometimes it fails because of missing dependencies or some other technical reasons. But in general it's quite \nsafe too. So you will probably run it fully correctly if everything is okay with dependencies of target package. So now \nI'm trying to move items created in my ugly package into Dev Classic. Then I will I plan to remove my ugly package at \nall from my system. It will be empty and I can safely remove it.  \n  \n  \nSpeaker 1\n \n As you can see, this transfer takes significant time because it looks like system performance performs a lot of \nchecks of items that we process and it makes sure that we have no other connections to this item. So it does \nsomething like probably some excessive work. But okay, it makes it successful. Now you see, our customization \ntraveled to this Dev Classic package. Now if we go here, you see our customization should be present here. Probably \nit's because of caching. So let's reward. Yes, now it's here. This information probably will. Let's reward this part. Oh, it \nstill remembers of this connection. So we can remove now this package and this line also will be disappeared. Let's \nlet me show you. So this ugly package, now it's fully empty. We can remove it, delete it fully. Also removed from the \napps package. Remove takes time. Okay, please.  \n  \n  \nSpeaker 1\n \n Now it's empty. It should not take a lot of time. Yes, successfully deleted. So we have no ugly package anymore. We \nhave some correctly created packages, good names. We use this good named package as a target package for our \ncustomization of Customer360. Now you see everything looks good. Our changes that we made are saved in a \nproper place so that's how you can manage connections between packages and applications. I agree this is not \ntransparent, so let's close open this register. Okay. Package installed application. You see no ugly package at all. We \nsee our dev Classic as a target for this app for realty. We have only one package, so you can easily add the new data \nhere if necessary. To connect some packages with some applications, you can do whatever you want.  \n  \n  \nSpeaker 1\n \n Of course you should be quite rational here without obvious mistakes that you can prevent because this is developer \noriented tool. If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking \nfor. So you should consider yourself before making changes here because it's like architecture but you can manage. \nThank you Adrian for your questions. Okay, it's time for us to have just a short break, probably five or seven minutes. \nAnd Adrian tells us about the question. Customize account page and Freedom UI generates new package. Yes, it \nwas in. In January 2024 and the answer was from Ryan Farley where we had probably no such tool. So he advised us \nto do something like movement of items and then just use this loop up. Yeah. Yeah. Thank you. Thank you, Adrian.  \n  \n  \nSpeaker 1\n \n Okay, thank you for all of your active questions. Let's make a five or seven minutes break, we'll refresh a bit and then \nmove on with next topics. Thank you.  \n  \n \n  \nSpeaker 2\n \n Hi.  \n  \n  \nSpeaker 1\n \n Yes, hello.  \n  \n \n  \nSpeaker 2\n \n I have a. I have a small question I have. Yeah, so I said we use the two lookups.  \n   \nSpeaker 1\n  \n Okay.  \n  \n \n  \nSpeaker 2\n \n First one is for country and second one is for city. Right? So in the drop down button we have one plus icon is there if \nyou remember.  \n  \n  \nSpeaker 1\n \n So what about which lookup you're interested? Is it the main realty or.  \n  \n \n  \nSpeaker 2\n \n Yeah, main reality. We have country and city. Right? Country drop down and city.  \n  \n  \nSpeaker 1\n \n Drop down type.  \n  \n \n  \nSpeaker 2\n \n No country and city.  \n  \n  \nSpeaker 1\n \n This one. So I can't hear. I can't hear properly. Country and city. Okay.  \n  \n \n  \nSpeaker 2\n \n Yeah, yeah. So we have a plus icon over there, right? Adding. So what is the use of that? Or can we hide that button if \npossible?  \n  \n  \nSpeaker 1\n \n So you ask about if it's possible to manually create new city for this.  \n   \n \n Speaker 2\n \n Okay, Can I, can we hide that button? Disable that button if possible.  \n  \n  \nSpeaker 1\n \n This. Yes, sure you can. I just forgot to do this. Yes, let me show you. We can go to edit page. We can find \ncorresponding lookup country and there is an option to allow add new value. So we can disable this. And for city we \nwill also disable enabling new values. So just tick off save it and we will only be able to select from the list without \npossibility to Add any new countries, close open. Now you see some selection. Now you see only available columns. \nThank you. Rakhi states oh, we have New Orleans, no corresponding city. Okay, would it be. Thank you for a \nquestion. Any other questions, feel free to ask because now I plan to show you something which will be a final step \nabout user interface.  \n  \n  \nSpeaker 1\n \n And you should know that we are working with Freedom ui, but maybe you will also need to work with some classic \nUI old projects. So you need to get some basic understanding of how classic UI can be managed. And before \nproceed with classic UI customizations, we need to make some preparation that is necessary and very important for \nclassic ui. So in order to create new section in classic UI you need to prepare target package. We already did it. Here \nis our dev classic package. But also you need to tell creatio this package should be used and we will go to system \nsettings, then we will find a special system setting named current package. Open it and by default you see custom \nhere as a current package. Rakhiv is asking can we change the color of collects icon?  \n  \n  \nSpeaker 1\n \n Oh, I'm not sure because it looks like this is hard coded thing. So possibly you may find somewhere in CSS value for \nthis color. But it looks like this is an image designed somewhere in the app. So it was not supposed to be \ncustomizable, I think. Let me show you with CSS it's not possible. Probably it's because of this is an image. Okay, \nlet's try to understand. Let's try to do inspect. Then you see we have so inspect some marker, some kind of div and \nwhat else? It looks like we have some image. As you can see, such images are hard coded, but you may find where \nthey are saved. So possibly you can replace such images with something else. You see the current source.  \n  \n  \nSpeaker 1\n \n So you may try to replace actual storage of this image and you may design your own and that's how you will finally \nmake corresponding change. Rakhi, is it clear? Of course it's not recommended way of customizing creation by \nchanging of its core files, but physically you can try to replace this file with something else and check it out how it \nworks at your environment and then you can, if it's on site, you can also get this file to the other, let's say test and \nproduction environment, so it may work for you. You probably will not be able to apply such change at cloud \nconditions, because cloud engineers will definitely will not agree for changing files somewhere in core part of \nCreature and it will be not saved into your package.  \n  \n  \nSpeaker 1\n \n So this is part for core which Is not designed to be changeable by configuration changes. But if you really want, you \ncan replace files on disk with another ones and that's how you can do this. Thank you Rakhi, Very interesting \nquestion and let's move on. So I just wanted to explain you that in case if your plan is to use classic UI \ncustomization, then you will have to take care about current package system setting. By default it is set to save \nsettings into custom package and we plan to save it into our dev classic. We should do this before starting of any \ncustomization. And also take care this system setting is not cached. Cached settings are loaded at the start of user \nsession and cached settings if you change them. So you will need to fully apply changes.  \n  \n  \nSpeaker 1\n \n And if you change cached setting, you will have to log out and log in order to read changed values properly for your \nuser session. In the current example, current package is not cached, so we may change it without logging out. Okay, \ngreat. So we can change save it then. One more tip that you need to know before starting Section Wizard. We may \nexperience difficulties because of recent changes in object model without compilation without application restart. \nSo we will need to restart our app in order to guarantee normal work of Section Wizard. Especially on save object \noperation of Section Wizard. As you remember, restart of the app now can be done quite easily with maintenance \ntools made by our Swiss partner. So restart application. This is necessary to normalize our server side cached data \nabout object structure.  \n  \n  \nSpeaker 1\n \n If you recently made changes in your object and even published it still may keep some incorrect settings at \napplication server level cache. So we need to do this restart. In this case everything will work. Okay, good. Now we \ngo to settings. Then we find item called Section Wizard. And this tool is designed to create new classic UI sections. I \nwill quickly make some simple example not as complex as we made for Freedom UI just to demonstrate you such \ntool. So I will do it fast. May you may not reproduce all the steps after me. So it's up to you. Would you like to do this \nor not? So I will make some new Classic UI section. When we do this we have to provide its title. So let's call it Realty \nClassic.  \n  \n  \nSpeaker 1\n \n And we have to be very careful with the code because code will not be able to change if we finish its input. And that's \nwhy we have to type it correctly from the first attempt. Realty Classic. So this is our code. Once we move our focus \nout from this control, you will see system will think for a bit and then we will not be able to change this code. So if \nyou made mistake, then you only cancel and run section wizard again. Workplace. Okay, let's put it to the same \nstudio workplace and background icon. Let it be green so it will be our icon for the color of our section icon. Okay, \nGreat. Then we go to setup page. We need to do some minor settings. I'm still a bit afraid of what may go wrong \nwhen I save my section wizard section.  \n  \n  \nSpeaker 1\n \n So I will only change something like a name column. I will provide some minor change copyable setting, no any other \nsettings. So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue \ncustomizing of my section. But in case if it fails to save and it will be obvious that I need some more steps to \nprepare my system, then I will not lose time for setting up columns. So saving objects is the most critical step of this \nprocedure. If it goes correctly, then we will successfully continue our customization. If it fails now, it's correct. Yes. \nGreat. So if it fails, we will make something like discovery of what went wrong. But now in our case it looks like \neverything is okay. Great. So we saved our section correctly.  \n  \n  \nSpeaker 1\n \n Now we can edit it. And editing a section is much safer than creating it. So we can go to edit page. Now we can \ncustomize it. And I will quickly add similar columns as we had for Freedom ui. So decimal column drag and drop to \nbe our price. You see a bit different user interface, but the same sense. We add new columns. We provide title code, \nno element code and just save. I provide area I can use lookups. As you remember, we made a lookup for type of our \nreality. We can call this column USR type. The reason why we use prefix is the same. So system asks us to keep \nprefixes for our customized stuff bus. Telling that he has two leave no problem. Thanks you. Thank you. Thank you. \nAnd you will watch videos. Great. We will finish soon. Don't worry.  \n \n \n  \nSpeaker 1\n \n Today's Friday and probably tired a bit. So copyable value type based on existing lookup, realty type or Classic UI \nDrop down list block behavior. No redundantly no hiding titles. Everything is okay here. Save it. Great. I will show you \nhow we can make new lookups in Classic ui. No existing lookup so we have to make offer type. Code is USR Offer \ntype and no existing lookup. So we will create one and as usual we'll provide title for this new lookup Realty offer \ntype Classic ui. So this is how we provide title and code for our new created object. That will be Inherited from \nbaselookup and register it as lookup by section wizard, drop down list, standard behavior for delete. No any other \noptions? Okay, great. And finally we can make some kind of text just to make comment.  \n  \n  \nSpeaker 1\n \n By the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui. \nComment here in their name is comment. But what is interesting here we can make a special option called multiline \ntext. You will see what will turn it into the column. So multiline text has a very interesting feature which is not \nimplemented in Freedom Live. I will show it for you. Multi line text. Obviously it's designed to make possible multi \nline values. Here to be said, maybe it also makes sense to have 500 just to make sure we have big enough value. But \nmulti line text has also very interesting property. You will see it soon. If necessary we can also add an object for \ndetail and register detail. I will try to keep it simple.  \n  \n  \nSpeaker 1\n \n We have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary. And \nlet's go back keep it simple and save the changes. So I want you to see how Classic UI section looks like. In Classic \nUI we have much more objects created for a section. Now you will see in configuration section close properties of \npackage, probably reward it. Okay, saved correctly. Now I reload section with configuration so we can go to dev \nClassic sort by date of modification and you will see how many new objects were recently created. Let me show you. \nWe have objects for file for folders for in folders for tags feature. And also we have object for main Classic reality \nsection and we have an object for our lookup created.  \n  \n  \nSpeaker 1\n \n So we have much more objects for classic UI section because such things as tags, folders and files are saved in a \nseparate dedicated objects. And we have more tables for this for the database. And in Freedom UI such tools are \nincorporated into commonly used objects for tags for files for folders and it makes it more efficient storage. Okay, so \nlet me show you how Classic UI section looks like. We will have this realty classic section but it probably will fail \nwhen we try to open so we have to reload because of Classic UI is much more sensitive to cache issues. So you \nshould always reward your page if you do any client side changes In Classic UI you see it's still faces some troubles. \nLet me show what's happening there. Or maybe we just have to wait. No, it doesn't look good.  \n  \n  \nSpeaker 1\n \n Okay, let's go to another page. Go to reality classic page. Yes, we have some minor issues here, but in General it \nworks. Okay, try to add new record. Here you can see how Classic UI edit page looks like. I need to tell you that in \nClassic UI we have a totally different background frameworks used for user interface. In Classic UI we use EXT \nframework EXT versions. So you see it's Quite old, probably 10 years old framework and it's quite old, but it works. \nAnd it's a JavaScript framework which keeps controls and some UI stuff. And in Freedom UI we use Angular so \nclassic UI uses EXT and TerraSoft core framework. Freedom UI uses Angular framework, so it's totally different and \nmodule structure is similar. But still we have some serious differences. When we create new record we didn't assign \nany default values so far.  \n   \nSpeaker 1\n  \n So okay, let it be Paris Ren. The type is apartment. Offer type is not filled in so far. And here is what I wanted to show \nyou. This is voice input and speech recognition piece. So you see it works only in Classic ui. In Freedom UI we don't \nhave it so far. We don't have it in Freedom UI so far. And recognition quality is quite high as you can see. So you may \nuse it for Classic UI implementations. And I think that in Freedom UI system developers should develop something \nlike this and enable it In Freedom UI now we don't have it and offer type is empty. So we have to probably take care \nabout offer type for Classic ui.  \n  \n  \nSpeaker 1\n \n This one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it \ninto our dev Classic package. So this is important step because such data also should travel to our test and \nproduction. Now if we go to Reality Classic you can see that offer type can be selected and we can save it. Okay, \nlooks good. Some minor steps. Minor preparations for our section we can go to Workplace Setup Studio. Now we \nhave our section for Classic UI quite far in low rows we can put it upper. Maybe we can also bind the contents of this \nworkspace and at the same IoT save it successfully. View details Three items were created but you remember. First \none will be information about workplace. Only one data row, nothing changed.  \n  \n  \nSpeaker 1\n \n This one will be about position of a module in Workplace. Let's check Reality Realty Classic. Great. Third one will be \nabout access rights. That's okay. Rakhi asks about voice languages. It depends on browser. And also I need to tell \nyou this voice recognition feature is browser dependent. For example, if I try to do the same in my Firefox. Let me \nshow you my Firefox here. It still doesn't Work in Firefox. Let me quickly show it for you. It works in Edge and in \nGoogle Chrome recently. So I asked some colleagues. It looks like it works in Safari as well, but unfortunately it \ndoesn't work in Firefox. Let me show you Firefox. Here you see no support of this feature. So it's also browser \ndependent and you should check and test it before you advertise this for your customers.  \n  \n  \nSpeaker 1\n \n Because it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this. So \nsome browsers does not. Some browsers do not support this and that's why you see it's not in any browser. Okay, \nthank you, Rahi. And what about languages? So so languages now let me remove this part now. So languages are \nsupported and I successfully used other languages to normally detect it. You should use change. So if you change \nyour user profile and change to another language, then your voice input recognition will also support chosen \nlanguage. So yes, it supports other languages. At least two more languages which I tested. It worked well for me. \nThank you Rakhi for your question. So finally we had an example of Classic UI section. We can set columns for our \nsection list set fields to display in Classic ui.  \n  \n  \nSpeaker 1\n \n We have different approach for setting up columns. So we can provide column settings type. Maybe you need price \noffer type. Okay. And finally we can have a menu comment. Okay. And then we can save it for all users. When you \nsave columns in Classic UI for all users, then it's possible to use data binding tool to help us to remember such \ncolumn setup in our package bind column setup for Classic UI save it into our target package. And by doing this we \ncan transport setting of columns for this list to other environments. So it will not travel automatically. Only if you \nmake corresponding data item. It will save it and you should do it default settings. So you should save for all users \nand such default profile will be saved as data item to our package.  \n  \n  \nSpeaker 1\n \n You can find it here reload and that's how we can change and transport Classic UI columns setup to test and \nproduction. This one is saved in sysprofile data at the same with details. Okay. Probably today's Friday and it's \nenough for today. And I would just want you to see a couple of images of what client modules in Classic UI looks \nlike. So let's focus on clients modules only. Now you see we have section page and we have edit page. This one \nsection page looks like a bit weird. We have a not so good looking name of it. We can try to modify it. Let's try to fix it \nso we can rename Quest 6 something section. But we should do the same code here and here. We should do it very \ncarefully. Save it. Now we will have better names for our client module.  \n  \n  \nSpeaker 1\n \n Also it will be renamed on disk in our dev classic package. You will see realty classic section. Yes, this one renamed \nand this one was also renamed. So you see we have full correct renaming on disk as well. And after doing this I \nrecommend you to instantly check it out if your section works well or not. Because now you see we have previous \nURL. Probably it will fail now and we have to probably simply go back somewhere like this. Go to classic UI section. \nNow you see another URL. So now it works. But we still miss columns because of changes and previous column \nsetup was set for previous name of the client module. That's why we have to do it once again. Okay, Price type, offer \ntype, maybe comment. Then we save it for all users providing so called default profile. This is important.  \n  \n  \nSpeaker 1\n \n After we do this we can bind columns to our package creating one more data item in our classic section data was \nbound successfully close it. Now we have to review what we got in our package in order to remove previously \ncreated unnecessary data item here old one is not needed anymore because it represents old values, old settings \nwhich will be not so practical. You see, because we renamed our module and old name was remembered here. Even \nif we actualize it, probably we will see there is no data for this. Oh, it's still here. But we do not need to keep such \ndata in our package so we can remove it. It doesn't represent any useful data for us. This one is correct data with \nnew client module.  \n  \n  \nSpeaker 1\n \n So when you rename client modules because of ugly names, take care about quest API column settings because \nyou will probably have to review them afterwards. Okay, so final quick brief look at our client modules in Classic ui. \nSo in classic UI section page looks like this. When you open it you will see this code. You will see define word, \nmodule name, dependency array, factory function and some body. So this is a body of our function which mainly \nreturns an object with some set of settings. In our case it's almost nothing. So we have no any customization here. \nClassic UI pages are also inherited from some parent templates. That's why we have a lot of common functionality \nand no need to implement this functionality each time in each separate section.  \n  \n  \nSpeaker 1\n \n So our functionality is now in parent one and all the buttons for classic UI section, like new actions, view buttons, \ngrid folders, feature tag, everything is inherited. That's why we do not need to customize it and that's why this code is \nso small. But for page for edit page code you see much more significant difference. So you can see set of sections \nmodule name, factory function returns a bit bigger object and you can see set of columns here. So they are different \nfrom Freedom ui you should focus on Diff first because diff shows you information about user interface changes \nand each item in this diff array represents one control as the same as we had in Freedom ui.  \n  \n  \nSpeaker 1\n \n So if you need to change something you can do it carefully here or better to rely on Section wizard because it will do \nit better for you than you do manually. And in Classic UI Section wizard doesn't allow you to use all available \ncomponents, so you should be so in general Classic UI programming is harder because you can do some additional \ncomponents and display them, but Section wizard does not support it. So in some cases, for example you want to \nadd a button, you will find at Academy articles this definition of a button, put it to your code, provide corresponding \nhandler and methods will be used as a place for your JavaScript functions to handle events of your controls. So in \nClassic UI you can also do almost the same programming as in Freedom ui. If really needed, just tell me.  \n  \n  \nSpeaker 1\n \n I can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief \nreview for you. Okay, that's all for today. We just briefly mentioned Classic UI and we probably need to pay some \nattention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers \nwho started questiqi Solutions and unfortunately such migration is not automated yet. So today's session is over. \nThank you very much for your time for your patience and questions. Next week we will start with some migration \nquestions from Classic UI to Freedom UI and we will move on with server side programming. So we will do some \nserver side examples, we're writing C code, we will do integration with Visual Studio, working with File System and so \non.  \n  \n  \nSpeaker 1\n \n As a final step for today, it looks like I unnecessary caused it. I have to remember everything we did in File System of \ncourse then I will submit it to Version Control just to keep all the history. And any of you who wants to keep how our \nsession proceed, you can also watch our repository at GitHub. Thank you for your time. Our session is over. In case \nif you have any questions feel free to ask. Our session is over and goodbye. Thank you. Have a good weekend.  \n \n  \n  \nSpeaker 1\n \n Today is session number six of our development on Creature Platform Guided Learning. Today I want you to see \nsome additional materials related to Classic UI and Freedom UI and migration. And then we will fully switch to work \nwith server side. So recently we managed to create a fully separate Classic UI solution. And this was a Classic UI \nsection and list inside of this is called also it's called a section list. So we have a set of data records here. When you \nopen edit page, you see Classic UI edit page with columns components. And we decided not to focus too much on \nClassic UI because this platform will be like deprecated probably somewhere in future. Currently it's supported, \ncurrently it's working.  \n  \n  \nSpeaker 1\n \n But in future so it will be not developed, it will be not improved, you will not see new tools or components for the \nClassic ui. And most development is focused on Freedom ui. And you also remember some interesting feature, \nsome feature for voice recognition, you remember we still missed it in Freedom ui. And you also can do details, you \ncan program buttons or actions. Everything is explained at Academy. So if you ever need it, you can look at it. Also if \nyou go to client module part for Classic UI you will see that code in Classic UI in general is I think a bit more simple \nthan in Freedom ui. Because in Classic UI you can also make your items in diff array for example like a button. We \nwill do it later.  \n  \n  \nSpeaker 1\n \n Then you can create a handler as a function add methods section. And in general I think it's easier because more \ntransparent work with object model, more transparent operation with view model data. I will show you more \nexamples later. And this is just a quick brief introduction for you. If you will work with some Freedom Classic UI \npages in this case, this possibly can help you. So what I want to show today, this will be a very typical task for future \nI think. And this typical task is your customer who already runs some Classic UI section successfully. And customer \nunderstands the future is in Freedom ui. Customer wants to use some Freedom UI features, tools, components and \npretty look and user interface. So customer asks you to migrate some existing solutions from Classic UI to Freedom \nui.  \n  \n  \nSpeaker 1\n \n Unfortunately we don't have any automated procedures for this. And especially this becomes additionally complex if \nyou have some programmed code in Classic ui. So I will show you the most practical way how you can switch from \nClassic UI to Freedom ui. I will also show you some settings and system settings for this which impact on how you \nsee your system. So you'll be like more expert in it how to make this migration. So as my example I have realty \nClassic section implemented as Classic UI and I will show you how we can switch it in Freedom UI and what we have \nto do for this. So Freedom UI or Classic ui, the only difference is at client side. So we have different types of client \nmodules.  \n  \n  \nSpeaker 1\n \n Such items which have section in their name or page in their name, they usually designed as Classic ui. If you look at \nthe pages and you see form page or list page, it's a Freedom ui. Of course, physically they are totally different. When \nyou go to list page, you will see Page editor like this, it's a Freedom UI page. And when you will go for example to a \nsection page, you will see only code because it's Classic UI and you can configure Classic UI sections only when you \ngo to corresponding section and run Section wizard in it. That's how you can get to Page Editor in Classic ui. But \nnow our task is to make an example of migration.  \n   \nSpeaker 1\n  \n At the source part we have Classic section, this one and as expected result, we would like to make one more section, \nbut showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some \nserver side logic, maybe we have some business processes. So server side part will remain the same. Data, items, \nlookup contents, everything will be the same. The only change we expect to do will be our user interface area. So set \nof client modules and related code that is behind such items. So I will show you how to migrate from Quest CQI \nsection to a Freedom UI section. Please note that it will not it will be not necessary to forever forget about Quest ui. \nIt's still possible and different users may define themselves which type of user interface they want to run.  \n  \n  \nSpeaker 1\n \n So it will be possible to switch. First of all, I need to tell you about some important settings related to such view. And \nI would like you to see this background like frame. You see this name which shows you some funny, some fancy \nbackground image, some kind of item which is called desktop and you can select and edit it. At the left part you see \nset of sections workplaces, you see for different workplaces, different contents and you also can see some image \nbackground and the top line here also use set of buttons items which are designed in angular and they are items of \nFreedom ui. So this left and top area is managed by Freedom UI and we can switch this background frame setting to \nClassic UI if we want to.  \n  \n  \nSpeaker 1\n \n So let me show you system settings and this system setting is called like Freedom use Freedom UI interface. This \nsetting generally turns on or off this background frame stuff. And if we just for test purpose want to turn it off so use \nFreedom UI interface was originally on we turned it off and it's cached. So in order to apply this we will need to log \nout and log in again. Now you will see how system will look like with the Classic UI set of section and the top search \nbar. Now you see system how it looked when we had no Freedom ui. You see a bit difference. Here you see that we \nstill have different works workplaces. It looks like we totally miss Workplace which is based on Freedom UI. We miss \nworkplace with customer360 from here as you can see.  \n  \n  \nSpeaker 1\n \n And we can also go to Workplace Management System Designer. This page go to Workplace System Setup. Let's \ncheck our customer 360 workplace and you see use only in shell in like in usual words. If we want to translate it into \nsomething that you can easily understand, it means that use only in Freedom UI background settings. Now it's not \nFreedom ui, it's Classic ui. That's why this workplace disappeared. Okay, so you can manage how you would like to \nsee background which is a Classic or Freedom ui. Okay, so we can go back because we're interested in migration \nnow.  \n  \n  \nSpeaker 1\n \n So we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's \nlog out and log in again to see back our background Freedom UI setting, which is default setting now and which is \nrecommended to work with Freedom UI sections and also with some Classic sections. It's still supported. You see, \nwe have Freedom UI background, but we have Classic UI stuff inside of it. What I wanted you to know next is Special \nsection designed to simplify such transition between Classic UI and Freedom UI sections and user interface. Now \nyou see special section special setting for page which is called UI Management. And we can specify setting for \nFreedom UI for different roles or users, which makes possible to do it quite flexibly.  \n  \n  \nSpeaker 1\n \n For example, some users are really stick to some Classic UI solutions. They are not ready to switch to Freedom ui. \nThey work with some basic UI sections and it's critically important for them. So you can manage this stuff for \ndifferent users. And also we have Form Page Preferences which is also designed to simplify the selection between \nFreedom UI and Classic UI and only in case if both options are enabled for a section. So in this case you see by \ndefault Freedom UI uses Freedom Pages, Classic UI uses Classic Pages by default and we have some exceptions for \nthis. But personally I consider this stuff as over complicated. And once you started to migrate from Classic UI to \nFreedom ui, I think that it's better to finish this Migration and then do not use Classic UI and only invest into Freedom \nui.  \n  \n  \nSpeaker 1\n \n So this is a page which will be temporary important for you, so it will be not forever for you. And finally you will \nswitch to Freedom UI all your necessary business sections and then you will feel quite okay with it. So you will not \nreally need to switch back to Classic ui And that's how I recommend you to follow this personally. In our Inner \nAcademy department in Croatia company, we still use some Classic UI solutions, but our plan is to migrate to \nFreedom UI and then to use only Freedom UI sections. So and this stuff like page for settings will be temporary \nuseful for you I think. Okay, let's go back. So finally we have currently for Classic section, we only have classic user \ninterface, so we have no option to display Freedom UI pages.  \n  \n  \nSpeaker 1\n \n So how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way. \nSo let's go to Settings, then go to Application Hub so we can create new app. As you remember, application is like a \nnew top level setting or like application entity which may include one or several packages inside. We already have \nFreedom UI reality section, but we don't have any classical representation for it. So when we create new application, \nsystem will create new package to create. If we ask, it will create new section for us. So now I will show you how we \ncan create new application. We can call it, we can make it based on records and business processes, but we will \nname it Realty Migration. So it means that we migrate from Classic UI to Freedom ui.  \n  \n  \nSpeaker 1\n \n We can compose kind of icon for it. And we will use this very important feature link to an existing object. This is very \nimportant. So this is a key feature of all this migration idea. We will use existing realty Classic UI main realty classic \nentity. This one will be main and it will mean that system will not create new object for us. It will use existing object, \nit will create a new package, it will save all our application information into a new package. It will make dependency \nfrom real to classic existing dev classic package. And finally we'll have new app but based on existing object. And \nlet's try, let's create it. Icon color is okay for me. So let's move it. This will be not so hard because system didn't \ncreate new objects for us.  \n  \n  \nSpeaker 1\n \n It only uses existing object and then creates several client module. So I don't expect it to last longer than 20 \nseconds. So let's see how it works for us. And then you will see the main idea of migration. So Generally it's pretty \nsimple. You will have a new app, you will have template for list and or edit page. And then we will have to manually \nset it up according to our expectations. So you can see there is almost no automation such migration unfortunately \nand a lot of hand work is expected here. So let me show you how we can do this. So we have data models. Our data \nmodel has no new objects, but it definitely has an existing object because it's based on this reality. Okay, let's go to \neasy part. List page I think is easy part and it shows some columns.  \n  \n  \nSpeaker 1\n \n We can hide unnecessary columns. We can add the columns that we need you. Now you see all our classic object \ncolumns are here. So we can specify say okay, we want to see name, price, type, offer type and comment and then \ndate of creation. Order of selection is important here. And we can hide this column. We can also hide this, we can \nshrink, we can move something if necessary. We can swap columns positions if you want. So now this is easy part. \nWe only made our list settings for freedom UI page. Physically this page is saved. Let me show you this page. Page. \nPage here is saved into new package and its parent page is somewhere in template code and title is quite good. So \nwe can save it, no problem.  \n  \n  \nSpeaker 1\n \n I prefer to control what's going on at configuration section because probably I'm too stick to development and I don't \nreally trust only no code tools. So I always want to check what is going on there. And that's why we go to \ncorresponding new created package. You see this package must have dependency from dev Classic. Yes, has it. And \nthis package now includes no owner objects. So it uses existing object from parent package from dev Classic. And \nyou see no created objects here. So we did not customize our object model so far. So we use 100% of all existing \ncolumns from classic object. So data model is the same. User interface part is the only change here and we have list \npage changes. Now I will work with form page. So list change is okay. Now let's work with form page.  \n  \n  \nSpeaker 1\n \n Form page is Freedom UI edit page for a section for an object. And as you can see it has its own properties in our \npackage code title. Great. And we can specify columns as we wish. We already have all the classic UI columns, so \nwe only can just drag them at its place where we expect it to work with. So let's go and display types. This is list of \nexisting columns. So such columns were already added at this stage where we created in classic UI we have \ncomment, we don't have any Other columns that could be useful. Also, it's interesting to mention that you see such \nnotes here representing that colon was already added to the page.  \n  \n  \nSpeaker 1\n \n So you will see such node if colon was already shown somewhere and you will not see it if colon is present in your \nobject model but was not shown on the page here notes for example, the colon which is designed to work with \nattachments and that's why it was not shown as a separate component here and I do not plan to show it. Okay, so in \ngeneral it looks like this. We can also try to specify drop down for types. Drop down for offer types. Okay, great. We \ndid not create manager for this object and when we finished we can just click save. As you can see, even if we had \nsome business logic in Classic ui, this business logic is not automatically migrated into Freedom ui.  \n  \n  \nSpeaker 1\n \n There is so big difference between such platforms and code that now developers did not implement any kind of \nautomation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom \nui. So if such logic exists, you will have to reprogram it Working at code source code part of the client module. So I \nalready saved it. You can close it. Now you see some changes. We can control what's going on at our package and \nthat's how we can test how it works. So I expect to see new section somewhere here Migration section. Now you see \nthe data which previously was shown in Classic UI also available in Freedom UI user interface. You can try to add the \nnew data record. But now you see still you see Classic UI page.  \n  \n  \nSpeaker 1\n \n This is a result of some browser cache issues. Okay, let's cancel this log out, log in, go to Freedom UI section. Also I \nwould like it to be present in my. Let me show you in my studio Workplace. So let's go to Workplace Studio. I'd like to \nadd my migration migrated section. We will find it Realty Migration Only sections which were not present here are \nshown. That's why only realty migration is shown, because Realty and Realty Classic are already done. Okay, \nmigrations is somewhere at the end. So let's rearrange this as usual and move it upper just below the classic. We \ncan also bind this workplace and save it to the same package where we originally saved it. And system creates \ncorresponding three different data items for us. Okay, we trust that everything saved correctly. So we have three \nsections.  \n   \nSpeaker 1\n  \n Now let's go to Studio Realty Classic and Migration is somewhere at the Antifa world. I expect to see my sections on \ntheir places. Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff. And migration \nis our Classic UI data shown in Freedom UI user interface. Trying to open the edit page shows us Freedom UI page \nfor migrated stuff. So now we made our example with migration and we successfully implemented it's in user \ninterface. So you see that this is a simple and quite straightforward way of how you can do this migration. You will \nhave more difficulties with transferring of business logic making your own filters. Again if you made some filters for \ndropdowns. For example, in Classic UI it's possible to use programming or to use business rules. And business rules \nare not migrated automatically.  \n  \n  \nSpeaker 1\n \n So you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages. \nBut having the data stuff the same. It's so doesn't take too much time because your data is data model is ready. And \nwhat is interesting, we have special parts of section like folders like tags and notes. So nodes will be taken correctly \nfrom Classic UI part. You will see attachments here. And notes is a special component which is missing here and \nthat's why you do not see it. But files will be shown here. So in Classic UI special component to show your files is \ncode. So this detail. Oh, now it's failed. Yeah, because we probably. So as you can see, it's quite hard to make it work \nat the same time where you work with Classic UI and Freedom ui.  \n  \n  \nSpeaker 1\n \n So it's really hard to. Now we switched to Freedom UI and that's why Classic UI edit page is not working normally. \nBut for different users it's possible to set up. So Classic UI open the page. As you can see in Classic UI I open the \npage and I see Freedom UI edit page. Because my current setting is to show Freedom UI page and because of \nFreedom UI shell is activated. So you see this background, top panel and left panel are in Freedom ui. And because \nwe see some background here and because it's made on Angular. So Edit page was chosen to be shown in Freedom \nUI even though we opened it from a section which is in Classic ui. So I understand this is kind of messing with \ndifferent types of ui.  \n  \n  \nSpeaker 1\n \n So finally when you do migration, you will use this help of Application Hub. You will get new package for your \nmigrated stuff. From Classic to Freedom we will have set of client modules and all logic that you miss. You can \nimplement with the help of business rules, with the help of components that are available as no code tools at \nFreedom UI and not available as no code tools in Classic ui. And also you Will be able to write your code for migrated \npages to implement the same functionality that you needed and that you previously used in classic sections. So if \nyou have any questions about this migration, please tell me. Server side part like business processes, like web \nservices, like some C Sharp code, it's the same, so it operates with data model, it doesn't really depend on the type of \nuser interface.  \n  \n  \nSpeaker 1\n \n So server side part of your migrated stuff will be the same and you just need to check that it still works as expected. \nIn case of any questions, I would be happy to hear. As usual, video recording is performed. So if you missed some \npart or if you so just watch this later, all the videos will be available. Peggy? Yes. Questions please.  \n  \n \n  \nSpeaker 2\n \n Yeah, I have a question. Is realty. Sorry, not realty. Is Classic UI ever. Would it still be deployed to new customers or is \nit just mainly targeted towards legacy customers?  \n  \n  \nSpeaker 1\n \n Currently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it. So \nit's like you have an old PC and new PC and you think about installing some program. Of course it makes sense to \ninstall it on UPC unless you have very serious reasons to use Classic UI for it. For example, you already have some \nmarketplace add on which is very useful for your business, but implemented in Classic UI and is expected to be used \nin some Classic UI sections. So if you have some strong reasons like you stuck with some quasiQL solutions, then it \nmakes sense to continue its development, to improve it, to advertise to your customers. But if you have equal \nchances and new customer and new project, of course it makes sense to look at Freedom UI first.  \n  \n  \nSpeaker 1\n \n Because in Freedom UI you have in like in several times more available. No code, controls, components and \nFreedom UI will be developed in future and it supports or is going on. Classic UI is now supported only for existing \ncomponents. No new components are created for Classic ui. We still have thousands of customers with running \nClassic UI solutions and it is quite good. So customers are happy with running what they have. But it's about future, \nit's about development and improvements in future. So if you have choice, of course it's better to select Freedom ui. \nIf you don't have choice because of existing circumstances, then you can decide yourself and choose Classic UI if \nyou do some customizations. That's brilliant.  \n  \n \n  \nSpeaker 2\n \n Thanks Amelia.  \n  \n  \nSpeaker 1\n \n Thank you Paddy. Thank you for your question. Okay, so now you know how to do first steps. Actually we also face \nthe same stuff in our inside like team work and automation. Inside of Creatio we have several big creature based \nsolutions inside of Creature company and it's also so we also like face as most of our customers we face such \nupgrade needs because Freedom UI is now like primary user interface and we still have a lot of Classic UI legacy. So \nwe do some planned work on improvements from Classic UI to Freedom UI and we still work with some sections in \nClassic UI because of too many systems, too many changes to be performed. And one day we plan to switch from \nClassic UI to Freedom UI in most of our currently used sections.  \n  \n  \nSpeaker 1\n \n And we have some tools as I showed you that intended to help you with it. But personally I think that once you \nstarted to switch, it's better to make it quick and then to continue improvements already in Freedom ui. So not to be \ntoo long in this intermediate stage where some users are working in Classic, others are working in Freedom. You will \nhave double time for support of this intermediate stage. So it's better to try to make it shorter and to implement \nsomething like minimum value product in your Freedom ui, move your users there and then improve quickly, improve \nall necessary remaining things that will make your users fully happy. So not to stay long in this intermediate step.  \n  \n  \nSpeaker 1\n \n Okay, so if you have some real life examples, some kind of like practical interest and practical experience with the \nmigration also tell me, it's interesting what you think of it, what unexpected outcome you have. Probably so anyone I \nthink may have something unusual and expected and even in creation we sometimes can't implement all possible \nscenarios. So if you will have something unusual, just tell me, I will try to help with it. So we have to switch from our \nclient side, probably already get tired of it to some server side features. I will try to explain and to make this \ntransition coordinate quite smooth. And now we will talk about more developer oriented things and more related to \nprogramming at Creature server side in C Sharp, using dotnet framework and talking about compilation libraries, file \nsystem and so on.  \n  \n  \nSpeaker 1\n \n So probably I have to start that in any package. Now we see we have some set of items of different types. So we \nhave items with different types. If you try to add an item manually, you now will see we have objects and we also \nstudied what is replacing object. We have pages, so client modules of different types. And also we have replacing if \nmodel which means replacing client module specially designed to extend and modify existing pages. And we already \nstudied this one, we did not study source code, we will do it a bit later. And we slightly touched the question of \nmaking business processes. So I need to show you some items and explain where they are actually stored and how \nthey actually work. So when you operate with objects, we already know that it doesn't.  \n  \n  \nSpeaker 1\n \n So object is a server side item, but its changes are applied easily without need to compile. So generally C code is not \nso let's say heavily used for objects and replacing objects. Of course, C Sharp source codes, if you design it \nseparately in source code item will definitely require some configuration. So it means that when you develop \nsomething inside of item name source code, you will not be able to immediately start it. You need to run a special \nprocedure called compilation and physically it means that creation handles some C Sharp sources at server side and \nwhen you want to apply them and when you want to implement and apply changes. So you will need to compile and \ncreature is capable to collect C Sharp sources of its compilable part.  \n  \n  \nSpeaker 1\n \n Finally to compile and get executable DLL libraries and then use such libraries at its website. So C Sharp sources \ndefinitely require compilation. All JavaScript part this all this JavaScript part obviously does not require compilation \nbecause it's a set of JavaScript files. They are executed as interpreted code at browser side. So when you save and \napply any change in JavaScript part in client module part, it also does not require any compilation. So this is \ninterpreted part fully. Business processes in general, such items as business process it's designed as interpreted \nsetting. But for some processes you can add the C Sharp code and make it compilable. So in some processes, let's \nsay we have plus minus. It means that some processes can include compilable code and we can run it and we can \nuse such advantage of compilation and very fast execution, but it's not mandatory.  \n  \n  \nSpeaker 1\n \n In general, it's recommended to have as less as possible for code in your processes. Because processes are \noriginally designed to be a no code tool and possibility to code into it. It's not its primary purpose. The primary \npurpose of a process is to make your business logic a set of steps that you can easily construct with using of your \nmouse and which will not require programming and then you can get your business work done. But you can also use \nC Sharp code inside of it. And that's why we can call business processes as partly compilable. So I will show you \nexample rest and swap services. They do not require compilation because mainly they are metadata used inside of \nbusiness processes and user task is a C Sharp programmed item that requires compilation. So now SQL scripts \nobviously are not compiled items.  \n  \n  \nSpeaker 1\n \n Data is also metadata, not compiled and import. We can import dll items if they are written in.net and add them to \nour packages and use them in Our compile bot stuff. So if in general such DLLs if we import them are included into \ncompilation, so we can consider this stuff as involved in compilation. Now you see only four types of items that \nsomehow touch the compilation and in general that's how we can say that creation has compilable server set. Also \nprobably also need to tell you that objects can potentially include its compilable part. But now it's not recommended \nto be used. And in general this is feature that's still supported but probably will not use it. We will talk about object \nprogramming and possibility to use C Sharp compatible code there when we will talk about event handling at object \nlevel.  \n  \n  \nSpeaker 1\n \n So in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they \nare turned into. Let me show you what they are turned into DLLs that you can find in Bin folder here. Or you can also \nfind DLLs as a result of compilation in many packages. For example, we made dev classic package files bin and here \nis our DLO of a package compiled as separate assembly. So why you need to understand such files, DLLs and so on. \nBecause now we will talk about server side functionality and you need to know how it turns into something that \nsystem can execute where you have to search for some sources and you need to like understand it in very general \nthings so you will know where to find some parts of execution executable stuff of creation.  \n  \n  \nSpeaker 1\n \n We will make an example now and I think that the easiest possible way to demonstrate how you can write and run C \nSharp code at creation platform is to make a business process which will execute C Sharp script task into it. I \nintentionally avoid making our own C Sharp sources at the beginning. So first I plan to show you how we can make \nprocess with some piece of programming inside of it. We need some package for this. I prefer to do it in my realty \npackage. This is Freedom UI solution. So one of our main packages here in total. Now you see we have three \npackages in our solution and it's not the end. So possibly we may have more if you want. You can also minimize \nnumber of packages if you play with you remember we studied it with the search rack setting.  \n  \n  \nSpeaker 1\n \n Or maybe it's better to say lookup package installed application. It's possible to minimize number of existing \npackages for you if you connect all your editable applications with some packages that you already have. And we \nalready did it avoiding creating one more package for Customer360 customization. So this is something that we \nalready studied. You know how to find it just to find and register an object named package installed application as a \nlookup at lookup section. Then you will be able to handle all your applications, all your packages included there. And \nyou can replace current package for some apps making system saving your application customization into a certain \npackage. Okay, so what I plan to do now select my Freedom UI USR realty package, add the business process.  \n  \n  \nSpeaker 1\n \n I need to explain that what business process is because some of you probably already have experience with \ncustomizations and some of you probably already know that business process is a server side functionality which is \ndesigned to automate some business steps that you expect to be performed by system. And in general business \nprocesses are interpreted. It means you construct such kind of diagram and then ask system to run it. System will \nread your diagram structure step by step and it will execute your diagram step by step. So in general business \nprocess is saved as set of metadata settings. Technically it's a text with all necessary information about its \nstructure.  \n  \n  \nSpeaker 1\n \n And we have a special process engine, so it's a backend server side item quite important and very big which is \ncapable to get such metadata and execute it step by step according to the diagram items. Okay, let's start. So I need \nto provide a code usr and I need to explain the business sense of my future process. My business sense will include \nsome calculations and also I will work with database. So I also plan to connect and to use one example for different \npurpose. And this example will be used not only to demonstrate how you can run C sharp code in creatio but also to \ndemonstrate how you can write some a code that operates with the creature database and which operates with the \ncreature data model using its own native tools. For this I will explain it later.  \n  \n  \nSpeaker 1\n \n So my business sense is to make a process which will do some calculation at server side. And my calculation will \ninclude selecting some data and calculating average price for realty record. So my process name will be something \nlike Coke Average Realty Price process and the title of the process will be Calculate Average Realty price. Please \nconfirm do any of you follow me directly at the session or you just watch it as video and then you plan to do your \nown steps? It's important for me to know how long delays I should provide for you and how I should say make poses \nor not. So if you follow me just live during the session, please click Please type plus in our chat it will let me \nunderstand that I have to make poses for you to do the same during the session.  \n  \n  \nSpeaker 1\n \n If not just type Minus which means you are only watching and I can do it faster. Okay, thank you. Thank you. Monica, \nAdrian, Eddie. Thank you to share. Okay, it looks like someone from you also following me. So I will not go too fast. \nNow I made a process with a title and the code. No any other changes and plan to save it in my USR realty package \nwhich is used for Freedom UI example. It also makes sense to name my beginning of the process. I call it like start. \nAnd here we will have successful finish. So normal end of the process. Okay, save it. As you can see, first time it \ntakes a while to save it. But in general, now our process represents a diagram which has a starting point. Generally \nprocess will start from all items which have no incoming flows.  \n  \n  \nSpeaker 1\n \n So if your process has no incoming flow, it means it's the start of your process. So take care. If you accidentally drop \nitems on your diagram without incoming flows, it will be treated as a beginning. So please be careful. Okay? So my \nplan is to show you not all the process engine tools, but only developer part of it. So part where it makes sense to \nwrite code and include some, let's say developer skills into your product. Because also Business Process Engine and \nGeneral Process Editor has a lot of no code tools which we will also use but without explaining all the possible \nfunctions. So I will show you only major things that we will need for our example. So my main focus today is to show \nyou items that are included in development.  \n  \n  \nSpeaker 1\n \n In general, you know that Business Process Editor has two types of items that you can add. System actions which \nare executed quite quick, they do not require user feedback and they are executed automatically at server side. And \nwe have items called user actions. User actions are designed to show some page for a user, usually waiting for \nsome feedback after it. And user actions are designed to stop your process execution for some time till user will \nrespond something till user will provide some input or will confirm that user gets some output. So user actions will \nmake your process much more interactive. Okay, we have some other types of items like starting events, \nintermediate events, finishing event and logical gateways. So I will show you on the developer part of it which you \nneed to know if you're really interested in like becoming a process expert.  \n  \n  \nSpeaker 1\n \n You can also consider going to our customization course where my colleagues teach how to manage processes. So \nwhat my plan is I user. I use system action script task, the only item in all business process which requires coding in \nthis diagram. So this item should be carefully put on the diagram. I can intentionally show you how you can do it \nincorrectly. Like this. Then you move it like this and then it looks like you added this item to the diagram. But in \nreality this is not correct. I will show you that this item does not say connect to this flow. And if you do it like this \nitem has no incoming flow. So it will be started at the process beginning, not as you plan. And that's why you should \ntake care of it and put it properly.  \n   \n Speaker 1\n \n Now you see when you slightly move it then you correctly put it on the flow. So you should practice a bit with placing \nitems on the diagram and making sure that you do it correctly. Now this item has incoming flow, it has its own C \nsharp body. And we have some notes here, but it's only for long lasting operation. And then we have finish item. So \nwhat we can do here, this is a C script that physically will turn into a method of automatically generated class. \nCreature is capable to generate such some C sharp sources for it and then it's capable to compile them.  \n  \n  \nSpeaker 1\n \n So now you will see that we can write some C sharp code here and then save apply changes for our process and it \nwill turn into automatically generated class and our code here in this C sharp script will turn into a method. It will not \ntake too much time for us because I already have some pre developed examples for you and it will be server side \nNDPTS schema query for calculation. So I already have some example which will work for us. Probably I should \npaste it into our chat and paste it for you because it's quite big. I will put it into parts because Zoom has some \nlimitations on chat messages size so we can take chat messages. Probably we will slightly need to replace names \nhere like this, but you will see it.  \n  \n  \nSpeaker 1\n \n Okay, so I copy and paste this code to the editor. We can also expand this editor to see like in more comfortable \nways. And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code \nto type code like this. Unfortunately for business processes it's not intended to be used so it's not supported. And for \nbusiness processes writing a short code here in this editor in general it's okay. So you will not suffer too much by \nwriting just 10 or 20 lines of such code. But if your plan includes to run very complex calculations, including different \nclasses, including a lot of other things, libraries and tools, it makes sense to implement complicated logic \nseparately. You can use C sharp source code for it and then just to create corresponding instances of your classes.  \n  \n  \nSpeaker 1\n \n Probably also using a tool called class Factory and you may create instances of classes that will Work as helpers for \nyou. Then you can just make corresponding setting and run corresponding methods. That's how you may keep this \ncode quite small sized and do not need to create very complicated logic just here. So it was not intended to be used \nfor complicated logic. It was created with ideas of using of existing classes and making this code not so big. So if \nyou need big logic, please implement it separately as normal classes with source codes where you will be able to \nuse Visual Studio to develop so you will have comfortable conditions for it. And here it's not so comfortable. I agree \nthis editor is not so powerful, but you can bypass this disadvantage because of not writing too much code here.  \n  \n  \nSpeaker 1\n \n Okay, so I will save my code example. It's not finished yet. I will just show you what happens if you try to save. So if \nyou have a changes in your script task and you save, your process system asks you to compile here publish means \nstart compilation and I do not plan to do it right now because my code needs some improvement and I need to \nexplain what is going on and explain you step by step what is happening here. So in general I need to explain you like \ncommon idea of what we are doing. The common idea is to run a business process which will accept some \narguments at the beginning and then we will do calculation of average realty price based on our existing data. But as \nyou may guess working with realty data, we have different types of data records.  \n  \n  \nSpeaker 1\n \n Let me show you a bit more examples like apartment in will be an apartment for sale. Okay. And yeah, it should be \nreloaded probably. I just feel okay, it's apartment and this also is an apartment for sale. So what I wanted to show \nyou we have different types of realty like houses and apartment. They have different pricing values, they have \ndifferent pricing models. So it's not good in general to mix apartments and houses. Also we have different offer \ntypes like sale and rental which are totally different. So it's totally incorrect to mix values for rental, monthly \npayments and full cost of some realty records. So it's not correct to mix them and try to calculate some average \nprice because between it. So we have to do quite smart filtering.  \n  \n  \nSpeaker 1\n \n We need to take into consideration only records with a certain type in order to split apartments from houses. And \ndefinitely we have to filter data according to offer type splitting sales from rentals. So when we do this average price \ncalculation we will need to have filters or offer type to include only rentals or only sales and general realty type to \ninclude only apartments or only houses. And then we will calculate total Amount of all selected records, total price. \nThen we will divide by total area of them in order to include and consider different areas for different objects. So \nwe'll count, in general, we will count like average price of a real to per square foot of the area. And that's how we will \nfinally get our result. So the real sense is just counting similar objects and getting average price per area.  \n  \n  \nSpeaker 1\n \n And physically how we do this is the C Sharp code written in this editor. And yes, I agree that if you don't know C \nSharp, it could be quite hard for you to write it without mistakes. So if you type some code here, if it has mistakes, \nsystem will not show it immediately for you. For example, if you write something like this with a missing name of \nyour method, so if you do some mistake with spelling, then you will note about it. So you will know about this \nmistake only when you start to compile. So unfortunately there is no background syntax check that will show you \nwith a red color that you have some mistakes here in this text. But it's designed to be quite small and it should be \nquite obvious. So we do not think that it's a real issue.  \n  \n  \nSpeaker 1\n \n Okay, so let me explain in general what is happening here. I plan to operate with creation database. We have two \ndifferent ways to operate with the database. And now I'm using the approach which supports entity data model. \nSimply speaking, IT supports items like objects and respects object structure, object columns and references and \neverything that we design at creature orm Object relational model ORM of creation is based on objects and we can \ndesign them when we save and publish. Object structure is applied to the real database tables and columns. So \nthat's how it works and working with this class entity schema query Class means making selections of data records \nfrom creation data model, respecting objects, respecting all their column structures. So using this information.  \n  \n  \nSpeaker 1\n \n Another approach which we will study a bit later is based on direct database selection from its tables without use of \nobject model. So we will be able to write down our own selects some columns from some tables where some \nconditions without taking care of support of object model. But now this approach shows you this possibility with \nsupport of object model. And this is one of two major approaches to get data. There are some advantages of using \nsuch approach and it supports access rights restrictions. So if this code is running under single user credentials, it's \npossible that user will have no enough access rights to operate with data. So if you run your data selection with \nentity level with support of object model, so it will restrictions, it will read no data if such Data is not available \naccording to access rights.  \n  \n  \nSpeaker 1\n \n Also Entity schema query supports caching at server side. If the same data is obtained too many times at the server \nside, it's possible to organize your code in the way that this data was first obtained from the database and all second \ntimes it maybe will update will be taken from the server side application cache and that's how you may do your \nselections more efficient. So entity schema query supports caching. Also it supports paging when you need to \nprocess a very big set of data records and you prefer to do it by parts working with portions of data pages and entity \nschema query also supports complex query structures including hierarchical queries. That makes sense when you \noperate some data which can be displayed in tree view. Okay, let's not go too hard and too deep. So currently simple \nanswer.  \n  \n  \nSpeaker 1\n \n Entity schema query is a class which supports object model and it has only one single purpose select list of records \nfrom the database. It has some arguments when we run its constructor. We have several overloaded constructors \nfor this class and it has arguments. One of them is quite standard so you will always use it. And second argument is \na text representing our object code. As you remember our code is USR realty so we have to correspondingly modify \nthis one. So you should do this at your own. I will also note it in chat and this is how we can create an instance of our \nclass which will be used for data selection of our entity schema query. We have to specify its settings, we have to \nmake it work properly for us. So we need first to select columns.  \n  \n  \nSpeaker 1\n \n Also you may ask me if we type this code like this how we know about present functions, methods properties and so \non. We have some Academy server side documentation. Let me show you backend development.net classes \nReference Go here and we have set of cluster libraries for creation. Server side you can search for entity schema \nquery class. Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four \ndifferent overloaded constructors. I'm using this 1/3 one and we have a lot of public properties. A bit below you will \nsee public methods and so on. So if interested you may find this SDK information at Academy website and we'll go \nback to our code. I agree. Currently it looks like a bit boring stuff so I try to go through it quite quickly.  \n  \n  \nSpeaker 1\n \n We only make sure that we have the same columns as we plan to work with and we don't have any obvious rude \nmistakes here. So let's look at our reality Object just to match our columns we need to select price and area. Here we \nhave USR price USD column and USR area. Okay, so it looks like the same. We can add columns to our query. You \nmay also face a method named addall schema columns. But I strongly warn you from using this method because \nwhen you add all schema columns may happen that you are working with a quite big entity with hundreds of \ncolumns and without thinking you can add a lot of columns which you will never use later in your code. So it's better \nto save system resources and do not add all the columns until you really need it.  \n  \n  \nSpeaker 1\n \n So it's better to always add only columns into your selection which you really need to analyze later. In my case I need \ntwo columns, price and area and making such methods to our entity schema query will result into adding couple of \ncolumns. So the part of our selection statement that we will finally start at the database overcrowc select then set of \ncolumns that we do from our realty table. From this table is called root entity which is the first one which will be \nused for construction of our query. It's possible to use joins and add other columns to our selection. But in my case I \nneed just very simple example. I will use the only one table. In general it's possible to make joins with other entities \nand in my case it's just not necessary.  \n  \n  \nSpeaker 1\n \n But it's possible you can use this argument as a special column path expression. Column path may include joins if \nyou use lookup columns of your main entity. In this case it's called direct join or if you use lookup columns of join the \nentity. In this case construction will be a bit more complicated and it's called reverse joins. If interested I can show \nyou where I can get more information about this ORM programming. So let me show you database tools. No, no, no. \nIt's about architecture probably second no, it's about architecture, Object events, data operations, Direct access, \nORM overview. Yes, somewhere here.  \n   \nSpeaker 1\n  \n So we have root schema which is the main from table of our select statement and it's possible to add connections \nto other entities and using direct connections when you select city, you can join to the sanctuary countries to get its \nname or you can use reverse connections when you have account and you would like to. Or in this case it looks like \nyou select cities and you would like to join all accounts from this city. And this article will let you know more about it. \nSomething like theoretical stuff. In my case it's pretty simple so I will select only one Table one Couple of columns \nfrom this table, no joins at all. And here is how I do this. But then I will need filters because my plan is to select only \ndata for a certain realty type and certain offer type.  \n  \n  \nSpeaker 1\n \n I plan to get corresponding values for my filters with the help of no code tools. So I expect to get such values. I will \nshow you how to operators process parameters a bit later. Now we consider we getting it with a special get \ncommands from process parameters. So we get couple of guids type and offer type and then we make filters. Such \nfilters are made with the create filter with parameters method, which is I think the most popular method for building \nfilters for entity schema query. And this filter condition is pretty simple. Column equals value and finally our where \nstatement will look like this column equals one value and another column equals another vote. By default, a logical \ncondition to join all the filters we have in filters collection is logical and that's why we do not modify it.  \n  \n  \nSpeaker 1\n \n Because we know for sure that by default our ESQ filters has end logical connection logical conjunction operator. \nThat's why we have it without any special setting. So if you want only for debugging purpose, you can get SQL text \nfrom your query, so it's possible it's supported. You can get SQL text and we can save it and then to use it for some \ndisplay, but only for debugging purpose, especially in like especially highlight this for you because for real execution \nyou do not actually need this SQL text. It will work even without your asking of SQL. And this is just for your better \nunderstanding of how selection is performed. So this will be necessary only for debugging for us.  \n  \n  \nSpeaker 1\n \n So when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's \ndone and we can run the main function for selecting data. This is getentity collection method, which finally returns \nas some collection. Also you may notice that we use special arguments here and here. And this argument is called \nuser connection. This is very important instance of a class which represents current user connection context. So \nuser connection is unique for each user session. Even if you have supervisor user and you started your system \ntwice, for example in two different browsers, you will have two different user connection instances for this. So user \nconnection has a lot of useful properties like current username, current user id, current user contact and some \nsystem stuff like information about database connection, some security stuff which is also important to know.  \n  \n  \nSpeaker 1\n \n So generally when we user connection in our code it represents current user context and this is mandatory to \noperate with creature database. So each time when you will run any kind of query that you want to be finally \noperating with your database, you will have to provide user connection because this one is like in general what you \nplan to select. But user connection is an important argument which tells the system who exactly is running this \nquery. System will include access rights permissions if necessary if this user is not an administrator. So user \nconnection is a very important context information for system and it's mandatory for any database related \noperation. Okay, we finally got our collection as a result, this result is set of records. Each one represents an entity \nclass entity represents one single data row of a certain object.  \n   \nSpeaker 1\n  \n And as we get this collection, we have to process it line by line. So we can use for each statement or there are other \nways to process collection. In my case I prefer to use for each and we use it for each row or as many rows we have \nin collection. We will have as many runs of our cycle body inside of our cycle. We can have this entity reference \nwhich implements just one data row of the collection and we can run. So this entity record is actually a supports an \ninterface called Entity I entity and that's why it has methods. So we can run methods like get typed column value. \nGet typed column value lets us to get certain value of a certain column from our data row.  \n  \n  \nSpeaker 1\n \n So simply speaking, this is the line how we get exact decimal price from our data. And next line is getting the same \napproach for getting decimal area. We have some counters here which we use to collect all the prices and all the \nareas. This example is pretty simple and so I'm just going into so many details only for those of you who probably \nhave not so much experience of C Sharp. So you will understand in general how it works and you'll be able to \nreproduce it and fix it if something goes wrong. Finally, when we finished we'll have counter for prices and for areas \nand then total result will be a result of division of all the prices by all the areas and we will have a final result and we \nwill save it into a certain parameter.  \n  \n  \nSpeaker 1\n \n Currently it looks like our code is ready. We don't have corresponding parameters so far, so possibly we have to \nimplement it and then save and publish. But it looks like we need some like say five or ten minutes or break. So let's \nmake it break and then we will continue this stuff and you will see that finally it's not so boring. And I will also show \nyou how to debug such code today. So let's make a break. If you have any questions in the break also please note \nplease Type them or just ask. I will come back in less than 10 minutes. Thank you for waiting. Let's move on. And \nnow we have to think of how to actually use this code into our process. So we have this part and we fixed all the \nitems here. Now we have to think of parameters.  \n  \n  \nSpeaker 1\n \n C Sharp sources inside of business processes can get some data from process interpreted part and then return \nsome data into processes interpreted part. The best way to do this is to use parameters. So parameters can be \nconsidered as a variable for the process and process. Items also may have their own parameters. So in general we \ncan think of parameters as global variables for the process or for certain values of process items. I plan to work with \nglobal process parameters and we need some of them like reality type id. So we plan to register such parameter as \nunique identifier. Code is used inside of programming title can be used for user interface settings in process \ndiagram. That's why use popular so title and code. I copied it from the code. So here I used this one.  \n  \n  \nSpeaker 1\n \n And when we use get generic expression on getting grid value and this parameter as an argument we ask system to \nread corresponding parameter value from the process and also we will do with the offer type. So I copy its name \nshow it for you Go to process parameters. Also I need to explain if you click on some process item it will show you \nselected item properties. If you click on the blank or if you click on this green button you will see process from \nproperties. I prefer to click on the blank because it's easier and parameters add unique identifier offer type id we \nneed it as arguments for our code. Okay, couple of arguments are ready. Then I plan to return back debug sqltext \nparameter so it will be text 500.  \n  \n  \nSpeaker 1\n \n So creating parameters you like declare variables for your process and the final result will be my average price \nparameter and it will be decimal. So add decimal parameter and I will do it like this. Okay, I hope you are quite good \nin doing it. So my question is for Monica and Paddy. Please confirm when you finish this part. We create couple of \nGuids unique identifier, 1 text 501 decimal. Monica and Paddy, please confirm when you're ready with this. Thank \nyou Monica. Thanks Paddy. Okay, great. So we can move on. So we plan to use such parameters, but also I will tell \nyou that unfortunately we have so fortunately we have possibility to run process as a no code tool with no \nprogramming from section list or section page in Freedom UI and unfortunately we can only pass one single value \nas an argument.  \n  \n  \nSpeaker 1\n \n So my plan is to use as much as possible of no code here. And for example we can select a source certain record or \nwe can open certain page. Then I plan to make a button which will run the process, but unfortunately we can only \npass one single data value as argument when running no code parameter processes. So in no code mode we can \nonly pass ID of the currently selected record argument. And I plan to use it in my process. So my plan is to get this id \nthen to use no code tools to select corresponding data values from the database and then to provide corresponding \nparameter set. So as example in my case in my parameters I plan to get an input process parameter and we can \nname it reality id.  \n  \n  \nSpeaker 1\n \n It will be also unique identifier so we can call it realty ID parameter and here its title will be reality id. Title is \nimportant for user display and code is important for programming. Okay, and we can set this parameter as input \nparameter. Input parameter will be designed as read only. So process expects this data to be set at the beginning of \nthe process when process is called and it's not expected to be changed it. So input parameters will be treated as \nread only. You will not be able to save its changes. We have no initial value, so we expect this data to be provided \nfrom input. You can see that input parameters only one single green colored arrow and the directional parameters \nare used with two sides arrows and green and red. Okay, so we expect to get this reality id.  \n  \n  \nSpeaker 1\n \n What we will do with this id, I will use a bit of no code tools. Read read data item carefully placing it on my diagram. \nYou see, there is a special display when you put it properly. Okay, my read data item will be used to get ID of type and \noffer type. So read first record of separate selection. Okay, what object? Reality object which is a Freedom UI \nexample. In reading one single record, it makes sense to make filtering. Otherwise we will randomly get some data \nrecord and we want to get a corresponding proper one. So I will make a filter click here, add condition type ID for \ncomparison equals with parameter and I will select my process parameter realty id. This is and then click select or \ndouble click here. That's how I will make this filter.  \n  \n  \nSpeaker 1\n \n This filter will be enough to make read data to select just single record from my database and we can name it read \nreality. Read reality will be its title and it will be also shown here. In general, it's good idea to provide corresponding \ntitles for all of your items and no need to sort if you have just one record and reading all columns. I do not \nrecommend you to use this option. So reading all columns Means you don't care how many columns will be there. \nAnd in some cases it can happen that you will have too many columns. So it will mean that you unnecessarily load \nyour system with querying of all the data you have. So it's much better to set read data only for selected columns \nonly. And we can specify what columns we are interested at.  \n  \n  \nSpeaker 1\n \n We are interested in type and offer type. So originally we expect to get only ID of the certain reality record. Then we \nwill look into database to get its type and offer type and then we will use read data item to get such type and offer \ntype. Once we obtain it when process is started, results of such data records will be saved somewhere inside of this \nread data item. It turned out to be not very easy to get it outside from it with programming. So I decided to have a \nseparate two parameters at process level. So I have specially designed parameters for type and author type and \nwhen the parameters are at the process level makes it not so hard to get and from the C sharp code.  \n \n \n  \nSpeaker 1\n \n So we will use getting data from read data into process level parameters and we can do it easily with formula. \nFormula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal \nvalue to. This is for example type ID and right part is formula expression value which will be used now just to get \nsome data out from deeps of read realty parameter and offer and type. When I click double click here you see a \nspecial macro which displays formula expression and this expression will be interpreted in runtime and replaced by \ncorresponding value in runtime. Formula is an interpreter tool so it will be started and run according to its settings.  \n  \n  \nSpeaker 1\n \n My process will be started Set type it this is our formula title the same approach another formula drag and drop it \ncarefully will be used to set offer type id. So parameter target parameter is offer type ID and form of value takes data \nfrom process elements. Read data offer type double click and then we have this macro save it. That's how we save \nthis offer type ID here this item. We can call it calculate average price or calculate AVG price. This is our calculation \npart. Now it looks like we prepared with the set of no code tools parameters that we use for filtering. And now it's \ntime for us to save our process. But first of all I want you. I want Monica and Padik to confirm that you are good at \nthis stage.  \n  \n  \nSpeaker 1\n \n So if anything should be shown or explained, tell me please. If it's not clear what we are doing also please ask. \nThanks Betty. Thanks Monica. If you have any questions, don't. Don't be shy, don't hesitate to ask. I'm here to help \nyou understand that listening and doing examples at the same time, it's really harder than just listening. So if any \nquestions or some misunderstanding, tell me please. I will be happy to assist. So our recent steps included taking ID \nthat we expect to get at the beginning of the process reading corresponding ID of reality. I read only two columns, \ntype and offer type. Then I used two formulas to get it out from results of read realty and then that's how we get \nsuch parameters and then pass this data at our script task part.  \n  \n  \nSpeaker 1\n \n So Monica, if any assistance needed, just tell me that we know now. You see, I saved my process and I did not \nexplain what is happening here. So when I saved it system. Oh, thank you, Monica. Thank you. So system told me \nthat oh, you changed your C sharp part so it requires compilation. And now it saved my metadata and then started to \ndo publishing, which physically means compilation. We can check what's going on at our application server side. We \ncan see who exactly consumes most of our system resources. Now we can also look at memory consumption and \npossibly I looked here too late because I already do not see any traces of compilation. But CPU high volt CPU is quite \nloaded, so possibly we will see. Oh yeah, we see it here. We saw dotnet Exe at the top of consumption of cpu.  \n  \n  \nSpeaker 1\n \n You saw dotnet Xeno you see. So here we have parts of. NET Core framework which is used for creation and it's \ncompiling our assembly in a dot net library. As a result, we extract expect to get set of DLLs and our package is set \nto be compiled as a separate assembly. Let me explain now, probably I will be not happy. No, I will not be able to look \nat it the property of my package. So when we designed our package, it was automatically set compile as separate \nassembly while compilation is going on. Unfortunately, our system will be not response it will not display some data. \nSo we will see forever hanging requests. And this will happen until our compilation finishes. When it's successfully \nfinished, then we will see unfreeze of all pending queries.  \n  \n  \nSpeaker 1\n \n So now you see our realty package has initial setting compiled into a separate smart. This option means that our \ncontents that we design in our. Oh, Monica, you have to leave. Thank you. Thank you. Thank you very much for this. \nWell, soon we will finish very soon. Thank you. Okay, so our package is compiled to separate assembly. So it means \nspecial mode when package compilable part is Saved separately and compiled separately into a library that will be \nsaved somewhere on disk nearby to our package stuff. So here we have USR realty. Here we have auto generated \ncode. This code was generated by creatio according to the process structure. You see class definition. Class name \nis designed as name of our process plus process methods wrapper suffix. So we have class name as combined \nstuff from process name and some suffix.  \n  \n  \nSpeaker 1\n \n Then we have method inside of it and you can see oh, this method is a constructor. Okay, not so interesting. This \nmethod is implementation of our script task. As we did not name our script task into something useful, then this \nscript task has named Script Task 1. Let me show you our process. This script task has parameters and this is just \nname Script Task 1. That's why inside of our code we saw Script Task 1 execute. The text for 8 is exactly the same \nas we typed and saved. And finally this class will be used into compilation to get final result of compilation which is \nsaved into files bin. And this is our DLL which includes results of our logic. Probably if we look here we may find \nsome code.  \n  \n  \nSpeaker 1\n \n But until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing \nthis code. But you may just trust me that finally this code includes business logic and our class stuff here. Okay, so \nfinally we compiled our solution. It turned out into a DLL saved on disk. This DLL is used as part of our application \nwebsite. We have approximately 200 of similar DLLs and if our package for example was not compiled a separate \nassembly. So if you disable this option for a package, then it will turn to much longer compilation. Because a lot of \nbase product packages, they have no such option. Compile a separate assembly. So they all compile into one big \nDLL which is saved here in terms of configuration auto generated folder.  \n  \n  \nSpeaker 1\n \n So we have this set of C files and bin folder here turns into this DLL. So now you see 11 megabytes of executable \ncode, which is quite a lot. And this is result of compilation of big number of base product packages that finally form \nthis dll. So recompilation of such DLL takes much longer, probably three or four times longer than compiling of \nseparate assembly. Adrian is asking what the difference of setting parameter value formula and by directly selecting \nthe withered parameters section by process elements. Oh, Adrian, probably you are asking about this. We have a \nparameter, we have value for it. So we could provide value into this parameter and saving it directly from read data.  \n  \n  \nSpeaker 1\n \n Yes, I understand this idea, but I do not like this, because it will be not clear for me at what moment of time this \nparameter will initialize its value and at what moment of time this parameter will change its value. So possibly we \ncan do this. You can try. And each time when your read data changes or it gets new results, your parameters should \nhave corresponding mapped values from read data. But I prefer to make it clear and obvious according to the \nmoments when we have some changes. So this is read data. As we finished with this item, it will have its own \nparameters and some results of selection will be saved somewhere here. Then we have formulas to get data from \nthis and put it into parameters here. And it looks like quite exact moment when we change parameter values.  \n  \n  \nSpeaker 1\n \n With this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly \nparameter will be changed. And so I think that our example will lack obviousness and lack visibility of what is going \non. And is it more secure to use formula? Oh, I think it's the same. So it should work when you map parameter \ndirectly, but mapping parameter directly. So it's something that we can do like this, we can map it to process element \nlike type like this. Mapping it directly makes it harder to analyze. So personally I do not like this, but I think it's \nsupported on the platform, so you can do this. Thank you Adrian for your very interesting question. And let's move \non. So now our simple example is ready.  \n  \n \n  \nSpeaker 2\n \n I have a quick question about the.  \n  \n  \nSpeaker 1\n \n DLLs if that's okay. I do.  \n  \n \n  \nSpeaker 2\n \n Is it possible when we're creating them this way that we can call other DLLs maybe outside of this package?  \n  \n  \nSpeaker 1\n \n Okay, we can. Sure it's possible. Let me show you. We have also process level methods. This is kind of a method \nthat is inside of script task, but we have also process level methods which can be used globally on the process level. \nFor example, if you make a big logic and you finally realize that you do the same steps from different parts of your \nprocess, maybe you can implement it once in methods area and then call it many times with different script tasks in \nyour process. So it makes it more organized and better constructed so you make it easier to support in future. Also \nwe have usings and you can include additional DLLs and namespaces here. So you can include necessary DLL \nnecessary namespaces from DLLs from other parts of your system and that's how new namespaces will be \navailable.  \n  \n  \nSpeaker 1\n \n And this will be normally compiled and executed. So it's quite common thing how you can add Other libraries and \nnamespaces with usings and these usings will form into. Let me show you pkg configuration pkg Then your \npackage, then your source automatically generated source. Here you can see on this table standard set of usings. If \nyou add your own, it will be added into this list. So that's how sometimes developers really need to use for example \nNewtonsoft JSON library to make it simple with serializing or deserializing values and maybe other libraries. So you \ncan add it here by providing using in process methods part okay, so we successfully saved and published our \nprocess and you saw it was no problems with compilation.  \n  \n  \nSpeaker 1\n \n But in real life, when you do development of your own solution, of course you will get compilation issues, you will get \nerror messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and \nfinally you'll have to make your process work normally. Please note if your system is saved in a state, that means you \nhave compilation errors. You will not be able to apply any changes in compilable area until you fully fix your issue \nwith compilation. So it's better and it's like strong advice for you. It's better to keep your system always in fully \ncompilable mode. I mean making your solution. If you try to compile, it always compiles successfully. Because if you \nkeep your solution with compilation errors, you will never know that something is working good or not.  \n   \n Speaker 1\n \n And you will not be able to easily apply changes in your compilable stuff because each time you try to compile you \nwill get the same errors. So it's recommended to keep your system to be saved in a healthy state when any \ncompilation finishes successfully. So we already have some part of our process which finally performs some \ncalculation. We can register our process at our section. I will show you how we can do this. So we can run a process \nas a action in our list, or we can run a process by action or a button in edit page. From edit page it looks a bit easier. \nSo let's start from this opening our Freedom UI edit page, then go to its editor. We will finish soon today's session, so \ndon't worry.  \n  \n  \nSpeaker 1\n \n I understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more. So \nthis is our page design. My plan is to run my process by a button, but I predict that I will have a bit more different \nactions, so possibly I can use a button with sub menu. Let me show you how we can do this. For example, we can \nput a Button somewhere here modify its size, style and title like actions. And we can also provide some kind of \ntypical icon used for actions. Something like this. This is very typical for creation no its own action. But we will have \nmenu items. Let's make a subordinate menu items like calculate average price.  \n  \n  \nSpeaker 1\n \n This will be our action title Action value will be run business profile process this one run process which process to \nrun calculate average reality price. And we have different modes to start our process regardless of the page means \nwith no parameters for selected page means for edit page data and it means we can only pass record ID as \nargument. This is good for us. And also we have new mode which appeared recently the selected records in list it \nwill get list argument. It's not for our case here, but this is feature which appeared just recently in 8.1.2. I guess so \njust very recently. Okay, select the page and we have process where the record ID is passed. We have only three \nsuitable parameters. Thanks developers for filtering this.  \n  \n  \nSpeaker 1\n \n In previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good \nbecause all parameters included integers included decimals so not suitable for grid and we only now see some \nfiltered stuff. So realty will be recipient of our ID of currently edited record. And as you can see this is a no code \nsetting so it doesn't require any special coding for us. So we can do it with no code tools by passing this data. Okay, \ngreat. We can also use this icon for this stuff. We can do some calculation icon that will demonstrate make it a bit \nmore attractive menu item.  \n  \n  \nSpeaker 1\n \n We can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view \nconfig diff so as you can see this action is quite easy to do. Let's go back to actions list and we can check how it \nworks. So action will be always available. We can just save this page. Also in recent version we had an unique option \nto run processes by for list for selected records in the list. Let's do this. Let's go back to list page. We can also make \ncustomization here. Now we can make an action it will be started for list. We have a special settings here Filter \nelement bulk actions Such bulk actions is called by so we can call it. We can find it here when we start to select \ndata.  \n  \n  \nSpeaker 1\n \n So let's make one more bulk action like cultivate average price. Our action will be again run process where. Oh, it's \nmy fault, I do it incorrectly. Sorry for this. Not. Not this way. Okay, let's go back. So it was not correct approach. I \nneed to make a. But instead. Okay, let's make a button. Let's put it somewhere here. Size. Okay. Action run process. \nWhich process to run? Calculate average realty price for selected records in list. And we have the unrestrictable list \nhere Data table this one. Okay. No subordinate items. So it will be just an example for you how you can run process \nin lists. This feature supports is supported only starting from version 8.1.2. So quite recently only for recent months. \nI think if you have a bit older version, you will not be able to implement this easily. Okay, save it.  \n  \n  \nSpeaker 1\n \n Let's just start to test it. So we can close the editor. You can also close this one. Maybe let's reload just to fight with \nany possible occasion of browser cache. So let's calculate something for houses for sale. For example, for this \nrecord calculate average price. Something was started with name undefined. Not found Something is not good here. \nOkay, we can also check process log. Did we have any start of the process day? No, means that we faced something \nwrong. I did not start. Okay, and let's go to reality edit page. Okay. Apartments for sale. Opening it. So as an \nargument we have this ID actions calculate average price successfully started. Now we have no visual output. So we \nonly know that process started. We can go to process log. We can see that process successfully completed. We can \nopen history execution of this item.  \n  \n  \nSpeaker 1\n \n Sort by date of start, read set formulas, calculation finish. It looks like everything went correctly here. We do not \nknow exact values, exact numbers. We will study debugging of it tomorrow. Now we just make sure that the process \nstarts and normally finishes. Okay, now let's fix our stuff with the list. Looks like I missed something very simple. So \nlet's go to customize list again. Here is our button that runs process this process. How to run the process? Oh yeah, I \njust missed very important parameter where the record is passed. Real TID parameter. So it was my fault. I \noverlooked it. Okay, save it. Save this stuff and then we see how it goes. Okay, close probably to work. No, we have \nto reward it Houses for sale. No, no. We wanted to run it in list.  \n  \n  \nSpeaker 1\n \n Okay, so this one is our list Selected data Calculate average price successfully started. I expect to run only one \ninstance of a process here. Yes, it was correctly started seconds ago. We can see all the steps were done. We can \nalso see execution diagram which will show us these steps executed. And tomorrow when Monica returns and you \nwill be not so tired. So we will move on with. We will move on with Debugging this code and also making it visible \nvisual. So today we made only part of the work. Today we implement the main calculation part of the process. We \ngot some result data, but we do not know how to actually see it. So tomorrow I will show you. Today we only \nfocused on C sharp part.  \n  \n  \nSpeaker 1\n \n But in order to make this example fully working, we need some more items and we need debugging to make sure \nthat our code works accordingly our expectations. I just wanted you to see how we can run this calculation for \nmultiple scenarios. For example, houses for sale, houses for rental and apartments for sale. We have three selected \nrecords. We can run this process and I expect to run three instances of processes. Let's check out. Yes. Now you \nsee the last minute we have three instances of processes started and each one with its own input arguments. So \nhow many records you run? The same number of records you will see here in calculate average price. Process log \nrecord Process log shows you history of all started processes in your system. And for each process started you see \nits elements.  \n  \n  \nSpeaker 1\n \n You see start and end date is status. We will see how you can how we can debug this especially C sharp part and \nalso how to check its performance. So today's session is over. The most interesting part will be tomorrow when we \nwill run this process and display some data and also how we will debug this process. Thank you very much for your \ntoday attention and education case. In case of any questions, please ask and we'll see each other tomorrow. Thank \nyou very much. Adrian Peddy, Francisco Rakhi and others. Thank you.  \n  \n \n  \nSpeaker 2\n \n I have a quick question, if that's okay.  \n  \n  \nSpeaker 1\n \n Yes, yes, please.  \n  \n \n  \nSpeaker 2\n \n It's just about business processes. So at the moment we're tying them to. We're binding them to buttons. But like, \nwhat can we bind them to? Like how robust is this? Can we bind them to like objects or can we bind them to \nwhenever a data is changed on a certain object or something like that?  \n  \n  \nSpeaker 1\n \n It's possible, sure. But I try to keep it simple and use it as possible of no code. That's perfect.  \n  \n \n  \nSpeaker 2\n \n I understand.  \n  \n  \nSpeaker 1\n \n I'm just curious manually. But yes, Later I will show you how we can trust trigger some business logic that will start \naccording to data change. So we will do data change and for example insert of new reality. And then we can run \nsome business process that will start only in certain conditions. And for example, only if house or apartment for \nreality was added. I will show traitor. It's not so difficult. So we are looking only at small part of available tools that \nwe have on board. On business process platform. So I'm trying to show it simply. But in general it could be much \nmore complicated. And also processes can be more complicated. We have a sub process item which makes it \npossible to develop big processes that contain smaller processes inside.  \n  \n  \nSpeaker 1\n \n So you can do it in much more complicated way and trying to keep it simple. Because we are studying. We need to \nsee some simple examples, understand how it works, understand how you can control it, and then go further with \nmore complicated scenarios and topics. Thank you. Brilliant.  \n  \n  \nSpeaker 2\n \n \n Thanks a million.  \n  \n  \nSpeaker 1\n \n Thank you. See you soon. See you tomorrow. As usual, you will receive video recording very soon. Thank you. \nGoodbye.  \n \n  \n  \nSpeaker 1\n \n Today is session number nine of our development on Creature platform guided learning. And today we will continue \nto study server side and we'll move on with integration tools. So yesterday we finished with our own web service. It \nwas made at creation site, was made with the help of C Sharp sources and we programmed it, we saved it in file \nsystem. We used Visual Studio to develop this web service. So we used our examples. Now you know, okay, now you \nknow how you can make your own integration tools. But in general, so integrations will require much more entities \nand will require much more tasks to exchange data. So it will be really hard for you to write a web service for each \ndata transfer that you need in your system.  \n  \n  \nSpeaker 1\n \n So what we'll study today, how to use standard platform level tools to operate with data with the help of HTTP \nqueries. And we will discuss and I will show you examples of how to work with standard tools. And they are all data \nprotocol and data web service. Also I plan to show you how to call third party web services with the help of no code \ntools, with the help of settings for web services and call web service item. And at the end of the session I want to tell \nyou about Clio tool, Clio Commons. You will understand what is this, how it can be used, why you need some \nadditional tools. So we will discuss a bit more about system maintenance delivery and if you have any questions, I'll \nbe really happy to hear and to answer them.  \n  \n  \nSpeaker 1\n \n So don't be shy, ask any questions if you feel something that you need to know and let's move on. So integrations \nwith data tools. First of all I need to show you general integration capabilities that we have on board. Go to \ndevelopment guides integrations options and here you can see standard options that we have. We already studied \ncustom web service option and it offers us possibility to program anything we need to ask for data, to make \noperations with files, to use any libraries. But this approach obviously requires some programming at creation site. \nAnd also this approach requires programming at third party site in order to normally correctly call such service and \nto get response data parse such response. So I just want to say that in general it's quite expensive approach if you \nneed to do a lot of different operations.  \n  \n  \nSpeaker 1\n \n As you can see we have other options to integrate with creation. We have two options for data transfer such called \nCRUD operations which means create, read, update and delete. So standard simple operations that you may need to \nwork with your data and to organize. Possibility to read some data for third party app or to make some inserts, \nupdates or deletes in creation by commands from other applications. And we have two different options for this. \nOne is called Data Service, another is called Odata. And Odata is quite common because it was designed by \nMicrosoft and it's possible to find Odata clients as third party sources. There are a lot of tools that understand how \nto work without data. So developers of Creation decided to support this type of client. And data service is much \nmore unique.  \n  \n  \nSpeaker 1\n \n It's very specific to creature, but it offers you more options, more possibilities, more complicated calculations. And \nthat's why data services used for creation of client side and data service in general is more powerful than ODATA \nand more complex to program. So I will show you both ODATA and Data Service. You will see how it works. Also, it's \nworth it to mention that we have another integration option to run business processes. So you can use process \nengine service web service for starting or continue execution of business processes the same way how you can do \nit from creation client side. Physically, this web service is the only one to handle processes. And when we run \nprocesses from inner application. Let me remind you how we did it.  \n \n \n  \nSpeaker 1\n \n We had the class on Freedom UI section, we can open its page and then we made an action to calculate average \nprice with the help of business process. You remember we did this calculation, we started process, now we have \nsome results, average price in dollars. Then we save it or close it. And that's how we finish our process. So physically \nwe did some calls to third part to process engine web service. Here you can see it. And the same calls with the same \nparameters can be done with third party applications. So it's possible to run processes from 30 third party. And of \ncourse in this case you need to pass authentication first. And we did it yesterday with the help of Postman tool. You \nremember we had the Postman authentication, we had set of authentication cookies. Okay.  \n  \n  \nSpeaker 1\n \n So if interested, you can just watch yesterday video and get more details. So today we'll focus on data transfer \nintegration options. And I would like to start from OData because it's easier, it's more friendly for beginners and it's \nquite easy to start from scratch. So what it is, this is a data transfer protocol which is supported at creation. We have \nall documentation about it. So for all data we have documentation explaining how to use it. And in general you need \nto know that creation supports OData 4 and OData 3. Unfortunately, OData 3 is not supported in packages. So it's \nnot supported for objects that are saved in packages compiled as Separate assembly. So it means that for your \nODATA integration, probably it's better to focus on OData 4 from the beginning.  \n  \n  \nSpeaker 1\n \n We have a lot of documentation about it and if interesting you can find much more. And we have examples, we have \nreferences. So I prefer to show you something really useful. This article, it explains some general basics about how \nto use OData. We will try to make some examples and first you need to know that ODATA operates with the help of \nData Model. So it means it respects all existing objects, their columns, their names and so on. So when you operate \nwith OData, as well as when you operate with Data service, it uses Data Model. So it uses information about existing \nobjects, columns, references and access rights restrictions.  \n  \n  \nSpeaker 1\n \n Okay, so depending on what operation you need, you have to select the proper HTTP method, Get is used to select \npost for inserts, patch for updates, and HTTP Delete is used to perform physical delete operation. I will show you a \ncouple of examples and also you need to know that we have a lot of interesting documentation samples here. And \none of the good ones is creation API documentation hosted at Documentor, get postman. Com. This is one of the \nbest sources that you can find for OData. I plan to show you examples with OData 4. As you can see, first of all, we \nhave to make authentication correctly. Then we can do different queries and different examples. So depending on \nyour task, you may find a corresponding sample here. And also we have a lot of samples to make different filters.  \n  \n  \nSpeaker 1\n \n You see, for different filters there are special expressions in let's say ODATA language. And so you can find a lot of \nexamples here. Even batch queries Supported Batch queue means running single query with several parameters. \nAnd each parameter explains to a system how to run a particular operation. So it can be useful if your plan is to run \nmany data operations with one single query. So batch operations are also supported. But we can do it. Let's not go \ntoo far. And I understand that probably not all of you will start your integration at all. And this is something that you \njust need to know and let's say get familiar with it. You will see how it works. So let me show you examples. My plan \nis to make some selection of data. We have some examples of data records.  \n  \n  \nSpeaker 1\n \n Let's read data from our reality object, but with the help of all data. First of all, I will use integration tool, I will use \nPostman app and my yesterday cookies are not working anymore. They will not help me to run queries. I can check it \neasily so we can Try to run our web service and as you can see we have 401 not authorized. It means that our \ncookies are related to expired session. So providing such cookies we will not be able to use any business methods \nany business logic methods of creation web services. So we have to get new cookies. I prefer to clear previously set \ncookies. We go to perform login operation again. Yesterday we discussed how to do this. We use special URL to all \nservice and its login method inside of a root part of our application.  \n  \n  \nSpeaker 1\n \n We provide login and password. No any special data, no any special headers. You may find some information here \nlike authentication and some accept content type for C session. But it turns out to be not necessary to perform \nauthentication successfully. So let me show you here we have some hidden headers made by postman like accept \ncontent type, application JSON and so on. But so I prefer to keep it as is by default. And we have login and \npassword. Originally we have no cookies. So let's try to get new session for us. Yes, we got it. 200 no errors. So \ncurrently we have set of cookies enough for us to perform inner queries. Okay, we can create new query and our \ntask. Let's keep it easy and keep it simple. So we will try to read data.  \n  \n  \nSpeaker 1\n \n We will have to make a selection of data records and we will make it get HTTP query. Let's do this. So let's go to \npostman, create a new get query. We have to use our address of our app with 0 alias here and then we can look at \nthis example or we can look at this document or get postman.com examples. So we need to do selection. And our \npart for odata web service is odata here. So it's a name of odata endpoint then/in odata4 we should use just entity \nname here. It's not obvious that collection one is entity name. And here you can see that it's also not so obvious, but \nmaybe you can find examples. Yeah, here you can see an example. So it will make it clear how we can do this. So I \nwill use an example with my USR realty.  \n  \n  \nSpeaker 1\n \n If I provide no any parameters, system will try to read all of the data with all of the records, all of the columns. Let's \ntry to do this and run send for get queries we do not need to use BPM CSRF protection. So for get queries, no cross \nsite request forgery protection needed. And you see it took significant time, almost six seconds to run. And as a \nresult we have Some JSON body with different data records about our reality record saved in database. As you can \nsee all of the columns, a lot of unnecessary data. But that's how it works. If we provide no special parameters. Now I \nwill show you how we can make it more interesting and more useful. We can use different parameters in our script in \nour query.  \n  \n  \nSpeaker 1\n \n And let me show you for example parameters for selecting data collection instance selected fields. So here I can see \nan example and it means dollar select so question dollar select and then we have columns with comma separated \nvalues to get necessary columns. So I'm using this example, you can use this example and let me show you how we \ncan do it. So question mark to switch to parameters Dover select is parameters specifying column names that we \nplan to use. Don't forget we have to use column codes, not titles USR name USR price USD maybe created on. So if \nyou want you can get more. It's possible to use lookups in order to get corresponding names of type or name of a \nperson who created the record. But now I try to keep it simple. So this is example of how we can run queries.  \n  \n  \nSpeaker 1\n \n You see only requested columns. Now here and we can see all of the data. We can do some limitation. So we can \nuse and another parameter dollar top three for example. And when we do such selection, it will read only top three \nrecords for us. You see on the top three records you can use sort, you can use filter. We can use x order by in order \nto organize some sorting. We can use special parameters to select only one specific record but filtered by ID a lot of \nother options. So if necessary you will be able to do this. And I try just to keep it simple and quite useful for you. So \nhere is an example of a get query to read some data. So you can try to do it even in your browser.  \n  \n  \nSpeaker 1\n \n In case if you will try to run such query in your browser, you do not need authentication because usually your browser \nis already authenticated in creation and you keep running session running pages of your creation in your browser. \nAnd that's why you don't usually need to prepare separate separate authentication for it. Okay, I think for selection it's \nquite clear. So let me show you how you can do insert data. I need to use almost the same set of parameters but for \ninsert. As you can see here we have post to add data. Let's do this. We can also look at examples for post and our \nURL will be quite simple. We will just provide post and this URL which includes our website zero application Alice \nOData is the endpoint for OData Web Service.  \n  \n  \nSpeaker 1\n \n Then usr realty is also part of endpoint and it gives information to data what exact object you plan to operate with. \nThen I have to look at body row JSON and we have to provide some data for example USR name. This is mandatory \ndata from all data for integration it will be our name USR price USD okay, so you can see we have some data here. If \nwe try to run a post query without CSRF settings we will get 403 because for post query we must perform BPM CSRF \nheader we must put corresponding cookie value. Please carefully copy cookie value including some dots if they \npresent. So it's important in this case our insert will work. Okay? No, it tells that comment doesn't exist. Okay, it was \nmy fault because common name is USR comment. Okay, everything is working.  \n  \n  \nSpeaker 1\n \n Now we can go to our main app, sort by date of creation and we will immediately see that our data was added and \nwe can also check column values. Here you see price was added, we see column was added correctly. But what we \nreally interested you can see the type and offer type were set by default. It means our object model worked well for \nus and moreover our object model also supported all event handling provided with help of start signals. Now you \nsee three realty visits were already planned for upcoming days. So all business logic that was designed and \nprogrammed with the help of event handling with the help of start signals it will work for ODATA as well and server \nside handling like we did to validation for very big prices will also work. Now let me show you how it can look.  \n  \n  \nSpeaker 1\n \n So let's try to add very big number and it will be more than 1 billion. So we will see how system will react on this \nattempt. Now you see we have a quite rude error and this is error 500 internal error. But we have error text which \nmeans we intentionally erased such exception. We provided error message text of what is wrong and of course \nphysical insert was not done so we can read data, you see no new records created. So this is example how you can \nuse old data for your tasks and it will be really attractive for relatively simple tasks for your future integration needs \nwhere you need to transport not so many data records. If your task is to transport millions of rows, possibly such \napproach with running separate queries for each record will be not very effective, not very efficient.  \n  \n  \nSpeaker 1\n \n In case if your task is to transport huge amounts of data, you have the only one option. This is your own \nprogramming of such data and your own parsing your data structures and your own database direct operations and \navoiding use of object model. Because when you use object model, you also support all of the object events. It \nworks not so fast. And for example, when we did insert with the help of postman, it took almost 180. No, in total it \ntook a bit longer. You see, we have some additional cost for preparation of the query. So it took 300 milliseconds. \nAnd it's important because if your task is to transport like 1 million of data rows, if you spend 300 milliseconds for \neach one, it means you will wait for several days and this speed probably will be not suitable for your customers.  \n   \nSpeaker 1\n  \n So you have to search for a better solution. So in case of big number of records to process, in case of very, let's say, \nhard speed requirements for your solution, the only suitable option is your own web service with your own data \nformats, your own direct database management without use of object model. But in simple real life scenarios, I think \nall data will work well for you. And it's relatively easy because you see it's not so hard to build such query to run it \neven when your third party app is used. So you can do such programming. And also you will get response data in \nJSON string, so you can easily parse it, you can easily extract corresponding results that you may need. Here you \ncan see JSON objects and you can also get corresponding values from here. So it's very suitable for beginners.  \n  \n  \nSpeaker 1\n \n And for some tasks I think it will work perfectly. But for some other tasks you may find that all data is not enough, \nmaybe because of hard load conditions you will finally realize that our data is not going perfect with hard, I would \nsay hardwood big amounts of data. Maybe you will need some more complicated scenarios with reading data and \nperforming some calculations like preparing reports and running it with third party app. And you will need some \naggregation, some complex filtering. In this case, all data probably will be not the perfect solution. And data service \nmay work better. For data service is created by creature developers, not by Microsoft. And this is unique to creature \ntool.  \n  \n  \nSpeaker 1\n \n So it's appropriate way of operating with data using creature server side, it can do all the same operations like \ncreate, read, update and delete data and but it can do it a bit more efficiently. And also it supports different filter \ncondition macroses and it's much more rich when you need to select data from different tables, perform some \naggregations, perform some complex filtering. I will demonstrate what data service can do. And first of all I need to \ntell you the data service is mainly Used by inner creation client side pages. Each time when you operate with any list \nor edit page, you will see data service web service queries. You will also see that payload for that queries. It means \narguments that you need to transport. Payload is quite complex. You see more than hundred of different settings \nand if you preview.  \n  \n  \nSpeaker 1\n \n So if you view source, you see a lot of settings and parameters that can be passed as arguments for data service. \nBut it also has a response with a JSON. So now you see JSON string which can be parsed and such JSON data not \nso hard to operate with. You can easily get corresponding values out from your results. So Data service web service \nmaybe can be suitable in case if for some reasons old data doesn't work for you as you expect. I will show you \nexamples of data service but first I wanted to mention that it's used inside of creatio pages. So data service was \ndesigned for inner creation data operations with client side. All lists and all edit pages are using data service to get \nor to modify, insert, update any data record.  \n  \n  \nSpeaker 1\n \n So in documentation you will find that data service is promoted as integration tool. So it's a restful service. You can \nuse third party to compose queries for it. And here it's promoted and advertised like an integration tool. But in reality \nit's not so integration oriented, but it is say platform UI oriented. Because all UI pages are working with the help of \nthis web service. I will show you some advanced features that this web service supports and let me hide some \nunnecessary columns. So my plan is to show you special types of columns called aggregate columns and also a bit \nlater aggregate filters. So aggregate column can make some calculation over connected data records. And such \nconnections will be done with the help of main record. Let me show you what I'm talking about. So each reality \nrecord may have number of visits inside.  \n   \nSpeaker 1\n  \n Recently created records are having more visits because we already had automatically creation for them. But also \nwe have. Oh, we don't make any action to add the data director here. Okay, so we have some examples which already \nhave created data records in visits detail. And for each reality record we have number of visits, connected detail \nrecords. So we can make a career column. We can make an aggregate column which will simply calculate number of \nconnected records. This is one of the easiest possible aggregate columns that we can make. So let me show you \nhow you can do this.  \n  \n  \nSpeaker 1\n \n Add the columns and instead of working with traditional set of columns we have in main object you can go to related \nobjects and then we will see all objects that are available for us according to lookup columns from main object and \nalso we will see reverse joins. We will see other entities that have lookup columns pointing to reality. In my case this \nis realty visit. We have different options how to select data from it. And in last versions we have also advanced \nexamples like reading top one record. For example, we can read top one comment sorted by date of creation. Or we \ncan see top one customer who is specified in recent visits and so on. In my case I try to keep it simple. Let's look \nonly at number of records of connected visits and click select.  \n  \n  \nSpeaker 1\n \n It's also possible to specify special conditions to select data. For example, we can only calculate number of records \nthat are in future or only visits where contact is specified. So you can do different conditions here. In my case I also \ntry to make it easy and calculate total number of visits. And we can make the caption here visits count. So this visits \ncount will be our title for new created aggregate column. Then we click save and now you see new column which \nshows us some data. And for each separate reality we have some calculation. It's interesting to mention that this \ntype of calculation is also performed with the help of data service. Moreover, such calculation is performed with the \nsame query where a main data record is selected.  \n  \n  \nSpeaker 1\n \n So if you reload the data using this update refresh button, you see only one query was executed and if you go deeper \nin payload you will see that our column for calculation of aggregate number is also represented to the standard \ncolumn. Here we have some column path for it, some setting for Type of aggregation. Aggregation Type 1 means \ncount and that's how system knows what to calculate and returns as some calculated number. This it was example \nof aggregate column and it can be really useful. And you should understand that this selection is not performed \nfrom reality. This column is obtained as a result of subquery from reality visits. And I want you to see one more \nfeature called folders and here we can make additional folders select and add the new folder here.  \n  \n  \nSpeaker 1\n \n So in general folders work here like search folders in your outlook. So here we can specify some name and the filter \nconditions that will be useful for us to select only some searching data, not all of the data from our list. Let's call it \nthree plus visits. So let's imagine for some reasons we need to look at realty records where we have three and more \nvisits created. We are not interested in realty records with no visits. So we can make such a name here, save it. Then \nwe can provide filter conditions for this folder. So now I'm planning to show you so called aggregate filters. We \nalready saw aggregate columns and you understand that they represent result of subqueries but calculated with the \nsame main query.  \n  \n  \nSpeaker 1\n \n And aggregate filters will be used for selecting data applying conditions on connected records, not on reality data \nbut on connected records. In my case I plan to select only reality data where this visits count is greater or equal to \nthree so we can make condition and here we have to select connected entity. So not just dropping down here \ncontents of reality columns. We have to click on this plus in order to select connected entity. In my case connected \nentity is real and the aggregation type will be just quantity and also we have alternative options like maximum or \nminimum date for creation or modification. If we had integer or decimal values there then it's possible to calculate \naverage price maximum or minimum.  \n  \n  \nSpeaker 1\n \n So in my case I will just do quantity calculation select and we have condition count greater or equal three that will be \nour filter condition. We also can make additional filters here like counting only visits in future or counting only visits \nwith not empty comment. So whatever you think it will be useful you can do here. Then we save it and that's how we \nsee result of this filtering. So all data shows us all reality records. This search folder shows us only records which \nfollow corresponding filter conditions. Such filters are called aggregate filters and we can now go again to network \nand reward the data to see that our payload also has special filter condition. And this filter condition includes \ninformation that we use aggregate function.  \n  \n  \nSpeaker 1\n \n We use count for our aggregation so it will do selection only of records where some sub select some count of \nconnected data is greater than certain right expression and we have just value three here. So my example is to \ndemonstrate that data service web service is capable not only to read plain data from the data sections, but also it's \ncapable able to calculate aggregate columns and to use aggregate filters and you can use data service for your \nintegration. But I think it's really hard because you will need to have a good make already good made examples to \nmake it work. So if you make corresponding queries in your browser then you can steal all necessary parameters. \nLet me show you how we can do this. We can copy request URL from our query that we spotted in our network tab.  \n  \n  \nSpeaker 1\n \n Then we go to postman create new actually you should be careful because data service is usually working with post \nqueries only. So we go to postman. Regardless of the operation we will use post query and paste this URL should be \ncareful. Okay Paste URL we have a huge body. We have go to payload view source select everything copy then we go \nto body here this is row JSON and we paste this big body it's really hard to analyze it so we can use beautify tool to \nsee it in a more structured way. So now you see we have a lot of options here that are used by data service and \nrequired here to be present. And as you can see I did not type them manually. I only used existing example from my \nbrowser console.  \n  \n  \nSpeaker 1\n \n This is a post clear so we obviously will go will fail into CSRF protection if we do not care about it. So BPMCSRF \nheader and corresponding cookie value you should get it carefully copying full value and pasting it here. Now we will \nsuccessfully run our query, we have some valid response JSON body and we see set of records, we see set of data \nand in general if you run something like this from third party app then you'll be able to parse your data and you'll be \nable to analyze it and get corresponding numbers or other columns if you need it. Adrian is asking is folder the only \nway to go to Advanced filter in Freedom ui? Yes, Currently we don't have any separate advanced filters for data \nselection, so developer decided to keep it saved into folders.  \n  \n  \nSpeaker 1\n \n In Classic UI we had an option to keep such code advanced mode and make this filtering like flying in the air without \nlanding anywhere in your system. But I personally think that this kind of advanced filter is not so good because once \nyou take time to build it, once you make complex conditions there is a highly likely situation then you will need it to \nsave. So developers in Freedom UI decided that no advanced filters anymore. If you need some complex filtering, \njust mentally prepare yourself to save it as a folder. It's not a big deal, not a trouble. And such folders usually have \nquite strict permission settings. So when you create a folder only your user will see it so it will not create too much \nof garbage records seen by anyone. Only your user will see such records.  \n  \n  \nSpeaker 1\n \n If you don't like it you can also remove it. So I think it's not a problem. Thank you Adrian for your question. And yes I \nagree we have some changes between Classic and Freedom UI and it looks like such changes were discussed so it's \nnot a real decrease of some important functionality. Thank you Adrian. So this example shows that Data Surveys is \nmuch more capable in comparison with ODATA because you can use more complicated calculations for columns for \nfilters and everything is going with just a single query. How we did here and demonstrated in Postman that it works \nperfectly in real life. Your integration will include not but one or two queries in real life I think you will need tens or \neven more queries to start. So it means that you will have series of different queries.  \n  \n  \nSpeaker 1\n \n You will need to remember data and save it somewhere. And in general it requires some quite strong professional \ndeveloper skills and architectural understanding of what you are doing. In general, I recommend you to run queries \nthat will not return you millions of records. It's better to operate with data using some portions and both ODATA and \ndata service have their own limitation. So we can find some limitation. Number of requests is unlimited but \nintegration options. I saw some information about it that we have a limitation about 20,000 of records per one \nselection and the same limitation will be applied for data service. This is limitation for OData and data service has \nvery similar limitation. But I just suggest and recommend you to operate with data with some smaller portions.  \n  \n  \nSpeaker 1\n \n Keep some logging by yourself so it will be easier for you to detect and understand how actually it goes and do you \nhave any serious errors in your integration. So it's like a programmer task, but it's possible and in complex projects \nwe also do this and it works well. So let's move on. We already studied how third party app can operate with creatio \ntools and odata and data service are already present at creatio server side so they are already prepared for you. So \nyou only have to program at third party application to correctly call such tools and it will work for you. Now I wanted \nto show you an example how we can run third party web services from Creature and also how to do it with no code \ntools because no code is really attractive.  \n  \n  \nSpeaker 1\n \n It takes very little time to develop and gives quite quick and valuable results. Let me show you. So let's imagine we \nhave Creature app, we have different sections, data and so on and we have some third party application that we \nwant to call and to use its data to perform some data transfer. Let me show you some example of it. We have a node \nwith REST API samples so we can use something like this. Let me show you. This is a REST API URL call that we can \nsend. This is a GET query. You can easily do it in your browser. Luckily it does not require any authentication. So it's a \nGET query performing with some kind of URL. No initial arguments but we have some response.  \n  \n  \nSpeaker 1\n \n JSON body this JSON body is also shown here for us and this JSON body represents some prices and I need to tell \nyou some physical sense of it. ID bank is one of the banks in Armenia and they sell gold bars, gold plates starting \nfrom 1 gram gold to up to 12 kilos gold, big gold slab and you see their prices are in local Armenian currency, \nArmenian drums. But in our case it's doesn't matter so we only want to practice here and also I want to show you \nsome additional example. Not only just get couple of data values from third party app but also to show you how you \ncan use no code tools to process collections and to get sets of some data records, how to store it, how to operate \nwith it.  \n   \nSpeaker 1\n  \n So let's imagine we have a task to regularly get gold prices from this URL, from this API, save it in creatio and make it \npossible to run multiple times and correctly update such prices. I will use only no code tools for it and you will see \nhow we can do this. Also you may reproduce it just during today's session. So let's start. We have URL and it's nice if \nwe have some description of this URL. So generally we have it but in my case it will be really simple so I did not really \nneed it. But normally when you work with some kind of integration you will have this kind of explanation of how to \ncall corresponding query, how to transport some parameters rate go. Okay, now you see example of query, you can \nsee parameters, you can see requests and so on.  \n  \n  \nSpeaker 1\n \n And in my case so I can also share with you this is kind of documentation but the most important we need example \nof call which works for us. Luckily we don't have any special protection, security or authentication necessary for this. \nYou may also find a lot of other sources with similar functionality like currency exchange websites, like weather \nforecast websites, like other regular date that could be commonly interesting for people. It's usually shared without \nany special restrictions. In my case this doesn't require any parameters, any input arguments. So we can do it quite \nsimple and I think that simple example is better for beginners just to get started. So we have this URL and then I will \nexplain how we can work with it. First of all we need to go to studio workplace and find web services section.  \n  \n  \nSpeaker 1\n \n We will properly register our new third party web service here and then we'll be able to call this web service from our \nbusiness processes with the help of call web service item. This will not require actual development skills, but it \nrequires some engineering knowledge and understanding of HTTP queries and HTTP methods type and just a bit of \nunderstanding of JSON string and you will see that it's not very difficult. So let's do this add new web service when \nwe Created system uses current package system settings. So when we provide an example of a full web service \nURL, it parses it and creates corresponding web service setting and tries to save it. We need to take care about the \nproper package to save. Now you see some phantom packages which we can't really find in our configuration, so \nlet's ignore them.  \n  \n  \nSpeaker 1\n \n This is classic package because our current package system setting points to it. But my plan is to save our data to \nfreedom UI realty package. Let it be here. This URI is like a main part which was extracted from our URL and it will be \nused as a like base part of our web service and then we can have many different methods. Method addresses will be \nadded to our main web service URI address. The code is generated by app so let's call it something like gold bar \nservice name will be displayed and the code will be used for configuration saving into a package. Finally, we will \nhave a special type of item saved directly to the proper package. So you don't need to care about how such setting \nwill be saved in our configuration.  \n  \n  \nSpeaker 1\n \n This will be saved as special metadata directly to the package. And we have a method here, so let's save it first. Now \nyou see configuration section and let's go to all items. You will see new type of item called web service and it's \nalready saved in our package. So all you can do is to open its metadata. You will see some low level text definition of \nthe setting like addresses and other settings and so on. But this is low level setting. You just need to remember that \nit will be saved in our package so you don't need to care about special transporting of it. Okay, we continue to do our \nsetup. System was capable to automatically parse our URL and get web service main part and method part and you \ncan see it's by default. This is a get method. Let's look at it.  \n  \n  \nSpeaker 1\n \n And in general one web service may have many methods so you can register them manually in order to use different \nfunctionality of the same web service. Get method the content type is JSON and response timeout is 5 seconds by \ndefault, 5000 milliseconds means 5 seconds, no authentication necessary. And name is for display, code is for \nmetadata to save and method address is the most important property here because it represents exact part of the \nURL which will be used to add and make full. So when we do this we will make foo method address in our we have a \nfull method address in our lab service and this part was automatically parsed here. You can also type different types \nof Parameters like method parameter, method query value and also it's possible to transport additional data values \ndepending on the type of request you use.  \n  \n  \nSpeaker 1\n \n If you use get query like in our case you only can use method address parameters inside of this URL. If you use post, \nit's possible to fill in post body request body and it helps to get much more possibilities to transport different data \nvalues as arguments to your web service. In my case I have no request parameters at all, but if you will do it \nsomething like yourself with different web services, you need to remember that we have all possible ways to transfer \ndata that is commonly used in the REST API. You can use address parameters, query values, header values. \nRemember like we did in our post query special headers setting. So it's like technical settings that will be passed as \npart of our query. So creation is also capable to provide headers and even cookies could be provided separately.  \n  \n  \nSpeaker 1\n \n So if you do some operations with third party system which requires some authentication or requires some cookie \nfor like your user settings, then it's also possible to use it in your query. So it's very universal tool. In my case I do not \nneed request parameters in this example but I need response parameters. So let's save it again just not to lose \nanything. I will use response parameters first automatically. Let me show you. First of all I can run send test request, \nno parameters, no authentication so I just go and send it and I have a responsive JSON or in row HTTP . Of course \nJSON looks much more friendly for me and I will just copy this data and this is just an example of what web service \nanswered me. Okay, this is my response then I go to the method switch to response parameter.  \n  \n  \nSpeaker 1\n \n So my idea is to tell creatio how should I parse result data in order to extract specific values from it. So in my case \nresponse parameters can be added manually or we can use special very effective tool which is called quick setup \nand I will use example of my response body and give it to system in order to detect what are the possibilities, what \nare the possible values that we can get out from this example. So I will use setting of response parameters with the \nhelp of example in JSON quick setup example of response in JSON of course I have to paste my example of JSON \ndata obtained as a result from my test request. Then I click next System was capable to parse my data.  \n  \n  \nSpeaker 1\n \n As you can see it was it detected that I have two collections one is called cash sell it list of sell prices so bank sells \ngold bars and cash byte it looks like they have this data. But zeros tell us that possibly they are not really planning to \nbuy anything. And it's just like useless part of the data for us. So we can select what part of data is interesting and \nwhat part can be skipped because in our case we do not need it. And this is a very good example because in my \ncase I do not need cash buy part, but I need cash sell. Okay? And we can select only part that is necessary. It's \nimportant.  \n  \n  \nSpeaker 1\n \n This is very important because in real life examples, for example, you can call some foreign currency exchange rate \nservice and you know, we have almost 200 of different world currencies and you may face maybe 4 or 5 or even \n1000 of records, 4 or 500 or thousands of records with different values and parameters as response. So it will be \nreally important for you to select only parameters that you really need to get from results of web service. Because \nsometimes web service result body is quite excessive, including a lot of information that you don't plan to use or just \nnot useful for you. In my case, I am interested in cache cell list and I will save it. Okay? So this helped me to avoid \nmanual registering of parameters. It's possible I can create such parameters manually. I can reproduce everything by \nmy hand.  \n  \n  \nSpeaker 1\n \n But using this quick setup tool by examples is much more efficient. So I have a root item here which represents a \ncollection is array. And also it's interesting to mention that creature uses such thing called JSON path. JSON path is \na kind of address of a value inside of a JSON body. So this value helps to detect and get corresponding value out \nfrom JSON body text and creatio is using it to allocate and find the corresponding parameters. As you can see, it's \nbody parameter and inside of this array we have pairs of data weight and rate. Let's look at our data closely. Weight \nusually so it's shown as a text, but physically it looks like a integer number minimum is 1 gram and maximum is \n12,000 grams, which means 12 kilos. So we can afford to treat weight not as text but as integer.  \n  \n  \nSpeaker 1\n \n Because we see that for all data values here it will be nice if we have an integer so we can treat results as integer \nand system will be okay with it. But when we go to rate and see some examples sometimes. So in general rate is a \ntext and sometimes we see thousand separators and sometimes you see it even twice. So it turned out that this \nmechanism which gets data automatically with the help of data service works poorly with type conversion. That's \nwhy it makes sense to keep rate obtained as text. And if you really need to work with it, as with decimal, obviously \nthis is a price, so it should be decimal.  \n  \n  \nSpeaker 1\n \n So if you really need so you can parse this data lately after you've got it from the web service and then later and then \nyou can save it as you wish. In my case I keep it simple. I try to not spend too much time on such data type transfer. \nSo I prefer to keep it as text. So it will be just a good for our demo. It will be not so suitable for real life calculations. \nBut later it will be not a problem for you to use date type conversion using. For example, you can use script task for \nit. If really interested we can try to do this. But I'm trying to, let's say save our time and to not to go quite far from our \ndata obtaining from web service.  \n  \n  \nSpeaker 1\n \n Okay, so this example takes result data and parses it and finally will present our data as collection of data records. \nWe can save it. Save it. And this information is now saved in our configuration section. Now I propose to make a five \nminutes break. I promise not to go too far and then we will continue. So let's move on. And we finished on the \ncreating of our web service. Checking out that our web service was saved into our package. This is very important. \nAnd now we will use it. So what how we can use it? We can create a business process which will run this call web \nservice item. We will get response data. But we need to think of where we plan to save set of records with weight \nand rate information. We have only two possible options. One is memory.  \n  \n  \nSpeaker 1\n \n But it will require some C sharp scripting for us in order to keep data in redis memory. For example, I prefer to make \nit more simplified and no code. So we will save our data into our database in just a simple lookup. This lookup \nrequires integer weight and text rate. We can easily create it ourselves in this package. So I will do it Add object. This \nis necessary to organize storage of our data. And this storage will be named USR gold price. No, we can do it parent \nobject but not base lookup because we don't need name and description. I will use base entity because it will only \ngive us standard parent columns and we can add business columns ourselves. So we will create integer usr weight \ncolon. It will be integer and one more will be text 50.  \n  \n  \nSpeaker 1\n \n The minimum one usr rate will be our rate column text 50. You may ask me why text? The answer is because I do \ndemo of getting data in real life. We will need to save our text values first or maybe to use them and process before \nsaving with the script task and then we will use a decimal value to save finally converted value and in my case I went \njust to keep it as demo for you. So we'll save a text rate data as we get it from web service and that's all. No anything \nelse we can publish our object. As you remember publish always performs save first so we don't need to click save \nbutton. Save was performed and publish was done. Great, now we have this object already applied.  \n  \n  \nSpeaker 1\n \n One more small step we can go to lookups and register this object as lookup. So we click lookups new lookup find \nour gold prices save it. So now we have this lookup we can open its contents but we have nothing there. We can \nopen properties and create data binding item and save it into our package. This is necessary to remember \nregistering of the object as lookup. This is mandatory step if you want to go to your lookups and find it when we will \ngo when we will deliver our solution to test environment. So now my gold prices object is ready and we can move on \nto work with processes. So we registered our web service and we can use no code solution with processes to get \nthis data from third party.  \n  \n  \nSpeaker 1\n \n We can create new process name it like USR yet road price main process this is main process because I also plan to \nuse sub process to parse my collection. That's why I call this processes main process. No initial arguments simply \nstarting our process by manual start and the first step we need to do is call web service process item and which web \nservice to call. We have our ID banking web service then which method to call? We have the only one method that's \nwhy system selected eight method for us automatically. We don't have any request parameters. When we switch to \nadvanced mode we can see response parameters and response is our collection with couple of values here also we \nwill get HTTP status code which will be useful to check different errors and analyze what's actually happening.  \n  \n  \nSpeaker 1\n \n And sometimes full response body will be important because it will be it will include everything obtained from third \nparty without any parsing Boolean success property and probably that's enough. And we also have a SO request \nbody but it looks like this is an input parameter and only for very specific cases. So I don't know how to make a no \ncode example with this response request body so we will not use it now. Okay, so when we run this call web service \nwe can run it like get Gold prices. This item will finally run this query. Let's go to primary mode, get code prices and \nit's important results will be saved somewhere inside of this item inside of the response parameter collection. So we \nwill obviously have to process this collection somehow.  \n  \n  \nSpeaker 1\n \n And first of all I will show you some error handling in case if our request finished successfully. We can turn this flow \ninto conditional flow by clicking on this change type button and then set conditional flow so we can name it okay \nand we can check condition. This condition will include just boolean success property. If it's true then we will go \nhere. Otherwise we will stop and we will have another terminate item code error and we can go from our call web \nservice to this terminate item. You can name it error means something is not good and we can just turn our flow as \ninto default flow. Default flow will be activated if no one from conditional flows worked for us and default flow will be \nour error handling.  \n  \n  \nSpeaker 1\n \n So if we not successfully code our web service, no need to try to perform next steps. We just need to stop our so \nabort our process and use a separate terminate item because it will be stored in our history of execution so we will \neasily understand that it finished with an error. Okay, but if everything works well, we need to think of the place where \nwe plan to keep our data when we first run it. Obviously our data table will be empty so no visible preparation \nnecessary. But when we run it next time our data will be not empty and maybe it makes sense to clean it with the \ndelete data item. So I will do this delete data and this will be an item to remove data from go price object. And as \nyou can see we have kind of protection here.  \n  \n  \nSpeaker 1\n \n This protection means that for delete data we must use some parameter. If we don't, this will not allow us to save \nprocess and it will show us errors. So we must use some parameters here. And this is kind of protection from \nunintentional delete of all the data. But in our case we intentionally want to do this. So we have to perform some \nkind of fake query which will be always true. And that's how we can make this correct condition to delete data. So I \nwill make a filter like ID is filled in for any existing record. This condition will be true and that's why I can use it. And \nit's quite easy and simple. It will not require too much resources from system to make it. So this will be an item like \nclear prices storage.  \n  \n  \nSpeaker 1\n \n So we delete prices from our storage and then we can use so we have a Collection and we have two options. To use \nno code approach with sub process to parse collection or to use C Sharp code in order to parse our collection with \nprogramming. Of course I prefer no code approach. Let's save temporary our current progress. Oh, it tells that the \nchange is saved. Cyclic change in packet hierarchy. Probably it's because of I forgot to make dependencies and \nsettings. Yes, it was my fault. Okay, it was unusual, but it was my fault. Well, it's because of current package system \nsetting was pointing to classic UI package. I have to switch to realty. Yes, modify my setting and save again. Now I \nhave no cyclic dependencies. Let's go and check our packages.  \n  \n  \nSpeaker 1\n \n So realty package should be dependent from dev classic and dev classic package should not be dependent from \nrealty. Yes, looks good. Yes, looks good. Very good. So now no cyclic dependencies, no troubles. And this was just \nbecause of the package. So that's why. So we worked with process library. If you select a corresponding package, if \nyou start to create your process from here, then your process will be okay with the correct package setting. So \npossibly we have one more plus for creating processes from configuration section, but not from the process library. \nOkay, we have first now let's do not repeat this mistake again and we will select our package. Add one more \npackage. I need a sub process to parse my collection. The main idea how we can parse collection is to make a sub \nprocess and to use arguments as parameters.  \n  \n  \nSpeaker 1\n \n So we'll use parameters and I was a process to accept collection data values and I will make my process name USR \nadd gold price subprocess. So it will be my sub process to add the gold prices. I need parameters because the only \nway to transfer data from main process to sub process is sub process parameters. One parameter will be integer. So \nI add the parameter which will mean weight integer input which make it makes it read only inside of my process. But \nI don't plan to change it. So I only plan to get it as input value no initial values. Save it. Another parameter is text 50 \nthe shortest one and it will be rate and it's also input and no initial value. So here we have a couple of values we \nexpect to get at the beginning of the process.  \n  \n  \nSpeaker 1\n \n Then we will use our process and our process structure will be really simple. We will just use one add data item. We \nwill add data into gold price object add price and we will fill one record and only couple of values weight and rate will \nbe filled in very easy rate and weight. So rate will take its value from corresponding Rate text parameter weight \nClicking on this lightning button, we'll get its value from corresponding integer weight parameter. Please note select \nparameter window always filters available parameters according to the data type. So that's why we see only \ndecimals and previously we saw only text parameters. Okay, we have this stuff. So you see the sub process is pretty \nsimple and we can save it, close it, go back to main process.  \n \n \n  \nSpeaker 1\n \n Now we will use an item called sub process and I will use this orange item and place it into my diagram. Normally \nwhen you want to run a single instance of a sub process, you just specify your sub process name and single \ninstance call means you have to transport. They are just pair of values and this means that you will run your sub \nprocess only once. But in our case we plan to work with it and parse collection with the help of sub processes. So I \nwill use special settings. Now please be careful and watch here what I will do now. For example, let's go with wait \nfirst. So we plan to turn this sub process into a collection processing mode. And this can be done by selecting \nspecial values here. And such values should be taken from collection.  \n  \n  \nSpeaker 1\n \n So I click on this lightning button, select process parameter and then I will select process elements and our get gold \nprices call web service. It returns collection and we have corresponding weight column in this correction. So I have \nto double click it. And that's how our sub process immediately turned into collection processing mode. And it will run \nas many sub process instances as many collection data records we have. And we have execution mode sequential \nor parallel. In my case, no need to run parallel sequential means one by one and we have input collection. We already \nspecified weight column for it. Now we will set rate column from process parameter rate double click. That's how we \ndo this. Run it in the background is not necessary here will probably only take some additional performance.  \n  \n  \nSpeaker 1\n \n But in here we can just run the process and we are interested that in finishing it fully synchronously. No strong \nreasons to run it in background creating some scheduler executed tasks. So we just can run it simply in a current \nthread. Okay, when it runs we can also call it like add prices. Okay, it prices and it will run ad vote price sub \nprocesses and we'll have as many sub processes as many collection records you found. So that's it. Our example is \nready. So it will be our happy finish item. This is our start. It makes sense to note and make names for all the items. \nIt will be like a documentation which makes it easy to understand and we have current version. Okay, let's Save it. So \nnow we have this process and we can start it from here or from process library.  \n  \n  \nSpeaker 1\n \n Let's reload it by clicking on this icon and we have to start main process. Let's start it. But also before starting it we \ncan enable trace to be important for our debugging and we can also. That's it. Okay. Trace is the only one option \nsuitable for us. So let's run this process. Then we go to process log. We will see our main process started and it took \na bit longer than 1.2 seconds. And then you see number of subordinate sub process instances executed quite fast. \nBut we have approximately 11 items here. So we can check main process and open its execution diagram so we can \nsee how many times our sub process started. 11 starts, no errors and it looks like everything went fully okay. You \ncan also see trace data. We are interested in how exactly our gold prices were obtained.  \n  \n  \nSpeaker 1\n \n So we can click on show trace data. You will see all the parameters in your collection. We can see technical \nparameters like response status, code 200 means everything is okay, full response body sometimes can be \nimportant. And it looks like in our example everything went smoothly without any errors. So this trace takes some \nadditional performance. But in general it's a good idea. And this trace helps you to understand if something goes \nwrong. And you will see exact parameter values, exact status code. So I recommend you to keep trace on if you want \nto support possibility of quick discovery of something if something goes wrong in your integration. So in my case \neverything went well and we go to lookups to see exact prices. So code, prices section, lookup list and we can just \ndisplay weight and then we can display rate, save it.  \n   \nSpeaker 1\n  \n Also it makes sense to look at the columns of creation, date of creation. Okay, and now you see we have all obtained \ndata saved in creation. Physically this is text. So if really needed we can use parsing. We can use some C sharp \nscripting to parse such values into decimal and then save them into corresponding decimal fields. But technical side \nof running queries and asking third party system and to return some data. I think it's quite clear in case if you have \nany questions, feel free to ask, I will be happy to answer. This is example how we can call third party apps. And at \nthe beginning of course you will need some example of a call some URL, example of parameters, maybe some \ndescription and documentation how to call this password public API. And you have all steps made with no code.  \n  \n  \nSpeaker 1\n \n And finally we have a process which takes probably less than hour to develop with all the explanations and we \nsuccessfully got our data. If we start this process one more time, you will see in our lookups, you will see new data. \nSo you see date in time was changed. So our contents of previously obtained records was successfully removed and \nwe have new data records inserted just seconds ago. This is also important when you develop your integration to \ncheck how it runs multiple times, because if it runs once, it's okay, but you should expect it to run regularly and it \nshould properly include the existing data and correctly operate with it. Probably removing it, probably updating it. It's \nup to you in case, if you have any questions about it, tell me please.  \n  \n  \nSpeaker 1\n \n My next topic for today is to explain you how to use Clio tool and explain why you need it. So first of all I should \nexplain why we have some additional tools and not inside of the base platform. So previously we already had a tool \nthat was necessary to support developers and this tool was called Let me show you Delivery Tools and Workspace \nConsole Overview. So previously we had a special tool called Workspace Console and it's probably more than 12 \nyears old and it was used only for developers and only for developer tasks. Sometimes tasks were included based \nproduct preparation, processing resources, translations and so on. And finally it evolved into a complex tool with \nMany more than 50 different functions related to C Sharp sources, related to stored localization files, XMLs working \nwith file system, working with version control.  \n  \n  \nSpeaker 1\n \n And so it has a lot of different, let's say quite technical purpose, which probably will be not necessary for end users. \nSo developers used it for a long time. But now this is an old tool which has its own disadvantages and developers \nwanted to make something new, so they made a new tool called Clio. You can find it in GitHub, ATF Clio. If you \nsearch for this, you will easily find GitHub repository. You can find its root folder and then you can see a list of \nowners or maybe authors or contributors into this tool. And you need to remember that most of them are Creature \nemployees, only some of them are outside of a company. So you see some strange users here and there are some \npeople from outside of Creation, but most of them are from Creature.  \n  \n  \nSpeaker 1\n \n So generally you can consider as this tool was written by Creation in general, but this tool has open source code. You \ncan easily not easily, but you can analyze its source code. You can like propose your own improvements into it. You \ncan even add your own functions and also collaborate and helps to fix maybe some bugs and maybe to improve \ndocumentation and so on. So this tool is open sourced, so it's free of charge and you can use it at your own. This \ntool has also more than 50 different columns comments and I need to quickly show you how you can use it and why \nyou may need it. I will focus on the most useful examples that you may face when you develop your projects.  \n  \n  \nSpeaker 1\n \n But you should keep in mind that this tool was written by developers of base product, so they had their own reasons \nand needs to operate inside of base product. And now you will see this difference. So let's go and I will show you \nhow to use it. This tool was designed to use by command line, so you should use some Windows or if you use other \nthis other operating system you should use command line for it. And first of all we need to check presence of this \ntool and you can find documentation here how to install it. So let's let me show you. You must install dotnet core \nframework on your PC if you want to use Clio.  \n  \n  \nSpeaker 1\n \n I already have it dotnet tool list G this is command showing me existing installed dotnet core tools on my PC and \nClio is already installed here. Okay, I can remove it dotnet to uninstall Clio G It means remove it from my system. \nNow if we check we have no creature Clio tool on my PC. This is a common line utility. It's managed by command \nline parameters and the most important property of it. It operates with target creation system with the help of web \nservice calls. So Clio is managing creation by help of web services. It means that it can manage local or remote \ninstance the same well so unlikely to workspace console which required file system access and database access to \nyour creation. Clio requires only Internet network access to your creation.  \n  \n  \nSpeaker 1\n \n Okay, let's install it.net sorry to install Clio G this is command that you can type in your windows command terminal. \nThis is two this is common to install Clio. It will install the latest version. Let's see what version we will have. Now of \ncourse this comment requires Internet connection so it goes to nuget searches for the last package which it can \nfind. And now you see the Last version is 61016. So this is current latest version of Clio. Okay, we installed Clio but \nnot set it up fully. We already can run Clio command to see plenty. Oh sorry, my fault. Plenty of functions that it can \ndo for you. So let me show you where is my scroll bar Here you see more than 60 different functions and I have.  \n  \n  \nSpeaker 1\n \n I have suspect that the most early created functions are at the top of this list and the most recently lately created \nfunctions are at the end of this list, you will not need all of them. So it's like a universal tool. It has a lot of different \nparameters, a lot of different comments. So I will show you the most important, the most practical that you may \nneed. And after installation we need to tell Clio what environments we will work with. Because Clio operates with \ntarget website and it needs to know URL, login and password. So we can use command clio show webep list and it \nwill show a list of registered applications that are already present on my disk and physically saved into this app \nsettings JSON file located somewhere in my user folder on disk. You see my previous attempts here.  \n  \n  \nSpeaker 1\n \n So I already have some previous environments registered. I have to register my current environment. Clio reg web \napp I need to show you reg web app. Of course you need to know how to spell certain comments, how to get their \nparameters. So you can try to do something like this. And for some comments. Oh, doesn't show us. Okay, let's do \nthis like this. So for most of comments you can type minus question and you will see some error that it did not \nobtained, did not understand the command. And it will show you a list of all supported comments. Most of \ncommands have their short version and most of parameters have their short version. So in order to save your space \nyou can use shorter parameters. And the reg the app command is used to register your app.  \n  \n  \nSpeaker 1\n \n So it will be included into this file and then you will refer to it by name. This is easier than providing URL, login and \npassword each time when you need to operate with target environment. So let me register my current environment. \nClear reg the web app. I already have some example, so let me type it. So I have D1 to do. Yes, this is my \nenvironment. Okay. L means login supervisor, P means password supervisor and my name will be D1. So this is how \nI do my register. Copy it for you so you will remember it and you will understand why I need it. So when I register my \napp. Oh, we have some additional troubles. And path environment list is net core. So we have some troubles in \nexisting app settings. JSON okay, it was not expected. Okay, show the list.  \n  \n  \nSpeaker 1\n \n Wow, we have some troubles in this file line 41. Probably because I have some older versions of such settings. Okay, \nlet's go where it tells users. What else? Users or user app data Local creation My user app data local creature. Sorry, \nsorry. Local creation Clear App settings JSON possibly I have some incorrect settings here or maybe outdated \nsettings. Oh, I have something like this, which obviously it doesn't look good and probably it's a result of some \nprevious stuff. It looks like I have some incorrect settings here. So okay, environments closed. Then here it's end of \nenvironments. Here is end of all stuff. Also I could remove my previous items here. So I have no environments. Now \nlet's try to ask it. Clear show web app list. No troubles. You see, everything is okay. Clear reg web app. Configure it \ncorrectly. Okay, great.  \n  \n  \nSpeaker 1\n \n So now we can do some simple operations with it. Cleoping and then we have different options. But the easiest way \nis to use E key for environment and then environment name. So this cleo ping will physically check availability of our \nweb service. And if it's okay, you will see yellow. Sorry, not yellow green color text. So ping was successful. One of \nthe functions that can be useful is restart. So you can use restart function. Restart comment clear restart ed1 this is \nfor restart of our app. You remember we used maintenance tools add on for this. But also you can use this \ncommand to perform restart. Usually it's safe and quite quick. You will see what is happening. Now our application \nis being restarted. It takes up to 10 seconds and sometimes you will need this restart as part of your development \nprocess.  \n  \n  \nSpeaker 1\n \n You remember when we modified some objects, added new columns, we had to restart our app to properly apply \nsuch changes. So we had such scenarios in our training when we needed it. And simple log out and login did not \nhelp. Okay, so let's move on. We already started restart. We have a lot of other commands and you will see plenty of \nthem. A lot of comments. I will show you the most important ones. So from project development point of view, you \nneed to know that Clio can really help you with saving packages and loading packages. So you can use Clio to \ndownload packages. This one, this comment. Download packages from source environment. For example it can be \ndeveloper environment and then you can use install package. Let me find it. So we have download and we should \nhave upload. Push pkg.  \n  \n  \nSpeaker 1\n \n Let me switch find it should be somewhere here. Yeah. Push pkg. It has also short command install. I don't know \nwhy developers did not show it here. Install command is capable so it should be shown here. So you see \ndocumentation probably is not perfect. And the install command loads our package to target environment. This can \nhelp us to organize CI cd continuous integration and continuous delivery with a single script that can be started with \nthe one step one operation. We can download and then we can install it. But also you need to know that create Clio \nhas more other columns. Sorry comments and some comments like we use for download or install are using \nstandard base product creation Web services. So system that we work with doesn't require any special setting.  \n  \n  \nSpeaker 1\n \n But if you want to use all power of existing Clio commands, you must perform special command and this command \nis named Install gate. This Command downloads from NuGet and installs in your target system special package \nwhich keeps DLL inside. And this DLL includes all necessary web services that enable this set of commands. So \nsuch web services, simply speaking, are parts of Clio to implement corresponding comments without this comment, \nwithout install gate, without additional package installed to your system, CLIO will be not capable to perform \ncorresponding commands. It will show you error 404, which means missing functionality in your target environment. \nSo Clio only runs web services at your creature. And if it fails to run web service that it needs to perform a \ncorresponding command, you will see this error. So let's try.  \n  \n  \nSpeaker 1\n \n Let's try to run a command to install gate Clio install gate ED1 this is required in case if you want to enable full power \nof Clio commands. So in my case, I will do it in my source environment. This takes time because it Downloads \npackage from NuGet, it installs this package into your target environment. This package is called Clio Gate. So you \nwill see new package Clio gate in your system. And this package will have so called file contents and file contents \nwill include compiled classes for your web services necessary for Clio to work. Let me show you. So here we have \nconfiguration section. Okay, it looks like we have some stuff here. Let's reload the package. Reload configuration \nsection. We have some interesting information here. I did not expect it. It looks like we have some troubles with all \ndata for compilation.  \n  \n  \nSpeaker 1\n \n So system tried to compile and failed exceeded narrow try count work process. So our IIS prevented our system to \ncompile. Let me check. Did I detach? Of course, my visual studio was detached. Okay, I need to look at such \nquestions. And also we see some troubles with old data and probably it's file system issue. Okay, so now system \ntried to install and compile package named Clio Gate. I should expect it to see it here. No, now sort was performed \nwith this case insensitive sort. Clio gate is a package with functions that are necessary to run Clio commands. And \nyou see only a couple of data items here. Of course, it's not full stuff. So we go to file system, we go to our \napplication, go to our packages Clio Gate package.  \n  \n  \nSpeaker 1\n \n You can see its size 5 megabyte of executables not so little files Bin and here, here and here are DLLs included as \nfile content for this Clio Gate package. So such DLLs are used to execute Clio commands. They implement the \nimplement web services, install such classes into creature server side. So that's actually how Clio may work on a \ncertain environment and how Clio may create and implement new comments. Because if you want to run something, \nyour target system must be able to do this. Okay. So if necessary we can fight with it. It looks like I have not so much \ntime today to fix this configuration issue. My command to install Clio gate package was quite correct. So it looks like \neverything is okay. So now I can show you some examples how you can use Clio efficiently for project development.  \n  \n  \nSpeaker 1\n \n And this will be comments to save and load environment settings and Sorry, Save and load packages. Let me show \nyou. I already have another test environment. You probably forgot about it. So we have D1 Studio as development \nenvironment and D2 second was used as a target and the test environment. Let's check it out. It should be alive. So \nlet's go D2 it's used as test environment. So why it's loaded? I can also use Clio to. Sorry to register a new \nenvironment. So we load it here and then we will use it. So clear rag web app. I need to register D2 and I will call it D2 \ntest to make it clear that it will be my test environment. Okay, register it Clio show the back list. Okay, my D2 test and \nClio ping P D2 test. So.  \n  \n  \nSpeaker 1\n \n So I will check availability of my second environment and it looks like should be okay. Yes, looks like Bing is okay. \nHere is my second environment. So my plan is to show you the most useful usage of Clio for project development. \nThis is CI CD automation for saving and loading of packages. I already have examples of scripts that perform this \nsave and load. So let's take this one. Probably Clio download so we can download set of packages. Let's check out \nhow many source packages we have. So we have Dev Classic. Okay, here Dev Classic. Then we have USR Realty and \nalso we have USR Realty migration. So we have three packages here. USR realty migration and Source environment \nis dynamic one. So Clio download is the same as Clio pool PKG command and we can download set of packages.  \n   \nSpeaker 1\n  \n Not only one but several packages from source environment. Destination path is somewhere like this guided dev. \nOkay, let it be May 2024. So we will finally have a result of a zip file including all our packages. We can use this zip \nfile into next command which will be used for loading clio install the same as clio pool push pkg we will use source \nfile I will use on target environment D2 test and we need to use logs because it's important to see some technical \ndetails. So I will share such comments for save and load with you. It will be really important for you if you want to \npractice with it. And now let's check out how it works. We will remove unnecessary examples and this will be my \nsave and load example of CI cd.  \n  \n  \nSpeaker 1\n \n Let's try first system will save three packages into gz files organized into one single zip file and then it will be done \nand as you can see it makes it as a one operation if you do save manually saving of an app or saving of a separate \npackage. So you will have to perform it with separate structure steps. As you can see it went but not so fully \ncorrectly. I will remove unnecessary files from my example the 7th of April so those are here. So here is our saved \nzip file. So it looks like save part went okay and may part it looks like I had couple of exceptions here. Let's analyze \nour logs.  \n  \n  \nSpeaker 1\n \n So you see we have location packages more file descriptor more than one file app descriptor JSON what it is what \npackage it's about real to migration No, I don't know. So something wrong with application descriptors we can check \nit at our file system. Probably it's a result of something messing with package dependencies. So our realty has its \nown information of app descriptor yes, this is realty app. Okay, realty migration has its own app descriptor yes and \nour dev classic should have no dependencies from existing reality stuff and it should have oh we have app \ndescriptor extension.  \n  \n  \nSpeaker 1\n \n Something is strange here and it looks like probably system failed to work with it but it looks like it's not a big trouble \nand you see one more issue here parent schema and was not found yes, this is more serious trouble because it \nlooks like our target environment was not fully prepared to install our changes because it miss customer 360 app \npossibly previous error message that we had here previous message with this stuff here probably it was also \nmissing corresponding app and we used so our solution expects that target system will help customer360 in my \nexample customers current our target environment did not have customer 360 that's why we have this stuff. So in \norder to fix it of course we have to install customer360 first and then our solution next. In this case it will be loaded \nfully correctly.  \n  \n  \nSpeaker 1\n \n But now we can test our target environment. So usually we need to reload it. We can find our items like oh, we don't \nhave any, probably did not like it. Okay, we have to install customer360 here and then load our solution. So you see \nonly Dev Classic was loaded here and recent stuff was not loaded. Okay, let's try to install customer360 install. \nContinue. I did not enable file system development mode here because it's like a test environment and no any \ncreation, no any external ID. So let's install it. I install customer360, then I can try to load my settings again. That's \nhow we will see our working example. So I plan to show you fully correct transition of my environments. This is \ncustomer360 installation on my target system. As you can see previous results of manual load of package.  \n  \n  \nSpeaker 1\n \n Manual load can be done with new application and then install from file. Now we have successful installation. Great. \nIf we reload we will see customer360 app added. Yes, customer360 was added. Now we can try to install our stuff \none more time here. Let's remove previous package. So we will. And one more thing before we continue. So this is \nnot so obvious, but when we developed C sources we used external editors. We have C code saved on disk only. And \nin order to make everything correct, we need to download all items that we develop manually inside of our \nembedded editors back to disk. And then we have to upload changes from disk. This is very important because our \ndatabase part of C Sharp sources may have old C source.  \n  \n  \nSpeaker 1\n \n And if we ever try to compile our package on target environment, we may have very unpleasant situation when we \nwill try to compile old contents of C sources instead of actual one. So in order to make correct export of your \nsolution to test in production, we need to save everything on disk. Then we have to take everything from disk update \npackages from file system. Now you will see system will show us differences in C Sharp code. Because both \nexamples were written here and here were written with the help of external editors. This is very important. Now our \nsystem is ready to export. So let's do this again. Save and load. Thank you Adrian for your time. Yes, we are almost \nover. We will continue tomorrow with preparation for developer action and also answering your questions.  \n  \n  \nSpeaker 1\n \n It will be not so hard and thank you for your time. So now I just plan to make it correctly with save and load and then \nif everything goes well, we will see our Apps we will see our functionality loaded to our target environment if \nsomething goes not as planned. This is also good because we will see some exceptions. You will see how we can \ntroubleshoot them. It's important to understand how you may do some fixes when your package is not installed as \nyou plan. Now you can see. Oh, do we have any errors? Yes, we had some errors here and it's interesting because it \nshould not be so we should not have any issues here. Possibly it's about data. Let me check here we have a log file \nand we have data insert issue.  \n  \n  \nSpeaker 1\n \n So sys module entity USR realty no then this module in workplace studio so violation of primary key. Oh, it's because \nof data binding which does not keep correct IDs but duplicate cases module in workplace. So it's registering of a \nsection in the workplace and this duplicate is possible because of the way how data binding saves it. So we have \none data item failed to load but in general okay, one more data item failed to load so we have only troubles in couple \nof data items. But general data was loaded so we have as a result some errors. But this is because of something is \nnot exactly the same as our original stuff. Okay, let's try to reload our section. Let's see do we have anything loaded \nStudio my applications we have realty section.  \n  \n  \nSpeaker 1\n \n We have classic we miss reality sections here because such data items were not loaded. I will show you how you \ncan fix it. Let's go to advanced settings. Let's find our new packages loaded here so we can search for realty \npackage and we can see couple of data items. So let's see only status has error or needs to actualize here so you \ncan see list of items that were failed to install Couple of SQL scripts from base product we don't care and only one \nitem in our reality package was not loaded. We can see error message text and properties. So violation of primary \nkey. It looks like system can't find the correct value of what and it's hard to see. Okay, let's see. So it can't find correct \nduplicate value of sys module in Workplace.  \n  \n  \nSpeaker 1\n \n It looks like we already have sys module in workplace ID and it looks like this data entity was not good. So we have \nsome items here and we have key which was not ID and key was used by section and workplace. So we can fix this \nit's not good and this is behavior made by data binding tool. I don't really like it. So we can fix it with the another data \nItem organizing key by ID that will prevent the data from inserting twice with the same id so we can fix it. Let me \nshow you. Since module in Workplace in Studio so it's our reality section. This is a data item. This module in \nworkplace for Studio and such settings for key is not good ID key is better position for update if in case if record was \nfound.  \n  \n  \nSpeaker 1\n \n Great, and we can save it. And we have a lot of warnings, but it's about existing date. So let's actualize it save it. Just \na lot of warnings about reorganizing of the same existing set sections that are already present in data. And also one \nmore thing which we potentially have the same trouble sys module and workplace for this realty and it's 26 my \napplication. Also it makes sense to our ID is already set here. Okay, great. Probably you can put position updates \nchoice data save it. Great, Everything is okay. So we fixed it. We have to save everything on file system just to make \nsure we will correctly have all the data well in our repository version control. So now you will see that it's possible to \nsave and load packages again. We can prepare something like order like v1 plus old file.  \n  \n  \nSpeaker 1\n \n Now we will have a bit better version of it. Okay, saved. Now let's try to run this transport again so it will be final one. \nAnd this is example how you can automate delivery of your changes. How you can take data from developer \nenvironment and automatically save and devote it to some other task target test environment. Of course, as \ndeveloper you understand that sometimes things are not going very smoothly. Sometimes we have unexpected \nerrors. And having such errors during the training is also good because it helps us to see how you can troubleshoot, \nhow you should search for error details and how you should do all changes. So now you see next time we load it \ntook significantly less time because loader is smart.  \n  \n  \nSpeaker 1\n \n Loader text takes zip file, takes information about its items, all the packages, all the items of configuration and it \nanalyzes date of modification. If date of modification of the loaded item is the same as date of modification of items \nthat you have already in your target environment, then it just skips it. And that's why if you have a big solution, but \nyou have tiny small changes, they are from recent upload that you did previously. It will only analyze changed items \nwhen loaded on target environment and final total installation time will be small. And now you see only couple of \ndata items that were failed were now updated and fully applied and everything else was correct. So now our system \nin our target environment has no errors. As a result of installation we can go to all packages to see items.  \n  \n  \nSpeaker 1\n \n Actually only base product stuff. Okay, don't care, no errors. Okay, so our package with realty was fully correctly \nvoided. All the items that we have were loaded well. And we can test it at our user interface. So you can go to \ncorresponding sections, you can try to create data records. You see all three actions, all three sections here. So our \nreality with columns you can create new data. So find me cat here. And you see now we have default values working. \nWe have some test data. Test price, negative price, validation works too big price will also work and system will not \nallow us to save because of server side. Okay, like this. But now you see price is more than 1 billion. So everything is \nworking as expected.  \n  \n  \nSpeaker 1\n \n So that's how you can deliver your solution to test and check it out and perform corresponding full scale test for your \nsystem to check how it works. Now you see details were filled in. So everything works quite well. And that's how you \ncan do some automation with Clio. Clio has also a lot of interest in other comments I will show you just one of them. \nClio SQL select name for contact. Okay, something like this. So this is example for Clio SQL execution. Sometimes \nwhen you work in cloud with cloud environments you just can't connect to the database directly and operate with it. \nSo sometimes you need to run some simple select queries in database to make sure you have specific data. And \nthat's how you can do it with your Clio.  \n   \nSpeaker 1\n  \n So this is example of how you can read list of contacts from your database. Of course your queries could be much \nmore complicated. And when you run SQL queries please be extremely careful because SQL statements is the way \nhow you can easily damage your system, how it can easily destroy your database. So you should be extremely \ncareful and please check your queries before execution. SQL can really help you and to see some data directly. \nUnfortunately Creature has no tools to work with SQL easily from user interface. Now previously we had such tool \nbut was designed by some Russian partner. And as you remember, as you know, Croatia gave up any work with \nRussia or Belarusian partners and customers. So we also removed all of the add ons from the marketplace.  \n  \n  \nSpeaker 1\n \n And that's why now we don't have any fancy good looking tool to run SQL query from application user interface. But \nnow this is something that you can do. And the last information that you need to know about Clio is that it's also \npossible to use add on for Visual Studio named Clio Explorer. So Clio Explorer Is an add on that you can use in Visual \nStudio code. It automatically loads your information from file with connections for existing solutions. And you can \nuse a lot of Clio commands from user interface including SQL. So you can do something like this. Then you can run \nyour query. Let me see where there is a button to run query. This one. So this is Clio SQL comment and it tries to run \nmy query. But what? Oh, D1. I already connected. Probably I connected. Yes. What's wrong there?  \n  \n  \nSpeaker 1\n \n Split editor. More actions. Oh, probably this. Yes, it was case sensitive. I don't know why it's case sensitive. But now \nyou see some data we got from the database and you have some kind of UI stuff. But with the help of Clio Explorer. \nClio Explorer uses installed Clio Explore tool. So without Clio installed it will not work. But this is user interface \nfeature which can help you to work with a particular environments. Would you like to current. No, no, no, no. Thanks. \nSo we have a lot of functions of Clio the most commonly used and some of them. And also you can use Clio \ncommands from terminal window of Visual Studio the same as we used in other Windows console bars. So, thank \nyou for your time today. Today our session is over. We will prepare for the exam tomorrow.  \n  \n  \nSpeaker 1\n \n As usual you will receive video recording of today's session. If you have any questions, ask today or prepare \nquestions for tomorrow. Because we will have more time tomorrow. Thank you very much for those who stayed for \nthis moment. You will see videos soon. Thank you and goodbye. Hi Dimitri, it's boss here. Yes boss. Please. \nTomorrow I'm. I have other obligations to attend to, so I will probably follow it by video. But is there any special \naction I have to take the fast track on development certification? Oh yeah, I will explain. So I will send you final email \nwith all video recording with homework for your fast track certification and quick explanations of what you should \ndo.  \n  \n  \nSpeaker 1\n \n So if you agree to run Fast track certification, you should just respond to my email and we will arrange individual \ndate and time for you to run your exam. Your exam will include check of the homework. So you should prepare \nhomework before exam starts. So you will have a couple of weeks to do this and you should prepare for the test \nusing self assessment tests at Academy. I will show and so at the exam we will look at your homework and you will \nrun your online exam test. Okay. If you fail, you can run this test again later. So don't worry. It's a bit nervous. I \nunderstand. And Fast track certification is free for our guided learning participants. Okay, cool. So you will receive all \nnecessary stuff and videos explaining how to prepare for the test, how you should answer questions, and so on.  \n  \n  \nSpeaker 1\n \n You will see the type of the homework Raki is asking will include. So let me quickly show. I planned to show it \ntomorrow, but okay, if you ask now. So let's do this, I will quickly show you. So the type of the homework will include \nmaking your section, this one, making your detail, make programmed validation, some calculations, web service, and \nfor those who want to run an advanced level, some additional business process and adding data records and some \nautomatic update. You can use live Update to automatically refresh your screen. Or I will show you how you can use \nWebSocket messaging if you prefer. If you prefer to do it a bit more professionally. So the homework simply is just \nsimilar to what we did during our sessions. And it requires some programming for validation, calculations and web \nservice.  \n  \n  \nSpeaker 1\n \n So it requires some javascripting and C Sharp scripting. And so it will not take too much time for you, I think, and I \nhope that it will be clear. So we discussed all the steps how to do this. If you will have more questions, you may ask \ntomorrow. So Rakhi, I think that those who passed our sessions watched our videos and practiced with their own. \nYou can use even your own example because the name of the section is the same set of columns, very similar. So \nyou can use your training session environment to perform your homework on it. So it may be helpful. You do not \nneed to create a separate environment for your homework. Okay, thank you for your time today.  \n  \n  \nSpeaker 1\n \n Sorry for staying a bit later than usual and if you will have more questions, so prepare for tomorrow, we will have \ntime for this. Thank you very much for today's session and goodbye. You will receive homework assignment \ntomorrow as well as all video recordings and all the questions I will answer tomorrow. Thank you and goodbye.  \n \n  \n  \nSpeaker 1\n \n Foreign session number 10 of our development on creation platform Guided Learning. Today we will prepare with \nthe to prepare for the certification for the development exam. And this is an optional thing. So if you want, if you feel \nyourself ready for this, you can apply for this type of check certification. And as you are members of our guided \nlearning, so you can run fast track certification for free. And I will explain what certification is, how it's held and what \nyou should do for it, how to prepare. So all the certification steps we will discuss today and I hope it will be clear. So \nin general, the main purpose what is certification? This is a test. It's a check of your knowledge and skills. And we \nhave some certification basics displayed at academy.academy.creation.com Go to certification if you're interested in \ndevelopment certification.  \n  \n  \nSpeaker 1\n \n So you see that we check some major creation development skills related to some C sharp programming, JavaScript \nprogramming, understanding of general architecture, understanding of packages, some little SQL experience and \nintegrations questions. So certification is like part of your path. And if you pass certification, you will get your \ncertification certificate which issued for two years. And being a certified creation developer gives you some \nadvantages. One of the obvious advantage is that you can ask for help at support team at creation support team \nwith the questions related to development like how can I do something like this if you have no your own certificate \nDeveloper certificate support team will reject you on such questions. But if you are certified developer and you \nrepresent company with a paid support plan, so your company should pay some money to support for support.  \n  \n  \nSpeaker 1\n \n In this case you'll be able to ask questions about development and improvements and support team will help will \nhave to help you. So now you are somewhere here. You now started our customization and development already \nfinished development course. And then the next step is to prepare for the exam and then pass this exam. This is \noptional so it's not mandatory. And if you do not feel yourself ready for this, you may do it later. You can also apply \nfor certification at Academy website. But in this case there are a bit different rules and a bit different complexity. So \nat Academy you can register for an exam and if you are a partner, such exam is free. But if you are a customer, so \nmember of a customer company, in this case certification is paid.  \n  \n  \nSpeaker 1\n \n So if you are a customer and attended our guided learning session, obviously it makes sense to apply for a free fast \ntrack certification. RAK is telling that going to do the same step. So same step. Yep. Next price web service working \nparameters are not showing not passing. So it looks like Raki you need some help in your Environment and \ndevelopment and maybe debugging. Yes. So it's about the question how something is not working well and you need \nsome assistance. Yes, am I. He's showing a screenshot. Let me show it for you. So it looks like your code is not \nworking properly and possibly you should just check. Let me show you. I believe as you use the name of the \nFreedom UI section. So we should go to Freedom UI package. We should go to find form page source.  \n  \n  \nSpeaker 1\n \n I will show you, Rakhi, how you get such data. Here you see handlers. Here you see your button handler and you take \ntype object. You should check that this is your attribute displayed in view, model, config and this attribute. So for \noffer type. Sorry, type. Here you should copy this attribute. For author type, you should copy this attribute and use it \nin your code. If you do it incorrectly, of course it will not work for you. So such value here should represent type \ncolumn and here should represent offer type. It looks like your code is not failing, but probably you just do not \noperate with these names correctly. So you should get it. If it's not empty, you will get value. Value here means id. \nYou also may find display value, which is a display text you can see in lookup columns.  \n \n \n  \nSpeaker 1\n \n Yes, thank you Rakhi for telling this telling me about this trouble. So let's move on with the certification. So this is \nkind of Excel and this exam is free if you are participant of our guided learning session. But it has some timeout so it \nwill be not forever free for you. And Fast Track certification is available for three weeks after the end of our training. \nSo three weeks from today. I think it's quite fair. And you can easily make your homework and prepare for the test. If \nyou would like to run your certification for example, two months later, somewhere in August 2024, then you can \napply for this exam just from Academy website and register for the exam at Academy. But currently the best way for \nyou is to apply for an exam as a member of our guided learning.  \n  \n  \nSpeaker 1\n \n So today I will send you the homework and if you respond me on this proposal to pass the exam. And we will \norganize individual sessions with those of you who would like to run this exam. And in order to apply for Fast Track \ncertification, I will ask you to respond on my email. So don't forget if you want to register, please respond on email. I \nhave a question. Yes, please. And we have already applied for the certification later this June, like becoming June. \nSo can we cancel that slot and apply for the Fast Track certification which you have just discussed? Yes, yes. You \ncan. So please write me an email because today's Friday and it's a bit hard for me to remember everything in my \nmind. So it will be much easier for me to have this task for rescheduling noted somewhere.  \n  \n  \nSpeaker 1\n \n So please send me a message about it, I will process it properly and we can run Fast Track certification with you or \nwith someone with your team. Thanks. Okay. Thank you. Okay, and let's move on. So what certification includes? We \nhave some kind of general policy explaining here. So this is a link at our certification tab about the general policy. It's \na PDF file. You can also read it, but I will explain you in several words. So certification includes homework. It's also \nknown as practical assignment and online test, which is our online session with the trainer. This online session will \nbe up to one hour and your homework may take a lot of time or not so many, not so much time depending on your \nskills.  \n  \n  \nSpeaker 1\n \n So all of you will receive your homework today with the final email with all the video recording sessions list and so \non. So you will receive your homework and you will have some time. I think that one week will be probably fully \nenough for you to make your homework or adjust your current environment according to the homework assignment. \nAnd the homework is designed so you can use your current Freedom UI section that we designed to implement your \nhomework. Because the same section, the same page, the same business logic, just slight changes in calculations \nand so on.  \n  \n  \nSpeaker 1\n \n So if you spend your time, if you already spent your time on making all our training session examples, it will be very \neasy for you to make your homework because it's also very similar and that's how you can get benefits from your \neveryday activity during the session. So let me explain what will include, what will be included into your homework. I \nwill show you an example right now. Just a moment here. Fast Track certification and you will see the document. \nYes, here. Okay, so this is fast Track certification. I will provide a better, more modern link or download the very late \nthe latest version of creation for you. So the Latest one is 813 and the homework includes very simple tasks like \ncreate new section, provide its columns new detail.  \n  \n  \nSpeaker 1\n \n And also it includes some examples which will require coding and validate coding samples for you in JavaScript and \nin C. So validation should include coding at client side. We already discussed how to do this. Just to remind you, this \nis about checks of your data and in our case we checked that negative prices cannot be edited, cannot be added. So \nyou see, price can't be less than 50 bucks, so we cannot save such data and area also is checked there so validation \nalso checks. So you should do the same at your environment where you present your homework.  \n  \n  \nSpeaker 1\n \n So validation we already discussed you may watch our previous videos if you skipped it and you will know how to do \nthis calculation is about edit page online let's say runtime calculation that we did also in JavaScript and we made the \ncalculation of commission depending on price and offer type. Let me show you we did it. So if price changed, you \nsee for each typing and each change of the price we have called commission recalculated and offer type. If it \nchanges, you see commission is recalculated. We also covered such example fully during our session, including \neven potential issues that you may face when you add new columns to your lookups. So you can just follow the \nsame approach and make it work just as we did.  \n  \n  \nSpeaker 1\n \n Please note we have a bit different percentage of prices and for center for rentals and for sales, so take care to \nprovide correct values here. So this is important and we will check it the next task is about C Sharp programming \nmake your own back service club. It will do some calculation of price minimum price. In our example we made a \nmaximum price so it's very easy to change but it will require your own programming. It will require your \nunderstanding of a C sharp script tasks or sorry C sharp source codes. So here's your package. Here is our web \nservice so you should present something like this during your exam. Of course it must be compilable and it must \nwork normally. In my example we use max price calculation.  \n  \n  \nSpeaker 1\n \n In your homework exam it will be minimum price calculation so they're easy to change but you have to perform this \nstuff in and that's why your homework sorry that's why your everyday work and your results of work at our sessions \nwill be important and it's so it will be useful for your exam and we already discussed how you can write such code. \nWe used Visual Studio to facilitate our development and make it really easy with the help of background syntax \ncheck, intellisense, autocomplete coloring and also if you're interested, you can study the structure of this project \nand understand a bit more how it was done and generally project files and all the preparations made by creation. We \nonly make our own part of it as a C Sharp source code.  \n  \n  \nSpeaker 1\n \n Of course you may use so it's expected that you will use your local instance if you have no any conditions to run \nlocal instance. You can use cloud one trial environment or dedicated demo environment if you have so you can do \nthis in any kind of environments and it will work for you. Of course your system must be compilable so you should \nnot get such compilation errors as I do here. In my case it looks like I had an issue compiling my environment \nbecause of the same process did not allow system to replace some libraries. We will try to compile today just to get \nrid of this error message. Previously we had no troubles with it. So your homework includes also some server side \nchecks and if you do five tasks of your homework you can apply for a basic action.  \n  \n  \nSpeaker 1\n \n Also we have a task number six which is a bit additional one. It's about business processes. So generally it's \nexpected to make you using business process, but you can make it with another tools if you want. For example, you \ncan create your own web service. You can run your web service from client side using your code like we did running \nof a client side web service method that we made in task number five. So if you want to apply for advanced level, you \ncan make task number six and prepare for the advanced test. We have two levels of certification, Basic and \nadvanced. They have the same legal like power. So if you apply for help at support team, any type of certificate will \nbe working for you. So basic or advanced works the same.  \n  \n  \nSpeaker 1\n \n And also I didn't tell you important thing that if you are a member of a partner company it makes big sense to get \nmany certified professionals at your partner company because it impacts on your partnership level. And partnership \nlevel is something about margins, about deals and money sharing between partner company and creation company. \nThe reason is quite clear. If a partner has a lot of professional experts then there is a lower chance that creature will \nhave to support and like uphold the partner in case of some complex situations with real customers. So if partner is \nreally expert and professional then it's possible to provide better margin and simply speaking to share more money \nwith partner and less money to creature when signing some deals with real customers.  \n  \n  \nSpeaker 1\n \n So if partner has not so many experts and certified professionals then such partner will have less partnership level. \nAnd probably this is more risky for creature when any kind of agreement will be signed with a real customer \nincluding partner part of work. And that's why any partner is interested in having as many as possible of certified \nexperts, certified analysts or developers at Valer stuff. So it makes sense for partnership level. Okay, so task number \nsix is about some automation of adding data to the detail. The easiest way to implement is use of business process \nand then we can add so you can easily make a button or action that will do some insert some data and also there is \na task to Refresh list. So update number so list of records.  \n  \n  \nSpeaker 1\n \n After you add this data, let me show you and remind you how we can do this. So it will be very quick and easy. And \ncurrently when we add. Okay, let's see. So when we add new data to our reality section, you remember we already \nmade some automatic insert of data house for sale. So we made automatic insert of data into realty visits detail. \nYes, this one. But we can make the same process or make a similar process, but it's better to make the same \nprocess operational. And also that can be called from some action. I will show it how we can do this for you. I can \nfind the corresponding process. I prefer to work with processes from configuration section because it makes it \neasier for me and harder to miss and auto add reality visits process.  \n  \n  \nSpeaker 1\n \n We already used this process to add data. When new record was added, we used start signal item for it. And it was \nalso an example of entity event handling with the easiest possible way using start signals at server side. So it was \none of the examples of entity events for objects. I will show you how we can do it in a bit different way. And for this \nlet's imagine we can start this process not only by adding new reality data, but also let's imagine we can start this \nprocess manually. We will need parent realty ID in order to transfer this data as an argument to this process. So let's \ngo to parameters add new GUID or unique identifier parameter and we can call it realty. This doesn't require any \nprogramming for us to be okay bidirectional.  \n  \n  \nSpeaker 1\n \n So we can register such parameter as you remember, parameters are like variables at our process. And in case if we \nstart our process manually so we can call it manual start, if we do it manually, then we expect that this parameter \nwill be filled in and then we can just move on to our step where we add data and then we can replace here parent \nrealty not from signal but from this parameter. So we can replace process parameter and put realty ID parameter \nhere. So now if manual start is performed, we do not use background here, then we will use this reality ID and \neverything will work. Of course, in case of started by signal, we need to prepare this reality ID and we will easily take \nit from the signal. I will use formula for this.  \n   \nSpeaker 1\n  \n You can see it's not so hard and it's very important for you to become familiar and to feel some confidence when you \nwork with processes because this is like a brick game, like a Lego, which you can use for much more complicated \nProcesses and business logic. If you understand well how such tools work, if you make your own simple examples \nand understand it clearly, then you can use it for much more complicated things and you can use it quite efficiently. \nSo in my case I'm using formula to assign parameter value. Formula is assigning operator in creature. So we set the \nvalue to target parameter realty ID and formula value is our expression that we save here as expression we will just \nsimply take our signal. You see corresponding icon representing this signal.  \n  \n  \nSpeaker 1\n \n So we can look at its title or at icon type that will help us to get it. And the only suitable parameter from a signal is \nunique identifier of record double click and that's how we will get this data and save it as formula value. So if our \nprocess started as is driven by signal so if our process started as event handling or insert, then our formula will set \nreality ID ROM signal and then we will run our insert operation based on reality ID parameter. In case of manual start, \nwe are expecting to get this reality ID as input data and then we will do our inserts and everything will work. So this \nis a single process that serves for us into two different situations. In a case when we add data, when we add new \nreality or in case if reality already exists.  \n  \n  \nSpeaker 1\n \n But we can start this process manually. So of course we have to save it. Okay, and then we can register this process \nsomewhere, for example as action to our page. Let's go to the edit page button, find corresponding action. Here we \nhave one more action and we can call it add visits action which will run business process. What process to run Add \nrealty visits and we will select it for the select page process parameter where the record is passed realty id finally in \nthis version you see that this list of parameters is filtered. In some previous version like 8.1.1 we had a big list of \nparameters here even not suitable not guids. Now developers finally improved this part. So thanks developers to \nmake it correctly and we also can use some icon would be fun. Nice to see how we can add some data.  \n  \n  \nSpeaker 1\n \n Okay, little bit plus will be a good example and add visits menu item will be our unique element code. This will help \nus to easily find this item in view config diff part of the JavaScript code for our client module. Okay, looks good. We \nmade it. We have to save as you can see, I'm very stick to no code approach and no code tools if it's possible \nbecause it helps it to get your results very quickly and efficiently. So you spend just a little time and you get \nsomething that works quite well even in case if I really like to develop something to write some code. But if you can \navoid this and use no code. So in general it's an advantage for you. Let's try to test how it works. Open any existing \ndata, find our action, add visits and icon.  \n  \n  \nSpeaker 1\n \n As you can see it works, so let's try to run it. Process successfully started. And also you may find that our task our \npart of our task. As a result of running the action, the list of the reality visit detail must be updated automatically to \ndisplay new records. And also you can use Enable Live Update. This is a no code option to make this update quite \neasily and with no need to program in and send in messages using WebSocket. So let's try this simple approach \nfirst. This simple approach. So now you see we have no automatic update. Let's try to reward refresh date. Now you \nsee we have some data here. So it looks like data was added correctly, but automatic update was not done because \nwe did not care about this option. Okay, let's make this live update.  \n  \n  \nSpeaker 1\n \n I will explain how you can do this so we can close unnecessary tabs. Let's go to search for objects and find reality \nVisit object. We did not use this feature so far, but I will explain. So in Behavior settings there is a very important and \nquite new feature which appeared only in version 8. This version, this feature is called Enable Live Update. Live Data \nUpdate. What does it mean in case if your page is shown for a user? So we have a currently alive user session. This \nuser opened some page where this object was used. So in case user opened it and the same data is changed at \nserver side. For example, you changed and recalculated some column like you recalculated some amount or status \nor whatever. Then system is capable to automatically refresh corresponding column at client side for you.  \n  \n  \nSpeaker 1\n \n So it was generally intended to be used for updates. Situation when you have a record it was already opened at client \nside and you change the data columns of the record at server side. So I believe it was initially designed for updates, \nbut it also turned out that it works well for inserts and if we have a detail with a list, so we have a list of some detail \nand data was added at server side. This detail list is updated at client side in case if Enable Live Update option is on. \nSo let's test and check how it works. Enable this option, publish our object and now you will see the difference. So \nyou will see that system will automatically so it will automatically update corresponding data if it was added at the \ndetail. Okay, so we can close it. Go to the page.  \n  \n  \nSpeaker 1\n \n We need to use some good examples. So let's delete all the data records. Also, possibly we can face some cache \nissues. Let's reward the page just to avoid any potential threat of browser caching. Okay, open it, look at detail. Now \nadd visits. And our reality visit object is now enabled its Live update feature. Now you see that it looks like data was \nadded. Sometimes it has a glitch and sometimes you see not all of the data records, but actually you see something \nchanged here. If you reload, you can see all three data records. Okay, let's remove them and try to run it once again. \nNow you see it works well, sometimes it works, sometimes not so good. But in general data is updated.  \n  \n  \nSpeaker 1\n \n So if you do something like this and your end user will see the detailed data changed, so it will be quite good enough \nto display that data was modified and you see how it works. So also it's interesting to mention that it works for \ninsert, it works for updates, but unfortunately for some unknown reason it doesn't work for delete. If we make a \ndelete at somewhere at server side, this will be not represented, not automatically updated in the list shown in client \nside. But the lead situation is not so common, so possibly we can live with it. So if you do something like this at your \nexam, it will be enough and you can do it as is.  \n  \n  \nSpeaker 1\n \n If you want to display and demonstrate more skills, you can also try to use a bit more complicated approach with the \nweb sockets with messaging from server side to the client side. I can quickly explain you how you can do this. If \nyou're really interested, we can try to make working sample of it. And let me show you how we can find it. Creation \nwebsocket socket freedom UI and why Russian? I don't know. Okay, customer ethics. So we have a partner \ncustomerethics.com and this partner. So this guy is Ryan Farley. It's a creation expert and a partner for many years. \nHe likes to write such articles explaining for beginners some interesting aspects of creation. So they have their own \nlike set of articles kind of knowledge base about different aspects of creation. And sometimes such articles are \neven better than in academy.  \n  \n  \nSpeaker 1\n \n So we can use it for free. And the main idea is that we can. By the way, it looks like this is a classic UI stuff. No, in \ncreation. No, it's okay. Your model config and in each request we can subscribe for websocket messages and we \nhave to unsubscribe when page is destroyed. Okay, great. And here we can do something to refresh our list and so \non. Okay, so if interested, you can implement something like this if you have enough time today. If you're very \ninterested, we can also try this example and to make it work at our environment. But this is not so mandatory for \nyour homework. I need to explain you some words about WebSockets messaging. So in general, WebSocket in \ncreation is used as one so as alternative channel of communication between server side and client side.  \n \n \n  \nSpeaker 1\n \n Let me show you when page of creature is opened. You can also see we have some WebSocket hard beat and it's \nused to check that WebSocket connection is alive or not. WebSocket is the dual directional channel between client \nside and server side. We can use this channel to send the messages from client side to the server side and from \nserver side to the client side. This option to send messages from server to client is extremely helpful because this is \nthe only way how server side of creation can tell to the client side that something is not good or something should \nbe changed or something should be displayed. For example, when we do running of some business processes like \ncalculating average price business process, you probably remember. Then server side sends messages to the client \nside.  \n  \n  \nSpeaker 1\n \n And one of the specific message tells client side that we have to show some specific process driven page. So \nsystem should show another page instead of current one. Let me show you how we can track this. We can go to. \nOkay, let me show you can open again and our page we can check network filters ws, which stands for websocket. \nSo we will filter only websocket messages. But it looks like I have to reward this list. Okay, let's clear the root. So I \nwill show you how we can track websocket messages at our browser client side. Let's imagine we open some edit \npage probably this one first one and let's check messages. Yes, we already got some websocket message sent from \nserver side to the client side. And also I expect let's check do we have something here? No.  \n  \n  \nSpeaker 1\n \n Okay, this one probably will better. So let me explain how it can be useful. Generally, creation uses such a socket for \nsending messages from creation server side to the client side. For example, when we run a process calculate \naverage price. But it looks like possibly I did not see what I need here. You see. Oh, there are many. I just can't see \nanything of everything. So yes, unavailable list license common service body. Okay, let's clear this information save \nyou see some websocket Messaging was done and it was related to process engine and let's try to run it again. Yes. \nSo now you see that one server side tells client side to show some page physically this information is sent with the \nhelp of WebSocket message and it is being sent from server side to the client side.  \n  \n  \nSpeaker 1\n \n It has some corresponding data parameters which will be enough for client side to understand what it talks about. \nAnd as you can see, we have some values here that are enough. And client side understand that if sender is \nprocessed dashboard, if it has some id, then client side should search and find corresponding task to be executed. \nYou can see it here. Notification panel, business process task. This one. So client side knows that this one should be \nshown and if we close it system returns back to previous page and so on. So this is example of how WebSockets is \nused at creation. But also it has more different examples of implementation. So I know for sure it's used when we \nstart. For example, when we start page editor. Let me show you what happens if we start page editor we can go to \nsee.  \n  \n  \nSpeaker 1\n \n Oh, you don't see it here easily because we opened browser developer to wait. Okay, let's open it again. Revote. Yes, \nnow you will see that we have some websocket messaging processed here. When we do designing of our page and \nespecially when we do designing of business rules, it's also used. And now you see one more connection for \nWebSocket was issued was initialized. So it's interesting that in Windows 10 Home Edition and Windows 11 Home \nEdition there are some limitations in IIS on number of WebSocket channels that can be opened. And that's why you \nhave some significant limitations in working with creatio. So it only works when one page is open of creature. So it's \nconnected with WebSocket connections and also even when you work with single page.  \n   \n Speaker 1\n \n But when you start to design business rules, I faced situation when managing business rules requires additional \nwebsocket connections and it also failed in Windows Home version. So that's how you can track WebSocket \nmessages. You can use some filters here. You can type some messages in order to filter because you may have \nplenty of different WebSocket messages and you may need to filter only necessary ones. And can we get the link? \nOh yeah, sorry. This is the link. Yes, thank you, Patty. Here is the link. And probably I I have to implement this \nexample, but maybe a bit later, because in this example we need some additional code to run Reloading of a list. I \nhave this example, but I need to check it to make sure that everything works well to provide good looking and good \nworking code.  \n  \n  \nSpeaker 1\n \n But this is like a technical possibility for you to listen for this websocket at client side. You also need to know how to \nsend messages at server side to the client side. Here is the link that shows how you can do this, because first you \nwill do server side sending message. By the way, this example is not perfect because here Ryan sends message to \nall users and this is not perfect. Post message to all means it will search for all active user sessions and will try to \nsend to their user session to the browser such messages. So I recommend to use post message. It will send only to \ncurrent user.  \n  \n  \nSpeaker 1\n \n So I think it's more efficient, it's more correct and like more fair to send messages only for current user because \nusually you need to do in like connection exactly to current user, not to anyone. And if you imagine working with \nthousands of end users, so it will be really noisy for them to see such messages that are not intended. So server \nside in C sharp we will use MSG channel utilities special class and run its post message method and there are some \narguments. I already have some example for this websocket messaging, but this example is for classic UI so we can \nsee post message. Let me show you MSG 10 utilities and you should remember that this is inside of configuration \nnamespace so you have to provide user connection as argument.  \n  \n  \nSpeaker 1\n \n Sender is a text MSG body as a text and such command will It's a C sharp and it will send the websocket message \nfrom server side to the client side. In the client side you can subscribe for it and this is classic UI example. Here is \nFreedom UI example and subscribing for it means that you may run some certain code in case if such message will \nbe catched at client side. This is more complicated scenario than you probably would want to do. So if you need just \nto make it work, I think that using live update will be enough for the exam.  \n  \n  \nSpeaker 1\n \n This type of messaging can be important in case if you don't really need live update or if you want to make some \nsignificant changes to server side and then run your necessary comments to update client side only once, which \nmeans to be a bit more correct to do. For example, if you add 100 records at server side, then you ask client side to \nupdate once, which will be definitely better than asking client side to update hundred of times because of live update \noption. But it's up to you so you can go through it if necessary, if interested and make it work. You need also to find \nexample of code to refresh, to run certain handler to refresh data. If you will be really interested in it, just send me a \nmessage. I will try to find good examples and prepare for you.  \n  \n  \nSpeaker 1\n \n Okay, let's go back to our general certification. So it was just about this advanced part of the homework. But if you \ndo just basic part of the homework, it will be also good enough. When you finish this, please keep your environment \non. It means that when you will start your exam, we have to look at your environment and we have to check that your \nsystem, your setting is working, your settings are working correctly. So at the exam session, I expect to see your \nworking environment and then we go to the test part of the session. Test part of the exam. So homework should be \nperformed before your exam starts. And the test will start at online session with the trainer. And of course you have \nto prepare for this test.  \n  \n  \nSpeaker 1\n \n And before we continue, possibly let's make it five or up to 10 minutes break today. Today's Friday, all of you are a bit \ntired. So let's make a short break and then I will explain how to prepare for the exam. Test. So we'll work with self \nassessment tests. And it's not so easy as it may seem. So. So I will explain how to find answers, we will go through \ntest examples and I will explain how you can prepare for it. Okay, let's make a break. Quick short break. Let's move \non. So now we talk about how to prepare for the exam. Test. So I need to explain that our real exam includes \nhomework and test. And your own total score will be based on your homework. So you will have up to 50 marks from \n100 for your homework. Just try to draw something.  \n  \n  \nSpeaker 1\n \n So 50 for the homework and also 50 for your test. Depending on the type of the test, there are different number of \nquestions. So let's talk about basic exam. And you will have 25 test questions. So it means each question gives you \napproximately 2 marks. And in total you may have up to 100 marks. When you run the self assessment test, you will \nhave no homework part. And if you run the same self assessment test for basic exam, it includes 25 questions. But \nthis calculation logic will finally treat your results from 100 to. So from 0 to 100, it means that 25 questions will give \nyou up to 100 in this test. And it means one mistake will cost you four marks in self assessment test.  \n  \n  \nSpeaker 1\n \n So I'm trying to explain that in your self assessment test you will have slightly different so different results from the \nsame answers if you do it on the exam. And self assessment test is harder and real exam is easier. So in real exam \nyou may do up to seven mistakes from 25 or 28 questions. Let me show you how you can prepare for the exam. So \nexam for developer includes. So we have two levels, basic or advanced. Let's look at advanced part because it will \nshow you some additional categories which are not shown in basic excel. So advanced level includes 28 theoretical \nquestions. We can start this test and let's click Begin test. You will see questions with multiple choice. They are \nshown with square options.  \n  \n  \nSpeaker 1\n \n And also you will face questions with single choice like radio button with circles on the letters not squares. And we \nhave to answer this test properly and correctly. And please note test self assessment test questions will be similar \nto the same questions that you will get during real exam, but they will be not identical. So you should expect. You \nshould see that such tests are not identical and you should be very careful. Okay, let's try to follow this test so you \nwill see how you can do it. Purpose of the DB attribute for the redis section of connection strings. Let me show you \nwhere we are about it. So here when we set up our local system, we had redis section and DB section. Now the \nquestion is about redis section and DB parameter. So redis section DB parameter.  \n  \n  \nSpeaker 1\n \n So this is about this setting and what are the purpose? So this purpose is a redis database number. Yes, this is \ncorrect. But this is multiple choice. So we must select at least one more item. Must be unique to each application \nenvironment connected to the same redis server. Yes, and indicates SQL database. No, it's not true. Optional. No, it's \nnot true. It's mandatory. So now you see we have all answers. Let's go next. How users with system administrative \nprivileges are different from regular users. Data access restrictions do not apply. Yes, no difference. No, it's not \ncorrect. And if this is multiple choice, so we have to select at least one, this is also correct. Can view all data and no \nrestrictions. Yes. Let's move on what system settings should be created to implement standard odd numbering.  \n \n \n  \nSpeaker 1\n \n This is about very old times when you can use such system setting. And I can show you examples. We will see what \nit is about. Let's go to system settings. Let's search system setting which is the last number. Oh, we probably don't \nhave system settings related to business sections code. Okay, let's try last number. Oh, accountless number, \nKnowledge base Last number. So we still have some examples of numbering but with very old approach where we \nhave something like entity last number and entity code mask. Code mask. Yeah, we have for account coding mask \nand count last number. So the correct answer here for this test is something called mask something last number \nthis one. And this set of system settings was used years before. We had auto numbering feature as a default value \nat object properties.  \n  \n  \nSpeaker 1\n \n Now we use the sum default values for real t classic types. So we used it here columns code autonumber and we \nuse the auto number prefix number of digits and that's how this numbering can be implemented now in current \nenvironment version. But for previous versions it was a bit different and we had to use couple of system settings \nand special code that should be used to generate number. So we have to answer this. Okay, which tools could be \nused for proper transfer of configuration modifications between environments? So in order to test and to run at \nproduction. Tushar, thank you. Thank you. You will receive all video recording homework and all necessary \nreferences and messages. No worries Tushar, thank you. And also you will receive proposal to pass our feedback. \nSo to provide some feedback from your side, it will be really important.  \n  \n  \nSpeaker 1\n \n Thank you to. Okay, so proper transfer of changes target database. No, no, we can't replace the database. Replace \nexecutable files. No, we can't do this. Export in configuration section. Let me show you what it is about. Here is \nconfiguration section. Here is export action. Okay, this is a valid way to export your package, especially for classic ui. \nIt's totally correct. Workspace console quite old utility but still working. So. Yes. And in real exam you will also face \nclio utility option here. So this is also correct. Clio is correct way to export and import section settings between \npackages. So we practiced with it yesterday. Install from file in application hub. Yes, it is also correct. We used it to \ndemonstrate how you can manually load your packages to some test environment. So this is correct.  \n  \n  \nSpeaker 1\n \n I have a quick question about the multiple choice questions, if that's okay. Yes, yes, please. So is it basically all or \nnothing? So say if it's a Multiple choice of 5. Say for. For this example here, say if we only pick two, does that just \ncount as being incorrect or is it somehow weighted? Do you need all three? If that makes sense. If in this question \nyou pick only two, it will be treated as incorrect, unfortunately. Okay, perfect. You have to select all correct options, \notherwise question will be treated as answered with mistake. Yes, I agree it's a bit tricky, but there are not so many \nquestions where you will face so big amount of options. So let's move on. Two developers Work with the same \ncreation.  \n  \n  \nSpeaker 1\n \n In general, it's not so good and it's not recommended because they can temporarily do some violation like you made \nstart to compile and another developer will see hanging of the website. So this is something that it's better to avoid \nand interfere with other developers. So this is correct Option is not recommended. So not recommended Other \noptions like submitting changes of svn, it's also not true. And to publish and develop an environment Interfere can \nwork when publishing users will not interfere. No, this is not true. So let's move on. I need to tell you that in total now \nwe have the test which includes different categories. Here you can see name of the category and different \ncategories have different number of questions. So in total our test has more than 120 different questions.  \n   \n Speaker 1\n \n But for this test you will always get random 28 questions from different categories. It means that if you want to \nprepare better, you need to run this test more than once. I recommend you to start it five or 10 times. So you will feel \nmuch more confident when you will see all different questions and when you will know for sure and you will practice \nwith answers. So it will take some time, but this is how you can prepare better for the test for the exam. So this is a \nquestion about SQL and in our certification we think that SQL knowledge is also important to be a good creation \nexpert. That's why we ask something like this. So what are the difference between truncate, table and delete from? \nSo truncate is used for triggering delete ignores. No, it's not true. There is no difference.  \n  \n  \nSpeaker 1\n \n No, it's not true. When truncate is called table is completely cleared and deletes every record separately row by row. \nYes, this is true. This is difference here. Let's move on. Object should be used as parent object. So any virtual it's not \ntrue. Not recommended to specify parent not true Base object and some of its child items. Yes, this is true. So main \nidea why we use inheritance is to get parent object structure and event handling so behavior. And that's why we \nalmost always use inheritance from base object because of getting standard columns and standard behavior. So \nlet's go on. This question is about package architecture, not a package component. This is about knowledge of what \nis part of a package and what is not part of package. So definitely not a package component is embedded package.  \n  \n  \nSpeaker 1\n \n The reason is that packages cannot be embedded into each other. So packages cannot be included into another \npackage and embedded packages are not allowed. Not a package component. Schemas means objects, client \nmodules, processes they are package components. So not correct. Data not correct. Scripts not correct. External \nlibraries not correct. Change log files correct. It's not a package component. In real exam, your question will be \nopposite, so you should be careful with opposite questions. So you should read it. Answer exactly of the question. \nPurpose of SQL scripts from package architecture we discussed it. We made a couple of scripts ourselves and you \nsee we have a delete script for example create a view script, for example. So we already have some experience. \nLookup records. No basic configurable items, no arbitrary scripts for some changes in the database. Yes. Let's move \non.  \n  \n  \nSpeaker 1\n \n One more package architecture question. If you do not specify dependency in the package, what will happen? \nPackage cannot be fixed in version control. No, it's not true. Functionality will be available. Parent first version of the \nproduct will not be available in this package. Yes. Configuration items cannot be created. No, it's not true. If your \npackage has no dependencies, you can create some items inside, but you will not be able to use parent base product \nfunctionality. So dependencies are about this base product functionality. Okay, let's move on. Next, what is the \npurpose of data binding tool? We studied it, we installed this data binding tool so we already know how to use it. And \nof course it's not complete queries in the cloud. It's not updating data uploading, no. Data binding elements in the \npackages. Yes. Printables? No. Let's move on.  \n  \n  \nSpeaker 1\n \n This question is about Marketplace applications and this category is on the for advanced level. So we already \nstudied almost all of proposed marketplace applications. So maintenance tools for creation. We installed it on our \nenvironment. Remember here. Here we have for clearing Redis for a start app. So this is example of Marketplace \nmaintenance tools and of course it's restart web application and clear redis this one. Not data items, not deleting, \nnot reading logs standard web services quite hard category because we did not study it so deep and you need to \nmaybe dig a bit deeper into creation documentation. So what permissions to work with odata? Oh, I should tell it for \nyou. So in order to enable odata we should go to special setting of system called operation permissions. We have \ndifferent set of operation permissions enabling functionality for different logic for different users.  \n \n \n  \nSpeaker 1\n \n And we can search functionality for all data access to all data. By default it's provided for all administrators. So \nsystem administrators, yes, you can see single users by default cannot operate without data, so you should provide \naccess for them. And of course we need to use can use our data service operation. And this is not correct. Another \nis not correct. Additional question about standard web services which web service you can use to launch \nprocesses? You already remember we used it when we started our sections and when we started calculations \ncalculate average price. I can show it for you. Let's select some data clear filter all. Now you see here is process \nengine service. As we see this is business process which starts this web service starts business processes. So \nprocess engine service not only from third party application but also from inside of creation.  \n  \n  \nSpeaker 1\n \n How do you use custom types? This is about data contract and data member. We discussed it when we build our \nweb service and when you need to transfer additional data so large big data arguments. You should use special data \ncontract class for this. This is correct answer other is incorrect can't use types this is not true Implement custom \ntype class connect namespace no any word about data contract so this is not true A is True Moving one more \nstandard Web Services question HTTP for OData to create new record we used it in our postman Here is my \npostman and here is example of a post query to create new data record. So the answer is post Obviously this one \nwhen you will run the same query I would say let me show you back and forth. Next you will see that list of answers.  \n  \n  \nSpeaker 1\n \n Now you cannot see it, but usually it's randomized. So in order to make it hard to remember, you see that when you \nopen same question next time it shows you randomized options randomized positions of options. So now post is on \nthe third place and previously it was on fourth place. But it remembers your answers. So if you want to go back, you \ncan see your answers that you provided. If you want to go further, you can switch to any question you worked on. \nYes okay, let's click next. Server side development this category is about some server side settings and \nprogramming and disable file system development mode we need to make filesys file design mode False we need to \nset this one.  \n  \n  \nSpeaker 1\n \n Please be careful Disable file design False Enable file design True you should not mix it this one is correct Entity \nschema query you remember this class? We used it for server side calculations and operating with data Also similar \napproach with client side Entity schema query can be used at JavaScript part with the client side code it can also \nwork if you're interested, you can find other examples. So entity schema query has some features Access rights \nrestriction yes Additional setup of queries like hierarchical queries and paging yes and caching yes so everything is \ntrue here. One more server side question a DB executor so DBexecutor is a Class that is very close for data \noperations and data selection. We used some example of it when I showed you how to use class. Select class to \nread data from the database directly.  \n  \n  \nSpeaker 1\n \n So how to properly use it? This is about protection from memory leakage, you remember? So we have to use dispose \nif you do not use using yes or you can use using operator yes in single thread, yes, but now the documentation tells \nthat you already can use multiple threads, but I would not recommend you to apply it widely. So I'm still thinking that \nusing multiple threads here may cause some memory leakage. So single thread is still correct. Answer in this test \nDocumentation says that you can use multiple threads, but it's up to you. So up to your consideration in this test, C is \ncorrect. Single class Single thread instance usage how to add data to cache storage Multiple choice question this \nand this are correct answers. First two options are incorrect. More server side questions. Method must be called to \napply changes.  \n \n \n  \nSpeaker 1\n \n We did not actually study the entity class and you can study it yourself. You can find a lot of examples like this. I will \nshow you. Go to terrasoftware Web Teresa configuration, Search through all C sharp files for a sample where we \nhave save method. You will find many different examples of working with entity. So I will show you how. In general it \nlooks like you create an entity instance here. Then you do some of its settings like setting column values, setting \ndefault values, maybe saving some parameters. And then finally you do save. In this case, system will perform \ninsert. If you use class entity to select some existing data and then provide its columns, then you may run an update. \nLet me show you some examples for each. No. Yeah, this is example.  \n  \n  \nSpeaker 1\n \n So when you use entity is an instance of an object so in memory and you can use it for data management. But one \nentity may operate only with one data row at a moment. Then you can construct some filters and search for a \ncorresponding record. If you did not find it, then you can do insert. If you find it, you can just provide column values \nand save will mean update. So depending on the status of your class, I mean depending on the state of your class, \nit's possible to run the same method to make insert or update and save. An entity is quite useful class because it \nsupports events, it supports entity events. And if you have something like listening class or you have a start signal, \nworking with entity means that it will be triggered properly.  \n  \n  \nSpeaker 1\n \n So here we have a question about how to apply changes. Working with entity Obviously this is running of the save \nnetwork. Okay, let's move on features. Working with data using entity of course it offers all possibilities to read, add, \nedit and delete. So Entity class can be used for creating records or updating records for selection and for delete. You \nmay find all four examples in Base product configuration using search and File system. What properties can be used \nfor only in edit page? This is for Classic UI and the correct answer is Rules and details. This is about Classic UI so \nwe can go to some Classic UI sample this one client module Classic Page and rules and details. So we have \nmethods now it's called business rules. Rules are outdated.  \n  \n  \nSpeaker 1\n \n So rules and details are supported in Classic UI edit pages only and not supported in list pages or they are called \nsection pages. In section pages, rules and details are not present. Oh, details are here. Funny stuff. Oh my question \nhas to be updated. Yes, it looks like system change from this moment, but this question still thinks that details and \nrules so this is correct answer for this question is outdated. We have to fix this entity schema name Also for Classic \nUI stuff. This one is about object name that is used for current page. So of course the name of the object entity \nschema used for this module trigger field validation in edit pages Multiple choice at least two answers.  \n  \n  \nSpeaker 1\n \n So when we save yes, validation will be triggered when opening page for insert no, but currently we have to review \nthis because when Freedom UI page opens, it also triggers for validation delete no switching focus from field to \nfield. Yes, we are almost at the end and schema must be used as parent for a section schema. So how we can know \nthis? You can go to Classic ui, look at the properties of client module and find Parent object base section V2 this is \ncorrect answer why you need to know this. In some complex cases for Classic UI it makes sense to manually \nprovide parent item and that's why so previously it was important to know such items. Now in Freedom UI it's not so \nnecessary and the question is a bit outdated.  \n  \n  \nSpeaker 1\n \n But for those who work with Classic UI this knowledge I think it's quite actual. So this section V2 is correct here. One \nmore question. Schema must be used as a parent. So this is a client side question Parent for section page which \nmeans edit page. Let's go to our example of Classic UI section page open it. Let's look at its parent base module \npage v2 is used as a template for all edit pages for sections in classic UI. So we have to find here base module page \nV2. This is a parent page for all creation base for all creature Classic UI section edit pages and it was very important \nin Classic UI programming Especially when you manually do some changes in your client modules for Classic ui. \nOkay, one of the last questions here for client side, how to add styles.  \n  \n  \nSpeaker 1\n \n We did not study this. In Classic UI it makes more sense. And in Freedom UI it's also possible but not so practical. So \nlet's imagine if you create new module, it's possible to set styles in less tab. So you can see we have a Special less \ntab, JavaScript tab and less tab. And the answer is that in the client schema, set module styles and less tab. This \none we don't have a CSS tab, we don't have less property, so we have less step over module. This is correct answer. \nNow we can finish. Let's see how good we are. Yes, excellent result. It means no mistakes. But when you will prepare \nfor the test, you will have many mistakes. Maybe half of the questions will be mistakes and you will have 50% only \nfrom 100.  \n  \n  \nSpeaker 1\n \n So don't be so upset because each mistakes, each mistake takes 4% from your score. And when you run self \nassessment test you need to only to see different questions, potential possible answers and practice with it. So don't \nbe so focused on final results. And when you're running self assessment tests, you need to see all variety of existing \ntest questions. Finally, you will get better and better with this test. And in real exam you need to earn at least 85 and \neach mistake costs you just 2%. So if you do seven mistakes you will lose 14% and you will finally get 86 which is \nstill enough to get certified. So in real exam you may do up to seven mistakes. So it's quite fair.  \n  \n  \nSpeaker 1\n \n If you do seven mistakes in this self assessment test, you will lose 28 marks and your final score will be 72. But don't \nworry because your score in self assessment is not so important as your knowledge of answers of and your \nknowledge of existing questions. So that's how you can prepare. Of course you will need to run this test not that one \nor two times. I recommend you to run it maybe five or ten times. So you will become better at this test. And finally \nyou will feel more confident and you'll be ready for the exam. So now our session comes to an end. If you have any \nquestions, please ask me and your Rakhi asked questions. Yes please. We have time today so let's. Let's look at the \nquestions from our participant.  \n  \n  \nSpeaker 1\n \n And here is what this is a question from Rakhi and this is about client side programming and we did not study this \npart. It's about send box Messaging. I can show you where you can find answers about this. I'm sure you'll find it \nquite boring because such messaging made sense in Classic UI and not so practical in Freedom ui. Let me explain \ndevelopment Front end Classic UI send box messaging so we have two types of client side messaging. Websocket \nmessaging, mainly used from server to client, and sandbox messaging which is used only between client side \nmodules. In Classic UI there are a lot of separate modules that know almost nothing about each other and they have \nno reference to each other. There are many situations where such modules need to exchange data between them.  \n  \n  \nSpeaker 1\n \n And for such purpose, messaging mechanism was designed and this is sandbox messaging mechanism which is \nonly working at client side between modules. Between client side modules. There are some technical details about \nit. So just for your reference I will answer. I will provide you the link. But let's go closer to the question. So there are \ndifferent types of client side sandbox messages. Point to point messages which are designed to be triggered and \nthen processed and broadcast messages which can be triggered and then processed in many places. In general, \nmessage means some piece of information that is submitted from one module and then possibly can be like \nprocessed or taken by other modules. Modules have no information between each other about each other. And there \nis a central dispatcher called Sandbox which is capable to handle such messages and properly dispatch them.  \n  \n  \nSpeaker 1\n \n So messages, they have different types and correct answers. Here are point to point message returns an object \nbroadcast messages does not. Yes, this is true. Probably I have to show it as a green color. Yeah, so this is true. And \nsubscribing broadcast message without channel only once. If no, no, no. Find point to point message without a \nchannel and subscriber will get replaced. So this is about point to point messages. This is also true. Broadcast \nreturns an object point to point. No, this is not true. So this is definitely not true. And this is also not true. So we have \nonly two correct answers here, A and C. So Raki, I hope it's clear A C are correct. You can read more about such \nmessages at Academy. This is about Classic UI programming.  \n  \n  \nSpeaker 1\n \n I can quickly show you examples of how it can look like and example of sandbox messaging. So in such messaging \nwe have an initializer. So kind of a person who can initiate this message. It's called publisher. So a person. So in our \ncase it's a module which like Start asks system to run some particular functionality and it means publishing a \nmessage. Message can be correctly described in the body of client module. And we have methods to register and \nthen to publish it. So it's like initialize initiated and ask system to run it. We ask Sandbox. Here you can see Sandbox \nis a central dispatcher who is in charge for processing of such messages. The party who will be responsible for \nprocessing this message is called Subscriber.  \n  \n  \nSpeaker 1\n \n Subscriber is a party, so it's a module which declares that it can process certain messages and it also should \nregister them and then this module must subscribe. Message has its own identifier. This is a text code and message \nwhen subscribed may have a method which will be actually used for getting message data and do something useful. \nSo publisher initiates a message thanks to Sandbox, Subscriber knows about it and gets corresponding arguments \nand performs useful logic. The main reason of such messaging mechanism is that modules are independent from \neach other. They do not know any reference from each other and that's why such mechanism was necessary to keep \nand maintain independence, but make possible interaction between modules Another image from Rakhi how to \ndefine which properties events? It's very old question and you can easily guess it.  \n  \n  \nSpeaker 1\n \n I think we have to remove this question from the test because it was from very early version 7 settings and it's about \nbind config for properties events for events. So A is correct here, but we will remove this question soon. So this \nquestion does not teach you anything because now it's totally not practical, neither in classic UI nor in Freedom UI. \nSo old, very old question for 7.2 or something like this and A is correct, you can guess by events for events you can \nguess the answer. Thank you Rakhi for your interest, for your efforts for preparing for the exam. So you will have \nthree weeks in total. You may run your exam earlier if you want. So for example, if you're really ready with the \nhomework, maybe you can run your exam even at the end of next week.  \n  \n  \nSpeaker 1\n \n So just make sure your homework looks good, run tests several times and then for example, some of you may apply \nfor the exam and run it next week. But in general, usually participants need from two till three weeks and this is time \nquite fair which will be totally comfortable for you to prepare for your exam and then run it today you will receive your \nhomework file and please respond at Please respond on my email with your confirmation that you are ready to or \nyou plan to pass FastTrack certification and I will provide you individual date and time of course, taken into \nconsideration your time zone. So you will get something suitable to your time zone, of course, and each of you who \napply for this will get your homework and individual date and time for the exam session and Zoom link.  \n \n \n  \nSpeaker 1\n \n So you will receive everything necessary in email. And when the proper date will come, I will wait for you in Zoom \nsession when you will finally proceed with your test. With your exam test, you will receive your certificate which will \nbe available for you always at the Academy. Okay, here is my academy, here is my profile. So you will find your \ncertificate when finished. Of course you will find your certificate in your certificates and badges section. You'll be \nable to download results of your test and get the PDF version of your certificate as downloaded file if you want. And \nthat's how our session, that's how your certification will be finished. So, and then this certificate is valid for two \nyears.  \n  \n  \nSpeaker 1\n \n At the end of this period, while your certificate is still valid, you will be able to run recertification, which means \ngetting new certificate by running test only with no homework. So if you want, when you have current certificate, \nyou'll be able to get new one with a simplified procedure. So that's all for today. I thank you for your time. If you have \nany questions, any more questions, please tell me. Yeah, I have another one, if that's okay. Yes, please. It's about the. \nSo it's about the exam. I just. If you wouldn't mind clarifying the difference between Basic and the Advanced. I think \nyou said there's more questions and the weighting of answering incorrectly is different. Yes, the main difference \nbetween Basic and Advanced is that advanced has one more homework task.  \n  \n  \nSpeaker 1\n \n Yeah, and advanced has 28 theoretical questions, while basic has only 25 theoretical questions. So Advanced is a \nbit. Is a bit harder to prepare because of more question categories. But in general they are like similar. So if you \nspend enough time, you will be able to pass Basic or Advanced with the same level of errors, I think. So maybe it's \nbetter to apply for Advanced. Yeah, you can apply for Advanced just from the beginning with so like skipping base \npart. So you can apply for. For Advanced just. Just with the first attempt. Okay. What? There was something else? \nSorry. Now, so how to start an exam, you will get the link and this is a one time link which you will be provided during \nthe online session. So when you will connect to Zoom, we generate one time link for you.  \n  \n  \nSpeaker 1\n \n And unfortunately such links work only once and that's why we have to generate it each time when participants \nwants to pass an exam. Oh yes, sorry. So the. The exam and the going over the homework, there are two separate \noccasions, are they? So one time we'll have a meeting to go over the assignment. Or the homework. And then \nsometime a different time. Then will be when we set for the actual exam. Is that correct? You will receive email with \nthe homework. If you agree to pass FastTrack certification. You just have to respond that okay, I'm planning to pass \nan exam. Please provide me exam date. And from this moment you can start doing your homework. And you can do \nit fully offline. So no any connection with the team trainer. At the real exam, you will have to show your results.  \n  \n  \nSpeaker 1\n \n When we will have online session, you will show your homework. We will see if it's working. Actually, do we have \nsome serious errors there. And at the same time, after checking the homework, which will take just 10 minutes, then \nyou will run your test, which will take all rest time. But usually time is not a problem. And one hour will be totally \nenough to check your homework and run your test. Okay, that's brilliant. Thanks. Thank you. Paddy. I saw one more \nquestion here from. From chat. Maybe microphones. Any. Any questions? Hi, Dimitri. Yes, Tezo, please. My question \nabout the previous lecture. It about the action. We made it to calculate average price. The average is calculate price \ndivided by area, right? Oh yes, exactly. Okay, but when I do the action, the result is not. Not exactly true. All right.  \n   \nSpeaker 1\n  \n Oh, so you are worried about the business sense of this time, of this type of cultivation. Or you have some errors in \nexecution? No, no, the execution is right. But the result, the number, it's not like when I calculate it in phone. You can \ncheck. You can debug and check. Let me show you. So normally, let's imagine we have some houses for sale. They \nall have different prices, all have different areas. So we select any house for sale. Maybe let's fix this some stuff so it \nshould not corrupt our results. Okay, so we have a lot of houses for sale. We can run process for calculation average \nprice. Then we have average price value. But this price is result of summarizing all prices for corresponding type of \nreality. And the same offer type divided by all area of all the objects.  \n  \n  \nSpeaker 1\n \n So in general, it looks like we have 300 bucks. 311 bucks per square foot. So it means we divide it and this number \nrepresents value per square foot, but not per realty item. So not per a house. And you if you see something totally \ndifferent here, or if you see nothing, you can check how your calculation went on. And you can go to process log if \nyou have. Okay, let me show you. Process library. Calculate average price process. You can enable trace. We already \nenabled it Trace. Then you can go to process log. So if you Started your process with enabled trace you can open it, \nyou can see how your calculation finished and you can show trace data after your script task part here. Show show \ntrace data will show you all your parameters including your results of calculation.  \n  \n  \nSpeaker 1\n \n So it looks like this data was the result of our calculation and it looks like more or less close to reality $300 per \nsquare foot according to our current prices and areas. So area is used here in this calculation. And also if you're not \nhappy with this number, you can try to do debugging of server side code like we did with Visual Studio Opening \ncorrespondent average price calculation script here methods wrapper so you remember we did it. And you also can \nput breakpoint and restart your app. Attach your visual Studio to your worker process. We did it during our sessions \nso you can handle and run your code line by line. You can see what actual values are used into this calculation, what \nactual result was obtained. So you can find explanations for everything related to this calculation procedure. Is it \nclear? Basil?  \n  \n  \nSpeaker 1\n \n Yeah, yeah. Thank you. So if you have zero it's very oh so it's quite often happens that you have just small mistake in \nyour process. So if you find that you have just zero there you can go to your average price calculation. And I also \nsometimes do this mistake. So it's quite common I think when you have final show results pre configured page you \nmay just forget to set corresponding parameter here. This average price is a page parameter and AVG price is our \nprocess parameter. So we transfer our process parameter to the page. If you forget to do this you will constantly get \nzero because no data is coming to your page parameter. Such process parameter AVG calculation was generated \nhere and this is our line of code where we saved it. Then it is kept in process memory here.  \n  \n  \nSpeaker 1\n \n Then at next step it will go to page parameter here if you do something so if you lost your data something on the \nway so you will see zero and you should debug your process, you should debug your script task. And we already \ndiscussed how to do this. Rakhi is asking Rakhi yes, you can reply on Monday or whenever it will be suitable. But of \ncourse it makes sense to not take too much time because in total we have up to three weeks of a deadline for fast \ntrack certification. If you are not ready for such a quick start and you need much more time then you can apply for a \nregular certification at Academy website. Regular certification has a bit different homework. It also includes creating \nsections, details, business logic and some server side web service.  \n  \n  \nSpeaker 1\n \n But I think that regular Certification is a bit more harder and it has different variants. There are different subjects, not \njust one realty, there are different subjects. So you will probably take more time to do regular certification. So that's \nall for today. I thank you for your time. If you will find some more questions that you forgot to ask now, please use \nyour my email. I will be happy to answer Today I will send you final email with all fast track certification with all video \nrecordings. And please remember video recordings at Zoom will stay only for 20 days. So if you want to download \nthem, please hurry up because Zoom videos for our first session will expire very soon and each video will expire in \n20 days after the moment of creating. So of course I will save them separately in another location.  \n  \n  \nSpeaker 1\n \n But now you have automation with Zoom and with already prepared links for download. So probably it makes sense \nto use existing links without waiting for me to host the same video somewhere else. And that's why it makes sense \nto download it today. And Basil, if you fail the exam, yes you can take it again. So we can support some like rational \nnumber of attempts, like maybe up to three attempts to run your fast track exam and it's not really hard thing. So if \nyou fail it once, no problem. Usually participants do quite well with their homework and test becomes a bit more \nsurprisingly complex for them. So if you do your homework well and then fail with your test, then you can apply next \ntime maybe in several days running test only.  \n  \n  \nSpeaker 1\n \n So your homework, if you do it well, no need to do it again for the next exam, yes you can take it again. Thank you \nBasic for your question. So if any other questions please tell me. I will do my some final preparation step to \ndownload everything to file system to submit to version control. And thank you very much for your time. Yes thank \nyou Andres for your feedback and also so I will wait for your answers for your response on proposal to start fast \ntrack certification. Thanks a lot for your time for your dedication and efforts with studying the platform. It was my \npleasure to provide such training sessions for you. Hope to see someone from you at our exams. Have a great \nweekend. It was hard two weeks for you to study abroad. So thank you very much for your time.  \n  \n  \nSpeaker 1\n \n Our session is over. Thank you and goodbye. It.  \n",
  "sections": [
    {
      "title": "",
      "content": "Speaker 1 Today is session number one of our development on Creation Platform Guided Learning. My name is Dmytro and I'm from Creation. So working as a trainer for many years and working in Creation for more than 18 years and quite a lot and I plan to share some experience and Creation development basics with you. So we have a set of sessions, 10 sessions are planned. Each session will take from two to maybe 2.5 hours, so it will be more or less easy to include it into your daily schedule. For such two weeks. Each session will be finished with the video recording, so you will have videos that you can process and even if you miss some sessions, you can watch videos and do all of the exercises yourself. Speaker 1 At the end of the course for some of you who would like to we will perform individual development certification. So it's kind of exam where you can show your skills, you will make your homework, prepare for the test and finally some of you will become certified Creation developers. It is expected that in order to become a developer you should have some experience in programming in JavaScript in C and also some experience with the database will be a great plus. Today we will do first steps of our development career, so we'll discuss how general development is recommended to be performed in Croatia, what are the environments, how to set up our own environment and also we will probably switch our own environment in a special mode which will enable full available set of tools for developer or creation. Speaker 1 Then we will work with packages with version control and enable git integration. Next sessions will include working with object model, making data items, using some bit advanced examples of working with object, connecting it with database views and so on. Then we will switch to work with UI user interface. I will tell you about new Freedom UI user interface and Classic ui. I will explain different differences. We will mainly focus on Freedom ui. Some examples will also come with older legacy classic UI stuff and we will do some programming in client side. We will work with actions with buttons, programming our own handlers, making business rules, making validation and do some other things in client side. Speaker 1 And then when finished I will show you server side programming in C Sharp and server side includes programming with data model, working with database, writing your own C scripts, making your own classes of course integrating with modern powerful tools like Visual Studio or Rider and I will show you how to debug, how to process object events so how to do different server side things. Then we will work with classes with web services moving towards integrations. I will show you different examples and also we will see standard integration tools that are available on board of Creature Platform So you will see odata, you will see data service. I will explain how to call third party web services from Creature and we will talk a bit of creation, maintenance and some supporting tools like Clio Utility. Speaker 1 I will show you examples of working with Clio of its functions and explain how you may improve your experience and in general how you may do your actions more efficiently if you operate with Clio. At the end we will take some time to prepare for the exam. I will explain you how homework looks and what it includes and how to perform this, how to prepare for exam test and finally I hope some of you will be ready to get certified. We call it fast track certification because you spent probably two weeks for our developer sessions. Then you will take probably two or three weeks for preparation for the exam. Then we will have individual sessions with some of you to check homework and run exam tests and that's how you will get your certificate. And creation certificate is valid for two years in case. ",
      "page": 0
    },
    {
      "title": "",
      "content": "Speaker 1 If you have any questions, please feel free to ask at any moment of time in chat or using your microphone. Whatever works better for you. Today we are doing first steps on Creature platform, so I probably need to explain what it is in very general. So Creatio is a website heavily connected with the database and it's mainly designed to work as an enterprise level data management system and business process automation system. It has a lot of different functions inside. We will study some of them and also what you need to remember first about Creature. This is very flexible system so you can easily set up new entities, you can easily change the shape of existing items. You have plenty of no code customization tools which actually do not require any special developer skills. But also it has settings that can be used with programming. Speaker 1 So it also allows you to program and make more, let's say complex and more efficient solutions on the same platform. We will study how to install it, how it's recommended to work with it, how to make a local environment and a lot of steps with our 10 sessions training. In case if you have any questions or you have some expectations and you would like to know will we cover some specific topic then please feel free to ask and here with you to make everything as clear as possible, we will start each session with your questions and also if you have some questions after making your homework also please note them or maybe just prepare at the beginning of each session. So I will also really happy to hear some your questions or feedback about your practice. Speaker 1 So don't hesitate, don't feel shy, even if you understand that Your question is very simple and silly. Don't worry about this. We are gathered here just to know more and know better about creation. My task is to help you with it. So first of all I need to tell you a couple of words about organizing of development process. Generally, let's imagine that our customer may have just one single environment. One creature system can work as production environment and some slight simple customizations can be done just directly on production environment without need to run anything else. But in case if you go a bit further then you will realize that some customization may be quite risky or cannot be done very quickly. So it's not a good idea to treat your users with non working stuff for some time. Speaker 1 So in general it's much more safer to do some development, especially if it's complex development. Separately from your production environment we have Academy website which has plenty of interesting articles related to creation, customization and development. Academy.creation.com Most of you already registered here because you registered for the training session. Okay, everything is off necessary on. Okay, let it be. So I already logged in go to Academy. Yes, already logged in guides and we have a lot of documentation. Mainly we'll be interested in development documentation, but also will look at some other articles. So I need to tell you about recommended development procedure, probably this one. So this simple picture illustrates and shows how it's recommended to develop Croatia projects creature platform solutions. So we have developer environment which is a separate one and it's designed to be used for developer purpose. Speaker 1 So developers can do some experiments, they can do some tries and they finally make some changes to the system which include functionality that customer asked and explained how to so how it should work. Solutions made on developer environment can be easily exported into files and then we will have another environment which is called pre production or simply I call it test environment. Test environment is necessary to check your solution to load it and make sure that it works just as planned. If it's not so successful, we go back to developer environment, make some checks, fixes, export our solution again, import again and check it again on our test environment. Speaker 1 ",
      "page": 1
    },
    {
      "title": "",
      "content": "Finally when we decide that our solution is good enough, then we can go to production environment and choose proper moment of time to load our settings like the time where minimum of our users are active and then the same way as we imported solutions on test environment you can easily import it on production, also taking care about backing up existing settings. And in general it's recommended to have some backups of your production environment. So that's how you will make a delivery from your development Stuff after testing to production. As you can see, it's recommended to have three different environments, three different creation systems with a separate website, separate database. And it's something that is recommended when you build complex implementation projects. If your customer asks for a very simple customizations and you agreed that probably so many environments are not necessary. Speaker 1 So you can also do this, but this is at your own risk. Sometimes you can do customization and finally you may do some changes which you would like to revert. But in creature revert of changes, sometimes it's not very easy and sometimes it's really hard and was not designed originally. So please take care. Any development I think should be safe. And that's why separate environment is the best choice here. Separate environment also means you have to deploy it somewhere. A lot of our customers prefer to run production and test environments in the cloud. When I say in the cloud, I mean in creatio controlled cloud where you have your website address, login and password. And server side of creatio is kept in t take. It's let's say cared, but cared by creation cloud engineers. Speaker 1 So server side machines, their licenses, database, all connections and other things that are very technical related to organizing of creation working. So everything is managed by creature cloud engineers. And that's how most of our customers work with production and test environment. But what about development? It's better. And it's recommended to have a local developer environment only in a local environment you will have full set of available tools, full set of features that are useful for developer. And that's why so I will explain more in details. Developer environment is recommended to be set locally and also separately for each developer. For example, you have a team of three developers. Each one wants to do something and make customization of the same project. It makes sense to organize separate developer environments. They will have separate websites, separate database. Speaker 1 And of course, as they work with a single project, they will naturally need to exchange settings between each others. So they will need to see. Oh, sorry, this one is probably here. It's my tool to make some draws for you. Okay, so I just want to say that if you have a team of developers, they will need to exchange settings. In this case they will so direct exchange of settings between developers. So something like this directly is prohibited. So you cannot do this and it will not work. So on a regular basis it's better not to try. And the best recommended option how to exchange settings is to have a separate repository. It's possible to use different types of version controls. The most popular for now is git. But also it's possible to use others like svn, tfs and other types of version control. Speaker 1 First developers should submit their changes to version control like this. Second developer will get changes from version control and vice versa. And version control will keep history of all the changes and it will help us to understand who did changes when it was done, what were the previous state of files, and so on. So version control makes a great job in analyzing our code and helping us to understand how project moves on. And also it's quite safe in case if you did some incorrect changes, you can easily roll them back and get previous stable conditions. So version control is recommended and it's not even recommended, it's mandatory to use if you run team development ",
      "page": 2
    },
    {
      "title": "",
      "content": "Speaker 1 So don't worry, we will do this and I will explain and you understand how to work with it. But first of all we need to make our own environment and to see how we can do first steps. Speaker 2 Could I ask a quick question before we move on? Speaker 1 Sorry. Please, please. Speaker 2 So to see here on this diagram where we have they all have separate databases. Is it strongly recommended to follow that structure? Or could we have each of the application servers working off the same database server? Or is that kind of not really recommended for development? Speaker 1 Think that if you have different websites you must use different databases. But in some cases, for example, you have one developer and couple of analysts. Yeah, and you would not like to create a separate environment for each analyst because they are not planning to write any code, they do not need some debugging, they probably are not so interested in the file system and so on. So they just interested at no code customization like modifying pages, like building processes so you can find the proper part of system where you can easily do this. So they will mainly use creatio UI to build their part of work. So in this case it's possible to run single environment, including for example developer and couple of analysts. But they have to agree with each other how they will work. Speaker 1 Especially when developer will start to do some compilation or some debugging or other actions that will make their website to hang for some time. So the main reason why it is not recommended to operate as many developers with one site is such operations like compilation, like debugging and other scenarios where a website will be, let's say, will look like it's hanging and not responding if all the team is okay with it and such developer actions are not performed too often. Then it's possible to run single website with many customization. So many analysts and even several developers inside. Speaker 2 Thanks Maria. ",
      "page": 3
    },
    {
      "title": "",
      "content": "Speaker 1 Thanks Paddy for your questions. So let's move on. We already know how it's recommended to organize your process. Sorry, sorry here and how you should use. And no delivery management here. So you have to include. I think three environments is like optimal one sometimes for big customers, for big projects it happens that you have even more than one test environment. And also I just forgot to say that test environment should be a recent copy of production. In this case your testing will be the most accurate. It will represent what is actually going on and how your system will behave after you load your changes. So it makes sense to update your test often as a copy of production. In this case you will have the best matching results. Speaker 1 So you will see exactly the same of what you will feel at production when you install your solution. So let's move on. We need some local environment. Why? Because we are developers, we want to make our own first steps and we have serious reasons to make this environment local. Technically it's possible to do development in production or sorry in cloud conditions. So it's possible to do some programming, but it's not possible to debug server side code. It's not possible to access file system if you work in cloud. And also it's not possible to use git or other file system oriented version control systems to make a full team work. So you have a lot of reasons to use local environment. That's why I will show you now how to install this local environment. Some of you who already read today invite email. Speaker 1 You probably have necessary files and maybe you even installed your system locally. But generally this is not easy. Procedure. A lot of participants of our training sessions usually face some troubles and difficulties during this installation. So I plan to show you like from the beginning to the end how to install creatio locally. I will use File System Management Tool, it's a part manager, but you can use other tools if you want and you can use like Windows Explorer if you prefer it, and so on. So what we need at the beginning we have to work with. So I recommend you to work with Windows. It's also technically possible to run creation on Linux, but I think it will take longer, it will take more time for us and more very specific Linux settings. Speaker 1 So I prefer to keep it easy, especially as we are beginners. So to run Creatio on Windows, I'm using Windows 10 Pro. You can also use Windows 11 Pro if you use Windows Home, Windows 10 or 11 Home. So you should understand that it will be not fully working, so you will experience some serious difficulties. And the main effect that you will face is when you operate with Creature tabs, for example this one. Then you for example want to duplicate pages or you just need to go to other specific tab which opens as a separate page like this one. So in Home, in Windows 10 or Windows 11 Home, creature will hang. So such pages will be hanging until you close previous ones. Developers explained me that it's connected with the resources of websockets that are very limited in Windows home website in ",
      "page": 4
    },
    {
      "title": "IIS.",
      "content": "Speaker 1 So WebSocket connection is used and there are some troubles on version home. So you should expect if you use this type of Windows and Windows Home, then you will see problems and you will only be able to operate with one tab at a moment, which is definitely not so comfortable. So now you warned about it. Okay, so I have a Windows PC. Generally it's important to take care and just check that your power of your PC is good enough. In my case, as you can see I have a cpu core i5 12 cores. I have 16 gigabytes of RAM which is good enough. And if you have eight or 10 it also will work. But if you enable all the features and if you start all the tools, probably you will run out of RAM. Speaker 1 ",
      "page": 4
    },
    {
      "title": "",
      "content": "So 16 is good and 8 is like minimum that you can look at. SSD Drive of course is also very recommended because of general speed. So the most critical parameters are CPU and memory. Okay, so you have one single PC and you can run Creature on this single PC. Croatia has two big server side parts. Database. In my case this is Microsoft SQL Server database, but it also can be Postgres database. You can run Postgres for Windows or you can run Postgres for Linux. So it's up to you. And in my case I'm running Microsoft SQL Server and I recommend you to use Developer Edition. Developer Edition is free for developer needs and personal developer needs. So in my case you can see I have a SQL Server Developer Edition. So I recommend you to use this type of SQL Server. Speaker 1 I do not recommend you Express because it has limitations on amount of CPU cores used by server, amount of RAM and the size of the database. So Developer Edition works the best. So we have Database part and we also will manage Web Server part implemented by Internet Information Services. This is part of Windows and this is also one of the biggest component of the system. So in general we have two big server side components Database. So standard Regular database and iis. Also we have some other tiny components. I will show you all of them and you'll understand how we can make creation from scratch, how to install it at our own environment. In case if you understand that you have no chance to install creation locally. Speaker 1 Maybe no permissions, no hardware, let's say powerful enough to run it or some other technical reasons, or no permissions at your machines and so on. But you still want to practice this creation, you can go to creation.com website sorry, this one probably have to log in there and then you can request. So you can ask for a trial environment. Try it free environment. I recommend you to use Studio because it will be the fastest one and it will work for you for two weeks. Then you can extend this time if you ask for help at support team. So it will be probably enough to make some of your experiments your practice. And this is very easy. Speaker 1 So you can just try it free and provide some data about you and in minutes, maybe in a minute system will create a free cloud trial environment for you which will be available for you if you log in at Creature website and then follow. And so you will have URL, login and password for your trial environment. That's how you can do it easily and practice this creation. But if this will not work, I also can create an individual demo website. Some of you asked for it and individual demo website will work for you probably a couple of months. Also based on the minimum product based on Studio product. So okay, we have a start PC, enough cpu, enough ram, what else? We need documentation of course, because without manual I think it's quite hard to install creation, especially if you do it first time. Speaker 1 So let's go to academic guides. Then it will be about setup and administration and we have a set of articles related to on site deployment. We have a general deployment procedure which I recommend you to know to look at and I will also post all necessary links into our chat. This chat is also recorded the same as videos and also we have captions recorded. So you will have a closed captions text as well. Especially if some of you maybe who are not perfect in English, they will need such captions which will make it easier to understand what we are talking about. Okay, today we're talking about installation of Creature locally. And the main reason why we need it is to enable full available developer tools. Speaker 1 Working with the cloud version, you will not have full set of developer tools, you will not be able to use git, you will not be able to perform server side debugging, no access to File system, so quite serious limitations. And Local system has all such features for you. So what we need to do at the first step we can follow all of the general procedure steps here. So I will do it step by step and explain how we can do it. One of the components which we ",
      "page": 5
    },
    {
      "title": "",
      "content": "need to use at our creation is Caching Server and in creation Caching server implemented as Redis software. And if you go to look more about Redis installation, you will see Redis installation for Linux. Speaker 1 You can also install Redis as an image in Docker and unfortunately this is not set so you cannot easily find it in our official documentation. You can also use Redis or Windows and Redis for Windows is recommended on Developer Edition or Developer Environment. You can consider by your own would you like to run it for test and production. And the reason why creature technical writers and developers do not recommend Redis for Windows regularly is that it has a version less than Redis for Linux and also it's considered as less secure. But in my case I think it's not a big issue. So we can afford easily Redis for Windows and I will show you where we can find it. We can search Redis for Windows and we will find some solutions. Speaker 1 And one of them is Redis for Windows at GitHub made by some Poland guys T Porodowski and the current version is a bit older, but still good enough. So what you need to do is take this MSI file, download it. So let me show you and then you can install it. The question from Paddy, is it possible to run Redis on Windows subsystem for Linux? Yes, you can do this. If you want you can do this. But once you install and run Redis for Windows, you probably will not need to do anything else. Redis is trouble free software 12. It's tiny, quite easy and creature you just only small part of available Redis commands, so it in general will not raise any issues for you. Speaker 1 So what you need to do is to download this MSI file, I will copy link address for you can download it, then you will find it on your disk. Then you should make sure you're running it under local administrator privilege. And finally after installation of all Redis settings, by default you will find C program files redis and this is all what Redis saves on your disk. So this is just set of its files. And that's how Redis is working. Redis is a high speed memory storage which works as a caching server for creation. And Redis is required component, so you must install it and by default it has good enough settings. And if you really want you can go to regis Windows Service conf file regis is installed as Windows Service. Speaker 1 So you can go to its settings and if you want you can change some parameters like login level. Default login level is notice. So it's like moderately verbose, not so verbose. You can change log file position, you can change maximum number of databases allowed and so on. But out of the box settings for Redis is good. So you can just keep it as is and it will run with trouble free. You can check that your Redis is running. If you go to services you will find Redis Server. This one it's running. The only known issue about Redis is when you install it, you try to run it as service and it doesn't start and immediately stops. In this case all you can do is to uninstall it and make sure you have administrator local administrator privilege and install it again. And that's what you. Speaker 1 So the only possible issue you may have is Redis. Once you installed it's running so you will have no troubles with it. If you prefer to run Redis with Windows subsystem for Linux or inside Docker, you can also do this. You can take original Docker images for this and original website is Redis IO. Redis is developed by Community. Oh, they have some new updates here and Redis has Community and Redis has a lot of comments. So let me find products cloud, they changed their website. Now it's hard to find all the comments probably here. Yes, we probably have more than 100 or even 200 of Redis commands. You see a lot of comments including cluster management and so on. Croatia uses probably 3 or 5% from this stuff. And this is official documentation and I think that you can just use. Speaker 1 ",
      "page": 6
    },
    {
      "title": "",
      "content": "Let's see, do we have anything with downloads, what else we have here? So now you can see Linux version for version 7 and Windows version 5. But it's still good enough. So creation doesn't use too much of new Commons. So Redis is trouble free. You should not invest too much time into it. You just install it, run it and then you maybe forget about it because it will have no troubles for you. Caching Server is okay, we downloaded and installed it. I already did it on my PC. You saw Redis Server is starting as a service. It's working normally. I used all these default settings and that's why no any changes. So let's move on, deploy the database and so on. Now we have only our PC this is a Windows PC and we need creature installation file. Speaker 1 This file is distributed as a big zip archive file. Let me explain what does it mean? So invite email you have chance to download such zip archive file and depending on the platform, Windows or Linux and depending on the Target database, Microsoft SQL or Postgres, you may find the three different options. The only one option was in our email. The most popular is version 4 Windows and Microsoft SQL. But in case if you want to run it on Windows with postgres or on Linux with Postgres, tell me I have another links for you to download. So you will need this big zip archive file to install creature locally. Such file has its own name including version number. Usually it has a zip extension and it has quite big size, about 1 gigabyte. Speaker 1 So you see this is a zip archive with 1 gigabyte and it has several maybe thousands of files inside. So what we need to do, we have to take this file if you for example start some new project maybe year after we finished today's session. So of course this version will be outdated. You should remember about recent new versions. And generally if you need to install local system and you need such file, you can ask for help at Support team support creation.com they can share such file for free with you according to your needs. According to the target website and website type Windows or Linux and to target database type Microsoft SQL or Postgres for some exceptional cases we also have Oracle versions. Speaker 1 But in general I recommend you to focus on SQL or Postgres because they are the most popular and I think the most attractive for solving your customization needs. So we have this file. I already downloaded it from inner creation sources. So this file is on my disk. Now I need to unpack it into some folder. So let's make a folder I will have this kind of folder and this is new folder on my disk. So physically it will look like this. If you get used to work with Windows Explorer so you can create your own folder, please note it's important to create your folder not in Windows protected area, not inside of init Pub, not inside of program files, not inside of Users or Windows. So I recommend you to create just another folders for your creature website. Speaker 1 The reason is quite serious because if you deploy your creature somewhere in Windows protected folders, you will experience additional difficulty with access of creation app to its own files because Windows protects it especially when system needs to modify such files. That's why I created my own folders. I keep some kind of structure of several websites running on my PC currently I will actually stop any execution any running website. This one also will be stopped to release some memory and CPU resources. So I created a folder on my disk D1 which will keep information which will keep all my website files. So I take this zip archive. Thanks to File Manager automation, I can easily unpack all of the contents into this folder. Speaker 1 If you use Windows Explorer, you can also do this unzipping automatically and it will take some time, probably up to ",
      "page": 7
    },
    {
      "title": "",
      "content": "one minute thanks to fast SSD on my disk, on my PC in total creation codes more than 20,000 tiny files. That's why this unpacking will take some time. But in general this is just one time step and not so difficult I think. So we will finally have all the items ready. Inside of this zipper guide file you can find DB folder. This DB folder includes backup file. Sometimes beginners do mistake so they think that the same backup file can be used for different types of databases. It's not true. If you have Microsoft SQL Server backup file it has bug extension, then it will be only applicable to Microsoft SQL Server database. Speaker 1 You will not be able to run this bug file for Postgres oracle if you're interested. For example, in Postgres database you should take another installation file. If you need it, I can share it with you. For example, this one is for Windows and Postgres. You will see DB and you will see different size twice less than Microsoft SQL and different extension backup against bug. So we can see that postgres has a different structure of backup file, different size and different format. So it will be not compatible. And that's why please take care if you need installation creation on Microsoft SQL you should take corresponding source file. If you need it on postgres, you should take another installation file. We unpacked everything into one folder and our manual tells us to think about the database part. We have a manual for database server installation. Speaker 1 I expect that you already installed your Microsoft SQL Server and some management tools for it. The best one is Microsoft SQL Server Management Studio and also I made some preparations on my SQL Server properties. Let me show you what is important here. So let's go to see its properties of SQL Server. Then switch to security and by default your SQL Server is installed with Windows authentication only. It means that users can connect to this SQL Server only with their Windows credentials. Creation developers prefer to use SQL Server and Windows authentication because it gives you some chances to use a login and password without any connection with Windows sessions. And I also prefer to use SQL Server authentication but it's up to you. And if you want to keep Windows connected only, you will have to make additional settings at your application pool. Speaker 1 If you want to use this SQL Server and Windows, you can switch. But also you should remember once you switch this option and press ok, it will work only after you restart your SQL Server. This restart is a special action for SQL Server. Don't forget about it if you will change authentication settings for your SQL Server. In my case, this is already done and I already have my SQL Server. I connected as local administrator user. So now we have to follow this Microsoft SQL Server procedure and we will restore database from backup file. I will provide all necessary links for you in our chat and then I will demonstrate how to do this. This is not very difficult, so let me show you. We have original backup file in DB folder. This is our back file. Please note it has very old name. Speaker 1 Maybe 10 years ago this product was called BPM Online and from that times this file name is still generated with these words. But of course physically this is creation. So we will use this backup file. How we'll use it very easily. Go to Microsoft SQL Server Management Studio Database right button click restore database from file from device and we have to select what file should be used for this. So we will go to our folders where we installed unpacked our archive. This one I'm using the latest version 8.1.3. Most of you who also downloaded Zipper downloaded Big zipper car files. Probably you will also face the same version 813, maybe a bit more so a bit older, maybe a week or two, but it will have similar set of functions available. Speaker 1 Okay, so we select this file, click OK system recognize that this is a valid backup file and we have to specify database name. So we have to provide database name. I prefer some naming conventions here. So I will call it D1 Studio. But you may name your database whatever you want. But it's recommended to avoid dots in database name so anything ",
      "page": 8
    },
    {
      "title": "",
      "content": "but dots are not recommended. D1 Studio will be a good name of my database. No any other settings here? So I can just click OK and system will thanks to my SSD recover it really fast. So my database was deployed and now you can see it's restored here. There are some additional steps that must be done for the database according to connection of users for it. And I will show you what additional steps must be performed. Let me show you. Speaker 1 So here we have to think of how creation website, how creation web app will connect to the database. We need to go to security logins and then we have to make a login for our connection. We can make a new login for it and we can call it something like SQL Server Authentication Login, namely D1 Login. Let it be so D1 Login will be our login name. Login name is name of credential where you try to connect to your SQL Server. Of course we need to provide password the same as login. It's just to make it easy and enforce no password policy. We don't need it because otherwise password expiration will bother us from time to time. So it will stop normal work of creation. Just keep it quite safe even without any special policy, no any special settings. Speaker 1 So we can just click ok everything else by default. That's how I created new login for my SQL Server. Then I have to go to my database, find its security tab users and then I have to add user with the same name. This is my username, the same as login name. And the only special setting I must do is go to membership and click DBoner. This is very important setting because it will grant permissions for this user to do any operation in this database including creating tables, modifying any data objects. So we will have a full say full power of administering our database. Okay, then we click ok. So that's how we added user to the database. At this step our database preparation is over ",
      "page": 9
    },
    {
      "title": "and we can move on with our next part of this journey.",
      "content": "Speaker 1 And it's about enabling all necessary Windows components. Please note that this part is the most tricky and a lot of beginners do mistakes here. So you should take it quite serious and perform all recommended steps here because there are no optional items. Everything is mandatory here. So let's do this. Windows Components Microsoft Visual C I can check my apps and features so I will try to find Microsoft Visual C redistributables. It looks like they are all installed and I guess that I got it from installing of Visual Studio so I did not install them separately. But if you have no Visual Studio, you should care about installation of such components because they are required. IIS is a web server Internet Information Server of Windows. So we have to enable it. We have special components here, Net6SDK and. Net framework SDK. Speaker 1 We have all links here. Now you can see that this and these are direct links. So let me show you what you will see. To try to download you have to choose version 6 and according to your platform it's Windows X64. So you should take this one, click on it and download. Make sure you have local administrator Privilege and that's how you will work with it. And the same dotnet framework SDK. So both components are required, you must install them. Otherwise you will not be able to compile your system. Then we have settings for Windows Server we can skip because now we are running Windows Pro desktop version. So let me find Windows 10 desktop version. How to enable necessary components so what you must remember is that such components are required for normal start. Speaker 1 If you forget about this, you will not successfully run your creation. So you should follow such recommendations and we can do this. So you can find Control Panel programs and features. Windows features on or off. This will show this window and this window. It's usually surprise. It's not overall, but. Okay, let me show you this one. So here you see a figure of how you should set the setting. The most common mistake is such two items at the top here. So you must select Windows Communication Foundation HTTP activation for 3.5 and 4.4.8 so you simply can enable anything. Everything here should be enabled. And usually developers forget to do this. And this is quite common issue of ",
      "page": 9
    },
    {
      "title": "",
      "content": "beginners who face this type. So the who face errors when installation. Then we go to Internet Information Services there are some settings so iOS management console. Speaker 1 Okay, and this one as you can see in the manual, developers of this documentation decided just enable everything. In my case I enabled only what was really necessary here. And one of the most important thing is WebSocket protocol. So you can enable what you see and finally click ok. Wait for a couple of minutes. If system asks to restart, you should restart your PC and finally that's how you will enable necessary Windows components. This is very important step and it's explained in documentation. So I can share the link for this for you. So you will know how to install it. I already did it on my environment. This is one time setting for all my future creation installations. So it's quite enough for me to work with it. So my components are ready. Windows updates quite obvious thing. Speaker 1 So I think my windows is normally updated. I can skip this part and then I need to do some final preparations with registering of my website in iis. There are two ways how we can do this. Registering a separate website with separate port Or I prefer registering of a website as an app inside of default website. I prefer to use this one. Registering of the website inside of default website. It's quite simple. So we go to application pools first then add new application pool. I will name it something like this Studio. This will be my new name. No any other changes. This pool is Started. Speaker 1 If you prefer to run connection to your database using Windows credentials, then you have to go to advanced settings of the pool, find identity and change this identity to some specific Windows user account which you expect to use for connection between application server and database. This is necessary if your database server is set for Windows connections only. I mean only Windows credentials. In my case I prefer SQL Server credentials, so I will not change any of settings. So everything is by default okay. Then we go further find our default website and add application here. This is a very tricky place. Your application alias must start with the lecture, not digit. The reason is that some of creation libraries and angular libraries, it's a JavaScript framework. Speaker 1 They so turned out they are sensitive to the file names and path of the app and if it starts with the digit, some regular expressions are failing inside of the angular and that's why you must start your application name with a digit. In my case it's a D D1 studio. I should select a proper application pool and specify physical path. Now I need to say that creation has two major parts of file system. So we have a root part which is mainly responsible for showing your login page and prepare and create your app for normal work of user session. So loader part and inner part inside of JSON Footballer is much bigger and it's like main application part. So physically we have two parts and when we register our app in Windows in IIS we have to take care about it. Speaker 1 And when we do this first we register water part and physical path should point to root folder of our app this one and okay I copy this path for future. So we register root part of our app, but then we need to remember about its inner main application part. Select our created app inside of default website right button Click Add application 0 alias this is always 0 alias Same application pool and physical path should point to the special folder terrasoft web app this is folder for our inner application click ok. That's how we can register our app in iis. Now our application is not operational so far, but we registered in IIS and then the final step that we have to do so we followed all of this registering stuff. Speaker 1 ",
      "page": 10
    },
    {
      "title": "",
      "content": "There are some also side quests that you may need like settings of different MIME types and so on. But from my experience if you enable necessary Windows components, all the items like this will be good just out of the box so you should not modify it if you perform Windows component settings. So I actually only needed to register my website in IIS Manager and that's all now the last part, the last step is special configuration file which we must modify in order to make our system runnable. In my case, I have a Microsoft SQL Server example. So I will go here and here we have examples of connection files and explanations how to set it up. I will share all necessary links for you. So you will proceed the video, you will follow the text in our chat and you will not forget anything. Speaker 1 I hope so. Let's look in this connection strings file. So this is my folder of my app. This is loader part of it. And the only file system file that I must change to make my creation running is connection strings config file. We can start to edit it. You will see set of sections of this XML file. And first of all we have to take care about DB section. DB section is about connections between application server and database. We have a so called connection string for Microsoft SQL and I need to modify its values to make it correct. Data source. This is my data server of Microsoft SQL. I can use my Microsoft SQL Server network name or simply I can use a local host. Speaker 1 In your case, if you have your SQL Server located somewhere in your network, you will need your SQL Server network name including named instance. So full name in case if you have named instances of Microsoft SQL Server database. In my case, this SQL Server. This SQL Server has a name just a local host and it works for me maybe with non capital. Oh, okay. This is my name of the SQL Server initial catalog is database name. So let's remember our database name is D1Studio. So we will put it here. Initial catalog now is our D1 studio. Save it. Next is quite tricky integrated security SSPI which means we are having Windows authentication. We don't like this. So I will remove this line from the text and instead of it I will Type User Space ID equals my login D1 login. Speaker 1 You remember we did it at the database. And then password equals this is my password for the login. So that's how I can do this. Probably this space is not necessary and nothing else. So data source, initial catalog, user space ID and the password. No any changes with other parameters. So I only removed integrated security SSPI and replaced it with user ID and password. Save it just not to lose any progress. You can find corresponding manuals at this academy article. You will see DB connection and also you will see something with connection or name and password. Here is the initial catalog. Yeah, you can replace integrate security SPI with user space ID and password. And here you can see examples of it. User ID and password. Okay, so we are okay with DB connection. Speaker 1 And one more thing which we must do in case so we must do for our creation installation is Redis connection. So this file also keeps information about how Creature may find Redis somewhere in the network. So host should point to network name of your regis server. In my case this is local host and it often happens if you provide your network machine name, it's not working and you see error message about system failure to find your corresponding Redis server. So in order to fix this you can just provide local host or IP address of your local machine where your Redis is running. So for some technical reasons creature fails to find Redis with its libraries and with provided network machine name. So setting local host here I think will work for you. Speaker 1 Also we have another important parameter DB is number of so called Redis database, but it's more closer to call it storage because Redis storage is a set of key value pairs saved in the Redis memory. And by default redis has 16 ",
      "page": 11
    },
    {
      "title": "",
      "content": "different so called databases named from 0 till 15. And as we keep several creation instances, we must keep such DB numbers unique. If you run several creation environments on the same machine, you must take care to have a personal unique values for each creature instance connected to the regis server. In my case it will be D1 environment and it will have the database number one. Okay, then I can save it. Port number is by default. I did not change it when installed Redis, so now I use it as is. Okay, that's probably enough for our beginning. Speaker 1 One more thing which I recommend you to do, but it's not required, it's optional. One, it's about creation logs. We can go into terrasoft web, find envog, targets config and by default this line number 3 log dir this is folder on your disk where creation will save its logs by default. As you can see, it points somewhere to temporary catalogs. And in my machine this works as Windows 10. I do not like this place because my local Windows user has limitations and I'm not allowed going there. So if I want to look what is inside of C Windows 10, I have to use a specially highly privileged Windows user and I have to switch between them so it's not so comfortable. That's why we can put our logs somewhere else where you can easily access it. Speaker 1 For example somewhere at C creation logs so we can create this folder system will create itself if it's missing. So that's how I do my settings for env targets config, this is optional and log targets Config this is example of my settings and this can help you to easily access such files if you don't like going to Windows temp or if you have limited settings as me working with this folder because of Windows protection. Okay, now everything is done. So save changes and we can start our website. How we can do this? Go to IIS Manager, select our D1 website. Let's refresh them. Probably it will better to see D1 and the first position. So we can just browse this website. Now you can see new I'm using. I'm using Google Chrome browser. Speaker 1 So Google Chrome I think is one of the best for creation because of the fast JavaScript core and you can use also a lot of other Chromium based products and browsers and you can use Firefox, you can use Microsoft Edge and please note Microsoft Internet Explorer is not supported at all. So you can use Chromium based browsers, you can use Safari, you can use Edge. Currently I'm using Google Chrome and I'm quite happy with it. So when we start our environment with this browse action browse you can see that system starts with this type of URL. We can remember it just to have one more shot shortcut D1 and this is our shortcut so we can go there. Yes, it opens so called login page. You should remember that if you install creation locally, you have default login and password for the first input. Speaker 1 First login in supervisor and the same password supervisor. Also you can see at this login page you can see current version number of the app we are running and I can click just log in. If everything was done correctly, you will see after some time, maybe after a minute you will see our application successfully logged in. And probably it's time for us to make a small break, some small 5 minutes coffee break so you can refresh a bit yourself and then we will move on. But please note and you should be mentally ready for this. A lot of beginners face errors when trying to run their own local creation. At this stage where you just start your app, if you have mistakes in connection strings conflict, you will see error messages from the website. Speaker 1 And in case if you have some troubles with setting of inner app here, in this case your login page will be okay. But when you start to provide login and password and then click login button, then you also may have some error messages which will lead to let's say errors during start of your app and you will not see this page. Now let's make a 5 minutes break to refresh a bit and then we will move on. I will show you what next we will do with our installed system. I do not expect that you are following me just right now. I expect that you will probably follow video recording that you received today. So if someone performs the same steps as I do, just tell me, because sometimes ",
      "page": 12
    },
    {
      "title": "",
      "content": "you need to more. You need more time to do this. Tell me please. Speaker 1 So now let's take a break and then we will move on. So next, what I wanted to show you now is about how we can do some preparation of our system. Before continue, let's do some technical things and enable browser console, Ctrl shift I or F12 or you go to this, then more tools, this and then developer tools. Okay, let's enable browser developer console. Now you will quickly realize that it's console quite noisy. You will see almost each 10 seconds some messages here about telephony connected, disconnected error messages and so on. So if you're not planning to handle false in creation now you can disable this telephony, your console will be not so noisy, not so verbose and it will be easier for you to debug client side later. So I prefer to keep this console not so noisy. Speaker 1 And that's why I will show you how to disable this telephone. I go to the user profile, then go to additional settings. We will see some settings for call center parameters and then we can disable call center integration. This will suppress this login, excessive login at our console. So let's save it. A couple of things that I also prefer to do when we perform initial start, this is going to navigation panel, find system settings and there are a couple of system settings that we also would like to disable. Let me show you. We can use search by name, so use filter by name and let's search for something started with show. In general, I need to tell you system settings are low level variables set at application and they are used for different mechanisms, platform mechanisms, product mechanisms. Speaker 1 So they are generally used by creation system. We can find system setting called show widget on login page and we can disable it. And also one more show widget on intro page. It's also better disabled, but this is advertisement stuff which is currently not active. And currently this advertisement only shows you some error messages in your browser. Maybe you will find it at the beginning here. So this widget was not showing. So we can save and disable such widgets. Let's go out now. You will see less error messages here in Your browser and super wiser same password saving it to this site. Okay. And log in. So now we will have less noisy console. We have much more comfortable conditions for work and we have our systems ready. So now you can see our environment is fully prepared. Speaker 1 So looks good and we are going quite fast today. And probably that's because of not so many questions from your side. But. So if you have any questions, if you feel some, let's say uncertainty, please ask me. I'll be happy to answer. So what's next? Once we installed our environment, we need to enable full developer power there and I plan to show you how to do this. And also we need to do some more preparation steps which is quite not so obvious. So let me show you what we need to do now. Speaker 2 Sorry Dimitri, I just. When you mentioned questions, I've just been writing down questions as we go. The same for ",
      "page": 13
    },
    {
      "title": "the Q and A section. So I just have two that maybe I could ask now if you like.",
      "content": "Speaker 1 Or I can hold them all for you, please. It will be interesting because something which is not so boring like just a lecture so kind of dialogue. ",
      "page": 13
    },
    {
      "title": "",
      "content": "Speaker 2 Okay, so my understanding. Sorry, this. We're going back to the database section. When there's two section. There was two databases. We're kind of talking about. We're talking about postgres and were talking about the Microsoft SQL. My understanding is the version of the zip we get with SQL the database doesn't have any test data in it. Is that is my assumption in that correct. Speaker 1 Generally we have two, let's say two options to support our customers. Normally we have no. So almost no test data. It means we will have very little number of useful values. For example, I can show you some data which is quite common for you to expect like list of contacts. So select something from contact. You will see just minimum set of records, like three records or almost no data. And we call it just soft key. So it's like no data. But also it's possible to ask for a special demo version which means we will have some demo records, maybe a couple of hundreds of pre inserted data records, which is good for demos, good for some, I would say building dashboards, analytics reports and so on. And I recommend you to start from the clean database. You will have less data to delete. Speaker 2 The other question and I have you kind of already answered. It's just I was. When I was going through the date, the documentation for the setup, the redis. The redis kind of got into mentioning a cluster but I can see that you didn't actually use it. So the cluster isn't actually I did. Speaker 1 Not use Redis cluster because it's not mandatory, this is optional thing which makes a bit higher overall reliability of your system. But once I'm running just a single developer environment which probably will never experience high load conditions when having hundreds or even thousands of queries per second. So I do not actually need this cluster, but it's out of the box Redis feature, you can enable it if you want and you can proceed with its documents, materials and you can set it up. It's up to you. Yep. Speaker 2 No, that's brilliant. Cheers. Thanks Melin. Speaker 1 Thank you. Thank you, Paddy. It's interesting actually. You can also customize your iis but in my case I'm not running in under high load conditions or I do not need to allow like couple of thousands of users to log into my environment. That's why I do not enable IIS based cluster. So I have only one single application instance and it's okay for me. Thank you. If any others have any questions, feel free to ask it any moment of time. Hi Dimitri. Hello Bessel. Yes, please. Hello, can I share my screen to ask? Yes, no problem. But please note it will be recorded. If you do not want to record, I can stop recording. No, no problem. Okay, please. Please find the share screen green button in Zoom panel and we will see your image. No? Yes, you can see. ",
      "page": 14
    },
    {
      "title": "",
      "content": "Speaker 1 Yes, I'm going to install the SQL Server management. But what of what version exactly I should use on premise developer. Oh no, download. No, no, just scroll down a bit and the left part you will see a skilled developer. So this skilled developer download now. Yes, I think this is the best which you can find here. And developer uses all cpu, all memory and no limitation on size of the database. So you can just download it takes time install it and the only change inside of its installation which I recommend is to switch from Windows to mixed authentication mode. And about Visual Studio, which Community Edition? Community Edition will be Community? Yes, it's also free. You can use some kind of Microsoft credential there and it will be free for free of charge for you. Yes, yes. And the last question please. Speaker 1 I my windows is 11 home. It. It's good. It can be doing the step you are doing. If you have no options to use Pro, you can keep running on home. But there is a strict limitation that you will face and this limitation is running multiple tabs. For example, you have a main tab of your creation. It's okay, more or less okay. And when you enable other tabs or you go for example to advanced settings. This another tab may hang if you do not close first tab. If you close first tab, then another tab will work normally on home. And it looks like it's caused by some limitation of websocket channels. And we cannot easily bypass this limitation, unfortunately. So you should be mentally ready for some difficulties like working only at one page at a moment. Okay, thank you. Thank you. Speaker 1 Okay, thank you, Peso. Let's move on. So now we have more or less okay running Creature Instance and I need to explain you what next steps we will do. So my main next goal is to show you file system development mode. But in the last versions we have some unusual behavior which you need to understand. So if I will just simply follow manuals to switch from original mode into file system development mode, I will get some unexpected troubles which I want to skip. Now let me explain what I'm planning to do right now. Here is my folder of recently installed application. I need to show you some inside parts of it web. Then we go to terracesoft configuration and we search the Bin folder and it's empty. Usually Bin folder includes results of compilation of our app. Speaker 1 Currently Such results are DLLs loaded from the database stored somewhere else. And the application is quite fine running with such assemblies. But when we will switch to file system development mode, system will search for such files exactly here. So we must compile our system before doing any file system operations and before doing any switches between environments. So we have to compile our system. I will click compile button and I will agree. And here some of you will experience additional difficulties. I already fixed it at my own environment, but in your case you will definitely get it. So let me explain. I have an article specially dedicated to this error. So when you do first compilation on your system already agreed for this. Okay, so when you do first compilation, you probably will get this open image. You'll probably get this type of error. Speaker 1 So you try to compile, you have two errors with no file name. It's totally unclear what is wrong here, but you will constantly get this error. So it's not random. It will happen all the time when you try to compile. This is a common known issue and you may know how to fix it if you will go to your log files. And as you remember, we set envargetsconfig to some specific place and that's how we can go to this place on our disk creation logs website D1 and then we have to go to Xero is our inner application logs for today we'll find build log and in case if you have this type of compilation error like this, you will find error details in this build log. At the end you will see some number of errors. You will see error text. ",
      "page": 15
    },
    {
      "title": "",
      "content": "Speaker 1 Now you see this log is still going on because compilation is not finished. So compilation produces some messages into this log file. And if you will get compilation errors, you'll be able to get log. You will get error details in this log. So here the reason of it is some strange behavior from net 6. And finally the last advice and the best advice we have is to go to your Windows, go to System32ineSRV and then Create Folder with the name NuGet and then inside of it create folder named Migrations. I already did it on my PC and that's why it works nice. But in your case, probably you will get this error caused by missing folders on your system disk. And I agree that it's not ideal solution, but it works well and looks safe. Speaker 1 You only create folders, you do not provide any access and it works nice. So your compilation will not fail anymore. It will not show you such compilation issue. This is the link to community Creation has quite powerful community. So this is about compilation error that you will certainly that you probably will have. So I'm sure you will get this and that's how you can fix it. So the solution is just to create the folder this one and I this will help you to bypass and fix this issue. Okay, my compilation finished successfully. Now let's go to File system and check again our Bin folder Terms of Configuration Bin now you see some DLLs result of our compilation creation has server side which is capable so which includes compilable sources. Such server side finally turns into DLLs that can be started. Speaker 1 They include a lot of classes and such DLLs are necessary, so they are vital for creation normal work. And when we will switch now into another mode, which I need to tell you. So we will need these libraries in this space. Okay, so I'm telling you about this mode and I need to explain why we have modes. So when we installed our creature system, we can go to settings, we can get this page, it's called System Designer page. Scroll down to the end, you see advanced settings. You can click here. You open separate tab which is called Configuration section. I already opened it. Okay, so Configuration section, you can also go to Configuration section. If you will type in your browser your application ",
      "page": 16
    },
    {
      "title": "server URL 0 dev press enter. It will also go to this configuration section.",
      "content": "Speaker 1 Even if your main app is broken, so badly broken and it's not working, then you can type this address 0dev and go to configuration and try to fix so what we need to know about modes Creature has two different development modes. One is called Creature ID mode. Let me show you guides development tools and we have two modes, Creature ID and External ID mode. Let me explain what is the difference. Creature ID means that you go to configuration section, you can customize different types of items, you can create any type of items, and you can open any existing tools and settings. So system is quite open for you. You can use its own user interface and make your own customizations. And of course you can also use no code customization tools like Section wizard, like Application Hub and so on. Speaker 1 So you use only UI of creation to build it and modify it. We call this mode Creature ID mode and it means we use only Creature user interface tools. This mode is perfect for beginners and it's also the only allowed to run at cloud conditions where you have no access to file system. Creation ID is relatively simple and it's quite, let's say, well protected. So you maybe will find it hard to break your system using this mode because system protects you from the most obvious mistakes that you can do. So it's quite safe for beginners. But Creature ID mode means you have no access to file system, you cannot use any type of version control except of SVN and you cannot debug server side easily and effectively. So Threshold IDE means some limitations. Speaker 1 ",
      "page": 16
    },
    {
      "title": "",
      "content": "In order to use full power, we have a special mode called External IDs. The main idea is to allow system to save a lot of settings directly on disk into file system and then use external editors to modify such contents. Also you can still use internal editors, you can still use existing tools and open them in creatio ui. But enabling this mode for external ID and saving necessary changes on file system makes it very efficient when you integrate Creature with Visual Studio or other popular powerful editors like webstorm and others. So I will show you how to enable this External ID and how to detect your current mode detection is quite easy. You can go to your configuration section and click on Actions menu. You will see a file system development mode at the top and you will see some gray colored menu items. Speaker 1 If you see gray colored it means file system development mode is not turned on and it means that simply Creation ID is on. Now you can change this mode according to the manual. So here is the article which I recommend you to read and this manual well, explain how we can switch between environments. We need to make corresponding settings in web config file depending on the platform. For NET framework it means iis. On Windows we should search for the file design mode setting. And for the. NET Core or for Linux Net 6 we have to search for another web host dll config file and we will have the same setting there. So we have to make two changes. File design mode must be enabled to true and use static file content must be set to false. Speaker 1 But please remember before you will do any changes, make sure your system can be normally compiled. This is important for two reasons. First reason is to get corporate necessary files in bin folder here software web configuration bin and also second reason is to make sure you have no common compilation issues like I explained previously. So we already performed this compilation. Now we follow manuals to switch between environments. Let me show you how we can do this. We have to go to the outer web config file. So we have root web config file and we have terasort web config file. Two different web configs. The necessary one is outer root folder web config Start to edit it. Go to line number 400 no 510 I already had this folder previously I already edited similar file. That's why my file manager remembered it. Speaker 1 So line number 510 I found file design mode setting. Originally it was false. I will carefully put it to oh sorry, no kidding. I will carefully put it to true and then one more setting must be done a bit below. Use static file content must be set to false. This is also important. Let's search for it. Line number 563 use static file content was originally true. We will set it to false and save. After doing this we can reload our configuration section. And now you will see that change will appear apply and you will see that our actions button. Now we'll include active options for download packages to file system and update packages to file system. I need to explain what are the actions and what they actually do. So original storage of all our customizations. We will study how they work. Speaker 1 Will study what package is what package contents usually includes. So this original storage is in database in set of system tables inside of our database. So it's very important to understand Creation has out of the box big number of data tables. Most part of them are data tables for business entities and business data. But some part with a prefix cis. We have a lot of such CIS tables. They are used by application itself to keep its configuration settings to keep information about all the customizations you do or all the base product contents. So we have a lot of system data also saved in the same database. And originally all these contents comes from the database and database backup that we initially installed at our system. Speaker 2 ",
      "page": 17
    },
    {
      "title": "",
      "content": "Are GUI changes saved in the same database. So say like if I just add some extra information to say a client, is that also the. Say just the. In putting that in the gui, is that also stored on the database or is it stored. Speaker 1 Yes, yes, it's also stored in the database and database is primary storage for this. So when we. Speaker 2 Yeah, and then the only reason I'm interested in, I'm just asking that is how then does that work with version control? Say if you have multiple people working on the same. On the same, we'll say client, I will explain. Speaker 1 I wish I will now explain. You will see that. So originally we have all the content stored at the database. But if we enable this file system development mode, then we have an option to save changeable part of it into files and what we do customizing. So like we make our own changes in this external ID mode. In this external ID mode, everything will be saved as set of files on disk. So now we can do this operation to ask system to save everything which is customizable on disk. So it's called download packages to file system. It means please save everything that system needs to store at file system. In this mode, please save it from database to file system. Generally this action is quite safe and usually it covers all the editable stuff. Speaker 1 In my case, I have only one storage code package for this editable stuff. So it performs almost nothing and it saves some files on disk. We can track what's going on our disk. Now let's go to javasoft web app JP configuration. We have a special PKG folder for such storage on disk. And we can see custom package which was just created seconds ago and the contents of it. So we just asked system to save everything on disk. Then later we will use version control to submit our changes to Common repository and our editable stuff will be shared with other team members. They can easily download it and they can easily move it to their own environment. So that's how you can exchange your configurable changes. But now we need to save it just to make sure we are looking at it on disk. Speaker 1 And in order to finalize our switch, it also recommended. So according to the manual, we have a next step to compile it again. So it looks like we need to compile it one more time. It's Just to make sure everything is working fine and we finishing our switch into this developer mode file system Developer Mode it looks like we have not enough time today to show git integration, so I plan to show it for you tomorrow. At the beginning of tomorrow's session I will show you how to enable git integration and now I'm asking you so usually first day is full of different questions and maybe we have to align expectations and so on. So if you have any questions today, please feel free to ask. I would be really happy to hear. Speaker 1 ",
      "page": 18
    },
    {
      "title": "",
      "content": "So your homework for today will be just reproduce the same steps as I did and install your local creation system. Turn it into development in file system mode. Make sure you can compile it normally and I recommend you to compile it twice before you do any changes to make sure it's compiled and to get executables, DLLs and then after you switched into this mode to make sure that system is fully operational and server side has no any visible, let's say incorrect parts. We will study more about making creation settings. So probably we have some minutes today and when compilation finishes I will start to explain about working with packages and the concept of a package. Now compilation will finish, but I already can start to explain. So what I need to tell you. Creation is a highly flexible system. Speaker 1 So it has hundreds or even thousands of changeable items and most of them are called schemas and we have different types of such schemas. So you can when you hear schema you should understand some customizable changeable item in creation, such items declare entities. For example, we can filter by item type like look only at objects so we can see objects responsible for keeping address data and other objects are very simple and responsible for keeping e.g. Types of accounts and each object corresponds to the database table. Let me show you. So we found some object named account type and we can find account type in our database. And now you can see we have some data and here we have a list of six records of different account types supported at our system. Speaker 1 So objects are related to data model and we have plenty of different objects, but not only objects, we have a lot of other items. Client modules are responsible for page settings. C sharp source codes are responsible for server side classes programmed in C. Data items are responsible for data transfer between environments. When we have some data contents created at developer environment and we need to move it to transport it to other test and production environment and also to transport it to our other team members. Developer team members who also need to see the same data so we have big number of different configurable items. And if you're interested I can also show you how many select count from sum of system table sys schema where we have a big set of such configurable items. You see 500, 5,500 more items. Speaker 1 So it's quite difficult to manage such amount of settings in a list. So developers decided to make kind of big containers for them and they called them packages. And the left part of this configuration section just remind how you can get there. So you go to settings, scroll down advanced settings or you type 0 dev in your browser 0 dev. That's how you go to this configuration section. So you see big set of items and bigger items are called packages. We have quite high number of packages even in out of the box of simple product. Let me show you how many packages we have out of the box sys package system table which keeps information about packages. 140 out of the box packages. And I'm using now the smallest possible app. Speaker 1 It's a studio app which includes only platform version and almost no business functionality except of hundreds of lookups. But in general we have almost no business sections. Business functionalities is absent here. So we have only platform level tools like constructor setting which allow us to build our own apps. It's possible to install or to get out of the box much bigger solutions like sales automation, service or marketing. So Creature also like supports such type of products where customers want to use automation which should be already included. And that's how you may have just quite bigger number of packages just out of the box from your customization when you start. In my case, I intentionally took the smallest possible product Studio and as you can see it's not so small. 140 packages are already on board and we can study them. Speaker 1 Luckily, Creature offers you possibility to look at any part of base product items. You can open any part of its ",
      "page": 19
    },
    {
      "title": "",
      "content": "configuration code and you can see how exactly it was written, how exactly it was set. So Creation has open source of base product configuration. Configuration is a like changeable part of the system. Also we have opposite one which is called Core. Core part is not designed to be changed by customer. Core part usually represents set of files on disk and you can find core libraries in the web Bin folder. More than 200 of different DLLs. They are designed by Creature and are not expected to be changed by Customer or Creature Developer. So on the Creature company creates and issues such DLLs when base product updates. Speaker 1 Of course you will have updated versions of such DLLs so they are not designed to be changed and they perform just low level functions of creation functioning. Also we have client side core parts in JavaScript which is also not designed to be changed and only changes when creation issues new version. So core part is non changeable low level set of tools that are necessary to run your application configuration part which is here is highly changeable set of different items that could be more or less easily changed. And we have out of the box base product set of such items called set of packages. And each package may include unlimited number of configurable pieces. Speaker 1 So the main sense of building packages is to make management of such configuration easier to make possible separate development and let's say splitting of responsibilities, sharing responsibilities and like splitting of all system functions into separate parts. It could be developed separately and transported and delivered separately. So each package should be considered as a box for some items inside you can put unlimited number of items into it and probably it will be interesting to see how many items we have in different packages. So let's do some simple selection. Name from sys package this is just simply selecting list of existing packages. Then we can do some additional calculations. Select count or maybe okay count from sys schema as Whereas sys package ID equals to our P this is our P package LS P and here we will have p name okay. As schemas count Great. Speaker 1 Why doesn't like this should be okay the name this is okay this package. Okay, let's try to run. Let's see what's wrong. Maybe it expects something like this or maybe I'm doing something very stupid. So let me check again. P name subquery no, it should be okay, let's check. Yes great. Now we will do some sorting order by to desk. So we go to sort now you see. So the most populated package so the most package with the number of items there is package named CRT base. We can find it here. CRT base. Unfortunately this editor doesn't show us some totals or any kind of summaries. So we are not knowing how many items are there. So we can read it with this type of queries if interested if you are inspired in database scripting. So I will share such scripts with you. Speaker 1 You can also see the same but you can see that some packages have quite big number of items like 800, like 400, 300 and so on. And the main sense of the package is to make some separate functionality stored separately and could be saved and delivered separately developed separately. So it's like logical thing to split big system into parts. Our solutions that we will do also will be saved in one or several packages. And now you may see that most of packages have gray color nearby their names and only one package have a yellow color for like indication that this package is editable. Speaker 1 This is a special package named custom and custom package is designed for cases when you so when customer doesn't think too much about storage of settings at all and when customer just don't know the architecture and they just want to customize system, save it, perform some no code settings and that's it. So custom is kind of default package for such kind of customization, but for big projects it's not recommended because custom package is also present on target environments and custom package may be not empty at target environments, for example at environment when you want to test or when your users are running in production. So custom package is not perfect ",
      "page": 20
    },
    {
      "title": "",
      "content": "for such delivery. Even though you can export it, you can easily import it later, but it's not perfect. So I prefer not to use custom package for your package customizations for your solutions. Speaker 1 Obviously we will create our own package or even several packages to save our customizations there and now you need to remember there are two general approaches. You may manage packages yourself and it may mainly make sense if you develop something in Classic ui. Classic UI is a legacy type of settings that we still have in our application and still support. And we have hundreds of maybe thousands of different partner solutions designed previously in Classic ui. And also if you plan to make your new solutions in Freedom ui, in this case you will probably see that when you manage your application with Application Hub, system performs creating of your packages automatically. So you will only control it here, but you will not need to create them. So in order to demonstrate your package management, I need to create some package manually. So let's do this. Speaker 1 I will click on this tiny create page button, this opens new package window and I will call it something like Dev Classic. So I intend to use this package for some classic UI stuff. That's why I will call it Dev. Classic package has some properties and compile into separate assembly is extremely useful feature and it's so useful. So it's enabled by default and it makes our compilation time three or four times less than usual. So compile into separate assembly is totally recommended feature. We will keep it on Smart activation is not so common. I recommend you to read some articles about smart activation. It's necessary only when you have package with dependencies from other packages which are not installed. In this case Your package will be not activated. Speaker 1 If you want to support this feature, you can use smart activation, but in general I think that it's not for our case, so not so necessary. We don't have any version control for svn so we'll keep it empty, no version value and we will create and add dependencies. Now I need to explain you one more important thing about packages and their dependencies. Let me duplicate the page, I will show you important diagram. So as you can see we have 140 plus packages and packages have connections between each other. If you go to package properties clicking on this3 dot then go to properties, you will see that package has properties and package has dependencies. Dependencies are very important and they show other packages from dependencies, show other packages required by your package. Speaker 1 And when you have a dependency for a package, it means that this package will not work until parent packages present into your system. So in my case calendar base requires CRT core base for some reasons and this is how packages are connected. So if your package has dependency from some parent package, you may use some parent package functionality like pages as templates objects. For inheritance you may use some parent entities and if you have no dependencies you will not be able to use parent pages parent objects. So you will have to develop all your customizations fully from scratch. So dependencies are generally recommended and we can see the whole structure of packages dependencies with the actions package dependencies diagram. This diagram will show us connections between existing packages and I will explain you how you can add your solution into it. Speaker 1 There are two common approaches how you can do this. One of the approaches which is now currently used by Application Hub is to use package named CRT core. It gives us enough access to base product functionality and the CRT core is a good option for your solutions to be connected to the parent base product system. It has only standard minimum access to all base product templates. It will be enough to create new sections so you will have no problems. But in case if you customize big base product solution like sales, service or marketing, and in case if you need to customize existing sections like make your own changes into opportunities, into contacts, into accounts and so on, it makes sense to make visible and available for customization all base product structures. ",
      "page": 21
    },
    {
      "title": "",
      "content": "Speaker 1 And in this case it makes sense to find the latest package here in this hierarchy except of custom and make your package dependent on it. Thanks to parent dependencies you will have full access to parent packages including base product section packages. So if you work with base product which already includes a Lot of functionality. For example, it's a banking, product, sales service or marketing. Then it makes sense to create your packages dependent from all this parent diagram and it will be able so you will be able to customize parent packages. You will be able to customize any items, any sections there. So this approach works well for project implementations. In my case, I create my package manually. So I plan to make it dependent from Studio based product. I'll go back to my package creating. Here is my dev classic package. Speaker 1 I will make it dependent from. I can search studio and that's how I will do this. Any package has its own maintainer. It's a text property written at packages. Each package has its own maintainer. And you should remember that when you see the word terrasoft it means creation. Because terrasoft is previous company name. And somewhere in 2016 Tirasoft was renamed to creation. Now you know this brand as creatio. So wherever you will find Terrasoft it means made by creature and Studio is a creation made package. Okay, when we create our own package, we have our own maintainer. By default it's customer. You can change it in the corresponding system setting which is called publisher and it has a code maintainer. Let me show. You can go to system settings, search for publisher. Speaker 1 The reason why we have so many different words for the same is incorrect translation. Originally in English it was maintainer. Then it was translated into Russian, then back to English. That's how we get publisher. I would prefer to have everything just as maintainer here. So if you change the system setting, so you put something else here and then you create your package. So your package will include the same change to value when you create it. And currently I do not need to change it. So I keep it as is. I have maintainer here. When you create your solution, you may need and you may want to personalize it to provide your own unique value as maintainer. So I recommend you to go to your publisher system setting first, then apply it. And also you should remember about cached system settings. Speaker 1 So in order to fully apply it, you have to log out and log in. Because cached system settings are loaded at the session start only. So when changed it, you have to log out login and then you can create your own package. And your maintainer will be according to your system setting when you create your package. But the most important is dependency of the package. So we provided it, we can apply it. And now after package was saved, you can see editable package at the top with the yellow icon here and when we reload this diagram you will see that our package is now shown in this diagram. After this studio, I click control and roll my mouse wheel so I can zoom in and zoom out. Speaker 1 Now you can see my dev Classic package is created after studio and thanks to this parent transitions I can get access and logical visibility to any part of base product. So this is very important. This is example how you can create packages for your own manually made the customizations mainly for Classic ui. In future we will make more packages and we will use package for Freedom ui. I will show you how we can how system creates packages for you in freeware and when finished some step of settings we can download everything to file system. Now our dev Classic will be also saved on disk. So we go to check it out here and now you can see Dev Classic package appeared on disk seconds ago and you will see package contents. It includes some files folders. Speaker 1 ",
      "page": 22
    },
    {
      "title": "",
      "content": "Now our package is fully empty, so we will fill it in with some test settings tomorrow and we will continue tomorrow's session with git integration. Now today our session is over. If you have any questions about it, tell me please. You will receive video recording very soon, probably in one hour if Zoom will be quick to convert video. So I will send you video once it will be ready. And your homework is to reproduce the same steps. Install your local environment, make sure it works, make sure it compiles, turn it into file system development mode. Then create your package. Make sure your download packages to file system works well. The opposite action, update packages from file system will make sense when you change your files out from creature. So when you for example update them from repository or when you use external editors. Speaker 1 In this case, you will need these update packages from file system action in order to tell creatio about some new changes and in order to load such changes back to the database. So our session is over. Thank you. Thank you for your time today. We'll see each other tomorrow at the same time. If you have any questions, please feel free to ask. We will continue tomorrow with so with git integration we already created an example of a package. We talked about package dependencies. And tomorrow we will continue with git integration. Speaker 2 Thanks a million Demetri. That was very insightful. Speaker 1 Thank you Paddy. Thanks others, thank you for your time. So see you tomorrow. Our session is over. Bye. Thank you May. Bye. Speaker 2 Thank you. Speaker 1 Bye. Thank you Sarah. By. ",
      "page": 23
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number two and we will continue to do our first steps on creature platform. As developers, we worked with our environment. We made our package recently and today we will continue with git with doing other preparations. I will explain how to operate with packages, how to integrate with git and we will work with objects and data. I will show you how to build data items, why we need them, how to transport solutions. So you will see how it works in general. I hope it will be clear for you. Okay, so in case of any questions, feel free to ask. I'll be really happy to answer your questions. As usual, video recording is being performed. I hope that. So you downloaded video files from our yesterday session. I hope you made your homework and prepared your environment. Speaker 1 So now you are fully ready to continue. If you have any questions, feel free to ask Tushar any questions we have. Is there some issue during installation of the local environment? I'm getting this one error. Please type in the chat. It's related to some redis server. This is where so you posted the text. So it was failed to connect to the redis and so it's something like it was not possible to connect to radius server right now and it was multiplexer train board connection. So first of all, thank you for saying this. So first of all you need to look at your connection strings config to make sure that you have a correct host setting and db number. Also you must make sure that your regis is running. You can check it by running your windows services. I already checked. Speaker 1 My port number is different like your. You should find your Regis service running. If it's running, it means it should be okay. You can also look at Regis logs. Maybe it will be more clear for you and which version of Regis are you running? You can. You can get this information. If you go to C program files Redis, you can run this special app called Redis Cli. Then you will see something like this. You can type info command. You will see a lot of technical information like version number, amount of ram used, a lot of system parameters, and also you will see set of used key spaces. So it's a database numbers used by your redis where I can find the version number in this information. Speaker 1 C program files regis usually if you installed regis for Windows, you will find it here and then you can just run regis Cli exec file. It will be a command line utility for redis. So you can run different commands like select number of database db size. You can see size of the database that you selected. You can also use some dangerous commands like flashdb for clearing of your current database or even flash all for clearing of your all redis server storage. So sometimes it's necessary in rare cases where your redis already has some previous old date and you would like to start from scratch. So removing of all previously saved values. Normally creation manages redis by its own so you do not need any kind of assistance. Speaker 1 And usually creation is caring about redis itself only in some rare cases you will need something like this, like flush all in order to reset your redis to clear everything and that's all. But it looks like you have a connectivity issue. So question about network name or question about port number or something like this. So is it possible to run your redis CLI and make connection to your redis? Yeah, I'm doing that. So when I started Radis Cli you can just type the comment flush all which will clear full regis and it will clear all the previously saved settings. And if you have different attempts to install creature, there is some slight chance that existing redis data may prevent you from normal start. So you can try to run flush all command. Speaker 1 ",
      "page": 24
    },
    {
      "title": "",
      "content": "I would also type it in our chat so this may help you to normalize your redis operations. But the most common reason I think is about connection strings. So you should take care about the host and database number. You can try to choose another database number, maybe you have some other apps using the same number and you may try to run another one. I'm able to log in. Did it help to fix? Yeah, yeah. Okay great. Thank you Tushar for your question. I hope it was not so boring for others to hear it, especially if you if others will also experience same difficulties, it will be really helpful. So let's move on with today topics. If any other questions appears, feel free to ask at any moment of time. Speaker 1 So it will give me a bit more entertainment because so once you have a question, I will be happy to answer. Today we'll continue with git, with package management, and also with working with objects in general and using data items. And possibly I will show you some advanced example with connecting database views and objects. So today we will mainly focus on general stuff like git and object and data management. First of all, let's remember where we finished last time. Last time we manually created new package. As I told you, the scenario for manual package creation will be necessary in examples where you do some classic UI customization. In general you can create packages and then you can use it for freedom UI apps, but it's not so common because when you create freedom UI app, system automatically creates a package for you. Speaker 1 So creating package manually usually means that you are planning to do some classic UI stuff. Just to remind you, classic UI is a special old type of user interface which you can still find in many system sections like system users, like system settings, like web services. You will see some specifics and no possibility to shrink columns easily. And a bit later I will show you examples of Freedom UI and you will see how you can use such tools, how it will look like. So we have two different types of user interface. They have a totally different undercover frameworks inside and that's why it's so different and we make such difference between different types of creature pages. Okay, so dev classic will be intended to use for some classic UI stuff. I need some dummy example to be put into my package. Speaker 1 Currently you can see that we can select all packages. As you remember we have 141. Now let me check number of packages at our d one database. Now we have 141. So one package was added because we added it manually. And if you select all packages you see contents of all your all system. You can use some search. You can use by search, by title or by code. You can use with different search condition and you can also make filtering by configurable item type that you can add to your package. In my case, if you select any package you will see its current contents, especially if you clear search bar. So you will see current contents. And when I select my package, by default it's empty. Speaker 1 We can create some dummy stuff here just to demonstrate something that is not empty inside of our package. So let me show you what it will be. For example, we can make a test process, business process. It's a type of configurable item designed for automation of some business actions in our creation system. So now I need it only as a template done stuff just to make it to make my package not empty. When I design my items I must provide code and by default system expects me to provide some prefix for this code. This prefix can be also set at system settings. You can search for prefix for schemas and packages name. You can open it. You can see default prefix is ",
      "page": 25
    },
    {
      "title": "USR.",
      "content": "Speaker 1 You can change this prefix at the beginning of your project or you can even remove it if you do not like. So supporting prefixes. In my case I do not need to disable it. So let it be as is. Prefix usually helps me to detect my ",
      "page": 25
    },
    {
      "title": "",
      "content": "custom changes and differ them from base product stuff. So anything which has my prefix will be definitely made as part of my customization. So in general I consider prefix as useful thing. But in some projects developers decide not to support prefixes because they just tired of making them. So in my case, when I create a process, I must use this prefix the same as my system setting us our test process. We can name this stuff as test process. I need it only as a dummy stuff. Speaker 1 So I do not really plan to make some business logic here. So my test process includes some start simple event and then terminate event. So this process, it's just doing nothing. I have no parameters, no special settings, I only have code and title. Then I can save this sample diagram. It will be saved into my package, as you can see here. So I can close it. Now my package is not empty. And you see this item added to this package. You may note this big star nearby the item name. And this star tells us that our change is performed and not fully properly saved. In case if we work in this creation. No, no external ID mode or it's also called file system development mode. It's kind of a long name for this. So file system mode. Speaker 1 In the case if we work in this mode, this star is really important and helpful because it shows us that something was changed and not fully saved on disk. But if you will turn back to creature ide, this star will be almost useless because it will represent that your changes are not submitted to the SVN. And if you do not support SVN, so you will always have big set of such items with stars and it will not help you to detect some recent changes. So in our case, working with file system star means item was not fully saved on disk. Why we need to save it? Because creature shows us some changes and they must be submitted properly in order to make correct set of steps. Make correct development approach so we can submit everything to file system. Speaker 1 Download packages to file system the reason why we have to do this is that some changes when we do them at configuration section are not initially and fully saved on disk. They are still created and saved in database first, because it was historically and originally the first storage place of creation items in database. And only several years later possibility to save items on disk was added. And that's why we have some kind of legacy and historical stuff. And when you develop some items, they are anyway created in database first. Okay, so we can run this action download packages to file system. It will include all our editable packages, all the contents, and save a set of files and folders on disk. When it finishes it will show us some report what have been done and you will see this report easily. Speaker 1 And also this star nearby. The item name will disappear. Meanwhile you can see the type of the item. It was a business process. Now you can see this small report includes text that this USR process was modified on this so it was fully saved. Now you see the star disappeared. We can go to file system. Here is our app file system. Go to Tailsoft, the web Terrasoft configuration PKG. Then we will find our dev classic package. And now you will see that it's not empty. You see schemas. Now we have some special folder. We see some set of files. It's not so easy to read such files and luckily we will not need to modify them using external editors. This is special set of settings called metadata. Speaker 1 Metadata is information about our configurable items stored in a special system inner format in a JSON string with a big number of different properties and values. And luckily we should not look here constantly. So just something that you need to know that it exists. So metadata represents in the structure of the item and for some types of configurable items it's not really designed to be edited out of creation. So only creature editor should be used for this. This metadata represents full structure of what we designed and we can now have this stuff saved on disk. The ",
      "page": 26
    },
    {
      "title": "",
      "content": "reason why we saved it on disk is our attempt to organize a teamwork. So we want to make some changes then to make a common repository, save our changes there in order for our team members to make them possible to get our changes from common repository. Speaker 1 And that's how we will exchange settings between different developer environments within one development team doing the same project. So now as you can see, we're going closer to file system and to understanding how we can exchange settings between developers. I need to tell you that creation has two different flows of changes, two different, let's say directions of how you can transport changes. First and the most necessary to know is delivery. So when you do some your solution or you have an existing solution and you want to save it and then import it somewhere else in order to test or to run in production, you can just export this package into file. You can export any package you see system will produce zip archive file. And this zip archive file can be found on disk here like this. Speaker 1 And this zip archive file can be also uploaded on some other environments. Such uploading can be done with the settings. Then you go to application hub and then it's possible to add new application with install from file option. So that's how you can get it from file and load it. If you do it many times, you will install form file many times and package will overwrite previous package settings so you can do it multiple times if necessary. But this is delivery procedure which is designed to be used only for test and production purpose. But if your task is to share settings between developers, this export and import approach is not good because when you import such package at your another developer environment, you will see this package will be read only and also when it's imported it fully overwrites your contents. Speaker 1 So it will be really hard to operate as a team where each team member can do his own, let's say contribution to the common repository. So such export and import is not designed for sharing settings between developers. We have to use a bit more sophisticated approach and that's why we turned our environment into a file system development mode. So the step one is to make sure everything from your changes is saved on disk and step two is to use any kind of version control systems to operate with set of your files and folders from your disk in order to deliver changes. In order to transport your changes from files and folders to some common repository and then other team members. Other developer environments can take such settings from common repository from other from common repository to another developer environments. Speaker 1 So that's how it can be organized as a team. And now I will show you. I will use git as a version control system, the most popular for now. And in order to run git I need some kind of good git client. I prefer to use visual studio code as a git client. So it started visual studio code. Luckily it's free of charge so you can use it freely. Here is my visual studio code. Probably I need to close everything close folder so I need to make just from scratch and what I need to do. Speaker 1 So first before you enable any folders, before you operate with your git, if you don't have git client, you should click on this button source control in order if you so if you don't have any git client installed, you will see only one button here to be called something like oh we have to update. Okay, maybe later one single button will be install git client. In this case you have to run your visual studio as administrator when you click on this button to automatically download and install official git client and after this you will see the same settings as I do. Also you probably will need to run a couple of commands related to your client username and email. But this is something very common. ",
      "page": 27
    },
    {
      "title": "",
      "content": "Speaker 1 I think you can easily fix it if you face this difficulty with new terminal window and a bit of googling will tell you how to make full setup of your git client. In my case, this git client was already set so I already have git client normally working so I can now open folder and initialize repository in it. This is very important to understand how you should manage folders. So here we have a our application Terrasoft web app terrasoft configuration PkG folder and we have a lot of subordinate subfolders here. What are they? I will explain a bit later, but now you need to remember and understand that currently I have only one package, but very soon I will have more than one packages in my solution. Speaker 1 So if I decide to make a repository root folder somewhere inside of my folder representing a package, then it will be really hard for me to add any other packages here. So I will need to keep several repositories for several packages which is also not so good. So possibly we can select upper level folder. This PkG folder will be my root working copy catalog working copy directory on my disk and then as many packages as I need I will be able to use inside of one single git repository and also we will have to take care to remove from the repository. So do not version a lot of other files here which are not so intended to be changed and they are not part of my solution. So I plan to use a PkG folder as a working copy root folder for my solution. Speaker 1 I will do this with visual studio code and in Explorer tab I'll just click open folder. I need to find the corresponding folder from my disk. And now probably it's time to explain why we have so many files and folders inside of TKG. So when opened you will see a lot of subordinate. Yes, I trust the authors, but you will see a lot of subordinate files and folders here. So the answer of what it is quite complicated, especially as you are beginners. So probably you will need to watch this part of recording a couple of times to understand fully. First of all, you may notice that folder names here represent some packages names from your configuration. Let's go. Let's look here. Let's search calendar base. Can we find it here? Yes, here is calendar base. Okay, next one. Content builder. Speaker 1 Content builder is also representing a page. Okay. CRT analytics dashboard okay, let's find it. Yes, you can see it, but total number of such folders is much less than 140. So it looks like such folders appear here as a result of presence. Some packages in configuration. But for some reasons not all the packages from our configuration form their own folders on disk. So the answer of what it is a bit complicated and it's called file contents. Let me explain what it is. So generally any package in creatio may include unlimited number of items with different types like objects. We will study them today. C sharp sources several site programmed code in C hash language a lot of JavaScript client modules representing page settings. Speaker 1 For client side we have some data items, we will discuss them and they are used to keep some data records in your system, business processes and some other types of items. So in general any package may include unlimited number of different configurable items. That's okay. But also developers decided and architects of creature decided it would be nice to make possibility to add some additional file system stored functionality connected to the package and they decided to make so called file contents. So if you have a package, any package may have its own file contents and this file contents should be saved in PkG folder. Then in folder name inside of it which is the same as package name, and inside of it we have files folder and it may include some DLL's, it may include some additional files and bin folder which usually includes DLL's. Speaker 1 And this file contents is usually having two types of files. It usually has some DLL's as a result of compilation and for ",
      "page": 28
    },
    {
      "title": "",
      "content": "some cases it may include some JavaScript stuff, JavaScript components. So generally the answer is that in PKG folder we have file contents which is a legal valid part of some packages saved on disk and we should treat it as read only stuff. We should not remove or modify any part of base product packages file content. So we should just simply ignore all of this stuff. So now we are going one step closer. You already know that we are interested only in packages that we design, ignoring everything else that we can see in PKG folder. Okay, now it's clear. So let's go to our visual studio code which will work for us as a git client. Speaker 1 Now we only opened some folder with big number of files. We are really interested only in some part of such files, but we are not interested in all the contents. So let's go to source control tab and now it's time for us to make a git init comment. So some of you already have some experience with git, you already know what it means. So we need to initialize a local repository to operate with git. This is a necessary so it's like mandatory step if you want to use git we need to initialize repository I prefer to use as much as possible of graphical user interface to operate with git because it's easier, it makes less chance of mistakes and much more visual. So we can see what's happening here. Speaker 1 So I will run initializerepository which is the same as git init command and it will initialize my git local repository in PkG folder. So I just click this, it performs some steps and now we can see that at this source control tab our git client detects huge number of modifications. Of course most of them are at base product packages. So we do not plan to version such base product file content. We do not plan to submit it to version control system repository. So we need some tool to ignore this big part of PKG folder and we only need to keep and take care about packages that we decide to create ourselves. Now we have only one package that we are really interested in submitting. This package is called dev. Let me show you dev classic package. Speaker 1 So this is our package that we plan to operate. We want to ignore everything else. Custom package is also editable, but we agreed that it's not a good idea to use custom package for big project development. So I prefer to ignore custom package as well and keep it empty or only with some temporary stuff which will be not submitted to version control and will be not shared with any other developers. So I have simply only one package here so far, but soon I will have more packages. I need to ignore everything else and from my previous experience I already have two for this. If you have no previous experience, you probably know that in git you can ignore some parts of your working copy folder by use of Gitignore tool. And I can find good example of Gitignore tool at my GitHub repository. Speaker 1 So let's go to GitHub.com. I need to sign in. I use my Microsoft authenticator for this. Just a second. Authenticator helps me GitHub yeah. Oh, sorry, change number. Okay. Okay, this one. Okay. Successfully confirmed my person accessing GitHub. I recommend you also to register your account at GitHub. So what I need here is my repository. Confirm your account recovery. No no no, later. It's okay. So I have a lot of repositories at my account. Probably you can find it here. My repositories and what I need here, I need some example of a recent Gitignore file. Originally I had no examples, some of my colleagues proposed an example of Gitignore file originally made for visual studio, but now I have a better example so I will have less time to update it. So I already have some example of gitignore file. Speaker 1 Of course I will share it with you. Gitignore file is a file with empty name and gitignore extension. And the main reason of this file is to provide set of macros or a set of text templates which will be used to find and exclude from the contents all stuff which we consider as not necessary. Usually it's designed to exclude log files, some settings files, some technical files generated by your integrated development environment, temporary files, project files, sometimes executables if you do not need them, debug files and so on. In my case, we will use this Gitignore file to keep set of base product packages names, to exclude our to exclude them from our versioned contents. So we'll ",
      "page": 29
    },
    {
      "title": "",
      "content": "simply copy all of this code. I will make my own a new gitignore file inside of Pkg folder. The name of the file is Gitignore. Speaker 1 If you will do this with your Windows Explorer, make sure you set for display of the full file names with extensions. In this case you will not fail and you will not create a gitignore txt file. So I will create new gitignore file, paste this stuff there and save it. Now you will see immediate change happening in my repository, in my working copy source control tab. Now you see gitignore file. Okay great. We can still. We can also edit it here if necessary. And we still have some packages appeared here. The reason is that my Gitignore example was from version 812. Currently we are running already new version. This version is eight one three, the latest available released version and in this 813 version some new changes and new file content appeared for base product packages. Speaker 1 As you can see CrT omnichannel appear it here and I can add it to gitignore. Let me show you what happened and also I do not need to put all of the files here, so package name is enough and CrT security so I can type it manually CrT security and save it. Now you will see I cleared my versioned stuff. I only have my dev classic package here. I use the gitignore to remove big set of base product packages and base product file contents from versioned stuff. So Gitignore helps me to do with this. I have a small poll for you, could you please confirm do you have any experience with git and if yes please type plus in our chat or if you don't have any experience with git and you do it first time, then please type minus in our chat. Speaker 1 So it will help me to understand your current level of skills and knowledge about version control. Because today developer I think must have some say basic experiences version control tools because it's quite inevitable to operate as a team. So thanks for all of you who replied you have some experiences git. Those who do not reply and please don't be shy understand that no one knows everything from the beginning, so everyone is studying every day. So some years before I also was not knowing about git at all. So this is something that you can learn and my task is to help you with it. So now we have settings for our git client to include only necessary parts of our code and we excluded everything else using gitignore. Speaker 1 Also I wanted to show you in file system once we initialize git repository, you will see that new folder appeared on my disk folder name is git and this folder is hidden. As you can see the file attributes here show us it's hidden. So possibly I will not see this folder easily in my Windows Explorer, but here I already saw set show hidden items and also already set for showing file name extensions. Just not to be tricked by windows. So now you can see hidden folder dot git even in Windows Explorer. And dot Gitignore file has a dot gitignore extension, not text extension. So it is also important. Okay, so this is my local git repository. I did not perform any comments to it, so I did not submit any changes there. So it's time to make my first commitment. Let's do this. Speaker 1 My first commit ever. So it's just something fun. Text and text for your commits is important to describe your changes in general. Like you did some new section, you did improvements integrations or you made some data fixes or anything else. So your commit text should help you to track history of your changes in future. And it also will help others in your team to understand what actually you are changing and what is the sense of your changes or why you submit some new changes. So when I do commit, it will run git commit action and it will save changes in my files into my local repository. My local repository now became a bit bigger, so it has a bit more files and folders now. You can track it if interested, but the inner stuff here is really hard to read. ",
      "page": 30
    },
    {
      "title": "",
      "content": "Speaker 1 So it's about some git secrets, how it saves your comments, your changes and so on my git repository is still local so I did not share anything with my imagined team members. I need now I need remote global git repository that will be available for my team members. I will use GitHub.com as a central git repository host so it will be my git server and I can create new repository. I will have a lot of repositories here and I can easily create new one more new repository for our training session stuff. Oh have some followers. Nice. And it will be a public repository so anyone can take information from it. So you can also read this repository, you can use its contents, you can save it at your own and see what happens if you add your files to creation. Speaker 1 So I need this common repository to organize sharing of settings with my colleagues. This is very easy. I will also I also avoid using commons. I user interface because it's easier and quite straightforward. I will create new repository to be something like guided dev May 2024 let it be so this name was not used inside of my account and no description public repository, no readme file. I'm too lazy for this. I already have gitignore so no need to add it once more and no license. So anyone can do anything with my code. Simply create repository. After doing this, it's time to think about some git commands to connect my remote repository with my local one. And we have set of commands that will help us to do this. So first comment is git remote add origin. Speaker 1 So I will connect remote repository to my local git client and my local git repository. I can do it with a terminal window. Actually I can run any command line on my PC, but I prefer to do it here just to be a bit more consistent and to show you what happens directly not far from my visual studio code. So I just paste this code git remote add origin and as you can see my remote repository had this URL. Okay, let's do this. Then we have a set. Next comment, select a main branch on my local one. Git branch m main okay. And the most important command is git push which will transport changes from my local repository. So tools transport my commits from local repository to this global one so it will become publicly available. Git push it usually needs some Internet resource. Speaker 1 You see, compressing was used here. And finally my remote repository was updated by set of commits by stuff that I committed from my local one. We can check it out. So now my repository is ready. You can see some files and folders here. If you go inside you will see that git keeps only files, only folders which are not empty. If we compare with our physical file system, you see for example data folder which is empty and it's not present here because git is still not supporting empty folders. But it's okay, so it's not a big trouble. If you really need empty folders, you can use some placeholder files. Creature is not sensitive for this. So even if we submit to version control, only meaningful ",
      "page": 31
    },
    {
      "title": "part excluding empty folders, system will still be okay with it.",
      "content": "Speaker 1 And now we have some stuff from our package which is not empty. So we have some files and folders committed to local git repository and then to common repository. So now it's globally available and I can share my repository link for you. So you can also check it out if you have any git account and know any restrictions to access GitHub.com from your PC. So this is my repository and what the reason why I made a repository based on PkG folder. Now I have only one package and you can see this is a subordinate folder inside of my repository. If I have two more packages, it will be two more folders on this level. So having this kind of repositories helps you to keep minimum number of repositories and maximum number of packages inside. Speaker 1 So I can easily add more packages to my solution and it will still be located at one repository. You can also see all ",
      "page": 31
    },
    {
      "title": "",
      "content": "the history of my comments. You can see changes there. So we will work with it a bit later. Now I will demonstrate what usually developers do when they operate with git and how their, let's say set of steps should look like we are starting some steps at our development. For example, we open some configurable items, we do something very important. Okay, I'm not so lazy today. Let's do some read data. Let's say we will do some dummy thing. Read data from a contact object where name, full name for example equals to some value. No problem. Let's compare its value like supervisor. This is just something that is a demo setting, so I do not actually need it so much. Speaker 1 But this is something that and I will read only one column 80 okay, so this is just example read contact. An example of what we can do as business logic automation inside of a process. Let's imagine we did something useful, something very important for us, and then we save our customization. This is an example. In real life, your package will include tens or even hundreds of items. You do some steps in your development. Finally you decide that some part of your solution is ready so you can save everything. Then you go to your configuration section and download all the packages to file system. The main reason is to get rid of this star and make sure that all of your recent changes are properly saved on disk and represented at file system level. Speaker 1 Originally when you do customizations they are saved in database and only if you download on disk it will be properly and fully saved on disk. Some items are also saved on disk while you edit them. But this download action ensures that everything is properly saved. So you must do this action when finished. Some development steps. Okay, I have some changes now on disk star disappeared so everything is properly saved. Let's go to visual studio code and let's see what's changed here you see we have some changes in descriptor for our process. Something like date of modification changed. You can see changes in metadata. We have some new item added, we have some titles changed, some position changed. It's really hard for processes to detect changes like this, but this is something that we do. Just an example of some customization made. Speaker 1 Also we have some new items appeared here probably because of our titles added to the process pieces. But okay so we have test process and so on. So we have set of file changes. We can commit it as a commit example one and we can do git commit into our local repository. Great. Now we have no changes. So we have some pending stuff that should be pushed to global repository. So we can again run this command git push or which is easier I think is to click on sync button which means pull and push. Pull and push. In my case it's like valid set of steps. So I prefer to do this pull and push and that's how system will automatically perform the same git push to my common git repository. Speaker 1 Now we can go to git repository loaded and you see some history of changes. So we have two commits. Here is my commit history. You can, you can see and compare changes. Let me show you here you can compare changes in each file, in each separate file. What was changed there? I agree. Sometimes it's really hard to perform this type of comparison and it's because of the metadata stuff here. But anyway, technically you have tools to perform such comparison. You have tools to track changes and you can see what is changing, what is happening in your repository. You will see all users committing, you will see all history of commits. You will understand pretty much everything what happens with your package on file system level. And this storage now is a common repository. So let's imagine we have another developer. Speaker 1 Another developer originally has no own package at all. Another developer just installed new environment and they have no package at all. So only one single developer should create a package, should commit it to file system and then to version control repository. Another developer should go to this common repository, another developer should ",
      "page": 32
    },
    {
      "title": "",
      "content": "organize their local git repository in TKG folder and finally pull changes from this common repository. You can also make some clone, but I think it's something that probably will be a bit more tricky because you will have to do it in a proper place on your disk. So finally, task for second developer will be to operate with their own PKG folder, to make their own local git repository there and then to get this folder out from git to local file system. Speaker 1 They can do it with git pull comments or git clone comments, whatever works better. And finally, creature is interested only in PKG folder and the contents here. So finally you will get this folder from git repository to some another developer environment. After you do this, you will have file system stuff like this. You probably will have empty folders for items that were not used so far, like SQL scripts and data will be empty for some time. Then second developer must tell creature that PKG folder file system has something new. Creature will not detect it automatically, so you need to push it. You need to like make a punch for your creation with the command update packages from file system. Speaker 1 So second developer will perform this operation and second developer will see results that some new files, new folders appeared and even new package will appear at second developer environment. So that's how your package changes may travel from one environment to another. I mean from one developer environment to another developer environment. This is very important to mention we are talking about developer environments working with version control. Let's imagine another developer environment opens some changes or creates new items, finally saves on disk, then commits everything to file system, then performs git commit at GitHub client or sorry, at git client. Probably it's a visual studio code. And then perform Gil git pull and git push in order to update central repository after this repository was updated, first developer may also perform git pull and git push. Speaker 1 And that's how first developer will receive all changes in the package files. And then first developer must run the separation update packages from file system. So that's how you can exchange settings between developer environments. And as you can see, it's fully 100% based only on files and folders. So no any special magic or special calls or special web services are involved into this. Only files and folders are enough to save changes to extend to exchange your solutions between developer environments. As you can see, it includes plenty of files. Let me show you, 30 files are here. In big projects you will have hundreds or even thousands of files, so it's much easier to miss ",
      "page": 33
    },
    {
      "title": "something. But it offers you possibility of teamwork. You can change only some part of it.",
      "content": "Speaker 1 You will commit only changed items, changed parts to common repositories and everyone else can do the same. So that's how you can easily, let's say, modify two different items of the same package and work as a team. There are some warnings about this. Some items, like processes and also objects are not designed to be simultaneously edited by different developers at the same time. So you should avoid situations where you have two different metadata files and you should avoid situations when you will have to merge them into one. So here you will see the main metadata file, which is really hard to read and it's probably not so practical. You should not try to make any manual changes here, even in case if you got this situation. Speaker 1 When two developers made changes to the same item, I think the best way is to sacrifice changes from one of the side and submit another side changes into repository and then ask first side to check out it and make changes again. So merge of metadata is not designed and probably will not be successful. So you should not try and it's better to avoid this. So you may communicate with your team members and organize your work so they will not interfere into each other settings. But in one package, as you already remember, you may have hundreds of items. So if developer one modifies item one, if developer two modifies item two, there will be no conflict. They will ",
      "page": 33
    },
    {
      "title": "",
      "content": "successfully and happily work with the same package. So you should be just worried about simultaneous access with the same item for different users, different developers. Speaker 1 If you have any questions about it, any other ideas, feel free to ask. I'll be happy to explain. So in general, now we made all major settings and you see how you can set up your common repository. Now you see how you can submit changes to this repository and we can move on with next topics probably before moving on, I offer you just five minutes break for coffee and then we will move on with working with objects topic and managing data. So we finished with the question of git integration and it's time for us to think about working with objects and working in general with creature data model. So what you need to know about it is that the basis of all creation data model is a configurable item called object. Speaker 1 You can easily create objects in your configuration and also when you do customization using no code tools. For example when you operate with application hub or with section wizard, system is capable to create number of objects automatically. But in order to study it, you need to make some examples manually. You understand it better if you do it like by hands. And creature has a lot of out of the box existing objects, so maybe a couple of hundreds here. And a lot of them represent simple entities called lookups. Let's go to lookups and let's see what they are. So go to lookups. For example, we can sort. Okay, I prefer to look here. Select fields to display, switch to list view and it was originally entire view, so I plan to look at list view. Speaker 1 And also I need created on column just to make more comfortable sort in this list so I can sort by name. For example, we can find a lookup called address types. So it's something simple, address types, you can open it and we will see set of records representing types of addresses in creature, like home address, business address, actual or lingo address, and so on. We have six records here. Such records are physically saved in the database and we can go to the database using our database management tool. Make new query, select everything from address type. You can see we have the same name of the database table working with it. So now you can see the same set of addresses stored in the database. And some additional options are also supported here. So what do you need to know? Speaker 1 Is any object created in creation will finally turn into a table in database. So now we talk about general objects without special chemistry, without any tricks. So in general, if you create an object, it will have its own database representation as a table. One object means one table. Sometimes participants ask me, participants are asking me about is it possible to have one object for many tables at a time? So normally not. It's not designed to be so. If you need to operate many tables and to get some aggregated data from them, you may use database views and then you will use a specially designed object for it. But in general, when you create in one object and everything as usual system will create and manage one database table. We can find this database table by name and this is address type. Speaker 1 Let me find this one. So you can see table structure, all the columns, you can see it's key field, you can see primary displayed text field and some others. We have a lot of base product lookups. You can see how many we have if you go to view in your lookup section, view summaries set up summaries, display number of records and now you see we have 120 lookups, an out of the box studio product. If you work with more complicated solutions like sales, service or marketing, you will have even more lookups. And also we can easily create our own lookups and we will need them for our future settings. Lookups are generally used at the contents of data when you have a lookup column and you need to select some values from it. ",
      "page": 34
    },
    {
      "title": "",
      "content": "Speaker 1 So building more complex solutions usually starts from making your lookups and that's why we will do some. Now I plan to do some changes in my package and it will be necessary for my future solution in classic UI. So this will be just an example for you and I will show you how to create new object from scratch. And business sense of it will be some lookup for our future section that we will design. So let's imagine in future we plan to make a new section to keep some reality data, information about houses and apartments for sale and for rental. And obviously we need some lookups for them. For example, we will keep realty records and we need to know information about type with realty. So it will be lookup. Speaker 1 We can call it real to type and I will show you how to create it from scratch. So select our package add object when you create new object, it means you are creating new entity in our system. New database table will be created. Working with replacing object will be covered a bit later. So now let's make new object. When creating new object, we can provide some properties for it. First of all we should take care about its code. As you can see, system tries to avoid duplicates and that's why it generates some unique name for our object. Of course it's not good name. We would like to make its name by our own. We still have to use prefix because we did not reject to do or to work with prefixes. Speaker 1 And we will have this prefix USR and then we can provide code for our new object. It will be real t type. And also I plan to make two different solutions, one for classic UI, another for freedom UI. So for classic UI I will have a suffix classic. So let it be reality type classic. I do not want to share any lookups between two different solutions, so that's why I will make it fully separated and that's why all the lookups for classic part will be fully separated from lookups from freedom UI part. So this is our code. Code is very important. It must be made only of latin characters and underscore. And sometimes you may also use digits but I recommend you to use only latin characters and it must start from character. And code will be used to create database table. Speaker 1 So system is capable to make set of theories to the database like create table, alter table and add columns and so on. So we only provide some necessary properties and system will take care about database storage itself. This is also very important so code will turn into database table title it could be anything and even more it can be translated into other languages. Currently in my environment there are two active languages so I can easily set values here. But in total we have probably 21 supported language. Let me quickly check. This is very interesting. CIS culture is a special object that keeps information about languages supported for translation into our system and it looks like we have now 23 languages. Sorry, let's see the most recently added ones. So wow. Speaker 1 It's interesting because previously I only remember added Japanese at the beginning of 2024 and now we have some very recently added languages. Hungarian language was added recently. So greetings to Hungary and croatian language looks like Hr, it's probably Croatian Hr. Hr yes, it's croatian language. So you see more and more, let's say national languages are added here and now we have 23 supported languages in our system. Some of them may be disabled, others are active and if you want to use a certain language, you should activate it. The reason of activation and deactivation is saving system resources. If you do not need all 23 languages, it's better to keep most all of them as inactive. System will save system resources for not necessary languages. So that's why we have active option and you can manage active or inactive language in settings. Speaker 1 ",
      "page": 35
    },
    {
      "title": "",
      "content": "Then you can find languages part and now you can see 23 languages and you can activate language if necessary by opening it, setting active and then save. But please. So this is a warning for you. If you activate the language, it will consume system resources and usually activation takes some time, maybe up to five minutes. So please be very careful with it. Now you see recently added croatian language and hungarian language. So this is something that is interesting and it's new for this version. Okay, let's go back. So if support of multiple languages is important for you, I recommend you to enable necessary languages and each time you develop some items, instantly provide corresponding translations for your items. In this case, it will be hard to forget and hard to miss something that must be translated into other languages. Speaker 1 We have also an alternative way to support multiple languages with the translation section, but I do not recommend you to work with it because when you initially go to translation section, it will take probably 15 minutes of time for initial preparation, so it's not so comfortable. And I think it's much easier to provide correct translations just while you develop it. So in my case it will be realty type classic UI. It will be my title if I want. I can support translations into other languages if necessary for my project. So code and title, they are important. Parentheses object is not mandatory, but it's also very important, especially if you make lookups. Inheritance helps us to get standard structure for objects, especially if we need some typical use of our object in our future. Speaker 1 We plan to use reality type classic as a lookup so we can inherit structure for our object from some base objects. That can be helpful. In our case, the most commonly used Bayes object is base entity. It helps to inherit key field, historical columns and some behavior setting, some event handling that is necessary to operate in some lists and some cases. So base entities like common parent item for all creation objects, but also we have base lookup. Base lookup is used specially when you need to create new lookups, and that's why such two most commonly used items are displayed at the top and all others are shown in alphabetic order. So base entity and base lookup, the most requested, the most frequently used, are shown at the top. Okay, I need base lookup for this. Speaker 1 I have to confirm my change, and once I do this now you see I have new inherited columns list. I have eight inherited columns. The most interesting is probably id as a key field. Its data type is unique identifier. You already saw examples of such unique identifiers in many creation tables. So such a hexadecimal big bar, big line of code is example of a grid globally unique identifier. Physically it's saved as a 16 bytes integer. So such data needs 16 bytes in memory to be saved. But it's very common for creature. So all creature objects are based on unique identifier key fields usually named as id. Also we have name as a text as it used as a primary displayed column name is mandatory. You can see required. Yes, the data type is text 250, which is very typical. Speaker 1 And you should know that creature uses Unicode strings anywhere. So every text column you will find in creation is based on Unicode text. It means you can simply save any national characters there. Any kind of arabic letters, chinese letters, or even emoji can be saved into such text fields. So Unicode is supported. Also, we have so called historical columns created on the date of creation, which is date time date of creation of the record and created by. This is a reference to a contact. So this is a lookup column pointing to a contact of user who created the record modified on or performed last. So the time when last modification of the record was performed and modified by is column representing who what user contact performed modification. Speaker 1 ",
      "page": 36
    },
    {
      "title": "",
      "content": "So we have description name and description are business columns, all others are system columns and process listeners is an integer column for a very rare cases when record level event handling is used in business processes. So what do you need to know? Inheriting from base lookup gets access and we get structure. So we inherit structure of system columns. The most important columns are id as a key column and name is primary displayed column and they are important to work with lookups. Also you can find in main object that some inherited properties are shown here id property which means key field. So this is not perfect title of the property. It should be named key field and id is used as a key field and displayed value is also not a perfect title. Previously it was called primary displayed value. Speaker 1 So the main text column which is shown in drop down list of lookups. So name will be used for this purpose but you can change if you want nor any other special properties. We have some event handling made for this and inherited from parent one. We will study event handling a bit later. So what you need to know now when you do inheritance from Bayes lookup you automatically receive legacy of all columns that are intended to be used inside of lookups and usually it's enough. So usually you can create just code title inherit from base lookup and then save and publish and your object is ready. In my case I want to present and show you some additional features that could be interesting and also examples of how you can make your own custom columns in creation. Speaker 1 So we'll go to columns list and obviously we can add our own columns to the object. We have plenty of options for different database types, a lot of text options. The minimum supported is text 50 characters, then we have 200 5500. We have unlimited length. We have rich text which supports fonts, colors and styles like italic, underscore and so on. We have special texts for phone numbers, for web links, emails and URL's and we have encrypted strings to keep passwords safely which will be not displayed as a text, to be always displayed as a set of stars and very rarely used CRC type which physically is an integer and it's used for checks. So it's like checksum column. I never faced a working example how we can actually use it. Speaker 1 So just something like bizarre thing that possibly you will never use in your practice. So number is obviously integer and several types of decimals. Currency is also decimal with two digits after decimal point. The difference from standard decimal is that standard decimal is 18 digits and two after decimal point. Currency is 20 digits and two after decimal point. So 20 in total, two after decimal point. That's why we have so different. But you see we can choose any necessary precision for your solutions. Okay, date and time quite of those we have date time value separately, date separately, time some other types like boolean like unique identifiers like image link or color selection column file can be saved and lookups. Lookups are mainly so they are generally used and based on unique identifiers. But lookups also keep referential integrity. Speaker 1 So when you have a lookup column system creates foreign key for you. So it keeps referential integrity which will not allow you to save into lookup column any value which is not faced in your lookup table. So we can try to make some examples like make a new text column named code title can be code text is 250. And as example I can show you how default values can work for us, especially how we can make autonumbering. So we can search for default value and we can set autonumber option. We can say prefix like cd which stands for code and number of digits would be two. First one will be cd zero one, cd zero two and up to CD 99 and then we will have the next number. So x CD 100 and so on. Speaker 1 This is auto numbering which works pretty well and it doesn't require any programming. So this is a no code tool to make automatic numbering in your lines when you, when user import adds data. That's how we can do this and if ",
      "page": 37
    },
    {
      "title": "",
      "content": "necessary can use custom indexing. You can also make your own custom indexes and even complex indexes. Unique indexes can be added, but generally creature takes care about indexing by its own quite well. It automatically creates indexes for lookup columns. So you probably will not face any significant performance issues in objects and data tables made by creation. So once we finished setup of our object, we have to save it. Save means saving only metadata. So inner data format to keep information about our configurable item. Speaker 1 This type of item is also inherited from schema, but the word scheme I think it's hard to understand. So let's say configurable item which will be closer to its meaning and I think it's easier for you. So when we saved this item, it will be shown in our package contents. Now you can see database update required so object can be applied to the database but it's not performed each time you save, only when you click publish. Publish means apply changes to current application server and current database. In our case, apply changes means create new table with corresponding set of columns and provide necessary column settings and everything should be well done at the database to make our object fully operational. If we do not publish our object, we will not be able to use this object in our system. Speaker 1 So publish is necessary to make our object operational and useful for us. Let's do this. Some years ago publish took a lot of time. It may took up to 1 minute of time. Now this operation is well automated and now we have no serious reasons to separate save and publish operation. Also when you click publish, save is performed automatically. So you may just use publish button. Forget about Save button and it will work for you because publish now works really fast. Okay, so when we finished with it we can close our page. By the way, this page is called object editor or object designer and now we have our object status is okay. So you see it's applied to the database level. We still have a sys which means not everything was saved on disk. Speaker 1 But at this moment our object is already working so it can be used for us and we can try to use it in our environment. Let me show you how we can use it. We can go to studio workplace find lookups section. As you can see we have 120 existing lookups. One of the recent one. You can see something strange with no name here, but if we sort by date of creation. So this is list of registered lookups and we can see what recent registerings were done like white list of pages, opening restrictions, access to tag guarantees, or something like base product functionality recently added here. So we can register our object that we created as lookup in order to make it easily managed. And we can look at it and we can even fill it with some data. Speaker 1 So when we click new lookup, it doesn't create new table. New lookup means register existing object as lookup. Our object is called realty type. We can name customers, we can provide custom title of this lookup. So name is separate from object as you can see, and we can save it. So this operation is just for registering object as lookup. Once we did it, we can click open content and that's how we can manage our lookup contents. The easiest way to manage object data is to register any object as a lookup. Then you will be able to see its contents. So we can create new record here and we can manually type some data like first one realty type which we work with. It will be probably house. So it's mean private house. We can save it. Speaker 1 This is so called editable list and we are not using any separate edit page for it. So we just manage data directly in this list. Another one will be apartment. As you can see, numbering works for us automatically. The no code tool. Thanks developers for this. You can also use description if you want, but I'm not really needed. So we can also add more reality types. What else? It could be office space, it could be parking lot. And something very unusual like a castle. It's just an example. And I also wanted to show you some additional behavior here with the numbering. So ",
      "page": 38
    },
    {
      "title": "",
      "content": "let's imagine you try to create new one, but then no data or something else. So you think that, oh, you don't want to create it. You see the code was generated, but then you just cancel. Speaker 1 Okay, if you create one more, you see the number goes on, you cancel. If you create one more, you see numbering is going on and it will be not rolled back. The reason of why it performs. So when it generates system does not know are you planning to save it or not. So it generates new number, keeps currently created number somewhere in the database, in so called sequence in the database structure. And then we have no option to roll it back. Because while we are inputting such data, someone else also may create new records. So if system is expected to be used by thousands of users, we have no option to easily roll back such numbers. But it's not a big problem. Even if you have some gaps and missing numbers, it's not a problem with it. Speaker 1 So you see that numbering is generated using database tools. This is extremely reliable and physically sequence database object is used for it. Bas is telling us and about appointment and we watch the video. Thank you Bas. See you tomorrow. Thank you for your message. Any other questions please? You're welcome at any time. So now you understand, we input some data here. This data is physically saved in our realm database. Let me show it for you example. Select id name from USR realty type classic. This is the name of my object. I expect to see the name the same name of my data table. Now you can see the same five records with some ids are created. I can also search for like created on and also USR code. So here are my columns. You can see you can select all of the data. Speaker 1 So this is physical data saved in my database. It's pretty simple. And of course, when you develop your big project, you will not pay so much attention to every single lookup. You will do it in much more automated way. But this is an example which will let you understand and will make you better feeling of what object is and how it works. That's why we discuss it in so technical details. If you need to change something in your object, you can open it for editing. You can find corresponding property and change it easily. If necessary, you can customize your columns. You may rename some columns. You can add new columns. For existing columns you can slightly change their properties. It will be not possible to change the column code, but you can change column title if you want. Speaker 1 So for inherited columns, there are some limitations on what is available for you for change. So generally speaking you can manage your object, you can change them, then you can save and publish. That's how it will be applied in big scale solutions. You will create tens of different lookups and creation is capable to help you with it with automation of lookup creation, using application hub tools or using section wizard for classic UI. So it will be not so boring each time when you create new object. This is technical right now just because we need some practice, we need to look at object structure. So okay, we have our object ready. We have some data here, so how we can share it with our team members or how we can deliver it to test environment. Speaker 1 Of course we need to download packages to file system if we want to submit everything to repository. But here is very frequent mistake that a lot of beginners usually do. This will be about data part, so saving anything to disk here is okay. And in our package we only have test dummy process and we have our object. If we submit these contents to version control repository, it will mean that our package only includes structure. So it will be including this object and some tests process. If other developers install our changes, they will not see contents of lookups and they will not see registered object as a lookup. So this is a very typical mistake of beginners. Speaker 1 ",
      "page": 39
    },
    {
      "title": "",
      "content": "They see their environment, they fill in with data, they think that everything looks okay and then they just export their package install for example in test environment and then they realize they miss lookup contents and they also miss lookup registering data. So we have technically only two options how we can transport such data. The most recommended option is item called Data item is a special part of the package and second option which is also supported but it's harder to use is SQL script. SQL script can be used for any kind of data changes or any kind of SQL operations that you want to run. When your package is installed on some target environment is much harder to manage and in general it's much more powerful and much more dangerous. Speaker 1 So you should only use SQL script if you have enough SQL experience and I always recommend you to check your code with someone else who also have experience in SQL just to make sure you will not do anything dangerous in your database. SQL script can be easily used for permanent serious damage for your system, so your creation will not work anymore if you do intentionally some delete of system data. So two options to transport data items or SQL scripts. I recommend you to use data items as much as possible and when you create data item this tool actually is a snapshot of some data records taken from your source developer environment. Obviously we need to specify what source object will be used for it. Speaker 1 In my case, I should select for my object code which I recently used to register my lookup in lookup section. Unfortunately, you have to remember this code name by heart and this object is called lookup. This lookup object includes a list of registered objects in our lookup section and in general we have 121 records here. 121 records and each single record in the lookups section represents registering of the object as lookup. We need it because probably we would like to be able to go to this lookup section to find corresponding object to open its contents on test environment just to check out that we have everything correctly here. So this registering was done at developer environment and it makes sense to transport it as part of our solution to test and production. Such data is saved in a system object named lookup. Speaker 1 That's why we go and search for the object named lookup. We can find it by name, by code and we can also provide some unique name here. For example, we can add something useful, reality type, classic, something like this. I do it just to make it unique and good looking and self explanatory. So it will be easy to understand why we created this data item. As you can see, system offered a set of columns, but we can also add a couple of more columns here. I'm interested in date of creation created on column here in the list of saved columns, data item is a snapshot of data, ",
      "page": 40
    },
    {
      "title": "so we will take this data from our source database and save it as part of our package.",
      "content": "Speaker 1 Bound data tabs represent exact records which will be saved into our data item so we can manually add such records. In total we have 121 records but most of them are base product contents so we do not need to transport base product stuff. We expect it to be present at our target place target database. So we do not need all of them. We can use our created on date column to sort and easily find without user filters. You can also use filters, but I prefer to make it as easy as possible. So we can sort by descending order by date of creation all registered lookups and that's how we can easily find our reality types single record this is registering of the reality type object as a lookup. Speaker 1 We can only select this data select button and that's how we saved only one data row in this data object. Then we just click save and our snapshot of data which includes only one data row will be saved into our package. Now you ",
      "page": 40
    },
    {
      "title": "",
      "content": "see data item is created. This is only registering of an object that's not the contents. So for the contents of the object when we open it, we have five records here. This is our contents. We need to make one more data item. This is quite easy. Add again data and we select an object. We have to specify object code. Here are things developers because code is unique USR realty type classic, you can easily find it. Speaker 1 I prefer to use codes because they are always unique and system keeps this uniqueness and titles sometimes are a bit ambitious, especially if you use non english language. So you may struggle with finding some corresponding title and I prefer to use codes. Okay, we can provide some common suffix just to make sure what we are doing here. If necessary we can add more columns, but the most important of course is bound data. And we can select all the records. All the records we have from source environment will be saved into our package as a special part, as a data item and we save it. And now our data item becomes part of our package. Now you see stars here which means our items are not fully saved. So we have to perform download packages to file system action in order to save our stuff. Speaker 1 No need to use camera styler because it will be recorded. I will stop it. Okay, so changes were saved on disk, stars disappeared. We can find all the items in our package here, including data part. Now you see some data records are saved as a JSON data values and you can see translations into all our supported 23 languages here. So data items also include translations and it fully says on disk everything is correct. And now we have object and couple of data items representing registering of object as lookup and representing contents our object. Speaker 1 So now our solution is full and if we export this package as Zip archive then if we import it somewhere on test environment to work and user will be able to find our new lookup in lookup section, user will be able to find its contents and user will see such data. Maybe it's time to practice with git and let's make one more commitment. Now you can see a lot of changes, 80 different changes. Mainly this is our data parts. Also we have new object here and physically it means big set of files and folders used inside of package folder. So we can name something like realty type classic lookup added. This is the sense of our change. We perform git commit to our local repository. Then we do git pull and push to submit our changes to the common repository. Speaker 1 Great, everything is done now common repository also felt such changes. You see three commits and you can see comment history if interesting. Now you can see all the changes here. So it will be easy to check previous values, current values and so on. So what I need to tell you about data items. In addition, what you know now, data items can be used not only for inserts, they are also used for updates. Let me explain what I'm talking about. So originally we have five records for our data and let's imagine we already exported our change. We imported it somewhere to test and production and everything is okay. So our solution was successfully delivered to test and production and our users are happy. But sometimes later probably analysts or business owners decided to do some changes. Speaker 1 For example, they decided to rename office space into just office. And we can do this only at developer environment because we need to share all such changes to all other environments including test and production. So such changes should be started from developer environment first and then someone decided to rename parking lot into just parking. So now we have some changes made at developer environment and we need to populate them to all other systems. Data items can help us with it, but you need to know how to properly set it up. Let's open this data item for the contents of our lookup. You can also sort by date of modification to see the most recently updated items first. So we can see this one, the most recent. Let's open it now I will tell you a bit more about how system operates with data. ",
      "page": 41
    },
    {
      "title": "",
      "content": "Speaker 1 So let's imagine such data items are so such data items is being loaded at target environment. System is capable to prevent duplicates and it uses key columns to detect presence of the record which is being processed right now. As you can see we have key for id. So id column is set as key and when system will load within the procedure of loading your package, it will take first row, it will take this id and then it will check do we have such data record at our target database or not? If not, yeah, it's okay, it will just insert all the columns that we have for this data record and it's not a big deal, not a problem. Speaker 1 But if record exists system is capable to update existing record and here you will face something which is a bit tricky and you may fail for the first time. And you will have to look carefully at the settings of your columns because system will perform update only for columns marked with the first update option and by default as you can see no updates are asked here. So when record will be found system will just skip it because no columns should be updated. So if you changed names right here and you know that such data was already traveled somewhere and you need to update it. So you go to your correspond data item, you make sure you set forced update option for columns that you need to update. Speaker 1 Also you may check some other columns if you're not sure and you also want to update so you know the source of truth is your developer environment. So if something else was changed at your target system then you have to update it anyway. So first update is not set by default. If you expect to perform update operation you should take care about it and once you do this your update will work. Also I need to tell you that in our real database now we have office and parking and if you carefully look here you will see that we still have old values here. This is a proof of this concept, what I told you previously. That data item is a snapshot of your database contents taken at a certain moment of time. So when this data item was created we had older values here. Speaker 1 That's why we can see it here. If you want to actualize it, to make it actual and read it from your database, you can just click actualize data. When you do, this system will refresh data item contents and now you see office and parking exactly as in our database. Now let's check column settings correct. And now we can save it. So if you create your data item like this and if you took care about the first update option, then you changed some source data records. In your source database you should actualize data, make sure your data records are fully properly updated and then just save it in your package. Of course your date and time of the item will be changed. Speaker 1 And next time when you export your package and import in some target environment because of change the date of modification, this item will be processed and corresponding updates will be performed. The same happens with our systems shared with a git. So we need to save everything in file system. Then we will commit our changes to our common repository and it will be an example of how we can do some updates in data and populate it on other environments. Now you can see we have only small part of changes here. So we have only some data changes but they are present. So it will be lookup data updates. Or maybe it's better to say realty type data updates. Okay, so we can commit it, pull and push and that's how our changes will be correctly saved. And it's about updates. Speaker 1 You may ask me about the delete scenario, what happens if in our source database we finally realize that castle will be never used and should be deleted from developer environment and for test and production. Unfortunately data ",
      "page": 42
    },
    {
      "title": "",
      "content": "items cannot help us to delete such data. So if you really need to remove your data from target environments, you have the only way for this. This is SQL script. So as example I will show you how we can write such script. We can use search by name or by id and we can create this SQL script in our package. Add SQL script, you should be really extremely careful with it. We'll provide its name like Usr Del Castle realty type. Speaker 1 Of course in real life you probably never use this, but this is some like a training example for you so you can create SQL scripts for some specific needs. Installation type determines the way the moment of time when your script will be executed in the scope of package loading procedure. Before package is at the very beginning. After package means after new tables will be created and processed. After schema data, it's after package data was loaded and uninstall app is the very rare case when you will need to run some scripts when your application is removed from the system. So whether it be at the very end after schema data. We're not using backward compatibility because there are so strict conditions. So it makes your SQL scripts almost useless and backward compatible with just an informational property. So we can just keep it off. Speaker 1 So I will write some script like delete from USR realty type classic. This is our name of the object and then where name equals something like this. So this is an example of a script which intentionally removes some data and this script will remove nothing if no data found. This is easy example. I do not use id and I'm using this free name just to make it simple and easy to understand. Such scripts are dangerous so you should be very careful when doing such things. You can validate it, you can check okay, no problems. You can save such script and also which is interesting. You can even run such scripts on your environment. As you can see status needs to be installed in database means that this script was not executed at this database. Speaker 1 So if we run it now, you can go to actions in write part here, then install, which means run SQL script, you can do it carefully and if script finishes with an error it still will have status and also you will see its properties and last error message text will show you last error which happened with running the script. In my case it was successful, so my script executed with no errors. And now we can check our lookup columns, lookup contents. Now you see Castle disappeared, so it was physically removed from our source database. And also when this script will go to our package and will be executed on some target environments, also the script will remove necessary records from our target environments. Speaker 1 You should be careful because if someone already started to use such data that you plan to remove, you will have some cascade problems with it. So you will have referential integrity exceptions. You will need to look at connected data and ideally you should think of it in your script, you should process such scenarios and you should think of what to do with connected data entities. And also the script is not saved on disk, so if I will click download packages to the file system, I will have everything saved on disk. Our session comes to an end today and it looks like we have no enough time to work with a complex example of virtual objects. And I will show it a bit later, but today I plan to make couple of more preparational steps for us. Speaker 1 So now we saved everything on disk and later we will start with the building of our new applications and we will need some base product parts which are very common to be used. I'm talking about contacts and accounts and also need some additional tools. So my plan is at the end of today's session to show you how you can add some necessary frequently used marketplace add ons that will really help us to operate in future. Here my example with the lookup is almost done, and also when we removed some data from the lookup, you see our snapshot still keeps this castle. So this castle is no longer present in our database and it makes sense to actualize data now. You see, I ",
      "page": 43
    },
    {
      "title": "",
      "content": "removed it even though if I do not remove it, my item was not changed, so it's not correct. Speaker 1 I think that if I keep some data here which is not present in real database, this is mistake, so I should avoid such mistakes. I should actualize data, not to keep any non existent records in my contents of the package. So actualized data saved it. Now everything is consistent. So my castle fully disappeared from my conscience here and we can also save it again to disk. So my plan for today's session and is to show you how to install some necessary marketplace add ons into your environment. We will need it later so I have opportunity to show you. Let's go to settings, then go to application hub. This is a special part of managing our system with so called applications. I will discuss and explain what application is tomorrow. Speaker 1 Currently we will use this application hub only for inserts so only to add some useful items into our environment. So add new application marketplace powered so we can find a lot of application there. And also we have some base product tools made by creation. Now I need customer 360 because it enables contacts and accounts section in my system. So simply speaking, when you install customer 360 you will have new sections in your system. You will have accounts and contacts designed in freedom UI. This is very useful, very commonly used. Almost any project implementation on creature uses context and accounts, so we will definitely need it out of the box stuff of our studio system does not include this. I will explain why a bit later when we talk about composable apps. So let's install customer 360. Speaker 1 There is a high degree of integration and seamless connection between my local website and marketplace dot creation.com. So I just click install. You see some automation works. It asks me to confirm. Okay, no worries, confirm one more confirmation about app that I plan to install anyway. Confirm. Let it be. So it will take just several seconds, possibly up to 30 seconds to install this app and as a result expect to see accounts and contacts sections added to my system. They will be displayed in Freedom UI. So you will see the first Freedom UI page at our sessions today and main reason why I do this is I need contacts and accounts in my future. Examples when you added something to your app it makes sense to download installation logs. This includes a lot of technical information, but sometimes it could be really helpful. Speaker 1 And this installation logs can be kept for some time on your disk just for future reference. Because even in case of successful installation, sometimes you may face situations where you see something that you do not expect and working with such logs can be efficient to check it out and to see some technical details about your installation. At least we can see how much time it took. So 1437 till 1510 it looks like 33 seconds. So it took only 33 seconds to install this app. And all the technical steps that were done here are listed. So if interested you can see and find no warnings, no errors. You can see even some SQL scripts were installed. And also I just forgot to say that SQL script is database dependent. So when I created my own script. Speaker 1 It was only for let me show you properties here. It only for Microsoft SQL type of the database if you need a similar script for postgres, you have to create another SQL script. That's why base creature product if you will filter by SQL script only. It always includes three types of SQL scripts for each business action that we need. For example, let me scroll down and find any kind of procedures like create omniscient tables for postgres, separately for Oracle, separately for Microsoft SQL. Three different SQL syntaxes are supported. And that's why if your solution is intended to be supporting several different database engines, you have to make several scripts for it. But mainly when you develop your projects, you will know for sure target database type. So you only you can focus only on corresponding focus corresponding target database type. ",
      "page": 44
    },
    {
      "title": "",
      "content": "Speaker 1 It could be most frequently it could be Microsoft SQL or postgres. If you expect to deploy your solution in creature cloud, it's highly likely that you will have PostgreSQL in the cloud condition. So it makes sense to use the same type of the database for your own local development. But it's not mandatory. If you develop on Microsoft SQL and then deploy your solution on postgres, it will also work if you support all necessary database dependent settings like necessary scripts. Also for postgres, not only for Microsoft SQL. Main part of configuration is not database specific. So when you develop an object, it will normally work in any type of supported databases. Okay, it was just a distraction. So let's go back to our logs. Now you see it took only 33 seconds to install. It's interesting to see results. Speaker 1 Probably we will need to reload main page just to suppress any kind of browser cache issues that possibly can appear. So now we can see a bit more workplaces. Originally we had only one studio. Now we have all apps workplace studio and we have new one which is called customer 360. We have context Freedom UI section here you can easily check if the section is Freedom UI or not because only Freedom UI section offer you, they offers you. So to shrink list columns easily in classic UI you cannot do this. So let's go for example into lookup section. You can't do this. You only can shrink columns by going to set up summaries, no, to set up columns that field to display. And that's how you can do such shrink manually. In freedom UI you can do it easily. Speaker 1 So that's how you can easily detect which type of UI you are working with. But also you can remember position of buttons. In freedom UI, managing buttons are usually the right part and fonts are different. The style of the list is a bit different functionality of buttons in list and you can see you can hide and freeze buttons, freeze columns in lists. So freedom UI is much more rich with UI capabilities and it's considered as a future of creature. And classic UI is now considered as a legacy which has a lot of implementations. So probably thousands or even tens of thousands different solutions are currently running all over the world in classic UI. And so creature supports both types of Ui so far. This is example of a classic UI, sorry, freedom Ui list. Speaker 1 You can open edit page, you will see page reach of controls with oh no, no. This is a classic UI stuff. So this is still example of it's not a glitch, it's kind of behavior connected with a cache and server side. So we have to log out. We will need to log in. Trying to use my name. What's happened with my saved users? Yeah, supervisor okay, I want to use this. Okay probably developers changed some behavior and login page which now made a bit harder to use saved passwords in browser. Okay, so I logged in again. Contact section. Now you will see edit page with no any cache issue. This is example of a freedom UI edit page. You still see some freedom UI capture like possibility to shrink lists more rich components with colors, customizations and so on. Speaker 1 But so we will study how to build such pages. You will know and if some one of you already passed our customization course, you already know how to do such things. So this is example of a freedom UI user interface accounts also shown as a list and edit page. So contacts represent physical persons with names, emails, addresses and so on. Accounts represent companies like Samsung, like Tesla, like others. So some companies that you may work with and you need to keep information about them in your system. This was example of customer 360 installed into our app. Into our system. I have a couple more tools to be installed. Let me quickly show it for you. It would be end of today's session, so not so hard. Speaker 1 ",
      "page": 45
    },
    {
      "title": "",
      "content": "It's still a bit strange that application hub is empty here, let me reload this page because something unusual. Yes, now it's better. Now you see customer 360 is already installed and we will study what an application is, how it works. Now we will just install a couple more apps from our marketplace because we will need them in future examples. So marketplace powered. Here I need tool named data binding. I will search by the word bind easily finding this data binding tool. Select it, click install button. Thanks for automation. Here confirm and install. This installation will take a bit longer because it will need to compile my environment during this installation process. So this takes a bit longer but it's still okay. And I need this data binding tool because it helps to create data items easily. Speaker 1 So data items can be automated and you can create them with several clicks. And it's easier than to make everything manually. So data binding tool takes some time to install. It's pretty awesome. Old tool, I think it exists maybe for five years and it's designed for an older version of creature and it also has a lot of support in classic UI. But now mainly we needed to support our creating of data items and this help. So this tool helps to save our time and to reduce boring part of the work. You can download installation log to see how long it took to load this. Let's check it out. Our session is almost over, so now you see 20 415, then 20 516. It looks like 1 minute and 1 second and like 61 seconds took to install this solution. No errors, no. Speaker 1 Any warnings here? Perfect. Everything is okay. Everything is okay. So our app was installed and one more final thing so we can reward this. And you see data binding item, one more item which I want to install from Marketplace is a special tool called maintenance tools for creation maintenance. This maintenance tools was made by partner which previously was named Siso. You probably saw its icon, now it's named neo technologies from Switzerland, and they use just a standard creature API. And this tool has two major functions, clear redis cache. But you don't really need it often. But the most important and useful feature is restart the app restart application. Unfortunately, creature doesn't have this function out of the box available in user interface. And partners from Neo technologies decided to fix this issue and they just made a UI button to do this. Speaker 1 So this app simply adds a couple of buttons into our creation user interface to make it easy to restart the app or to clear redis cache. I will use this restart app, we will need it, we cannot avoid it unfortunately. And in our examples you will see it. So you see 2708 started, 20 718 finished. So it took only 10 seconds for installation. You probably will ask me about why am I so obsessed with installation time? This is important because this is 10 seconds of downtime for your system. If you do some kind of installations on your production, your end users will not be able to operate with your system during these installation procedures. So we still have non zero downtime. Speaker 1 And this is important to track how long it took for creation to install something, especially if you do it in the middle of working hours. So my installation was successful. We can also go back again to application hub. Now you see one more app, maintenance tools and I can show you where this maintenance tools can be found. It will be into our settings page. Physically it's called system designer, but now developers decided just to call it settings. At the end of this page you will see new buttons. Originally we had only advanced settings, but also now we have clear redis and restart application. We will need restart application later and unfortunately some, let's say study like learning examples will require this restart application action and we cannot avoid it. In some cases you will see it later and today's session is over. Speaker 1 Thank you for your time. Today we moved forward with working with objects. We discussed how to build data items, how to operate with lookups. We also worked with Git. And tomorrow I plan to show you one more example with ",
      "page": 46
    },
    {
      "title": "",
      "content": "database view and we will move on with building user interface. I plan to focus on Freedom UI, mainly on freedom UI and if we will have some significant demand on Quest AQI stuff. For example, you expect to work or support existing Quest AQI solutions. We will have to take time also to discuss some classic UI tools, but mainly my focus will be on Freedom UI and programming inside of it. So thank you for your time. Today our session is over in case if you have any questions, feel free to ask. Speaker 1 Now your homework, as usual, is to watch this video to represent all the steps or produce all the steps for today's session. Working with your package, creating new lookup, new object, register it as lookup and practice with data items. So this will be your homework and tomorrow we will continue doing more complicated things. Thank you. Thank you for your time. Questions, paddy? Yeah, yeah, I do. Just with the apps installed. Are they installed then similar to how you would set up a packet on the backend? Oh yes. Physically they represent as packages. If you reload our configuration section, you will see that we have a couple of more packages here. And for example, the package named GLB data binding represents our data binding tool and maintenance tools. Let me find it. It's called CSL maintenance tools. Speaker 1 Is changes customizations in our settings page to enable couple of buttons. Yeah. And customer 360 c 3300 okay. CRT customers, it's surprisingly low. I need a bit more. Okay, let's search just for 360. Yeah. Customer 360 represents three packages in one archive. So we will study how application works, how it is created and what is inside. Tomorrow you will see that application finally keeps some packages behind it and when we load such applications, physically will load one or several packages. Here you see customers 360. It includes several packages. So that's how it works. And physically application is a bit artificial thing. Physically we operate with packages. So anyway you can see everything which was customized here as a package and the package contents inside of configuration ",
      "page": 47
    },
    {
      "title": "section. Thanks. Thank you. Any other questions please? Yes basil, thank you.",
      "content": "Speaker 1 When I am going to advanced setting, the configuration page doesn't work, it just reload. It's because you're probably using Windows home. If you windows home you have to close previous page. In this case, configuration page will be working normally. Yeah. Let me, I have no options how to make it better, unfortunately. Probably you can consider you can upgrade to Pro Windows Pro version. In this case you will have no such issue. Sure. This is kind of limitation connected with WebSocket and this is something that makes home different from pro and it's not so comfortable. I agree. Thank you. Thank you. Okay, and it looks like Tushar had a question. Yes tushar please. Speaker 1 My question is like if we have a new lookup, like if we have two, three more lookups and we want how we can then update it and like a system designer, do we have to create the data file again? Or we can update in the existing data file which you already showed. So probably you are talking about new data records added to existing lookups table, am I right? No. Like if you suppose if total number of lookups are 121 right now, if we add like five new lookups, then how we can bind those? Oh, if you have five new lookups, you have finally to create ten new data items or maybe less than ten because one data item for lookups can include many records for registering. Speaker 1 So the minimum amount of data items in your case will be six, one for five lookup records and five others for each separate data contents of your lookups. So simply speaking, any lookup should include data item for registering of the lookup and data item for the contents of the lookup. In this case it will be the most comfortable for your end users because they will always find all your lookups in production and lookups section and they will be able to open it to see their contents normally and data items guarantee such transport of records. Okay, thanks. Thank you Tashar. And that's all for today. If you will have more questions. I understand that probably questions will appear ",
      "page": 47
    },
    {
      "title": "",
      "content": "later when you try to practice. So you may use my email. Please send messages. I will try to find time to answer you. Speaker 1 So our tomorrow session will be as usual and we will continue working with objects and we will start to work with user interface programming. Thank you very much for your time. See you tomorrow. Bye. Good luck. See you tomorrow. Bye. Thank you. Tomorrow. Thank you. Bye. ",
      "page": 48
    },
    {
      "title": "",
      "content": "Speaker 1 So today session number three of our development on creation platform guided learning. So we started development questions. We already set up our environment. We did some simple changes there. We practiced with objects and with data items. I just forgot to note that you need some additional permissions and when you place your environment, your app into some protected folders like Cub or C program files or somewhere in users. So it means that such folders are protected. In this case you may need some special permissions. I already did it somewhere here, so let me show you what special permissions you may need. No, not here. Let me find probably this one. Yes. So this is important. Speaker 1 If you experience some problems with your app and if you start to get error messages about some files are not cannot be written or you have some file system access issues, especially you can face it during calculation, you can create separate setting and you can find your app folder Terrasoft web folder and add special role IIs underscore I users and you should provide modified permission for this role for all of your application folder Javasoft web folder this will grant unlimited file system access to create your application. So you will not have troubles with saving files. You will not have troubles with application errors about some file system issues. In case if you will find errors like we had with Bazel, that system tries to save some data somewhere and fails. You can also make sure that such permission is granted. Speaker 1 So iis I users it's a local role which includes set of automatically created users made by creature. Sorry, made by IIS. When you create your application pool system makes automatic creation of application pool identity and such identity. Actually it's medically generated user. I can show you something in my c users. You see I have a lot of site automatically generated users created previously, so I probably should remove most of them. But this is something that you need to know. That system runs under such privilege. If you have local administrator privilege, you can also look at your task manager and you can see who exactly runs w three WP process. In my case this is some user which I can't see unless I will start something with my local administrative privilege. Speaker 1 But currently my regular user has no such privilege because of corporate restrictions which I have with my environment. So let's move on. So this is something that may help you with troubleshooting of your access issues of your application. Now let's move on with next topic. So I just wanted to show you some interesting thing with virtual objects and with connecting objects to a database view because previously we worked only with regular normal objects when you created it makes the same database table in your real database. So we added some data. Now you see the same data records physically, but you can create very interesting situation when object can be connected with something in database not created by creation application. Speaker 1 For example we can make our own view in database, so we can use some SQL scripting and then we can make an object named the same as this view and we will have the same columns in our object the same as available in view. And finally it will show you some interesting trick, how you can use creation objects to read data from sources not created by creation system. For example, such sources may be created by developer or can be used for integration purpose to connect with other systems. So let me show you some simple example which implements this idea. And first of all I need to tell you something about business. So here we have a contacts section. Contacts were installed here because we recently, yesterday we installed customer 360 app and we used application hub for this. ",
      "page": 49
    },
    {
      "title": "",
      "content": "Speaker 1 Here we used application hub and we installed it from marketplace. So this customer 360 was installed from creation marketplace. Customer 360 encodes contacts and accounts. So now we have contacts section and what I want to show you is that contact by default already has birth date column and also contact entity has integer age column representing current age which is recalculated every day automatically according to birth date and current date. Let's make a bit more examples with age calculation so we can click on supervisor. We can provide some birth date somewhere in like this where it be save close. So now you can see we have provided some birth date and we have automatically recalculated age. So this is age in years and everything looks good. But let's imagine we have some unusual task to calculate age of a contact but not in years. Speaker 1 We want to calculate it in days. So just to see how many days certain person lived and what is its current age in days. We can do it easily at the database level. So let me show you, I already have some examples how we can do this. So I will do it quick and I will provide you necessary scripts for this SQL view. So let me show you how we can do this example. So first of all I will show you an example which makes corresponding calculation like this. And this is Microsoft SQL server query which selects id name, birth date. And we use some SQL functions like date default function to make some kind of calculation here. Now we do a calculation of a difference between birth date and get date. Speaker 1 So actually it's better to say difference between get date which represents current date and birth date. And it makes a difference in days and shows us some integer value. So if we run such query we will see list of our contacts and we will see age in days. This is a very simple example. It is made specialist, so simple so you easily understand it in real life. Such approach like making your own selections from the database can be much more complicated. Using some aggregations, using joins, using subqueries, using having operators, using group by and a lot of other things. So you can do it unlimited complex if necessary. My example shows you that you can do some queries, you can use some functions from SQL, you can do the same in postgres. Speaker 1 And this is example of how we can do some special selection from the database which is not normally available if you want to use just only creation tools. So creation supports three types of databases. It doesn't support some specific database dependent features like date, d function. And also we have not so much of flexibility building queries in our creation. So as we have flexibility to build queries directly from SQL. So now you can see we have an example of such query. So what else we do? Now I will show you how we can make a database view based on this query. We can use SQL script and of course I could run this SQL script directly at my SQL Server management studio. But my plan is to make it transportable to other solutions, to other environments. Speaker 1 So I will share example of a script for creating Vue for SQL version and some of you are running postgres. For example you may run postgres at cloud instances like demo websites or maybe trial websites. They are usually based on cloud, on postgres. So this is example of postgres for the same stuff. Okay, so these such scripts of course obviously are database dependent. Now I plan to use my SQL version but I will not run it directly in this editor. I know it will work for me, but I can show you how we can make a SQL script in our package. So let's go to configuration our system, then settings, then advanced settings. That's how we go to advanced settings part. Or we can also go here by typing the URL of our website zero dev. Speaker 1 ",
      "page": 50
    },
    {
      "title": "",
      "content": "That's how we go to configuration section, find our package that we decided to use. Add SQL script I can name my SQL script whatever I want. For example USR, create contact age, days view, something like this. It could be anything. When we create this script, when we start the script in a process of package load, it could before package because at the very beginning of the package load procedure, no backward compatibility just apply and I have my script here in the clipboard. So this script creates or modifies database view with a certain name. This name should start with USR. Then you can do whatever you want and you can name it. But there are some conventions agreed with developers and if you make a view it makes sense to name it vw. Speaker 1 Just to make clear that your object is not a simple table, you plan to make a view. So this view name should be the same as our future object that we will create. That's why this view has such a strange name. This view will work as select statement, selecting set of columns and as you can see I have to use aliases for columns with USR prefix because of requirements. When we design our object in creation configuration it asks us, not forces us to use USR for column prefixes. Yes here so you can see we select id name, birth date which includes day, month and year and date diff as an integer value which will represent age in days. So this simple view will return four columns for us and we can register so we can set it up as a SQL script. Speaker 1 You can save this SQL script. Obviously if you work with postgres database you should use postgres version for this. When you create SQL script you can decide what type of database you are focusing. So close it and we can also run this script. So of course I could run it in my SQL server management studio. But here this is example of how we can run SQL script from your configuration section. Okay I'm trying to install it means run this script. Now if it has some errors we can go to properties find last error message text so we can see what went wrong here. In my case everything looks good so nothing special. I already have my view and I can check this view presence running something like this. Select something so select everything from and here is my name of the view. Speaker 1 So if I select successfully. Yes, now it looks like my view is present. It has four columns and my database level part is ready. So I have database item as a view which returns some data if I select it. If something is not clear, if something you do not fully understand why I'm doing this. Please don't be shy, ask questions, I will be happy to answer you. And now this database part is ready but now we have to join it with creation. In creation we can create an object and we can provide the same code for the object as our database view name. Here I will also paste it for you. Don't forget we can also make some title, something like contact age and dates, something like this and the most important property here. Speaker 1 So now I will show you and explain some of behavior settings we must set up. Represents structure of database view this is very important property which tells creature that system should not try to create corresponding table or find existing table. If we create an object with represent structure of database on it means developer took care about database part themselves. So everything is already okay at the database. So creature will just not interfere with the database to not try to create a table or modify existing table. So creature simply doesn't know what is in database for you already corresponding object. But when you will try to use this object, for example, ask creation to select data from it. Speaker 1 It will try to do it and treat it as a table with a set of columns and columns information will be provided in this object, so it will try to use it as a regular object, but it will not try to modify its structure the database. This helps us to make anything at the database level, including views or self handmade tables. Or in some cases we can use like ",
      "page": 51
    },
    {
      "title": "",
      "content": "materialized views in oracle or indexed views in Microsoft SQL. So you can use anything that can be used for selection from the database and turning on this option represents structure of database view makes this trick possible. So when we design our object we will not use parent object because we do not need any kind of inheritance here. Speaker 1 All we have to do is set of columns which matches with set of columns of a real database view. First column is USRiD and the type is unique identifier. So we have to represent it. Type is unique identifier, column code is Usrid and title could be just id. Okay, this column is done. Next one is uSR name text 250 you can name name and it's okay. Third one is USR birth date which is a date only birth date. And the way the last one is integer USR age days the most interesting column for us, integer USR age days age in days okay, so we got it. The last change that we have to do is the only required property for an object is the Id. I don't like this title. I would like to see here key column or key field. Speaker 1 So our key column is id column we created especially it has Usrid code and it has id title. So this is the most important part and that's all we can save and publish our object. As you remember, we can just click publish because it performs save anyway. And luckily for us, publishing such object which is represented as a database view does not make any changes in the database. So it will be really quick. Such publishing will be faster than creating new table and saving publishing. Regular object so we made an object with a special property, special behavior and our object is ready now so we can start to use it. We can go to the lookups and as you already remember, lookups is the easiest way to see what is inside your object. So we can register our object age in days. Speaker 1 We can register this object as a lookup. By the way, you probably noticed we have a new button here. Sorry for this alignment, but it's not a big deal. This button appeared as a result of data binding tool and it helps us to automate creating of data items and for many different scenarios. In our case, we need data item for register object as a lookup. If I click bind lookup here, I ask system to automatically create data item for me. I need only to select target package and system will do automatic creation of data item without my manual action. So I can see what happened here, what actually was done. You see that this data item was created automatically contact agent days so we can close it. It is saved into our package now and it's okay, let's open created object now. Speaker 1 You can see we have name column, we have birthday and we have age in date. So you can see this calculation works. There are some side effects because of this is editable list and our object is not inherited from base entity. We have some side effects caused by it like this. So you see it's not working fully as expected. But when we reload data, at least reading data is working right, working correctly. So you see that calculation of contact in days, age of contact in days is performed well. And you see this calculation works well in real life. You may use this approach to perform some long lasting calculations like turnover finance calculations, like some debt calculations, or other things that usually take time. So you may do such calculations at the database level with kind of views and the subqueries. Speaker 1 Then you can create an object representing your data structure and with the same name and same columns set. And if you mark this object as represent structure database view system will not modify data tables. It will trust you and it will try to read data from sources that you specify. So it will try to read data from the table or view with the same name as your code. So this trick can be also useful. And I would like you to see how we can connect such object to existing contacts section. In order to make connections between objects, we must use lookup columns. In our case, it's harder to make a lookup column from contacts to our new entity. So it's better to use our new entity and then use reverse joins to connect with contacts. ",
      "page": 52
    },
    {
      "title": "",
      "content": "Speaker 1 Now I will show you how we can do this. But first of all we need to modify our SQL script. Let's go to our SQL script and add one more column. We can add one more column. It will be id as contact id. So I will use new not to contact USR contact id. Yeah, so this will be one more column and I plan to use this column as a basis for my future lookup column. Of course I need to run this query. This will be very quick. We can check out the database that our new column appeared. Great. It's important to name it exactly as is USR contact id. Okay then we will modify our object. So our script is okay, let's go to modify our object we can add lookup column named contact not contact id. Speaker 1 We will name it USR contact title can be contact and there are some architectural peculiarities. When we have a code something then on database system works with code plus id suffix. So I named my column in the object level USR contact and system will work with USR contact id when it reads data from the physical database. This happens not only for this object, it happens for all objects with lookups. So let me show you like account. For example account column account entity has an industry lookup column and at the database level we have industry id. It has type at the object and at the database we have type id, city id, region id and other lookups saved in the database. So when we have a USR contact column, system will work and search for USR contact id at the database. Speaker 1 We have to specify lookup property. It will be a contact obviously it looks like that's it. We do not need anything else. Let's save and publish. Click publish, make saving and publishing. Now you will see how we can use this object so we can add connected. Probably we need to reload the page because of some client side issues. Caching issues maybe prevent us from working normally. So our main entity is contact. Now I plan to join my contact age object as a joint entity using reverse joins. Let me show you how we can do this. Add columns related objects. Now I have to find contact age in days object and then I will use a age in days. For example, it will be maximum value no matter which one I will use. I can even use first record value. Speaker 1 So let it be just maximum value for one contact. We always have just one data row in our connected entity. So maximum will work for us. And I can just name this column age in days. No need to use any additional filters, save it. So now you can see that age in days was successfully joined to existing contacts section. We did not customize anything with contacts at all. We used our own artificial objects. We made an artificial lookup column and that's how we are able to connect to different entities and display corresponding data. I hope this is interesting example for you. You probably have your own experience with use of column settings, related column settings. Some of you probably visited our customization course provided by my colleagues. Speaker 1 So possibly this is not very difficult for you, and if you have more questions about it, just tell me. So it was an example of how you can use additional tricks with objects and to connect it using database view. There are some other properties here like virtual connected to the portal, wave update and so on. So I only have to tell you a couple of words about virtual. So virtual means that object will be not connected to database at all. Virtual objects are usually created for the purpose of providing some template structure and then to be inherited or for the purpose of managing data without actual read from the database operations inside of object model. Speaker 1 If we will search in our configuration for objects, search for something with the name base, we'll find a lot of objects ",
      "page": 53
    },
    {
      "title": "",
      "content": "like base address, base entity, base folder and so on. I will open base lookup as example. You will see this object is virtual, so it has no its own table. So you see object based lookup. But if you go to the database, you will not find the database table named base lookup. So you see we have some base value lookup, something very suspicious and interesting and okay, I will look at it later. But base lookup is not found here because this is a base object which is virtual. And mainly it exists only to provide inheritance. We have set of columns, business columns, we have inherited system columns. Speaker 1 And when we create new object inherited from base lookup, it will be a true new real object. But you will inherit a lot of properties and events, settings and behavior from base lookup. And that's how this object can be really useful because you can. So base architects can program lookups behavior. Once in base lookup object, then you create your own lookups inherited from it. We did it actually. And that's how you can use one template for many parts of functionality. And it's quite efficient. So we have a lot of base objects, most of them are virtual. I only interested with this strange example, base value lookup. So let's search base value lookup. Base lookup this value, it's very strange why we have table for it? Oh, because it's not virtual. Someone needs this object and someone keeps some data into it. Probably. It's interesting. Speaker 1 Let's check. I never faced it previously. Base value lookup let's see what. So it's empty. Translations are also empty. Okay, no problems. Everything is okay. So that's it about lookups, about objects. And I only wanted to show you one more thing, final thing about objects. And let's look at our reality type classic object as example. So I wanted to tell you about support of translations. So for you already know that creation supports translation of user interface. You already found we have a languages section, we have set of active languages, so you can easily switch your environment into other languages. In your profile you can switch languages if necessary. But what you probably do not know so far is that creation does not only support your UI language change, it also supports translation of some data records. Speaker 1 And inside of the objects you can specify what columns will support this translation and what columns will not support translation. By default, name and description text columns are turned on with this option, localizable text. It means that if you want, you can save translations of name and description column into other languages. And this translation was already done at base product lookups. So if we read some data from some standard lookup like account type, you will see six standard records in English. But if you will look further and find out that we have a translation tables for it, they usually have cis prefix, then main entity name, and then LC suffix, you will see translations for such data into other languages. So you can order by cis culture, you will see translations into other languages. Here is russian translation. Speaker 1 Here is probably what else, I don't know what is the language here? This seems to be italian, maybe Portugal and so on. Probably, I don't know, it's hard for me to guess. I can join and so decode such cultures. Okay, let's do this. Not so difficult, syscall type. So this is our localizable, we can join sysculture and we will read data link from cis culture and then culture name as language. Okay, so now you will see corresponding language. So this one was Russian, this one is Dutch language. So Netherland language, this is Portuguese, this is Spanish, Vietnam language, French, Italian and others recently added Hungarian language, Czech Republic, arabian right to left by the way, there is a right to left support. This is what Sweden probably Hebrew, Romanian, Japanese. Speaker 1 So you can see translations of the same records that you get from your main table are saved into different languages and out of the box lookups. That is because name and description are supported with localizable text. ",
      "page": 54
    },
    {
      "title": "",
      "content": "You can turn this option off if you don't like it or you can keep it on by default because it was inherited from base lookup. It was inherited and that's why we did not change it. So we also have possibility to save translations of name and description into this separate table. This separate table automatically is automatically created for our lookup and so if you enable at least one column it will be this separate table will be named CIs, then your object code, then LCZ. So in my case this information is empty. Sys usr realtor type lcz my table is empty, we have to type classic. Speaker 1 Yes, you see my table is empty because I did not provide any translation. But once you will support several languages and if you want to keep your lookups translated into other languages so you can start to use it. And the best way to transport and make such translation is to register one more user with another language and then log in at this user, go to lookups and when you will go to corresponding lookup then you will start to edit data. If you edit it with other language, so you will provide translations and this translation will be saved properly into corresponding tables. I hope this is interesting enough so if you're interested and really need such translation support, creatio is ready for this so you will not face any troubles. Okay, so finally we finished playing games with contacts with our age. Speaker 1 Everything should be saved on disk. Of course we will remember now about our visual studio code and git client to share our settings with our imagined team members. Now you see some items created so we can commit something like contact age view example added. This will be our comment for the commit that we do with these recent changes. Okay, as you can see we did not forget about registering of this lookup as of this object as lookup in lookup section and made a data item with the help of data binding tool. Okay, we can submit everything to our local git repository, then pull and push to global git repository. That's how we can share our settings with our other team members. Okay great. Speaker 1 What else I wanted to show you before we proceed is example of delivery because it will be important I think that you are interested how we can transport our solution for test and production. You remember version control. Working with git with bunch of files is not so efficient when you want to transport your solution for test and production. This type of sharing with many files is good for developers and between developer environments in order to make delivery to your test and production. You can simply export your package into a file and then I will show you some magic. Now you can see our file was saved here. This one is our file saved seconds ago. And this is a zip file. Speaker 1 Inside of it we can find Gz archive and inside of it we can find a single file with metadata saved here and it's not so readable. And this is a transportable format for creation packages. Okay, so this is metadata of your package fully including all the package items, including all scripts, including processes, whatever we have and even more including file system package contents from the files folder. Let me show you telescope configuration ekg dev classic. We have some file content as a result of our configurations, so such files also will be saved inside of this zip archive. Then we can go. Recently I installed one more environment so it will be test environment d two test hello node test so we can run this test environment. Currently I am running my second creation environment on the same PC. Speaker 1 It will take some ram, some cpu. You see my ram consumption is more than 11gb now, so I can start my second environment. I will use it as a test environment to check how delivery works and to also make sure that I have no any troubles with changes with transition of my settings between environments. Sometimes it happens. Now I started to receive this attempt when I attempt to login. Then it drops me again to the login page and on the second attempt I successfully log in. So it happens quite often. But now I don't know how we can fix it. So okay we logged into our test ",
      "page": 55
    },
    {
      "title": "",
      "content": "environment. I can show you how we can load our changes from zip archive file. This is very easy. We go to settings. It doesn't require any special skills. We only have to be administrators. Speaker 1 So we have to be a member of a sysadmin. Let me show you system users. My supervisor user is a member of system administrators role. The only condition necessary for us to load packages and here is my application hub on test environment and I can just install the application from file, select file from disk, go to downloads. This is my dev classic package saved several minutes ago. Open it. Normally this loading procedure will finish successfully, but in some cases you may face troubles here. You may face missing data items, you may face foreign key constraints and exceptions, some database exceptions. So in some cases you may face errors here. Anyway, you should look at installation log because it will give you enough technical details about how well our loading was performed. So we will invest several seconds into looking at it. Speaker 1 Let's see what happened. So 13 seconds we started no visible errors and 31 finished. It looks like maybe 18 seconds to install. Very good, very good. Okay, so you see some text, comments and details about installation of the package, but now it's okay. So our package is already loaded. We can find it in configuration section of our test environment. But this package will be not editable. So our package after loading we can find it here. Dev classic as you can see this package is not editable because we loaded it from file. We intend to use it for test or production. So system does not expect that we will modify it. So when you load package from file it will be read only if you really need to modify it. Speaker 1 For some reasons you can do this by unlock for hotfix temporary thing that helps you to make temporary make your package temporary editable. If you forget to lock it again, system will do it according to the special timeout which can be found in system settings. Now you can see my package was loaded. You see status, no errors. It means all SQL scripts or objects were applied successfully. Now let's go to the lookups section of my test environment. As you can see this lookup section doesn't have any column setup which I prefer to do. Okay, we can go back to list view and we can start to adjust it to easily find the corresponding new lookup records. Now you can see my realty types. I expect to see four records here, so they were normally loaded. Everything is okay. Speaker 1 Contact age in days as you can see according to my current data on test environment is calculated. Great. So it looks like everything I did was normally loaded and we can use this environment for future checks. Now we can temporarily disable it, but then later we will check our new environments. We will check our new application which we plan to do right now. So you see that delivery is very easy. You can just export your solution to the file. If you have many packages, you can export many packages. You can also do some tricks at the database. For example you can put several GZ files into one zip file if you want to make it faster to load. Speaker 1 And today I plan to show you how to make a UI settings how to make new sections not with section wizard because it's classic UI, outdated stuff. I will show you how to make new sections, new bake applications made with automations provided by application hub and Freedom UI. So we will focus mainly on Freedom UI. But before doing this I need to explain you what is application hub and how it's intended to be used. So we go to settings, then we go to application hub section and open it. Special tab opens for you. And this is a place which is designed to manage your freedom UI customization. And now we need to talk about new functional item of creation that is called application. So I will try to explain you what application is and how you should understand it. ",
      "page": 56
    },
    {
      "title": "",
      "content": "Speaker 1 Application appeared not so far ago, maybe just a couple of years, and packages were present for more than ten years. So you see that application is generally relatively new to creation and previously we had only packages. So application is a new logical type of items and usually one application means one or several packages. So application is a higher level logical setting and it may include so it must include at least one package. But sometimes it can include more than one package. As example, customer 360 app includes three packages. Only one of them will be like current default package for saving of customizations. But now let's focus on the idea. So customer statistics is an app and it has three packages behind it. Application has its own properties like name, version, default page description, date of creation and so on. Speaker 1 Also it has information about its developer. Terrasoft here means that it is a creation company. Terrasoft, as you remember from previous sessions is previous name of creature company and creature brand. So application has its own properties. Also application has color settings and application has icon. You can find data binding tool, but it's a bit artificial. Application just made for compatibility. Previously data binding tool. It was just a package and when we loaded it we have this GLB data binding package, we can see its contents and originally data binding tool was not designed as a freedom UI app. So all customizations we have here are based on classic UI tools. That's why we will not see any pages, any special section data. We have just data items related to different parts of creation ",
      "page": 57
    },
    {
      "title": "application. But it's not actually sections.",
      "content": "Speaker 1 Such items are data items created for some purpose. Data models means objects. Business processes are like automated business procedures implemented as diagrams. So code in creation. They are called business processes. No integrations and advanced settings show us all packages for this app or filtered by selected package. So application is a higher level setting or entity which includes one or many packages. The reason why creatio needed applications was caused by shift to so called composable apps approach. I will try to explain what it is. So originally we had no any customizations at our studio environment, so it was just constructor only. Then we installed several apps like customers 360 like data binding. Also we installed maintenance tools and so on. If necessary we can remove some of installed apps. Speaker 1 The system will revert and go back into its original state which was before installation of such tools. So finally, end user system may include only solutions, only applications that user decides to run. And that's why we can call this logic composable app. It's very close. Composable apps, it's very close how you manage your software at your smartphone. So you have platform, let's say Android or iOS, and then you install necessary apps that you use for some certain purpose. If you don't like some app or if it starts to work, not normally, you can remove it easily. And previously, maybe three or five years ago, it was not so easy to do in creature, because creature had out of the box functionality which cannot be removed from system. So old Kriacia systems included functionality that could not be removed from it. Speaker 1 So it was not fully composable approach. And we had just simply hard coded part of the system which also was customizable, but it was not removable from the system. Now developers decided to make constructor only and then to install everything that you need on top of it. And that's why they needed applications, because sometimes functionality that you want to add includes more than one package. So developers needed applications because some functions were designed as set of packages, not just one package. So application means set of packages which includes some certain business functionality. And applications can also be imported or exported. So when you export an application, it physically saves set of packages on disk into one zip archive file. So here is a single zip file. If you look inside, you will see set of packages Gz files. ",
      "page": 57
    },
    {
      "title": "",
      "content": "Speaker 1 And this is pretty standard for creation. So you can use one zip file for many packages inside. It was possible even before applications appeared. So now developers just improved this idea and made a separate logical level code application. Okay, how safe is creatio? Kind of after you install a package? Like is there a lot of artifacts that are kind of left behind or is everything cleaned up except for maybe database entries and stuff like that? You're asking a very interesting question. For example, when you install it and then you decide to remove it, of course we have some items in configuration like SQL scripts, which may do irrevertible change. So some changes in the database can happen that you physically cannot revert. Speaker 1 So ideally if you develop a very good app and then you remove it, you can take care for full recovery of your database original structure after your application was removed. And if really needed, you can create SQL scripts which will do this. Recovery and installation type will be uninstall app. So uninstall app installation type is a special scenario when the script will be started only in case when your package is deleted. So this is kind of recovery steps that you plan to do at the database in order to make everything clean as it was before installation of your app. But in real life, not all developers do this. Speaker 1 So in real life when you remove your app, some traces may remain in the database and usually this is not critical for application because logically such columns or some data leftovers will not be available to see easily unless you go to the SQL level, unless you start to make some special queries in order to find them. So in general, when you remove some app, it will be logically cleared so it will fully disappear from the system. You will not see anything but some tiny minor database leftovers can be found the same as you have a smartphone. When you install some app, then you remove this app, some application log files, some application technical things may still remain in your smartphone. If you go into smartphone file system with the proper tools, you will probably find it. Speaker 1 So in general, it was designed to make it easy to install some app and to remove some app. And ideally when app was removed, no visible traces should remain. Beddy is it clear? Brilliant. Thanks million. Okay, great. Thank you for your questions and I encourage all of you to ask any questions if something is not clear. So having such a dialogue in our sessions is much better than just a lecture. And I think lectures are boring. So speaking is better. Thank you for asking questions. So let's move on. We need to do some practice, so to do some practical steps to understand it better. Of course our practice will include creating your app. Now I need to tell you about some, let's say business value. Speaker 1 Our plan is to automate realty estate agency and we want to keep list of realty records in freedom UI application. We will have a section for such list of realty records and we can use existing platform customization tools to make it as fast as possible, to make it quick and easy. So click new application. We have several different templates here. In my case, probably the best option is records and business processes. For very unique scenarios. You can use custom app which will create an app and it will be empty. So you will have to create your own section inside. But if you create an app based on records and business processes template, it will start to create a section for you. Section is a data entity. So a big data entity which you can use inside your system. Speaker 1 ",
      "page": 58
    },
    {
      "title": "",
      "content": "In our examples of sections are accounts or contacts and also we have set of system sections like lookups or users or system settings. So section in creature, it's like main big entity which usually has a lot of columns and usually has some subordinate items called details. We will study it, you will see. And also if you're just more risky and you're interested in AI tools, it's possible to make a section with the help of AI. And you need to explain in words what section you plan to create, what colors should be there, what details you expect to see. But personally I do not like this approach because if it makes it incorrectly, then you will spend more time to fix than to create from scratch. So that's why I prefer to create from scratch. Okay, let's create new app. Speaker 1 Let's change its color to something more like significant. And we can see, oh, we have some new icons here. So I plan to create a real tea section. So possibly I could find some icon representing a house or apartment. Okay, let it be like this. So it will be icon for my new section. Name of the application, it's very important will be caption of our section. It will be title of new created object. So it's important whether it be real t and advanced parameters. You can see we can provide some application code. Code is also very important because this code will be used to create a package, to create a main object, to create some corresponding settings related to object like page or list and page for edits. So forum page we call it. And so this code is really important. Speaker 1 You will not be able to easily change it later. So it's important to provide it correctly from the first time. Also it's possible to link so simply to create rhythm UI section based on existing object. But this option is really useful only in case if you already have some created objects in your system. And usually it happens when you already have classic UI solution and you want to migrate into freedom UI. In my case I will create everything from scratch. I will not even use my previously created lookup because I planned to use it for Quest SQL. So we have a separate package, separate application and let's create it. Creating will take just several seconds because it will only add some template stuff like main entity, page list and that's all. So my app now is called Realty. Speaker 1 It has its main name, version, default page, some description, date of creation developer. This is a string named customer. If we change our system setting, named publisher to be possible to change developer of this package and this app. Okay, no changes in app properties. We have pages part, we have list and form page, we have navigation and section. So it's registering of a realt section. We have main object realty, we have no business processes, no integration so far and we have structure of our packages. Now I need to explain what is shown here. So our app now has only one package. This package has certain properties and the most important is that this package has a almost black colored folder icon which means this package is editable. Let's compare with other customer 360 now you see gray colored icons. Speaker 1 It means such packages are read only. If you want to customize something in customer 360 app system will not be able to save anything into such read only packages. So this will automatically create new package for you. And unfortunately automatically created package will certainly have an ugly name. I will show you this a bit later and I will show you how you can manage efficiently packages for different apps and how you can connect it. In my case I try to keep it simple because I understand you are beginners, you want to make it work first and you do not want to go into unnecessary complex things. So now we have one single app, we have one package for it and system helped us creating main object, creating set of client modules representing page settings and some technical things for pages. Speaker 1 And as you can see it created seven data items representing inserts into some system tables that are necessary to make our application work normally as a section. Let me show you where we can see it. We can also run this app but I prefer to work with main application window and in order to fight with any potential browser cache issues I ",
      "page": 59
    },
    {
      "title": "",
      "content": "reloaded it. Now we can go to studio and switch to my applications workplace or we can find all apps in all apps. We will see all available sections including our reality section recently created this reality section now has no data. It is based on main entity named realty and we can use edit page to add some data. In this edit page we only have name ",
      "page": 60
    },
    {
      "title": "column so no customization so far. Apartment in okay, let it be New Orleans.",
      "content": "Speaker 1 So this is just an example of a reality object that we plan to reality data that we plan to save. Such list and edit page will be used to manually input data, to modify this data and to work with this data. Then of course we need to customize it to make more columns to make it more useful to work with. But let's make a break and then we will continue because it looks like I just forgot to have a five minutes break. So let's make a quick refresh and then we will continue with customization of our new section. Now we continue to customize our section. So what we can do here, there are several ways how we can make changes. I will show you which way I prefer the most. So when you go ",
      "page": 60
    },
    {
      "title": "to a certain section, for example here is list page.",
      "content": "Speaker 1 Then you open edit page. You can also open edit page by clicking on this action, but it takes two clicks quite hard and we can just click on this hyperlink. Okay, now we have a so called form page or edit page. We can do customizations right from here with a small edit page button. It will open corresponding page editor if you have. So if you already passed our customization course, you already know how to use this page editor. I will only show you some quick settings here. So we will not go and reproduce the same customization course because I need this section only as a on the as a basement for our next programming examples. So customization here and no, code settings are not the top priority for us. We will do it just because we need it for future samples. Speaker 1 So I will do it quite fast. Please confirm. Do any of you reproduce the same steps just during the session or you just watch and plan to do your own practical steps separately? Watching videos so please type plus in our chat if you follow me just during this section right now and do the same examples at your environment. In this case I will do something not so fast and please type minus in our chat which will mean for me that you are only watching and I can do it quite quick. So not waiting for your response, some of you responded that you do practicing along with me. Thank you Monica and Rakhi. But most of you just watch. Okay, I will not go too fast and I will show you and wait for you to do the same. Speaker 1 So my plan is to extend a bit our settings and make it more useful. When I select any column we can look at its properties settings. We have some kind of object inspector for settings of a certain selected item. In my case here is title code, data format, some settings and here I would like to make it copyable. For some unknown reasons, developers who made a template made name not copyable. But I think it's very good idea to easily create copies of existing records and copy names as well. Okay, we can change any properties here, not so many. Okay, so what else our reality will have? Of course it will have price. So we can use number columns. As you can see we have set of columns from this list. Add new field set so we can add different data columns to our page. Speaker 1 Simply drag and drop. You see several potential places to land our page. Our column I prefer to put it here nearby name. I can name it price. I can also specify the amount so maybe the currency of our price to make it more clear. So let it be price USD if you want to translate it into other languages, you can also put translations here. Code is very important property and I also need to warn you, a lot of beginners have mistakes at their pages just because of messing with codes. So please take it seriously. I recommend you to set up codes initially just when you design your columns and do not change it later. So let's set it responsibly. And as you can see, code is one of not so many columns where we have to confirm our change or reject the change. ",
      "page": 60
    },
    {
      "title": "",
      "content": "Speaker 1 In our case, code will be something like USR because we need prefix for our new columns and technical things, so it requires prefix. USR price USD will be our code and we confirm. Save this change. Okay, the data format will be decimal, two digits, no description, maybe not required and okay, if you want you can make it required. So system will not allow you to save zeros here. No need to make it read only, no need to hide, no need to make custom settings for titles. But what we need here is element code. This is also technical part, but element code may be important if you plan to search for this column in its settings, like in technical parts in JavaScript and client module. So if you plan to do any kind of programming, then having a good looking friendly code is important. Speaker 1 It should be unique so we can name it the same as our own USR price USD and confirm. As you can see, confirmation is provided for the most important properties and columns of our items. So element code seems to be important because we have this confirmation stuff. Okay, did it. So this is how we can make one more column. Quick, let's say another one. Any reality has area. I will do it a bit faster now. I think you already got main idea how to do this. Decimal 200 and also at the end element code will be USR area and confirm. When we click save, our changes will be applied to the object, to the page settings. So we will have our settings saved in our system. Let's do a bit more drop down type. We need a lookup. Speaker 1 We need type what is real t and I will use it based on drop down or lookup. Column drop down and lookup are very close synonyms so it's almost the same. The title for our new lookup column will be type. Inner code will be USR, type and confirm. But lookup is not present here. We do not want to use similar lookup reality type made for query CQI purpose. So I plan to make a fully separate solution and that's why we can make new lookup from scratch as you can see system helps us with automation. We can create. We can ask system to create new lookup. It will be realty type and code will be USR reality type. Speaker 1 No classic UI words here so it will be our freedom usage reality type, title and code are necessary because system will use it to create new lookup object inherited from base lookup. It will also register it as lookup in lookups section. It will provide data items for this registering and the only missing part will be lookup contents. We will do it later. Okay, type is clear. One more thing that we will need in our section is offer type because some reality objects will be offered as for sale, others for rental. So we will have an offer type lookup to specify exact offer type. Is it sale or rental? I will call it offer type. This is a title code will be something like USR offer type and we confirm it. Speaker 1 No lookup for this so we can create one from scratch realty offer type I will do some poses for some of you like Monica or macho or rakhi who confirmed that you do it just along with me. Okay, save it. And I also just was quite quick. Normally by default lookups will be shown as simple drop down list. But in case if you select something complex like big entity like contacts or accounts, it may be useful to use full scale selection window for the offer type. We will have only two possible values like rental or sale. So that's why drop down will be perfect. We need to scroll down and set up element code here. Maybe we will not use USR. So you can just use any unique string here. So offer type will be also quite unique. Speaker 1 This is just to make it more, let's say friendly when we will work with code part. Okay, so what else? Maybe we can ",
      "page": 61
    },
    {
      "title": "",
      "content": "just practice with a single text column and it will be just a comment 250. Maybe it's enough for us. Okay, checked everything. Comment. Okay. And maybe one more example of a more complicated lookup with the selection from big object. So let me show you one more drop down column. I will name this column manager. So it will be some manager person who is responsible for managing data of this realty. Usrmanager will be our code lookup will be selecting from contact. And as a contact is a big entity, we may need some additional columns to be displayed, some filters, sort order and so on. So big scale selection window will be good enough for this. Speaker 1 Good, good option for this type of selection. And I can also make unique name here manager as a code. Okay, so I only usually set four parameters, title code, we specify lookup and element code. Okay, for the very beginning this is enough. We have some required columns, some not required columns. Unfortunately we cannot use default value setting here. So if you want to extend and make your solution more, let's say well customized, you will need to go to objects anyway. So let's save our changes. Now. You will see what has been changed here. We can track what is happening at application hub part, or we can go to our configuration section, reward it. Maybe we already see here. Okay, let's still reward. So you will see your changes in configuration section. Now this page editor will finish its work soon. Speaker 1 It takes time because system saves client module. It saves changes to object, it publishes objects, so it takes some significant time and that's why it takes a while. Okay, everything was saved. We can close this editor. You can check what's happening with our new package. You can see it here, or if you prefer to manage from application hub you can find your reality application. You can see two pages here and you can see one object. So main object realty offer type and type are created as a supporting lookup. Objects and advanced settings will show us all packages. Here we have only one package and usually I prefer to look at it sorting by descending order of date of modification because usually you need to look at the most recent changes first. Speaker 1 So you see that just from 20 minutes of our work we have a lot of items already created and including main entity, including some objects that are used for lookups. You can also check if you go to lookups section, you will see recently registered lookups automatically. So system also made this registering as data items. So it's quite smart. And when you create lookups with the help of page editor, it will automatically create object for you. It will automatically register this object as lookup and create corresponding data item. The only missing thing is contents for this object. Any questions please? You're welcome. If you so if you have any questions, any notes, I'll be happy to hear. Now it's time for us to think about some lookups. Okay, offer type probably is not so difficult. We have only two potential offer types. Speaker 1 The most commonly will be using sale offer type and another one will be rental. So we have only two offer types in our system and when we have data binding tool it will be extremely easy for us to save all data into our target package. And that's IT system creates thanks to data binding tool it creates corresponding data item automatically, helping us to save our time and do not perform some boring work. So here you can see all the records of our lookup were saved as data item. This is very efficient. One more thing which I wanted to show you is how you can use some tools like export and import. Here you can see a lookup made for classic UI. I want to steal its data. Moreover I will steal their ids. Let me show you what I'm planning to do. Speaker 1 So let's do one more column display id. Column. I want to display it. I don't need description at all. Okay, save such column settings. So we have four records here for our classic UI, just for the demo purpose. So you should not do this constantly. But. Oh Andrea, no problem. You told me you had some issues with this performance. So if your ",
      "page": 62
    },
    {
      "title": "",
      "content": "colleague is still here, we can try to find out the reason why it is slow. Thank you. Thank you Andrea. Ok, so I want to show you a simple quick example how we can use standard tools for export and import of data. Export is very easy. We can do export to excel, any creature list. It will create a file as xls six format and save it to your disk. Great. Speaker 1 Then we go to another lookup realty tape for Freedom UI section. And just for demo purpose I will show you how we can import this data from file. Data import target object is already selected. We need to select file for our import. We need to match columns and provide such column settings. As you can see, we have very similar columns names in file and in our creature data model. That's why it was already automatically matched. Now I need to look. I need to show you what this file looks like. And here you can see this Excel file. So it has first row with column titles. All other rows are representing some data. Such files can be easily loaded into creature matching first column titles with creation columns of objects and it will be one to one import. Speaker 1 And if we import, we have to specify duplicate search rule. So what column will be used to check presence of data. Okay, we can do it very technical way and check by id. In real life, when you import data from excel, you may not have this id. You will need to select some, let's say reliable enough columns which should be quite unique. In my case, id will be the best option for making such checks. And now you can see import was fully done. We can reload this data. So we imported four data rows from file into our rhythm Ui reality type object. We can also use data item data binding, automatic creating of it and data was added successfully. Now you see bound data. All four records were created correctly and saved it to our target package. Great. Speaker 1 Now we can do more steps with main object setting because I want to use some additional features available at object model. Let's go to objects and I want to show you default values for our section. Unfortunately we cannot set it from page editor, so we can go to object editor. For example, for the manager we can set default value as a special system variable, current user contact. So if a person creates some reality record, it will be considered, this person will be considered as the manager. Current user contact. Okay then by default. Oh no, it's okay. Everything is okay. No errors. I just thought I have a mistake here. Okay, when we create new record, for example, we think that the most common, the most frequent scenario will be working with houses. Speaker 1 So we can make default value for created reality records as a constant. And we can take constant from lookup to be house. So this will be our house. And when we create new record, this default setting will be done. If we had some numbering we can also use auto number feature, but for reality I just did not use it so far. Offer type we can also set as constant. And let's imagine that the most frequent scenario will be sale. So houses for sale is our primary business. That's why when we create new record we will have such default settings. And when we finished we can click publish which will make save and publish. Now you may ask me why we do so many of customizations here. We need it for our future examples. And now it's over. Speaker 1 So we made our section and we can check how it works. Going to our realty section or going to my applications realty and opening its page, you see previous data. We have some price for department, some area, maybe it's in square feet. So that's why we have such data. It will be an apartment for sale and some default contact. Okay, so what happens when we create new record new, you see, default value is set for type for offer, type for manager, some settings, test, comment and we can save it. So having default values really helps us to work with it. Oh, takes time. Probably something happened. Let's check. As you can see, browser console is full of some debug messages. But I think in our case it's not so very critical. So let's try to reload data and check. Yeah, it was saved normally. ",
      "page": 63
    },
    {
      "title": "",
      "content": "Speaker 1 House in Seattle was saved normally. Okay, we have some kind of basement for our future study. And now I need to tell you something that you will consider as boring. So we need to go deeper. Okay, a couple of words for list part before we go deeper. List pages also can be customized so we can go to edit it. I just found this edit page button and list page also can be customized. We can hide unnecessary columns, we can display columns that we need. For example, we need, okay, we already have name, we need price, type, offer type, maybe date of creation here and area in the same order such columns will be displayed. And that's it. If necessary, can also use some coloring stuff. You can try to make some customization with setup, lining colors, spacing and so on. Speaker 1 But now I try to keep it simple, everything as is by default. So I only have some set of columns set by default. Reload this page so you will see default column settings for me. Okay, great. Looks very good. If we copy some data, you will see that almost all columns are copied and that's it. So we can easily manage this. So what we have to do now, this is customization level, doesn't require any programming. And of course you probably would like to make much more significant and more, let's say technical things on this client side and the page level. I plan to explain how creation made this user interface and how we can make changes in it using programming. And first of all I need to explain you how client modules are designed and in order to check it out. Speaker 1 So let's select our package, select only client modules and for example, let's try to open form page. If you click on the form page directly on its title, you will see page editor, not a program code. You can find program code part of it. If you click on this source code, don't save source code will be opened. Then we have to close form page because having separate editors for the same item opened simultaneously, it's not a good idea. You can accidentally save in one of the editors and you will lose changes made in another. So it's better to keep only one part at a time, only page editor part or on the code part. Now you see quite strange JavaScript code which is really hard to understand what it is. And also I can show you how you can open the same code quickly. Speaker 1 You can go to write part. This is three dots button called actions. And then you can open source code directly without opening page editor. So this is some kind of code. And now I need to explain you what we are looking at and to explain you some concepts used at creature platform. So the language for this code is JavaScript. But as you may guess, this code represents more like settings than executable stuff necessary to build this page. And before we go in deeper, I need to explain that creation client side is fully dynamic and generated in runtime. So if you will inspect ",
      "page": 64
    },
    {
      "title": "any part of the client side page, it will show you some pieces of HTML.",
      "content": "Speaker 1 You see a lot of divs, a lot of some layout settings, a lot of classes, and also you will see plenty of Ng names here standing for angular. So in Freedom UI, its undercover framework which helps us to build and display components is angular. So if you have some angular knowledge and experience, you will find it easy to make your own new components if you need it for your solution. I prefer to use as much as possible for base product standard components because creating new components usually take significantly longer without clear, let's say profitability for end customer. So now you see big complex structure of HTML. It's really hard to make it from scratch and luckily creation is capable to build such pages itself using some settings about how page should be built. Speaker 1 So this is result of work of big number of JavaScript files and such. JavaScript files consume information about ",
      "page": 64
    },
    {
      "title": "",
      "content": "controls, about settings, about what they have to build. And thanks to base product architects, we do not need to type or develop such code ourselves. So creature pages are made dynamically, in this case with the help of angular framework and using some page settings. Okay then I need to explain you one more thing about structures and about JavaScript code inside of creation. So as you can see, creatio user site user pages client module client part is built by big number of JavaScript files, so we can try to find how many files are used there. So opening any page, go to sources, start to investigate structure of sources. Speaker 1 Here you will see plenty of files and what is really frightening, then you will see a lot of configuration items here. So probably several hundreds, maybe up to 1000. And it's important for you to understand that client side of creature consists of big number of relatively small pieces of code. So quite big number of JavaScript sources. And if anyone from you has any experience with JavaScript sources and JavaScript apps, of course obviously you understand how complex to keep this structure to manage it. And of course developers of creation also felt this difficulty and they decided to use some world class standards to manage JavaScript application. In order to make it efficient, developers decided to use special concept AMD concept let me try to find you some articles at academy for this. Let's search for AMD. Speaker 1 We'll find some articles Academy AMD modules module overview yes probably this one is good article explaining this, but also this concept can be found at some common sources like Wikipedia. So AMD stands for asynchronous module definition. So this is an idea of splitting of all your JavaScript application into parts code modules and make such modules capable to be loaded separately from other modules and asynchronously. And let's that's how we can use modern browsers, multitasking tools and finally a synchronous load of modules will give you much better received performance of your JavaScript app. So main ideas of AMD is split of your JavaScript app into parts. Such parts are called modules and organize asynchronous load of such modules only when they are necessary. We have special framework which keeps an eye on this and this framework is require G's. Speaker 1 Quite simple and very old framework require G's. You can read more about require G's, probably you can find it, requiregs.org probably can find its original page, explain explanations and so on. And this is quite old framework still working and its main task is to keep in memory such modules, organize loading of modules, organize module dependencies and creature users require G's so we can try to find it like this require G's version. Now you can see version 235. So required G's is used in creature and its main purpose is to keep and handle all such client side module structure in browser memory, providing possibility to load only necessary modules when they are requested for certain page and which makes quite good performance because in total our client side now has probably 1000 of modules, 1000 of small JavaScript files. Speaker 1 But when you open any page, system needs only some part from it. For example, it needs only 100 or maybe 200 modules. Required G's helps to load only necessary modules by the help of by the analyzing of definitions of such modules and so generally required J's is main under cover framework for organizing of executable JavaScript code in creation client side and required J's has its own requirements for how such JavaScript code should look like and that's why we are coming to answer of why our client module code looks like this. This is a result of use of required G's framework and the first command that you see here, it's a function define. This function is calling required gsmethod and it transfers some arguments. First argument is very important. This is unique module name represented just as string by the way. Speaker 1 Also client module has its own schema properties, so properties of changeable item saved in creation configuration. ",
      "page": 65
    },
    {
      "title": "",
      "content": "It has its own code localizable title information about parent client module so it could be used for inheritance and package where this client module is saved. So code of your client module must be matched with the name of the client module in your code. If name will be not the same as code, this will not work. So first argument here is our module name. This is just a text. Second argument is optional and usually it's empty. But this is an array of other module names that are necessary to load before starting our module. So that's how we can set up that for this module we need some else and system will load them 1st 3rd argument here is the most important. This is so called factory function. Speaker 1 This function has a main purpose to return you some data object. As you can see it returns JavaScript object, including in our case six properties. This JavaScript object represents necessary information which system needs to know about how to build our page. And this information in general was created with the help of automation tools of page editor and that's why we did not program this code ourselves. So most of this was done by page editor. But you still need to know and let's say navigate here properly. I will quickly explain what are these properties? And now you probably will not remember this, but it's just for you to like for your reference. So this JavaScript object in general represents information about page view. Speaker 1 Config diff represents visual part of the page and physically this is an array in JavaScript and this array includes set of items. In each item represents one control on the page. Let me show you a simple example. This is control for name column. So here when we look at this name we have some title and we have input field. So in total it's called control. So some tool on the page which we can use for data input and output. And this control has its own settings which we can provide inside of view config diff array. So this item represents name column. You can see values, settings, some different properties and layout. Config represents position and size, type represents the way the type of the component used for input and output. Speaker 1 We have a label, we have some other properties, parent container, name and that's all. It's interesting to mention that here we have some settings which represent connection between our control and physical data field connected and saved in memory. I will explain this a bit later. Now you should remember that view config represents set of information set. So it's just array of JavaScript objects. And each JavaScript object represents information about control that you want to see on the page. So for price, for name we have one control, for price, another control and so on. You can edit it if you want, but you should be very careful keeping syntax, keeping breakage, keeping everything correct and if you do something incorrectly it will not work and we have no any intellisense or autocomplete tools which will clearly show you where you did some wrong settings. Speaker 1 For example, if I accidentally do something like this, system will notice it and it will not show me where I have a mistake. So you should be very careful working with this part and 100% of such settings are now performed with the page editor so it's not so hard. Not so difficult to do this customization with page editor and then looking at this code. Okay, in general, view config diff represents UI structure set of user interface items that you plan to see. Okay great. Let's move on to other items. After view config we have view model configuration. This is a bit more difficult to understand because viewmodel config is information about so called attributes. Attributes are variables at the page level. So like storage items, like memory cells. Speaker 1 For page level they have special names generated by application automatically and once I tried to change them, it turned out to be hard coded each time you create them. So it's not a good idea to make them better. If it looks a bit ugly like this, you should not try to change it because it looks like page has also some metadata saved separately ",
      "page": 66
    },
    {
      "title": "",
      "content": "which has corresponding names inside of it. And if you start to beautify with no any part. So if you start to edit your attributes, probably your page will not work anymore. So I recommend you not to remain attributes. Each attribute represents some variable on the page and usually attributes are connected with corresponding data columns. Data columns are parts of our object and object has its own invisible client side representation in memory. Speaker 1 So attributes are used to keep some data and connect with controls. Then finally we have model config which represents set of data objects used with our page. In our case, only one data object is used. Reality reality entity is used to work with our page. But why we have so complex settings here is that freedom UI pages can operate with many data objects and many data lists at the same page. Unlikely to classic UI freedom UI page can be quite more complicated and may include many data objects at it. That's why this model config will be a bit more complex than you expect. Handlers, converters and validators areas where we can do some programming. We can handle some existing events, so we can make own custom handlers for some certain events and make some additional work for it. Speaker 1 We can do conversion between columns like recalculations, but personally I prefer to do it inside of handlers and validators are used to perform some checks at client side to ensure that values provided in the columns are correct and in case if they are not correct, it's possible to display error messages and prohibit saving of data. We will also do such examples later. So if you ask me about where we will program here, the most common answer will be we do our own handlers. But also please note, you probably noticed special text comments here in this code before and after different settings here and even here. So you can see that we have some special comments. Such comments are very important. Speaker 1 Please do not modify do not remove them because they are necessary for page editor it's unusual, but page editor doesn't search for the name of the object here or name of the array. Page editor searches for such system comments and then takes code between and analyzes it and representing page design for you. When finished and data changes are saved, page editor creates new set of items like Div array for example and saves it into this code. So such text comments are used as text markers. They are necessary and they are vital for page editors. So please do not corrupt them, do not change, do not remove. They should be as is okay and possibly you have some questions about strange names view model and model. Speaker 1 Some of you who studied somewhere at university or who studied yourself with the way how UI can be programmed probably know about architectural patterns and maybe you know a pattern named MVC and here we have a pattern named Mvvm. Let me explain what it is we can study and we can find some simple articles at Wikipedia about it. So Mvvm this is an architectural pattern. So like some standard way of implementing things in programming which helps us to make and to solve some typical tasks with the typical way. So we have typical solution for this. We have a task to manage our client side application in our browser and mainly programmed in JavaScript. And there is a ",
      "page": 67
    },
    {
      "title": "good practice to separate visual part from logical part and from data storage part.",
      "content": "Speaker 1 And in MVVM pattern it's recommended to separate visual part and code view separately, store data values and call it model and also make a separate controller unit which is called view model. And Viewmodel has a lot of information about view. Viewmodel knows view structure and Viewmodel manages our view. It manages controls and also Viewmodel is responsible for handling events that happens with view controls. For example, user clicks on a button or user inputs some data. The reason why developers used this architectural pattern is to make application more manageable, to make it easy to develop or replace view, to make it easy to extend our model and to make more ",
      "page": 67
    },
    {
      "title": "",
      "content": "or less structural way to handle all events and make business logic inside of viewmodel some traces of it can be found in this text. Speaker 1 View config diff represents view structure and that's why it's called view config diff, not just diff. By the way, the word diff here is probably shortage from a difference and means that it's information about only some changes. And it makes sense because our module is not made from scratch. Our module was made as inherited item from some tabbed pages left area base platform client module. So client modules as objects, they also can be inherited from each other. And diff array represents changes in comparison to previous parent item. That's why possibly such items called diffusion and not just kind of list which represents full set of items. This diff includes only changes and some base template items like buttons, menu items and so on will be not listed here because they are supposed to be used by the inheritance. Speaker 1 So when client side modules will finally form final page structure, they will take base parent one, they will apply child item like this setting, and finally they will analyze base diff child diff and they will make all of the components according to parent and child items. Okay, so view config div represents visual part represents view in mvvm pattern model, config represents information about data entities used for our page and also view model config. I think partly also works about the same because this is registering of available variables that we can use on the page and implementation of handlers. Implementation of events can be done inside of handlers and also is already performed in parent modules. In parent template pages like tab, the page with left area and such pages can be nested. It means inheritance can be done many times. Speaker 1 It looks like quite boring thing. So let's do some practical step for today and I will show you very simple hello world complexity level example. So let's do some simple example. But first as we want to make a button, it's better to start making button with the help of editor. So let me show you how we can make a button to show something simple but working and programmed and go to settings. Edit page edit page I can add a button to my page, scroll down here, you can see a list of existing columns, we can add new columns and we have a lot of components. Button probably was the first component supported in Freedom UI page. So we can put our button somewhere here, change its size, change its color or maybe this. Speaker 1 You can make some kind of funny caption like push me and if you want you can translate this title into other supported languages and by default, as you can see we have a lot of supported actions like open records, like saved data, close page run business process and so on. Once I started to count I found 24 supported actions here. So I will just randomly select some action and then I will replace it with something else. By the way, what's happening here? My title looks a bit strange. Okay, I want to use icon. Something is wrong with my title here. No, it's okay. Okay, some bug period. Okay, push me and let's select some icon that will represent this idea. Okay, would it be like this? Speaker 1 So we have more than 60 supported icons here and okay, so and I also set some dummy action. I plan to change it later. I don't have any support. Net menu. No any special conditions. We will study it later. Element code okay, let's call it push me button. Okay that's all. We can save it now. After doing this we can go to the code in order to find our button. Let's go to the code source code, then we find our button. Let's call search for push me and we'll do control f oh you see new editor search function here. It was different in previous versions. Okay, would it be like this? Thanks to our element code we can easily find push me button by code and this diffuser array item for view config represents button settings. ",
      "page": 68
    },
    {
      "title": "",
      "content": "Speaker 1 We have caption, we have type and also we have clicked setting. Let's remember line number 52 and this is setting for some tenders tender which is already programmed somewhere in parent templates, parent components and system knows how to implement this. Now we can go to handlers part and make our own handler. I already have some example because making it from scratch is a bit difficult. So I will show you examples for freedom Ui button and this is example of a button. I will share it with you in our zoom and also I will put it into my handlers collection manually. So what I do is providing setting here in my handlers collection handlers array. Technically this is an array. Speaker 1 By the way, it looks like this editor was seriously changed because previously we had some unnecessary warnings related to new JavaScript comments and features and now it looks like in this editor there are significant improvements related to the way how code is managed. So thanks developers. Version 813 now had a new type of editor here. Okay, this is my handler physically is also JavaScript object with three. Now we have two properties request and handler. Property. Request property represents the name of my handler so it's kind of identifier which I can use to assign inside of view config items. So it's kind of inner technical name of my procedure and handler itself is asynchronous function which can do something useful. For example, we can do console output here we can use embedded classic UI front end core JavaScript framework made by creation called Terrasoft. Speaker 1 So when you see Terasoft here, you should understand this is a JavaScript core framework, quite old but still supported. You can use true information from it to show some pop up messages. And also I plan to show you how you can manage data, read data and write data. We have a special procedure to get attribute values. Now let's collapse view model con collapse diff part. We already remember line number 52, so let's look at view model configuration. We have set of attributes and for the price we have this name of the attribute. So copy it, go here and paste it. That's how we can correctly get price value inside of our JavaScript code. We can do console output to display this price, and we can also work with this price and show how we can set value into it. Speaker 1 Request dollar context attribute name equals and then we will just take 20% of this price and save it again. We have to normally analyze our code inside of a synchronous function, allowing other potential handlers to be started. So this is also very typical end of handler code. In your case, you will have to change this line to find corresponding price attribute and also to do it with setting value. So this example will show us message in the console, it will show us pop up message, it will take price value and show proof of it in the console. Then it will take some part of it and set to the price column again. And that's all we can save this code. Please note, saving is important from this moment. It's better to close this page and then we go to check how it works. Speaker 1 In most of cases probably it makes sense to reward the page, but in most of cases browser cache doesn't really prevent us from working, so it will probably work normally even without revolting the page. So open it again. Now we see our button enable browser developer console f twelve or control shift I. There are plenty of warnings, as you can see here, they are minor warnings, and it's because freedom UI page is not ideal now, so system probably will be fixed later. Now it's not a serious issue, so let's try to click on the button, nothing happens or I just do something incorrectly. Oh yeah, it was my mistake, sure, because this is my handler, but my button by number 53 still performs previous action for it. Here is push me button. Here is clicked setting. So I just forgot to set it properly. Speaker 1 ",
      "page": 69
    },
    {
      "title": "",
      "content": "Okay, here in my button I have clicked property and I have to specify my own custom handler name here. That was my mistake, I just missed it. So I have to save and fix and save it. I will also call copy this piece for you. You config probably I should not copy big part of it, so I only should do something like this. So you will focus only on the most important thing. Okay? And we can close open probably now it will work. Yes. You see, I did not reload the page, but it works well. So buttonworks shows us pop up message, takes original price, takes 20% of it and saves as new price here. And we have no error messages, no errors in network tab, no errors at the console. So everything looks very very good, smooth and no mistakes. Let's check again. Speaker 1 Sorry for safe I should use push me this one. Yes, you can see now price changed. We have all the proofs here and no errors. So it looks like everything works according to the plan. This is example of hello world application. So we can do some own programming inside of creature client side page. And of course later we will do a bit more useful, more meaningful steps. But now this is an example of how you can do your own code, how you can do some display, how you can access data from your page, do something and how you can save data. Please note that access data is used with await operator because some code behind this method. It looks like this is something like a method. And finally it runs some asynchronous functions behind it and we need to use a weight operator here. Speaker 1 If you do not use await, you will have a bit different structure at the end and you will still have to dig into object that you will get from it. So recommended option is like this, await request, doer context and then your attribute name. Okay, that's all for today. We sat a bit longer than usual so our session is over. Tomorrow we will do more programming examples, you will see more useful things with recalculation, with validation, and you will see how more different settings you can program on the page level. Thank you very much for your time and documentation about the frameworks of client side. Yes Adrian, I can show you where you can find this documentation in creature academy guides for developers. You can find front end development in classic UI and then you will see G's classes reference. Speaker 1 This is exactly this API for this telescope framework. So you can use some search here for example, we used the method to show information. So method show information. We can search here, show information and you can see examples of it, you can see source and you can see all the arguments. Show information and probably it's not the best example, but. So finally you can try to get some use of it and you can see some help, stuff that can let you understand how it works. So Adrian, thank you for your question. And also I heard some more questions, Carlos. Yes, yes, about performance. Sorry, no, please, please ask questions, please. Speaker 2 Maybe it's about my problem of performance of the application in my laptop. Speaker 1 Oh, yes, we can do this. Would you like to record this part also as part of our training or you prefer to keep it more personal and private so we can start recording if you want. Speaker 2 ",
      "page": 70
    },
    {
      "title": "",
      "content": "You can. I have no problem to me, no problem. Speaker 1 Okay, so I will stop sharing. Our main part of the session is over. Thanks all for your attention. Today we will have some small session, Carlos, to detect potential performance issue problems on their environments. So thanks all for today's session. I will stop sharing. Recording is still on. So Carlos, please. You're welcome. Show me please your environment. I will try to help if you have a full zoom client better because you can manage your screen. Speaker 2 I share my screen with you? Speaker 1 Yes, yes, please. Thanks all of you, thanks for all information and your questions. Yes, please show me your screen, please. Speaker 2 Yeah, sorry, I have two. Speaker 1 You can show only one, but I. Okay, green share screen button. Speaker 2 If I have two screens, so I disconnect one. Speaker 1 Yes, please select one. Okay, I can see a screen. Thank you. Nice. So please show me how your creature works and maybe you can agree for request of remote control, so I can manage your screen more efficiently. So yes, you are using the latest version? Yes, yes. We can start to investigate it with the help. By the way, what type of browser you are using? It's chrome. Speaker 2 ",
      "page": 71
    },
    {
      "title": "",
      "content": "Yes, it's chrome. Yes. Speaker 1 Okay, you try to run it once again. Speaker 2 Yes, I restart in many occasions and don't work. Good. So let me show you a little problem. For example, I go in advanced settings, okay. And I create a business process, for example. And that is all. That's it. Speaker 1 Okay, so are you using Windows Pro or Windows home? Speaker 2 I have windows. Speaker 1 You can find system information? Speaker 2 Yes, Windows homes. Speaker 1 You will have significant issues. Let me show you how you can fix this. But it will be not full fix, it will be just a workaround which is not fully. Okay, let me show you. So in case, if you work on home, you should close your main shell page and sometimes you will need to now you will see, sometimes you need to even close the configuration page, but now it looks like you can work with it. So sorry. Speaker 2 ",
      "page": 72
    },
    {
      "title": "",
      "content": "I can see how you do that. You can repeat that, please just close. Speaker 1 Other pages, that's the solution. So when you go to configuration section, you should close other main page. Creation will work normally. So it cannot work normally on home actually, because we still will face some problems. Even if you work with single page, but with for example setting business rules, you will face trouble. So I recommend you to upgrade to Windows Pro. But once you work with Windows home, now I can show you what you can do. You should close all other tabs of creation. In this case, your single tab will work normally. As you can see, you can do something. You can provide some settings like this, like USR my process, then you can save it. So this will work and it works more or less good. Speaker 1 But when you need to go back to your main configuration section, you will have to use tabs and you will have to close other tabs. This is not comfortable. Okay, I understand this saving will work for you. This works, but not so fast. And as far as I know, the problem is number of available websockets. Okay. Yes. In Windows home, I think all of issues you have are caused by Windows home. And as you can see, saving is performed. But okay, let's wait till successful operation. Also some memory. So we need to look at your memory availability. Could you please click on the performance tab second one after we have processes. Second one is performance. So you have 16gb of ram and SSD. So your PC is very good. Your PC is fast, but Windows is not good. Speaker 1 So I recommend you to upgrade your windows to pro. In this case it will be. In this case it will better. Speaker 2 Andrea is my colleague, he takes the code the course too. So he asked me, okay, so I save, socially save, I cancel and I. Speaker 1 You can, you can just open another tab with your, you can recover previous page. Yes. Now you can see your process is saved and you can export, you can do everything. Speaker 2 So it's work. Oh, it is so simple. Yeah. Speaker 1 Yes. And it's. Unfortunately this is caused by limited number of Websocket connections allowed for IIs web server running in Windows home. So Windows Home is like very mini, little limited version of windows and it's not designed ",
      "page": 73
    },
    {
      "title": "",
      "content": "to be used for serious development. So you probably should think of upgrading it to Windows Pro. Speaker 2 Okay, thank you. Thank you very much, Dmitry. Speaker 1 Thank you Karim. Speaker 2 You saved me. My boss is over me all day and it's difficult forwarding to the course. Thank you very much. Speaker 1 No problem. Thank you, thank you. Speaker 2 See you tomorrow. Speaker 1 Yes, so our session is over. If any other questions? Hi, Vikrat Alpha is sorry. Hi Dmitry. Yes please. Yes, the compiler is successful, but give me a message, can I share that with you? Okay, I will stop sharing, so please Basil, start sharing. You see. Yes, it's a warning message. This warning message does not prevent you from next steps. So when you do some server side coding, possibly previously you. So in your previous experience, maybe you also faced some warning messages and unfortunately for me, it's not clear how to get rid of it easily. It looks like some leftovers made by base product developers. Maybe we can also see it at my own environment. Surprisingly, I probably so maybe which version currently you're running. Speaker 1 So maybe you have just a bit older version than I do because I recently switched to the latest one and your version maybe not the same latest, but this is not critical. So you can just see this compilation result. But I can complete. Yeah, in general it's not ideal, but it's something that is satisfactory. So you can continue your work. Okay, I can go to the system mode next, right? So you can do next examples, next steps of our videos so you can work normally? Yes. Okay. Okay, thank you. But last question, if I download the window eleven Pro, do I have to repeat the old step in the first lecture or it's installed by default? Unfortunately I have no experience of upgrading windows from home to pro. Speaker 1 ",
      "page": 74
    },
    {
      "title": "",
      "content": "I believe it should only change some files on your windows and it will not be like clean environment. So you should have the same IIs website, you should have the same stuff. And I did not check it by my own, so I have no information, no practical experience with it. So my company gave me a laptop with Windows Pro and I never tried to run on Windows home and upgrade it. Yeah. Thank you. Thank you very much dmitry. Thank you too. Pes. So our session is over. Thanks all of you who watched this video till the end, see you tomorrow. Goodbye. Goodbye. ",
      "page": 75
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number four of our. Speaker 2 Development on creation Platform guided learning set of practical sessions that we do for. Speaker 1 Developing different features and functionality that. Speaker 2 Requires some programming on Creature platform. And previously we finished with building our. Speaker 1 ",
      "page": 76
    },
    {
      "title": "Own section named Realty and we managed.",
      "content": "Speaker 2 To set up List View, we managed to make a form page for it. Speaker 1 We also added some default values and. Speaker 2 We made some required fields and it. Speaker 1 Was pretty much easy and we used. ",
      "page": 76
    },
    {
      "title": "",
      "content": "Speaker 2 Only no code customization tools for this. Speaker 1 Also we managed to make a button. Speaker 2 Which had a custom handler. So we made a button push me button and this custom handler shows some console output. We can also display some pop up messages and also we can do any. Speaker 1 Kind of JavaScript code behind this button. Today I will show you a bit. Speaker 2 More complicated examples of how you can. Speaker 1 Do some programming and coding and also we will discuss debugging. Speaker 2 So you will see how it's possible. Speaker 1 To stop execution of your code and. Speaker 2 ",
      "page": 77
    },
    {
      "title": "",
      "content": "Make it executed line by line. Speaker 1 By line and to see all the. Speaker 2 Variables and to see all the conditions. Speaker 1 So so to make something that you probably get used to do when you operate with any like modern version, modern. Speaker 2 Development environment like Visual Studio or other so today question today's session I would. Speaker 1 Like to warm up with Simple Question. Speaker 2 Which is about organizing of your sections. It's probably not so obvious so I will tell you all apps it's like. Speaker 1 ",
      "page": 78
    },
    {
      "title": "Synthetic Workplace which includes all registered sections in one list.",
      "content": "Speaker 2 We have Studio out of the box workplace, we have customer360 because it's a. Speaker 1 ",
      "page": 78
    },
    {
      "title": "",
      "content": "Result of loaded contacts and accounts. Speaker 2 So our loaded customer360 app also caused creation of new workplace. Such workplaces also can be created, you can manage them and you can put your sections into it. You can also create data items for workplaces if you want to transport them between environments. I would like to show you something that I think will be useful. It's about organizing of Workplace for your users and for my developer purpose it will be quite often when we will need to switch between our created section and some system sections like Process library, process logs or lookups and ",
      "page": 79
    },
    {
      "title": "system settings. So I plan simply to put my new Created Reality section into this Studio Workplace.",
      "content": "Speaker 1 That will be very easy, but I. Speaker 2 Need to demonstrate it. Speaker 1 To show how you can do this. Speaker 2 Go to Settings then find Workplace Setup. Workplace Setup helps us to create new workplace or to manage existing workplaces. As you can see, some workplaces are present but not shown even if we are administrators. So that it's very interesting because it's one of not so many places where user permissions Are still matter when we. Speaker 1 Run system under administrator privilege. Speaker 2 So now you can see I see only four workplaces. Speaker 1 ",
      "page": 79
    },
    {
      "title": "",
      "content": "But in total it looks like we. Speaker 2 Have at least 5. And productivity workplace seems to not showing anything and not having any permission settings. Speaker 1 So that's probably why we are not seeing it. Speaker 2 Okay, let's go to studio workplace. We have set of sections for a workplace. Also it will be interesting for you to know ",
      "page": 80
    },
    {
      "title": "that sections have positions.",
      "content": "Speaker 1 ",
      "page": 80
    },
    {
      "title": "Let me show you columns set up for sections list. We can arrange and add the position column.",
      "content": "Speaker 2 Now you will understand why I display this position. Any section in a workplace has its position and position organizes order. So it is used to specify order of sections in a workplace. If we rearrange such items such sections ",
      "page": 80
    },
    {
      "title": "position will be changed. And finally your sections will be displayed in a different order.",
      "content": "Speaker 1 Sometimes this order is not so consistent. Speaker 2 You see UI management and message templates, they have the same position. Speaker 1 ",
      "page": 80
    },
    {
      "title": "",
      "content": "And sometimes UI management will be on top. Speaker 2 Sometimes message templates will be on top depending on how data will be loaded at a certain time. Speaker 1 Because sorting by this position it makes some ambitious result. Okay, so what I plan to do. Speaker 2 I plan to add one more section in the list system will show me only sections that are not listed here. And it's ",
      "page": 81
    },
    {
      "title": "interesting to see here that we have couple of accounts section.",
      "content": "Speaker 1 It's very unusual. Speaker 2 Couple of calls and couple of contacts. One of the possible explanation why we. Speaker 1 ",
      "page": 81
    },
    {
      "title": "Have two different account section is that.",
      "content": "Speaker 2 ",
      "page": 81
    },
    {
      "title": "One of them is section for Classic.",
      "content": "Speaker 1 ",
      "page": 81
    },
    {
      "title": "Ui, another is Freedom UI section. We can also display columns here which.",
      "content": "Speaker 2 ",
      "page": 81
    },
    {
      "title": "",
      "content": "Will let you understand what we are looking at. Speaker 1 So we can just squeeze a bit title display e.g. Speaker 2 Created on column save column settings. Speaker 1 Now when we try to add you. Speaker 2 Will see title, you will see created on and one of them is 19, another is 24. And it looks like first one is. Speaker 1 Classic UI, second one which is younger. Speaker 2 This is freedom UI. Speaker 1 So that's how you can detect which one is necessary for you to add. Speaker 2 In my case, I plan to find realty section created recently and we can see it at the end of this list. You see, its position is also not so consistent. ",
      "page": 82
    },
    {
      "title": "",
      "content": "Speaker 1 But it guarantees that it will be at the end. Speaker 2 But it's not so comfortable to see this item at the very end of this list. So possibly we would like to move it upper. Speaker 1 So let's go to do this. Speaker 2 You can move it even on the first top position. Unfortunately we cannot move it upper than home. And if you don't really like, we can suppress this home page for a workplace. You can see homepage you can clear. Speaker 1 It if you want and realty will be position zero. So when we save it we can. Speaker 2 Also reward this page. Probably we will see our reality section directly at Studio Workplace at zero position. But it's also important to say that other items were changed so they changed. Speaker 1 Their position because reality shifted them. Speaker 2 So if we want to transport such change, we must make a corresponding data item. Or we can use help of data ",
      "page": 83
    },
    {
      "title": "binding tool. This data binding tool helps us to remember positions of O sections here and.",
      "content": "Speaker 1 ",
      "page": 83
    },
    {
      "title": "",
      "content": "We can just click Bind Workplace, specify. Speaker 2 Target package and click save. Then we can see what was created. It was three different data items. One of them is sysworkplace studio. It doesn't really necessary because this workplace is already present at our system. Speaker 1 And when we for example try to. Speaker 2 Actualize data and save it, we will see warning and this warning will tell. Speaker 1 Us that such Studio Workplace was already. Speaker 2 Registered somewhere in parent package. Speaker 1 And even more it was registered one more time in another parent package. Speaker 2 But it's not a big mistake. So it's not a mistake at all. This is warning that tells us that. Speaker 1 Such data is already present somewhere in parent packages data items. So maybe we are doing it. So something that is unnecessary, but let it be. You can save it this warning, but. Speaker 2 ",
      "page": 84
    },
    {
      "title": "",
      "content": "It'S not a mistake. Another one is sys module in Workplace. This is a system table which keeps information about ",
      "page": 85
    },
    {
      "title": "section which is called module and workplace.",
      "content": "Speaker 1 ",
      "page": 85
    },
    {
      "title": "So you can see data and you can see all the sections in Workplace.",
      "content": "Speaker 2 Studio were listed here. And also it's important to mention that forced update option must be applied for. Speaker 1 Position column because otherwise update or position. Speaker 2 Will be not performed. Speaker 1 You probably remember from our Tuesday session that when you create data items, it's. Speaker 3 Possible that you will make data item that will perform update, not an insert. Speaker 1 In case of update in case of. Speaker 3 Target record was found. ",
      "page": 85
    },
    {
      "title": "",
      "content": "Speaker 1 By the way, I prefer to make. Speaker 2 It not by this key. I prefer to make it by this. Speaker 1 Key and found by id. Speaker 3 So if record was found by ID. Speaker 1 And then it will update target database according to loaded data and in our case only position will be updated. Okay, we can save it. Speaker 2 Now you can see that save was. Speaker 1 Successful, but we have a lot of warnings related to parent data that was already registered in base product. Speaker 2 And this is valid set of warnings. Speaker 1 Because our change caused the change of. ",
      "page": 86
    },
    {
      "title": "",
      "content": "Speaker 2 ",
      "page": 87
    },
    {
      "title": "Position of all previously registered sections in Studio Workplace.",
      "content": "Speaker 1 So simply all of the registered sections had different position because we moved our reality to the top and we. Speaker 2 Had a warning that tells us that you're trying to Change the data which was originally declared somewhere else. Speaker 1 So maybe you're doing it wrong. Speaker 2 So please take care. Here is your warning. Speaker 1 But this warning is still so we can ignore this. And last one is admin unit in workplace. Speaker 2 This is about access permissions. System administrators have full access to Studio. Speaker 1 Workplace and probably this data is also. Speaker 2 ",
      "page": 87
    },
    {
      "title": "",
      "content": "Present in our database. Speaker 1 Yes, so maybe not so necessary to save it. Speaker 2 So it's warning, not an error in case if you have an error. For example, you save the same data twice in the same package. Speaker 1 In this case, save button will show you error message and save button will not disappear. If save button was disappeared, means your. Speaker 2 Data item was normally saved. Speaker 1 If save button did not disappear, it means an error. It's like serious mistake and the system. Speaker 2 Will not allow you to save such data. It happens only when you save the. Speaker 1 Same data twice in the same package. Okay, so it was set of client modules of sorry, set of data items. Speaker 2 Automatically created by help of data binding tool. Speaker 1 ",
      "page": 88
    },
    {
      "title": "",
      "content": "When we registered our reality section in a studio workplace, now we have comfort. Here is our new created section. Speaker 2 Here is set of processes we will manage very soon. Here we have lookups which we also often look at. Speaker 1 And we'll use it and some other. Speaker 2 ",
      "page": 89
    },
    {
      "title": "System sections that we may need. So we now have very comfortable conditions.",
      "content": "Speaker 1 And easy transitions between different sections. So it was just a simple example how you can organize your workplaces in. Speaker 2 More complicated based products like sales, service and marketing. You will see more workplaces, more sections inside. And you also can create your own workplace with sections that you think will be necessary to use for your end. Speaker 1 ",
      "page": 89
    },
    {
      "title": "Users with particular roles.",
      "content": "Speaker 2 And you can provide permissions for such. Speaker 1 ",
      "page": 89
    },
    {
      "title": "",
      "content": "Speaker 2 And what is important for you to understand that you can create many different. Speaker 1 ",
      "page": 90
    },
    {
      "title": "Workplaces and include the same section many times. So if you added some section to.",
      "content": "Speaker 2 Some workplace, it doesn't mean that you can't do it with another workplace. Speaker 1 ",
      "page": 90
    },
    {
      "title": "So one context section can be added.",
      "content": "Speaker 2 In different places with no limitations. Speaker 1 In my case, I have my applications. Speaker 2 ",
      "page": 90
    },
    {
      "title": "Workplace with real T section and I also have.",
      "content": "Speaker 1 Just a second. So what I wanted to show you. Speaker 2 ",
      "page": 90
    },
    {
      "title": "We can use the same section in.",
      "content": "Speaker 1 Different workplaces and it's not a problem. Speaker 2 If we specify the same section in different workplaces many times. So physically this is the same section. Speaker 1 The same data shown in different places. Just a second. Okay, so what we will do today, it was a warm up example that. Speaker 2 I think will be interesting for you to know. So let's do something more serious. Let's think of improvements of our future section of Our reality section. And now I want you to see how you can do some calculations, how. Speaker 1 You can do some more serious programming. Speaker 2 Inside of Creature client side page using. Speaker 1 Some JavaScript and using creature tools and let's say data platform. First of all I will explain you some business ideas. Speaker 2 So what we plan to do, my plan is to show you some recalculations and it could be a good example. ",
      "page": 91
    },
    {
      "title": "",
      "content": "Speaker 1 If we for example create one more column, call it commission. So it will be our future profit from the deal. And this commission will be dependent on price. So it's normally and very typical for realty to have commission as some percent from price. Speaker 2 And also we have to take care. Speaker 1 About the type offer. Speaker 2 So for sale we have one formula. Speaker 1 And for rental we will have another formula. Speaker 2 Okay, let's do it step by step. So first of all we need new column. Speaker 1 New column can be added to this very easily. We can just go to modify our page. Then we can add new number column. Speaker 2 Carefully dropping it here it will be named Commission. And as we have a price in. Speaker 1 ",
      "page": 92
    },
    {
      "title": "",
      "content": "US dollars, so let it be a commission. Also in the same currency, the inner. Speaker 2 Column name will be USR Commission. Speaker 1 And we confirm such code for this column. The data format will be decimal with two digits. Speaker 2 Okay, great. Speaker 1 Decimal with two digits. And we want to make this commission calculated automatically so we don't allow users. Speaker 2 To manually change it. That's why I will set read only. Speaker 1 Option on I temporary hide place attachments tab. So my commission will be read only. Speaker 3 And also just to make it easier. Speaker 1 To find in div array, I will name its element code so we can type it as we wish Commission USD. Let it be our element code. Speaker 3 ",
      "page": 93
    },
    {
      "title": "",
      "content": "This element code will be used in view config, div and also physically it. Speaker 1 Will be used for building real page. Speaker 3 HTML markup with set of divs inside. Speaker 1 And this code will be used to name set of items and div. Speaker 3 HTML tags inside of our page. Speaker 1 So element code, it's about physical component. Speaker 2 Representation on the page. Speaker 1 Okay, you already know this and that's all I can just save System will. Speaker 2 Automatically modify our object. ",
      "page": 94
    },
    {
      "title": "",
      "content": "Speaker 1 It will save changes to our page code which we can find here if. Speaker 2 We click open source code. So now let's just click save and. Speaker 1 That'S probably will be enough for the beginning. So this change will be made in objects and in our client module. Okay, finally it's saved. Speaker 2 Okay, we can move on. Speaker 1 And now we can close this page editor. Speaker 2 Go to main page. As you can see, I did not even reload it. Speaker 1 We can just open it again and. Speaker 2 Probably we will immediately see our new column and it's read only. Speaker 1 So you see this lock sign which. ",
      "page": 95
    },
    {
      "title": "",
      "content": "Speaker 2 Tells us that column is read only. So now we need to think of. Speaker 1 Implementing read calculation and it will be. Speaker 3 Triggered by change of price. Speaker 1 And also we want to make it dependent on offer type. So for the sales offer type it will be more or less okay if we make commission like 2% from list price from our price of realty shown here. So to be quite fair and good enough commission for our business and for sales it's totally okay. Now let's create some sample for house for rental. Our rental price will be 1200 bucks for some house in Miami. Speaker 3 I'm not sure that can we find. Speaker 1 So cheap houses in Miami for maybe it's not like not in a high season and some area. And as you can see, commission will be recalculated. And we need to make another formula for rentals. Speaker 3 So for rentals probably it will be. Speaker 1 Quite enough if we will ask for 50% from monthly payment price if this is a rental. Speaker 3 ",
      "page": 96
    },
    {
      "title": "",
      "content": "So for rentals we will have another percentage. So for sales it will be 1% or 2% value. Speaker 1 And for rental it will be 50% from price value. So when we will do some calculation we have to take care about it. Speaker 3 But also you should be mentally ready. Speaker 1 That in real life business it really often happens that such ratios, such formulas can be changed from time to time. And once we introduce hard coded value like 2% a month later our customer may call us and say, you know. Speaker 3 Now conditions were changed so we need to modify this percent and now it will be 2.5. Speaker 1 Could you please change it? Speaker 3 And if we hard code it, of course it's not so good idea to. Speaker 1 Go into code and change it. Then deliver changes to production. So it will be really expensive. Speaker 3 ",
      "page": 97
    },
    {
      "title": "",
      "content": "To make such changes. Speaker 1 And our customer will be not ready will be not really happy if we ask for example for half, maybe for a couple of hours of work to be paid. If we want to change just one number. Ideally customers should be able to change such ratios themselves. Speaker 3 We have several options to do this. For example, we can make a separate. Speaker 1 Table which will keep necessary percents. Speaker 3 Or we can use some system settings for this. Speaker 1 Or as you can see, our ratio is really stick to offer type. So probably we can add new column to offer type lookup in order to save one value in percent for sales. Speaker 3 And another value in percent for rentals. I will show you how we can do this. Speaker 1 Let's focus on objects Again, now we. Speaker 3 Have offer type object, we can open it for edit. I prefer to work from configuration section. Maybe you would like to focus on application first. ",
      "page": 98
    },
    {
      "title": "",
      "content": "Speaker 1 In this case you can do the same if you. Oh, I did not save it. Oh, sorry. Okay, my fault. Ruby House for rental Save it. Speaker 3 Great. So if you prefer to focus on. Speaker 1 Application, you can go to Application hub. Speaker 3 You may find your realty app, you. Speaker 1 Might check your data models and that's. Speaker 3 How you can find corresponding object. Or you can switch to advanced settings. Speaker 1 To see all the contents of your solution. Speaker 3 So you may practically do almost the. Speaker 1 Same as you can do it here. So I just get used to work. ",
      "page": 99
    },
    {
      "title": "",
      "content": "Speaker 3 ",
      "page": 100
    },
    {
      "title": "With this configuration section. Also it has some useful actions like.",
      "content": "Speaker 1 Save packages to file system. So that's why I stick to this. Speaker 3 Approach and I feel more confident when. Speaker 1 Work here because I have full available. Speaker 3 Set of tools to manage my system set my system configuration setup. Speaker 1 So we opened corresponding object, we have. Speaker 3 Inheritance from base lookup and that's why we have eight inherited columns and we did not add any other own columns so far. So for each reality offer type for rental or sale, we can add one. Speaker 1 More column to be number. Maybe we can do it with quite high precision. Okay, two digits after decimal point. We can call it something like commission percent. So we can even specify what is the available range of our data values. Speaker 3 ",
      "page": 100
    },
    {
      "title": "",
      "content": "Here just to make it clear for. Speaker 1 Any user what type of value should be put here. So if we specify from 0 to 100 it means from 0 to 100% and it will be clear how to. Speaker 2 Put some value here if you want. Speaker 3 To save for example 2%. Speaker 1 One more column is not a big deal, so we can easily add it save and publish. But after we do this we may start to get some additional unexpected difficulties. Speaker 3 Now I will show it. Speaker 1 Probably sometimes I get it, sometimes not. But anyway I have to tell you about this. Speaker 3 So we added new column to some. Speaker 1 Object that was already present for today morning. ",
      "page": 101
    },
    {
      "title": "",
      "content": "Speaker 3 So it was already created recently. That's why we can face some unexpected behavior. Speaker 1 Let me show you what I'm talking about. Now you can see it's very close and easy to switch between our section and for example lookups. Let's go to reality offer type lookup and let's try to see its data. Speaker 3 Now we have name and description. Speaker 1 Okay, let's try to set up columns to display. Speaker 3 Name is okay here description is also. Speaker 1 Okay and we can try to display one more column. Commission percent looks good and we can save it. Okay, here this commission percent looks good. We need to Provide some initial data. Because we have to support our solution with some initial values for calculations. Speaker 3 And we agreed that for a sale it will be enough for us to specify 2%. Speaker 1 According to this helpful message, 2% will look like this 2.00, so it means just 2. And for rentals we expect to earn 50% but from monthly payment. So our price will represent monthly payment. That's why for rentals we will have significantly bigger value. So it looks like our data is okay here, but we changed columns and. Speaker 3 ",
      "page": 102
    },
    {
      "title": "",
      "content": "We added some data. Speaker 1 So possibly we have to look at data part and find corresponding object reality offer type object so not object data item for this. Let me find it. This one Offer type. Speaker 3 It looks like it was created by data binding tool, so we could also. Speaker 1 No, no. This is lookup registering. Now I need to find it here this one values. Speaker 3 So now we have one more column here. We can update this data item with. Speaker 1 The help of data binding tool. Speaker 3 Or we can manually modify it by adding one more column. As you can see, originally this column was not present here because we created. Speaker 1 Data item before adding new columns to the object. Speaker 3 ",
      "page": 103
    },
    {
      "title": "",
      "content": "So now we have one more column. Speaker 1 Here we have new data. Speaker 3 2% for sale, 50% for rental. Speaker 1 We have to save it. Everything is okay. So our new column, our new values are here in our data part. Speaker 3 Great. Speaker 1 It looks like we still did not need to do any additional steps related to adding new column into existing object. But some of you may start to feel some difficulties and such difficulties are. Speaker 3 Connected with the way how server side system remembers information about objects. And unfortunately it may happen that your. Speaker 1 Kind of difficulty which you will finally face will be inability to display data here or inability to use new column a bit later. In order to fix this, you may need maintenance tools for creation so which we already installed. Maintenance tools can help us to restart the app or clear regis if I need it. Speaker 3 I will do this restart but a bit later. ",
      "page": 104
    },
    {
      "title": "",
      "content": "Speaker 1 Now I will try to avoid this to show you what will happen if you did not perform a restart. Speaker 3 So let's check will we be able. Speaker 1 To make all the way all the settings as I plan to do this and will we need restart or not? So let's go. Now we have offer type which also has additional data. For sale value we have one additional. Speaker 3 Data and for rental value we also. Speaker 1 Have another additional data. Speaker 3 And it's really lucky for us. Speaker 1 That it's possible to get such additional data out from this lookup somewhere at the top where we can easily use such data columns. Now I plan to show you how to get data out from a lookup. Speaker 3 We will use again page editor. Speaker 1 ",
      "page": 105
    },
    {
      "title": "",
      "content": "Our task is to get decimal value from this offer type lookup and display it somewhere. Speaker 3 The reason why we need to display. Speaker 1 Is to make it visual and also to make it fully no code. So now you will see this trick how we can make data out from existing lookup. We have new fields here, but if you add any it will add new column to your object and it will add a new control to your page. So such columns I would like to. Speaker 3 Call data fields and data fields represents. Speaker 1 Connection between controls and real life data column of your main object that this page works with. But if you scroll down you will. Speaker 3 Find interesting set of components called inputs. Speaker 1 Inputs are designed to organize input only without direct connection with your main data object and without direct save of any data that you input into this call. Simply speaking, inputs are controls that you use for inputs but not intended to save data from them or at least. Speaker 3 Not save into main primary object with the standard tools. So maybe you will save it somewhere somehow else. Speaker 1 Let me show you how I can use this for our task. I need number control. So I will take number and carefully drag and drop it somewhere on my page. This is a just control just input field with no any connection to any kind of objects ",
      "page": 106
    },
    {
      "title": "",
      "content": "and the data model. But we have additional function which will be really helpful for us. We can ask system to fill this number control from some column that we. Speaker 3 Can take out from existing lookups or. Speaker 1 Existing from existing fields. Speaker 3 Let me show you how we can do this. Speaker 1 We go to data source, click on this lookup button and then we will search. Speaker 3 So select some data field that we will use to fill this control. Speaker 1 Realty related objects. Speaker 3 It will show us all existing lookup. Speaker 1 Columns in our realty object and then we will find offer type extended and system will show us only suitable on the compatible field which will be you can be used within decimal number control. Speaker 3 ",
      "page": 107
    },
    {
      "title": "",
      "content": "This is our commission percent so we. Speaker 1 Will select it and here now you will see some changes. Speaker 3 Title appeared the same as title of your column inside of your offer type. Speaker 1 Lookup Code appeared and cannot be edited. Speaker 3 This is read only and also you can unlock it. Speaker 1 So this column will be constantly read only. Title position okay title on the page. Speaker 3 And element code number input. So we can call it something like. Speaker 1 Commission percent okay and save change of our element code. So simply speaking we made read only column that will be automatically loaded each. Speaker 3 Time offer type is set and each. ",
      "page": 108
    },
    {
      "title": "",
      "content": "Speaker 1 Time offer type changed or cleared. Speaker 3 Let's save our changes and we will. Speaker 1 See how it works. Speaker 3 By the way, please confirm with plus in our chat if you follow me. Speaker 1 Directly during the session. So I need to know, should I. Speaker 3 Allow you some pause to do some steps after I demonstrate it? Speaker 1 Marcel, thank you, Andre. Thank you. Okay, I will go. Not too fast. So you will have enough time. Speaker 3 If something is not good and you. Speaker 1 Would like me to stop for a while, tell me please. Okay, Monica, thank you again. Secret and Rakhi, thank you for mentioning. ",
      "page": 109
    },
    {
      "title": "",
      "content": "Speaker 3 Great. So we saved our page. Speaker 1 Then we can go to our page. Speaker 3 Close, open it again. Now you see this commission percentage shown. Okay, Maybe we can reward the page. Speaker 1 Just to suppress any possible issue with the browser cache. So let's open again. Apartment of New Orleans we have offer type sale. Speaker 3 But you see this commission percent is not shown. Speaker 1 Okay, let's try to select another one. Rental or I chose sale again. Okay, rental 50 sale 202. Okay, save it. Speaker 3 Close. Such data will be not possible to see in list. Speaker 1 So we have no reality column which will represent our commission percent. We can read it from the database. Speaker 3 ",
      "page": 110
    },
    {
      "title": "",
      "content": "If we use related objects, if we. Speaker 1 Use offer type and if we display. Speaker 3 Commission percent and this commission percent will. Speaker 1 Be obtained from corresponding record from our offer type. But you see, now we have some troubles. Speaker 3 We have some troubles and system does. Speaker 1 Not recognize commission percent column fully. Speaker 3 Probably it also shows us some error messages, I believe. Let's try to reload it and see what happens. Speaker 1 No, no error message. It just doesn't show us corresponding values. But they are definitely there. So we can go to lookups, we can find our offer type lookup. Speaker 3 We can find columns there. So our commission percent is here. Speaker 1 ",
      "page": 111
    },
    {
      "title": "",
      "content": "So what is happening and why we have such a trouble? Speaker 3 And if you open the page, you. Speaker 1 See no initial value here. But if you click there and back. Speaker 3 To sale now you see this value. Speaker 1 Is okay, save, close, open and still it doesn't work. So we still have some problem with this additional column. And this problem unfortunately cannot be solved. Speaker 2 By logging out and logging in. Speaker 1 So let me show you. I try to log out. Speaker 2 Maybe thinking. Speaker 1 There is something like a user session cache issue. Then I try to log in. ",
      "page": 112
    },
    {
      "title": "",
      "content": "Speaker 2 When you work with client side, it's. Speaker 1 Better to keep your browser console on. Speaker 2 Probably you will see some interesting messages. Speaker 1 There or a lot of red messages. Speaker 2 In case of errors. Speaker 1 So it's important to see it quick. Speaker 2 ",
      "page": 113
    },
    {
      "title": "Okay, opening our realty section, ignoring all.",
      "content": "Speaker 1 Warnings here, open it once again and you see no, it did not help us. So unfortunately logging out and logging in. Speaker 3 ",
      "page": 113
    },
    {
      "title": "",
      "content": "Doesn'T help you and the only solution. Speaker 1 Which we can do is restart our app or shut it down and start it again for example with the help of IIS Manager. Speaker 3 But it will take more than minute. Speaker 1 For us to normally shut down and start. So we have a quick solution. This is restart our app and we have a maintenance tools for this restart application. This is the only way to quickly fix this issue. Now you see we have some. Speaker 2 Errors in browser console, but it looks. Speaker 1 Like not very critical. So now restart is being performed. We can check what's happening with our memory and with our processes using task manage W3WP . Looks like we have the same worker. Speaker 3 Process, but it has a comment to. Speaker 1 Restart so possibly to rewards some of its assemblies. Speaker 2 Okay, so we restarted our app. ",
      "page": 114
    },
    {
      "title": "",
      "content": "Speaker 1 ",
      "page": 115
    },
    {
      "title": "We go to reality section.",
      "content": "Speaker 2 Now we already will see the difference. Speaker 1 Now you see that commission percent here. Speaker 2 Was normally displayed in this list previously it was not normal. And if we open any record now, commission percent will be fully normally loaded. Speaker 1 When we just open the page. So you see commission percent loaded correctly if you take any other value. Yes. If you go to rental. Yes, it's okay. Speaker 2 So now we fixed it. Speaker 1 And that's why I had to use this add on called maintenance tools for creature. Speaker 2 Such add on helps me easily restart. Speaker 1 The app with just waiting approximately 10 seconds. And it's much easier than restarting my. ",
      "page": 115
    },
    {
      "title": "",
      "content": "Speaker 2 App by shutting down and starting again my worker process or recycling worker process. Speaker 1 It's possible, so it will take significantly longer. Speaker 2 Okay, so we fixed this question with. Speaker 1 The commission percent and now our task. Speaker 2 Is. Speaker 1 To make actual calculation. Speaker 2 So now we can think of how. Speaker 1 To trace changes of price or commission percent. Speaker 2 ",
      "page": 116
    },
    {
      "title": "",
      "content": "Luckily commission percent will be available for. Speaker 1 Us the same as any attribute for a real column. Speaker 2 So commission percent will be also an attribute for us. Speaker 1 So if this value changes or if. Speaker 2 This value changes, as you can see, it will be changed in case if. Speaker 1 You clear in case if you set. Speaker 3 Some offer type or if you change. Speaker 2 To another offer type, commission percent is changed. Speaker 1 So price or commission percent should trigger recalculation of commission. Speaker 2 ",
      "page": 117
    },
    {
      "title": "I will show you how we can do this. Let's go to our configuration section.",
      "content": "Speaker 1 Find client modules. We are working with form page. So when we look at this stuff you can see this is a real T form page. That's why I know where to open corresponding code. Speaker 2 So you can also open the code. Speaker 1 From page editor if you want. I just feel it's more comfortable to work here. Speaker 2 So form page open source code. Speaker 1 ",
      "page": 118
    },
    {
      "title": "That's how we can go directly to the JavaScript part of it and See what's happening.",
      "content": "Speaker 2 Andrean is asking is it possible to use this add on in a cloud environment? Speaker 1 Yes, all creation apps from Marketplace can. Speaker 2 Be installed on cloud systems. Absolutely the same as you can install it locally. When you install any add on, you use only web interface. So it will work absolutely the same. ",
      "page": 118
    },
    {
      "title": "",
      "content": "Speaker 1 Let me show you. So you go to Settings, you go. Speaker 2 To Application management, Application Hub and then. Speaker 1 You click Install or Add new application and you can select something from this list or you can select Marketplace Powered. Speaker 2 And it will work absolutely the same. Speaker 1 If you run it in cloud. Thank you Adrian for your interesting question. Let's move on with your code. So we found reality form page. Speaker 2 We decided to open directly its source code. Speaker 1 That's how we open this tab. Speaker 2 ",
      "page": 119
    },
    {
      "title": "We can try to find our commission diff part.",
      "content": "Speaker 1 You can see this our commission column. It was added by help of page editor. ",
      "page": 119
    },
    {
      "title": "",
      "content": "Speaker 3 So practically we should not modify this. Speaker 2 But it will be interesting to see how it will be connected with the. Speaker 1 Data attribute PDS USR commission USR so. Speaker 2 This is our attribute name. Speaker 1 Okay, we can collapse temporary all such things. Speaker 2 I will only show you. Speaker 1 So price. Okay, we need price, we need commission so we can collapse all other new config div items till we will face view model config. So attributes of view model config represent. Speaker 2 Set of variables that can be saved. Speaker 1 ",
      "page": 120
    },
    {
      "title": "",
      "content": "On the page level. Speaker 2 And we already started to work with. Speaker 1 It yesterday I just tried to explain you such attributes and now we will work with them. So for the price column we see this attribute name. Okay? Speaker 2 And for the percent here we have this attribute name and finally we will save our data into commission attribute which has this name. This is important. Speaker 1 Okay, I will collapse anything else to make it clear and quite compact for you. So we are interested in price attribute. Speaker 2 Percent attribute and commission attribute. Speaker 1 Okay? Nothing else. Speaker 2 Model config is not interesting. And then we will do something with handlers. Speaker 1 I already have an example which will make it possible for us to do it quickly. So let me show you this example of the code examples reading UI and then we need calculated field example. So now I will use a special pre designed handler name. ",
      "page": 121
    },
    {
      "title": "",
      "content": "Speaker 3 Probably we need to look at Academy. Speaker 1 To explain all possible handler names. So let's go to Academy, let's go to guides development front end Freedom UI and somewhere we will see some client schema references handlers. Yes, this is an article explaining handlers and their definition. So we have some set of standard. Speaker 3 Names for handlers and they represent some. Speaker 1 Important steps of page life cycle. In our case, we are interested in the handler which is triggered each time when some data, some attribute data changed. Speaker 3 At our page changes the attribute. Speaker 1 So this handler is called handle view model attribute change request. Let me show you my example. Speaker 3 Handle view model attribute change request. Speaker 1 So simply speaking, this handler will be called each time when any column value changes at our user at our client side page in our browser. So this handler will be triggered quite often. We copy this code, we will also paste it for you and we will. ",
      "page": 122
    },
    {
      "title": "",
      "content": "Speaker 3 Copy it and put it to our. Speaker 1 Examples in our handlers area. So this is an array, we have. Speaker 3 To keep syntax well. Speaker 1 And that's why I try to paste it like this, keeping commas, brackets and so on. Speaker 3 So now you see, this piece of. Speaker 1 Code was just simply added. Speaker 2 This piece of code was added and. Speaker 1 Let'S check what we can do with it. Of course we have to take care about attribute names because they are always unique. Each time you do the same example again, you will see different unique names. Speaker 2 ",
      "page": 123
    },
    {
      "title": "",
      "content": "So how we can check it? Speaker 1 This handler will be called quite often for each column change. And in order to make it efficient, we need to check if some column. Speaker 2 That we are interested had changed or not. If yes, then we do our recalculation. Speaker 1 If not, we should do nothing in. Speaker 2 Order to save system resources. So we check request property here and. Speaker 1 We have attribute name. Speaker 2 And if this attribute name is our. Speaker 1 Price, then this is logical or attribute name is our commission percent. Speaker 2 Then we do some calculation, but we. Speaker 1 ",
      "page": 124
    },
    {
      "title": "",
      "content": "Have to actualize our names so you. Speaker 2 Can see our list of attributes for the price. Speaker 1 Here is our attribute name. Let's copy it and carefully paste here. And also as we already have it in our clipboard here when we need. Speaker 2 To read it, then the same for commission percent. Let's make sure this is our attribute name. Speaker 1 Let me show you. Yes, it looks like it is already. Speaker 2 The same because generated by system and. Speaker 1 I usually do same examples. That's a bit strange shifts. Okay, Very unusual. Okay, we did this. So so now you see if price changed, if commission percent changes, then we take price value. We take commission value. Speaker 2 So how we do this? I already showed you yesterday. Speaker 1 We have to use operator await. Then request is our argument dollar context and then we have access to our certain attribute. ",
      "page": 125
    },
    {
      "title": "",
      "content": "Speaker 2 So we have just a variable in. Speaker 1 Our JavaScript code for price for percent. Then we do calculation of commission as result of multiplication and don't Forget to. Speaker 2 Divide by 100 because commission percent represents. Speaker 1 Percent, not just a decimal value. Okay, and then we will save our commission percent. We have to Provide correct value. Here is our commission attribute. Speaker 2 If we do it incorrectly, we will fail. Speaker 1 So this is important. Our commission value will be finally saved into this. Okay, now it's ready and we can check how it works by saving our code. I provided an example for you, so you can also check out your example. Just a second. Okay, saving was successful and we can move on with our checks. Let's go to realty section, open the page. Let's try to trigger change of price or change offer type, for example. Like this, nothing happens. Speaker 2 Probably it's because of cache. Speaker 1 So let's reload the page. Reloading helps to fight with browser cache effect. Open again, try to make changes. Speaker 2 ",
      "page": 126
    },
    {
      "title": "",
      "content": "Now you can see that recalculation works well. Speaker 1 ",
      "page": 127
    },
    {
      "title": "So we have our price for rental of our apartment.",
      "content": "Speaker 2 And you see our commission is correctly. Speaker 1 Recalculated and we can save our data. Speaker 2 Commission will be also saved. Speaker 1 We can see it here. Commission is our legal valid column, so it will be saved. Speaker 2 Let's open some sale example. Speaker 1 Now you can see. Speaker 2 Okay, price was not changed. ",
      "page": 127
    },
    {
      "title": "",
      "content": "Speaker 1 Commission is already calculated. Let's check if we switch from sale to rental. Speaker 2 You see, commission was recalculated. Speaker 1 If we switch back to sale, it's. Speaker 2 Also quite well calculated. Speaker 1 So now you see that our commission is quite fair for this amount of price for the house. Speaker 2 So our recalculation also works well and it shows even when page is opened. Speaker 1 It looks like when page is opened our data filled in client side. So it triggers recalculation even if we. Speaker 2 Do not change anything. Speaker 1 But just open the page. Yes, we'll see. ",
      "page": 128
    },
    {
      "title": "",
      "content": "Speaker 2 So it looks like our calculation is. Speaker 1 Already done and works quite well. Speaker 2 And of course everything works quite smoothly. Speaker 1 When we have a pre programmed examples where everything is correct. Speaker 2 But in real life you will do. Speaker 1 Your own examples where some errors or mistakes could happen. So you will need to know how to debug this code. Speaker 2 I will show you how to make. Speaker 1 Such debug and you will see that's not so difficult. Speaker 2 ",
      "page": 129
    },
    {
      "title": "",
      "content": "One of the easiest ways to debug is to put a special debugger breakpoint into your code. Speaker 1 Like this, the word debugger. If you provide such debugger statement, it means that you ask for debug session and you stop execution of your JavaScript code. And if your browser has opened browser developer console. So if browser developer console is on. Speaker 2 Then your debugging will work for you. Speaker 1 But this approach has also disadvantage. Speaker 3 And when you finished your debugging, you. Speaker 1 Should not forget to remove all your debugger lines. Speaker 2 Save your changes again. Speaker 1 And ideally you have to run your. Speaker 2 Logic again just to make sure you did not accidentally damage anything. Because when you save, you have chance. Speaker 1 ",
      "page": 130
    },
    {
      "title": "",
      "content": "That something will be incorrectly saved. Something will go not so well. Okay, so let me show you how we can do this type of debugging. Speaker 2 I need to explain and I need to show you. Speaker 1 We can go to this is easy. Speaker 2 Way to put debugger word. I will show you a bit more professional way to debug. We can go to our section open page which we plan to debug. Speaker 1 Then we enable browser developer console. Speaker 2 You can do it by F12 or control shift I. Speaker 1 And when you do this, you then. Speaker 2 Go to Sources tab. You see, we already opened some set of scripts here. We don't need it now. Speaker 1 Let's close everything and then we can. ",
      "page": 131
    },
    {
      "title": "",
      "content": "Speaker 2 Just search and you see we have. Speaker 1 A USR reality form page. Speaker 2 Page part of the URL. So it's a page, it's a name of client module and we can try to find it. Control p Open file. Speaker 1 Let's try Control p open file. Which one? Reality form page USR realty form page. We have two options here, probably because of browser cache. Speaker 2 Okay, if you do not want to. Speaker 1 Guess which one is correct, we can go back reload the page. Speaker 2 So we will suppress any kind of. Speaker 1 Cache and then we will open it again. And we have just one option, single option to select corresponding file Control P . Okay, open the page, then Control p open file and press Control P realty. Speaker 2 ",
      "page": 132
    },
    {
      "title": "",
      "content": "And you see only one form page here. Speaker 1 So no any cached, no any duplicates that will make you confused. And you probably may select Incorrect 1. So let's open the only one you. Speaker 2 See set of equalizable strings here. But the most important of course is our code. And you will see our module text here. Speaker 1 ",
      "page": 133
    },
    {
      "title": "Big part with view config div some.",
      "content": "Speaker 2 Part view model config. And finally you will have your header handlers. Part we are interested in debugging somewhere here. Speaker 1 For example, we can click on this. Speaker 2 Line number which will make a breakpoint for us. Speaker 1 So it's the same as debugger, but. Speaker 2 It doesn't change the source of our client module. ",
      "page": 133
    },
    {
      "title": "",
      "content": "Speaker 1 So we can use browser debugging tools for this. Speaker 2 Click on the line number. Speaker 1 That's how we activate breakpoint. So here we have one breakpoint that we just clicked here. Then when your browser developer console is. Speaker 2 On and execution comes to this line, execution will be stopped. Speaker 3 Let me show you. Speaker 1 If you change for example offer type from rental to sale, you see these. Speaker 2 Lines are executed and now code stops and we can go line by line. Speaker 1 Now we have to use tools that. Speaker 2 ",
      "page": 134
    },
    {
      "title": "",
      "content": "Will help us to proceed with this piece. The most popular, I think the Most. Speaker 1 Efficient is F10 which is a step over running of a line without going into sub functions for it. So I will press F10. Now you see my price was taken from the column percent. Now you see new percent was taken when offer type changed. Speaker 2 Then you can see commission was recalculated. Now you will see commission will be set here. Speaker 1 So my commission is now 26, so. Speaker 2 I expect it to be saved here. Yes, 26 and then we move on. Speaker 1 So here we can use resume F8 hotkey to normally continue execution. Speaker 2 That's how we can check this code. If we change the price. Speaker 1 You will see the Same I press F10 I. Speaker 2 Have another commission F8. Okay, we can make more serious price. ",
      "page": 135
    },
    {
      "title": "",
      "content": "Speaker 1 ",
      "page": 136
    },
    {
      "title": "For an apartment.",
      "content": "Speaker 2 And obviously we'll have more serious commission. So that's how you can debug your code. Speaker 1 Also, if your code has something has some obvious mistakes and causes runtime errors. Speaker 3 You will also see such runtime errors in your sources tab. Speaker 1 You will also see your console which. Speaker 3 Will be full of red messages. So in case if your code fails. Speaker 1 In runtime of course you should take care about it and look at your console tab and check if everything works well or not. Speaker 3 When you finished your debugging you should. Speaker 1 Click on wine number again removing your breakpoint and then your code will run without stops. ",
      "page": 136
    },
    {
      "title": "",
      "content": "Speaker 3 It's interesting to see what value we will see in case if we will clear overtype. Speaker 1 Now let's check. You see that percent is empty so percent is null. Trying to multiply null on price results in zero. Speaker 2 So that's how we will clear. Speaker 1 Okay, when we have some valid percent, we can move on with F8 and you see setting is done. Speaker 3 If you have any questions related to. Speaker 1 This debugging, please tell me. As you can see, debugging can be. Speaker 2 Really effective if your code is more. Speaker 1 Complex, if you have sub functions, if. Speaker 3 ",
      "page": 137
    },
    {
      "title": "",
      "content": "You are not sure what values you. Speaker 1 Finally get from your code so you can check it out with the help of browser developer tools. Okay, probably we got an hour of. Speaker 3 Our session, so let's make a few. Speaker 1 Five minutes break and then move on. Speaker 3 With next topics related to programming. I also plan to show you some. Speaker 1 Examples of programming of validation. So I plan to show you validation and. Speaker 3 Different validators. So different clones will be used for universal validation. Speaker 1 And also I plan to show you some examples of so we already displayed. Speaker 3 Debugging but also you need to know a bit more about logging. Speaker 1 ",
      "page": 138
    },
    {
      "title": "",
      "content": "Okay, so let's make a five minutes break foreign. Speaker 2 So today I want you to see. Speaker 1 Some more technical things about how client. Speaker 2 Side works and how we can do. Speaker 3 Some technical steps with it. So we already know how to debug our code. Speaker 1 I would also like to you to see that we have quite developed logging. So I will show you login mechanisms. Speaker 3 That are available on Creature Platform. Speaker 1 Here is our installed app and this is our folder with installed application. Speaker 3 We go to terrasoftware web and you. Speaker 1 ",
      "page": 139
    },
    {
      "title": "",
      "content": "Already know that Creature uses analog libraries to provide the different logs and save them in Creature web server. Speaker 3 The most important log file for us. Speaker 1 Is invoke targets config because here we can change default file to save our all default folder to save all our logs. Speaker 3 You may be interested in the way. Speaker 1 How we can do some logging. So we have so called appenders and. Speaker 3 Targets and probably have to start from appender first. Speaker 1 So analog config I should use analog config first. Speaker 3 And we have a lot of loggers. Speaker 1 As well appender so they are synonym. Logger or appender they are synonyms. ",
      "page": 140
    },
    {
      "title": "",
      "content": "Speaker 3 So you can see a lot of. Speaker 1 Different loggers registered and appenders are settings that will collect log messages. Speaker 3 And finally appenders will be connected with physical files. So you see we have more than. Speaker 1 100 different loggers and logger is a logical thing that you can use in your program code. Appender is a place that is used to collect your data and save it. So we have a lot of loggers, a lot of targets. Sorry, targets. And you see we have so appenders it means it's a setting that represents physical file. Also targets are synonym and appenders shows us that we also have a lot. Speaker 3 Of different logs that are saved here. And you can see different messages, different settings. So what do you need to know about this? Speaker 1 So Croatia has a lot of default. Speaker 3 Types of logs and all of them will be saved in a folder which. Speaker 1 We specify when we install our application. So in Analog Targets config line number three we have setting to save our logs to. By default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we can find logs and as you can see we have zero, which means main application logs. ",
      "page": 141
    },
    {
      "title": "",
      "content": "Speaker 3 And log folder which. Which. Sorry, a log folder which means loader part. Loader part is not so interesting because. Speaker 1 It has no customizable items that will. Speaker 3 Be interested for us to. Interesting for us to see. Speaker 1 So Loader is very technical and we have just several log files here, nothing very spectacular. And zero folder is what we really need because it's a log set of. Speaker 3 Logs for our main application. And then we go inside, we see. Speaker 1 Logs for each separate date. So you see for different days you. Speaker 3 Have logs in different folder which makes it easy to find. And then you see different logs here. In total we have more than 50. Speaker 1 Different files with logs saved here. So a lot of different logs, a lot of different files. Speaker 3 ",
      "page": 142
    },
    {
      "title": "",
      "content": "And what is the most important for. Speaker 1 You from the maintenance point of view? I think the most important is error log. Error log represents all exceptions and keeps information about all exceptions that happened in your system. So error log shows all errors and. Speaker 3 Of course you should take care about. Speaker 1 It because usually it is important and sometimes you may find some errors which are not related to your changes. So you may simply speaking find some errors from base product like this one. Speaker 3 Error parent schema is now parent ID. Speaker 1 Sets to empty and so on. Speaker 3 But it looks like nothing very critical for our application. You see the same error many times. Speaker 1 And it looks like not very important. Speaker 3 But if you will get some error messages here related to your functionality and your users will start to complain about. ",
      "page": 143
    },
    {
      "title": "",
      "content": "Speaker 1 Something is not working. Of course you cannot ignore this. Speaker 3 You may ask me why we have. Speaker 1 Some errors in a wait production release software. The answer is that Croatia is quite big and we have more than 200 libraries. We have millions of use cases that. Speaker 3 Could be checked and used. Speaker 1 So it's really hard to test everything and to polish any line of code, so it should show it so it could not fail in any way. So in real life, in any big system, some errors usually happen. But in our case it's not so. Speaker 3 Critical so you can simply ignore. Speaker 1 But if you will find another errors with some user complaints, of course you should take care of it. So from maintenance point of view, I think looking at such error log is quite important. And this is something that you should. Speaker 3 Do regularly if you support some big creation implementation by your own. In cloud conditions, looking at such logs. Speaker 1 ",
      "page": 144
    },
    {
      "title": "",
      "content": "Is complicated because you will not be. Speaker 3 Able to directly go to cloud based file system to get it. Speaker 1 So you only can ask for help at support team. By the way, you should know Support team lives here support creation.com so they work 24, 7. It means you can ask them any time, anytime you need, even on weekends. Speaker 3 And if you ask for example for a yesterday logs for a searching website. Speaker 1 They can give it for you. But it will be more efficient for. Speaker 3 You if you can collect Logs by yourself. And that's why I plan to show. Speaker 1 You some special tool which makes it. Speaker 3 Easier if you need to collect logs. Speaker 1 From cloud based environment. So I will show you Now I'm. Speaker 3 ",
      "page": 145
    },
    {
      "title": "",
      "content": "Talking about telemetry log for creation. This is a special add on which. Speaker 1 We can get from Application Hub New application Marketplace powered. Speaker 3 Then we can just search for the. Speaker 1 Word log and we will easily find this Hokku app or telemetry log for creation. So Hoku is a company physically this company is like founded by our creation employees. And this is something just so you should consider it made by creature and. Speaker 3 You can install this telemetry log. Speaker 1 This is for free. Agree. Speaker 3 Confirm. Speaker 1 You see it was just updated 2023 November. Speaker 3 Okay. And install it. ",
      "page": 146
    },
    {
      "title": "",
      "content": "Speaker 1 It takes just almost no time, maybe 20 seconds. And you will see that new app. Speaker 3 Is installed to our system. Speaker 1 So you'll be able to collect vlogs, but you'll be able to collect only runtime created logs. Speaker 3 So it's like listener for logs. Speaker 1 You will not be able to collect. Speaker 3 Yesterday logs, but if you do some. Speaker 1 Experiments and you need to see how logs look like when you do your experiments in cloud. So this app will be extremely helpful for you because it shows you all the messages all the log messages that. Speaker 3 Are saved on disk. Speaker 1 So you can listen to any logs saved on disk. ",
      "page": 147
    },
    {
      "title": "",
      "content": "Speaker 3 Let's patiently wait for its installation. Speaker 1 Surprisingly it takes a bit longer than I expected. But it's okay now it's not so critical. Speaker 3 Maybe we can look at browser developer. Speaker 1 Console here, but usually no trouble should be present. Okay, wait for a minute. And I'm also curious about what is happening at my website. Speaker 3 Oh, dotnet exe was running so it looks like compilation was done. Speaker 1 So system decided it needs to compile and that's why it was so slow. Okay, finally our compilation finished. We can download installation log to see what it took so long and what. Speaker 3 Operation took so long to install. Speaker 1 So now you will see results. Okay, great. Speaker 3 ",
      "page": 148
    },
    {
      "title": "",
      "content": "Here's our installation logs. Speaker 1 Started 26:58, so almost 27, finished 29. Speaker 3 It looks like 2 minutes and 3. Speaker 1 Seconds and yeah, it's a bit longer than usual. Speaker 3 And 27:15, 28:56 so it looks like. Speaker 1 Full configuration compilation was performed. That's why it took so long and okay, no problem, we can live with it. Speaker 3 So now you will see one more app here in this list. Speaker 1 Telemetry and you can reload this tab. Speaker 3 Now you will see one more item at our settings page. ",
      "page": 149
    },
    {
      "title": "",
      "content": "Speaker 1 Previously called System Designer. Currently it's called Settings. Speaker 3 So I will show you how you. Speaker 1 Can use this telemetry log here? Yes. Now let me show you. We can check. You probably remember we looked at our logger and appenders. So we have appenders, we have loggers here. So we can listen for a certain. Speaker 3 Logs in order to get some error. Speaker 1 Messages for the certain, let's say subject or certain area of functionality. And you can also listen everything like this, which will mean that you look and get every message. And I'll try to find a logger for SQL. Do we have anything? No, Let me find a corresponding logger. Speaker 3 ",
      "page": 150
    },
    {
      "title": "SQL.",
      "content": "Speaker 1 Oh, so it's called JSoft Core DB executor SQL log appender. Okay, will it be DB executor? Speaker 3 And we're only interested in for example errors. Speaker 1 ",
      "page": 150
    },
    {
      "title": "",
      "content": "So I plan to make example of listening of DB execution errors. Speaker 3 And I especially will do some example which makes such an error. Let's go to customer360, find accounts and. Speaker 1 Let'S try to remove some account. Obviously we will not be able to do this because it has some connections with existing contacts. So I try to delete this account. Speaker 3 Now you see no messages here. Try to do this. Of course I see error messages and. Speaker 1 Here I expect to get. Speaker 3 I expect to get error messages. Oh, I should subscribe. I should remember to subscribe. Speaker 1 Okay, let's try to delete once again. Yes, error message appears logger pattern. Maybe you should use info subscribe. I will try to delete it once again. Yes, now you see, funny thing, but. Speaker 3 It was not an error, it was just a warning. Speaker 1 So like yellow color, which means this. Speaker 3 ",
      "page": 151
    },
    {
      "title": "",
      "content": "Is not an error, just a warning. Speaker 1 And okay, so I got some text message from our DB executor and you. Speaker 3 See that my message has an error. So exception occurred, statement terminated. Speaker 1 And you see that we get some. Speaker 3 Text messages and logs. You can also get the same logs. Speaker 1 If you go to your files, you. Speaker 3 Will find SQL JSON. Here we will have similar information. Speaker 1 So you see my delete statement failed, so it conflicted with foreign reference constraint. Speaker 3 And it's interesting that for the SQL. ",
      "page": 152
    },
    {
      "title": "",
      "content": "Speaker 1 Errors, system logs only queries that were failed. So only queries that failed to be. Speaker 3 Executed at the database. In my case, I intentionally made an. Speaker 1 Error for the database level and showed you how you can handle it and how you can track it. You can also use all existing loggers for all messages subscribe. You will have plenty of different messages here. Speaker 3 ",
      "page": 153
    },
    {
      "title": "Just when you go to any part.",
      "content": "Speaker 1 Of your system, when you open any. Speaker 3 ",
      "page": 153
    },
    {
      "title": "Section, you will start to get more and more logs.",
      "content": "Speaker 1 Because system usually writes something to logs and it has quite verbose logging. So you will have more and more data. You see more messages appeared, some of them are useless for you and so. Speaker 3 You have to play a bit with it. But finally you will be able to. Speaker 1 Do the same as you can do with log files. ",
      "page": 153
    },
    {
      "title": "",
      "content": "Speaker 3 So this telemetry log for creation will. Speaker 1 Be extremely helpful in case if you. Speaker 3 Need to make some experiments and get. Speaker 1 Logs directly in online mode from your cloud environments, including even production systems. So this can be really helpful for you. Please remember about this telemetry log and we have some buttons here. What is this? Speaker 3 As you can see we have some help message explaining how to use this. Speaker 1 Some button which shows or it runs and stops a listening of logs. So green means run, red means stopped and that's how you can also use it. Speaker 3 So listening all of the logs will. Speaker 1 Provide you a lot of verbose noisy messages. Speaker 3 ",
      "page": 154
    },
    {
      "title": "",
      "content": "It's up to you. Speaker 1 So maybe this will be interesting for you. So just remember the name of the tool is Telemetry for Creatio. You can easily install it from Marketplace. Okay, so what else you need to know about client site? We will work with details soon and. Speaker 3 Before we doing this I need to explain you how to do validation. As you can see my previous program. Speaker 1 Was a bit more oriented on classic ui. So sometimes I jump from topics topics and that's why we are not following directly from this schedule. So I plan to provide you material like step by step slightly improving complexity of topics. So I think it's not so hard, not so difficult for you to study this material this way. Speaker 3 So let's move on validation. What it is about and this is. Speaker 1 Check of data before it will be. Speaker 3 ",
      "page": 155
    },
    {
      "title": "Saved at server side. Let's return back to our reality section and let's look at our data value.",
      "content": "Speaker 1 So when we add new values it may happen that user may save some very incorrect values. For example, we can try to save negative price. As you can see as a result we have negative commission. Speaker 3 ",
      "page": 155
    },
    {
      "title": "",
      "content": "It's also possible to save negative area and also system does not prevent us from doing such things. Speaker 1 So we can save it. Speaker 3 And as you can see from system. Speaker 1 Point of view there is no troubles, no errors. Speaker 3 But of course we have trouble from. Speaker 1 Business point of view because we can't. Speaker 3 Normally summarize values, we can't normally calculate commission. Speaker 1 So we have to make some kind of protection for our data input. And luckily we have this on the platform level as existing validation tools. Let me show you how to use it. Speaker 3 We also need to Program this. Speaker 1 ",
      "page": 156
    },
    {
      "title": "",
      "content": "Unfortunately validation is only available when you do programming, so it's not a no code setting. Speaker 3 But we are not afraid of this. Speaker 1 ",
      "page": 157
    },
    {
      "title": "Let's go to our configuration section, find our form page again, open its source code again.",
      "content": "Speaker 3 And I need to show. Speaker 1 You some examples at our Academy documentation. Speaker 3 Which will really help you. Speaker 1 So we have some architectural SDK things. Speaker 3 At front end documentation, but we have. Speaker 1 A lot of useful examples in platform customization area of our academy. And we have examples for Freedom UI for fields examples and we have examples of population of fields. So it's example of calculations that we already discussed. ",
      "page": 157
    },
    {
      "title": "",
      "content": "Speaker 3 And we have example of validation of. Speaker 2 Field which we are interested right now. Speaker 1 So I will share useful links for such articles. I recommend you to read it or just maybe look at it. Speaker 3 So let me explain how we plan to move on. Speaker 1 We have special area in our code named validators. Let me show you. Speaker 3 So we have handlers and we have validators. Speaker 1 So it's a special designed place for. Speaker 2 Us to program special functions that will. Speaker 1 ",
      "page": 158
    },
    {
      "title": "",
      "content": "Be used for checks of data during input. And luckily we have examples at Academy. Speaker 2 Which will help us to make it. Speaker 1 Smoothly without spending too much time. So validators is a collection, this is not an array. Speaker 2 Now you see, this is a collection. Speaker 3 Each collection item should include its name. Speaker 1 And implementation and validation. Speaker 2 Implementation includes validator property which is a. Speaker 1 Function that finally should return something set of parameters and async property. Then when we finish with this part, we will connect our created validator with set of columns. So we may use one validator for many different columns by connecting them to our page attributes. So let me show you how we. Speaker 2 Can do this and I already have. ",
      "page": 159
    },
    {
      "title": "",
      "content": "Speaker 1 An example, we will not spend too. Speaker 2 Much time on it. Speaker 1 So now you will see how we can do this validation. Speaker 2 First of all we go to validators area and we will provide some code here. Speaker 1 I already have example, no difficulties. So Freedom UI validation example and I need to provide this example of code. Speaker 2 Okay, let me copy and paste for you. Speaker 1 This is example of our validation. Okay, no need to use cameras to show. Okay, so this is example of code. Speaker 2 And I will also implement it. Speaker 1 It's my own validators area. So copy and paste. ",
      "page": 160
    },
    {
      "title": "",
      "content": "Speaker 2 What do you see here? So we register my validator with a specific name. Speaker 1 So this is a kind of type or maybe validator type, let's call it so. And we can declare different numbers or unlimited number of different validators. This validator includes three major properties, whether it validator, function parameters and async property. Speaker 2 So probably we have to start with parameters first, because parameters are values that we can provide for each validated column. Speaker 1 And for different columns, we can provide different parameter values. Speaker 2 Here we have to declare what parameters we will have. Speaker 3 In my case there are two parameters. Speaker 1 Min value and message parameter. Speaker 2 Validator function has a bit complex structure. This is one function, it returns another. Speaker 1 ",
      "page": 161
    },
    {
      "title": "",
      "content": "Function and first function requests config, Another function requests control inside of control. Unfortunately we only have value so it makes it difficult for us to analyze several values from different columns on our page. Speaker 2 But it makes it universal. Speaker 1 If we have value, we don't know exact column. So we can use the same validator for many different columns or different columns and it will be universal for us. So we can take value and from. Speaker 2 The config we know what parameters to expect. So we have min value parameter and we have message parameter. Speaker 1 Our check is quite simple. Speaker 2 We get value and then compare with min value. And in case if our value is. Speaker 1 Greater or equal than min value then. Speaker 2 We think that data is correct and. Speaker 1 Our returned result will be null which. ",
      "page": 162
    },
    {
      "title": "",
      "content": "Speaker 2 Means no warnings, no messages, everything is okay. But in case that value is not. Speaker 1 Correct we have to return special type. Speaker 2 Of result which is a JavaScript object with a specific name, the property inside and with the message property inside of this property. Speaker 1 So it's kind of nested JavaScript object. Speaker 2 And our message here will be text. Speaker 1 It should be displayed nearby problem control. Speaker 3 And also this message will be explained. Speaker 1 Displayed when we will try to save our page. So we will say try to save data system will check all the validators and it will find that some columns. Speaker 2 ",
      "page": 163
    },
    {
      "title": "",
      "content": "Are not correct and it will not. Speaker 1 Allow to save it. Speaker 2 So this is our example of a. Speaker 3 Validation, but it's not applied yet. So we have to set up some. Speaker 1 Columns which will work with this validator. Speaker 3 Otherwise our validator is useless because no. Speaker 1 Column expect checks with it. Speaker 2 So I do not need to change anything here. This code is universal as you can see. No any hard coded column names. Speaker 1 Only one hard coded thing is a validator type name. Next step is connection of validator with. ",
      "page": 164
    },
    {
      "title": "",
      "content": "Speaker 2 Certain columns or it's better to say with attributes. Speaker 1 So I will show you examples. Speaker 2 How we can connect. Speaker 1 Maybe I should do it here. How we can connect validators to columns. I will put example so I have to find my price attribute. Let's go to my view model config div area. Here we have attributes. Here is my price attribute inside of its structure. Speaker 2 After module config I have to provide. Speaker 1 Validators setting so I should carefully copy. Speaker 2 This. Speaker 1 And paste it here. Speaker 2 ",
      "page": 165
    },
    {
      "title": "",
      "content": "And that's. Speaker 1 How I will put it. Speaker 2 So here's my price attribute. Speaker 1 Here is my validator. The type of validator should be matched. Speaker 2 With what we created and parameter. Speaker 1 So the minimum value for the price. Speaker 2 I think it will be 50. Speaker 3 So we will not allow to save. Speaker 2 Any reality object with the price less than 50 bucks. ",
      "page": 166
    },
    {
      "title": "",
      "content": "Speaker 1 Okay, and also we can use message, not just a plain string constant which. Speaker 2 Is also supported, but also we can use localizable string. Here is an example of a macro that you can use for localizable strings. And localizable strings are saved separately and can provide translations into other languages. Speaker 1 So let me show you what localizable strings I plan to use. I will put it for you. And first, localizable string about price. So my localizable string is named price cannot be less. Speaker 2 I go to localizable strings. Probably we can save it before modifications. Speaker 1 But now I will modify non localizable. Speaker 2 Strings. Speaker 1 Take significantly longer than usual. As you can see, my worker process consumed quite a lot of ram. It's more than usual. Speaker 2 Okay, we can try to create localizable. Speaker 1 ",
      "page": 167
    },
    {
      "title": "",
      "content": "String with the code price can't be less and the value is price cannot be less than something. Okay, try to add and then I expect some troubles here. Speaker 2 That's why I will try to save now. Speaker 1 If it saves correctly, okay, no problem. Speaker 2 But in previous versions I experienced some. Speaker 1 Troubles with localizable strings here and it turned out to save it. So when I added once, it physically. Speaker 2 Added it twice and then denied to. Speaker 1 Save because it tells that such localizable string already exists. In case, if you face this kind. Speaker 2 Of issue when you add localizable string. Speaker 1 Try to save and then get error message about duplicated localizable strings. You can just remove that visible one that you created. Speaker 2 ",
      "page": 168
    },
    {
      "title": "",
      "content": "Another one which is invisible will be still saved. Speaker 1 So that's how you can bypass this bug. Speaker 2 As you can see, Creature also as. Speaker 1 Any software, it has its own bugs. Sometimes bugs are detected, fixed new bugs appeared. Speaker 2 So it's normal, more or less normal for any software. Another localizable string that we will need is about area. So localizable string for area. And for its. Speaker 1 Value here, save it. Speaker 2 Area can't be less. Let's try to save. Speaker 1 And my intention when I save each time I add the localizable string is to check do I have any bugs with localizable string. Speaker 2 It looks like in this version this bug was finally fixed. ",
      "page": 169
    },
    {
      "title": "",
      "content": "Speaker 1 That's nice. So for the price we already set. Speaker 2 Settings, now we do the same for area. So let me show you what we. Speaker 1 Do for area we will set validators setting for one column. We can use multiple validators so it's possible to make checks with different criterias. Speaker 2 And in my case for the area. Speaker 1 I will use the same validator but. Speaker 2 Minimum value will be 100 square feet. Speaker 1 So it's close to 10 square meters. Speaker 3 We think that we will not input. Speaker 1 Any kind of realty less than 10. ",
      "page": 170
    },
    {
      "title": "",
      "content": "Speaker 3 Square meters or 100 square feet. Speaker 1 And that's our limitation here. Speaker 2 And we will use localizable string that. Speaker 1 We already successfully saved. Okay, now we have this example, save. Speaker 2 It and then it's our turn to. Speaker 1 Test and check out how our data were saved. How well it looks, we can close. Speaker 2 Our editor, go to main app probably. Speaker 3 Let'S reward it just to fight with. Speaker 1 ",
      "page": 171
    },
    {
      "title": "",
      "content": "Any potential impact of browser cache issue. Then let's open any record and specially intentionally open the record which has incorrect stuff here. Speaker 2 Now you see that once we finished. Speaker 1 And moved focus out of control, you see we have some checks and this checks displays error message. Speaker 3 Price can't be less than 50 bucks. Speaker 1 Area can't be less than 100 square feet. If we try to save such data, system will reject it tells us we. Speaker 3 Have problems and we have to fix them. Speaker 1 Okay, let's fix only price try to save. Speaker 3 We still have trouble with area. Speaker 1 When we fix area then our troubles are over and system saves it normally. Speaker 3 ",
      "page": 172
    },
    {
      "title": "",
      "content": "Please note that if you do something. Speaker 1 Like this and try to save your. Speaker 3 Data Validation works at client side so it doesn't send any messages to server side. Speaker 1 Now you see nothing appeared in network tab until we will fully fix our rental price. In this case you see update query executed. So physical data was sent to server. Speaker 3 Side only in case of successful client validation. Speaker 1 So this validation may help you to improve your logic to make it more protected to get rid of like silly. Speaker 3 Mistakes made by end users. Speaker 1 And I think that this is something that will be quite important in your future projects and implementation. Speaker 2 Now I plan to show you some. ",
      "page": 173
    },
    {
      "title": "",
      "content": "Speaker 1 Simple topic and it's simple but it's very important because such topic will be. Speaker 2 Quite often faced in your projects. It will be not really directly connected with programming, but it's something that you definitely should know about. Speaker 1 I'm talking about typical settings of columns. Speaker 2 That you need according to some conditions. Speaker 1 For example, some column must be visible. Speaker 2 Only in case of a certain condition and otherwise should be hidden or another. Speaker 1 Column must be required according to some conditions and otherwise should be optional. And also you may need some like talk about visibility, about required settings, or about read only columns. Speaker 2 So such typical Settings for columns are. Speaker 1 Frequently faced in requirements from business owners. ",
      "page": 174
    },
    {
      "title": "",
      "content": "Speaker 3 And that's why such functionality was decided to implement as a no code Tools. Speaker 1 And developers code such functionality. Business rules Let me show you how you can manage such business rules and I will show you a couple of examples. We can go to modify our page so edit page then we go to special button business rules Please note we have two types of business rules. Speaker 2 Page business rules mainly used for controls. Speaker 1 Visibility, maybe required property, read only property and also we have object business rules. Here it's called realty business rules but. Speaker 2 You should understand this is about object. Object business rules also offer us possibility. Speaker 1 To make some filtering and depending on the type of business row, it will be physically saved into metadata of a. Speaker 2 Page or into metadata of an object. Speaker 1 So let me show you. Speaker 2 ",
      "page": 175
    },
    {
      "title": "",
      "content": "Let's imagine our task is quite simple. Speaker 1 To show comment only in case of type is not empty. Speaker 2 So when we add new data, type. Speaker 1 Could be not specified. In this case, comment should be hidden. Let me show you how we can do this. Speaker 2 We can use page level business rules. Speaker 1 Because it's about column visibility add new rule. Speaker 2 This rule will have automatically generated title. Speaker 1 To be applied to the page and it has triggering condition, page is open or some condition changed. Speaker 2 So we have if scenario and then action. Okay, let's start with if and now we will think of something like. ",
      "page": 176
    },
    {
      "title": "",
      "content": "Speaker 1 I should do it a bit better with initial status. Okay, so if our type is not empty, then comment should be visible. Speaker 2 Let's try to do this attribute or. Speaker 1 Data field realty and our type okay, if type is not empty so we can use condition is filled in. If this condition is true, then we will use action show elements on the. Speaker 2 Page and we can decide what element. Speaker 1 Will be shown to be. Input column of a comment Text comment Okay, so if type is filled in comment will be visible. Otherwise comment will be hidden. So let's try to test how it works. We can save it. Speaker 3 Save our page. Speaker 1 Now and let's check how it will be physically working for us. Speaker 2 As you can see, each time you. Speaker 1 Develop something, this is very important to immediately test it when it's ready and. ",
      "page": 177
    },
    {
      "title": "",
      "content": "Speaker 2 When you make many different changes you. Speaker 1 May think of okay, I will do many changes, then I will test them in total. Speaker 2 I do not recommend you to follow this approach, so it's much better and more safer. If you will do some small step, then you go to your system and. Speaker 1 Start to test it. Speaker 2 Then you do another small step, then you do another test. Speaker 1 The reason is that creature client side sometimes could bring you Surprises and it will be not so clear according to. Speaker 2 The error message text in your browser console to understand what exact part is gave you such a surprise. Speaker 1 So it's better to make small steps and to test it frequently. So once you get and start to. Speaker 2 ",
      "page": 178
    },
    {
      "title": "",
      "content": "Get some error messages and you will. Speaker 1 Easily understand that it was caused probably the most latest recent changes and you. Speaker 2 Should take care about it and maybe. Speaker 1 Revert them maybe to look carefully and. Speaker 2 You will find some errors. So small steps and frequent testing. This is what I recommend to you. Speaker 1 So let's open any record type is set, Comment is visible. It's clear the type. Speaker 2 Now you see it's a bit uncertain. Speaker 1 So it's not cleared and let's set it again. Okay, if you clear it doesn't work. Speaker 2 I think that we have a problem because of initial state of the square column. Let me show you how we can fix it. Speaker 1 ",
      "page": 179
    },
    {
      "title": "",
      "content": "Initial state should be aligned with our business rule and in case if we check some condition and turn this column on. So make it visible. So by default this comment should be hidden. Let's select comment, let's set its visibility default visibility not visible and then save our changes. So by default comment will be hidden. Speaker 3 And according to the business rule, it. Speaker 1 Will be enabled if type changed and became not empty. Let's check it out. Speaker 3 We need to reload. Speaker 1 Fighting with browser cache Clear. Now you see our comment disappeared. If we set some type, it appeared again. Speaker 3 If we change type, it appears again. Speaker 1 If you clear, it hides. Hides? Yes. Speaker 3 So that's how you can manage visibility and such setting. As you can see, it's a no code setting. Speaker 1 So you can make all the settings with your mouse. It doesn't require any programming. ",
      "page": 180
    },
    {
      "title": "",
      "content": "Speaker 3 I would like you to see another example. Speaker 1 So you can also see visibility, editability and required property. Speaker 3 And one more thing which is interesting. Speaker 1 I think is about selecting values in lookups. Speaker 3 Now we have selection of manager from contact. We can display additional columns here. Speaker 1 For example, contact type. Okay, I'm too lazy to scroll. I will type this. Speaker 3 Now you see some contexts have customer type, some contexts have employee type, and so on. Speaker 1 Finally, my contacts list will include many. Speaker 3 Different persons and only some of them. ",
      "page": 181
    },
    {
      "title": "",
      "content": "Speaker 1 Will represent my company employees. Speaker 3 When I want to specify manager here, I definitely want to specify someone who. Speaker 1 Is company employee and not just a random contact. Speaker 3 So I want to make some simple. Speaker 1 Filter here which will help me to select only context with a certain type. And we can do such filtering with. Speaker 3 The help of business rules. Speaker 1 So let's go back to our page, go to business rules Now I plan to use object level business rules. So here you see real to business rules which means realty object business rules. Speaker 3 Here was page. Now here is object level. Speaker 1 Okay and first of all I will check available action here. ",
      "page": 182
    },
    {
      "title": "",
      "content": "Speaker 3 And in comparison with page level we. Speaker 1 Have more options here and I plan to use simple static filter Business rule Static filter will not require any as you can see, static filter will not. Speaker 3 Require any special conditions I mean for. Speaker 1 Triggering so it will be applied always. That's why it's called static. Speaker 3 And I will have a column which. Speaker 1 Column I plan to use for filtering. This will be manager column and what. Speaker 3 Filter I plan to use I have. Speaker 1 To specify it with additional condition. Please note here those of you who use Windows Home probably you may experience difficulties because it was found that users with Windows Home experienced troubles opening this tab and it was simply not possible if you use Home Edition. So please be careful when you use this home version and just know about this. So this will be temporary not available for you. Speaker 3 ",
      "page": 183
    },
    {
      "title": "",
      "content": "I can make condition here. Contact. Speaker 1 Type equals to a constant employee. So if this filter will be constantly applied on my lookup, save it and then save it again. Now I save page and I will reload my main tab and you will see how this manager filter will work for us. Go back. Okay, let's save changes. Close reload this reloading is necessary only to work with browser cache. Let's check. Speaker 3 Now let's try to select values. Speaker 1 Here you select data. Now you see only context with employee type. Speaker 2 Okay, let's make more examples, better examples. Speaker 1 And let's go to customer 360 add more contacts to make it representative and let's make a contact name something like James Bond and type will be customer. Okay, one more Bruce Lee will be our employee. Speaker 2 And Bruce Willis will be also our employee. So you will see we have some. Speaker 1 Different contexts, different types and let's go back to our realty, try to select manager system only shows us only context with a certain type. Speaker 2 ",
      "page": 184
    },
    {
      "title": "",
      "content": "This is very simple filtering tool. Speaker 1 As you can see we just used only mouse to set up this type of customization. Speaker 2 But it's very efficient and that's why I think it's important for you to know about it. Because even if it doesn't require programming, but if you did not attend our. Speaker 1 Customization course, you still need to know. Speaker 2 That such type of filtering is supported. Also I can quickly show you another filtering of connected fields like filtering cities by countries. Speaker 1 So or maybe if we focus on us only. For example we can filter cities by States. But maybe for countries it will be more clear and understandable. Speaker 2 So let's go again to our page. In order to filter something by something. Speaker 1 Of course we need to have connected lookups. Speaker 2 ",
      "page": 185
    },
    {
      "title": "",
      "content": "Luckily in base product cities and countries are already connected. Speaker 1 Each city has corresponding country reference. Let me show you cities lookup already has connections with country. Let me select fields to display. We have names. I don't need time zone at all. But I want you to see country. Okay, save it. Now you see a lot of different cities from different countries and it looks like data lookups. Data in our lookups is already well, so let's do such settings. I will add two drop down columns to my page and it will be. Speaker 2 Probably we have to start from country. Speaker 1 Because we plan to input data starting from country providing country value and then USR country copy and lookup. We will use standard lookup. Country that is already present will be drop down list. Okay. And here element code will be also country related. So that's how I add new lookup. Now I will show you CT's lookup. So it will be city confirm lookup. Speaker 3 That will be based on. Speaker 1 It's also CT drop down list. Speaker 2 And here we can name something like city. Speaker 1 It will be enough. The most important is uniqueness of this column. But city is good enough. Speaker 2 ",
      "page": 186
    },
    {
      "title": "",
      "content": "Good unique value for us. Speaker 1 Okay. Is it okay? Should be. I don't like. Yeah, probably There are limitations about the length of this. Okay, so what we have here is country and city and we need to. Speaker 2 Save it first in order to apply. Speaker 3 Changes to the object level. Speaker 1 And so to fully modify our data model properly to take maybe less than a minute our time it okay, saved. Well, now we go to business rules. So I will show you how we can make a object level business rule for connected lookups. Let's add one more lookup. Action will be apply filter. Speaker 3 This is a special type of filter. Speaker 1 Which is I think originally designed for connected lookups. Speaker 2 And we can specify what column to filter. Speaker 1 Obviously we will filter cities by what another column by country. ",
      "page": 187
    },
    {
      "title": "",
      "content": "Speaker 2 And this editor will automatically detect connections between cities and countries. So it will show us where city. Speaker 1 Country which means country value inside of city Lookup equals to value of country. Speaker 2 Provided in our realty page and also automatic settings for clearing when country changed. Speaker 1 Clearing cities when country changed or automatically. Speaker 2 Set country if city was set and. Speaker 1 For example country was empty. So you can do this also then. Speaker 2 Country will be automatically populated. So this rule will work good for us. Speaker 1 But what I need to add here is triggering condition. Speaker 2 ",
      "page": 188
    },
    {
      "title": "",
      "content": "We need to Change such filter each time. Speaker 1 When country changes so page is opened or some changes and when country. Okay, we can select here is filled in. Then we have to apply this filter. So if country changes and becomes filled in, then filter should be applied. Otherwise you may face some glitches in. Speaker 2 Working with this filter. Speaker 1 Sometimes it will work, sometimes not. Speaker 2 So you should not forget about this condition. Let's save it. Speaker 1 Save page and then we will test it. You will see how it works. Great. You see, data was successfully saved, page saved. Speaker 2 Okay, let's test. We need to reward it. And now let's check it out. Speaker 1 So let's say Miami and you see. Speaker 2 Country, you see city. ",
      "page": 189
    },
    {
      "title": "",
      "content": "Speaker 1 Okay, Country, States, United States. Speaker 2 Cities. As you may see, cities are filtered by country. You only see cities. Speaker 1 Oh, Hartford, Frankfort. Speaker 2 Looks like only. Speaker 1 US Cities I think. Okay, so now you see it looks. Speaker 3 Looks like. Speaker 2 Well, okay, let's take another example. Speaker 1 No country, you see all cities from different country. Ararat Astrakhan, Baghdad, you see Bishkek, you see Bratislava. Speaker 2 So from different countries from. ",
      "page": 190
    },
    {
      "title": "",
      "content": "Speaker 1 Okay, so if you set some city. Speaker 2 Country will be populated automatically in this case. Speaker 1 But if you clear country, city was cleared automatically. So if we provide some country like Bangladesh, you will see only filtered cities. Here if you change country to something else like Egypt, you will see only Egypt city. So filtering works well. Speaker 2 Let's go to our states. Speaker 1 Now we have to search for Seattle. Speaker 2 Yes, you see it finds and filter works well. So this type of filtering can be. Speaker 1 Done not only for citizen countries. For example, you can make two connected hookups. One is type of document and second one is for example subtype. Speaker 3 And subtype should have a lookup column. Speaker 1 ",
      "page": 191
    },
    {
      "title": "",
      "content": "Referencing to corresponding type. Speaker 3 And in this case when user specifies. Speaker 1 Type, it will be technically possible to filter subtypes according to selected type. But this canonic example with countries and cities, I think it's the easiest to. Speaker 2 Understand examples so you can also use it. Speaker 1 Don't forget about business rules triggering by changing country. So save it. Probably that's enough for today and we. Speaker 2 Have one more session tomorrow that will be dedicated to our client side. I plan to show you how to make details and also probably answer your questions if appear. Speaker 1 If you ask something about some cases with programming inside of our pages in. Speaker 2 Freedom UI later we probably will also. Speaker 1 Invest a bit of time into classic. ",
      "page": 192
    },
    {
      "title": "",
      "content": "Speaker 2 UI examples and I think you'll be. Speaker 1 Interested in migration from Classic UI to Freedom ui. It will be only client side, so objects will be the same. I will show you how you can do such migration. Thank you very much for Your time. Speaker 2 Today, our session is over. In case. If you have any questions with your. Speaker 1 Environments, with your homework, tell me please. Speaker 2 It's important for me to know. Speaker 1 Do you have any troubles or other notes, any questions? Speaker 4 I have one. Did we go over. I could have just missed this now. It could have just been me. Did we go over the overriding. I think it was on the list of the. The kind of schedule for each day we had parent overriding. Overriding a parent method. Did we go over that and I just. Or is that something we have to go back to? Speaker 1 You probably asked about something that you. Speaker 2 ",
      "page": 193
    },
    {
      "title": "",
      "content": "Already saw in Classic UI with overriding of methods or this is something else. So can you explain the business example? Speaker 4 No, sorry, I just saw it on the list on. So you know you have the list of the breakdown of each day. It was an. It's kind of what you open up with this. With the start of each day. Speaker 1 Oh, you mean this one? Speaker 2 This is. Speaker 1 Yeah, yeah. Speaker 2 So this schedule is a bit outdated unfortunately. Speaker 1 Okay, try to find some time and yes, there are some topics that are not so applicable to Freedom UI and. Speaker 2 You may find something like. Like alternative JavaScript editors. Speaker 1 Okay, I can explain you something and overriding of methods. ",
      "page": 194
    },
    {
      "title": "",
      "content": "Speaker 4 That's it. Speaker 1 It was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui. In Classic UI you could rewrite or. Speaker 2 Interfere into some life cycle stages of. Speaker 1 Page by replacing its like critically important methods. In Freedom UI you can write your. Speaker 2 Own methods, but system does not allow. Speaker 1 You to significantly change this life cycle. So it looks like I tried and. Speaker 2 It looks like when you have for. Speaker 1 Example some handler and you already know that there is a base product handler which is declared somewhere in parent. Speaker 2 ",
      "page": 195
    },
    {
      "title": "",
      "content": "Templates, you cannot replace it with your own rejecting execution of all parent implementation. So in Freedom UI you can write. Speaker 1 ",
      "page": 196
    },
    {
      "title": "Your own part and it will be.",
      "content": "Speaker 2 ",
      "page": 196
    },
    {
      "title": "Just part of all the steps executed.",
      "content": "Speaker 1 In total and you can't break the way how pages code and what handlers are called there until you will write your own control I think so in Freedom UI we have different conditions for programming. I plan to update this program for. Speaker 2 Our sessions and it's a bit outdated. Speaker 1 Here, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural. So when you do simple settings then. Speaker 2 You do a bit more. Speaker 1 More complex and so our flow of real topics that we study, I think it's quite optimal for current version. Speaker 4 Thanks Mario. ",
      "page": 196
    },
    {
      "title": "",
      "content": "Speaker 1 Thank you Paddy for questions and any. Speaker 2 Any, any difficulties with your homework, when you do examples, when you make. Speaker 1 Your sections, maybe you have something to say. It happens that most of our participants watch videos like you now and then. Speaker 3 They decided to process video files much. Speaker 1 Later than finishing of the sessions. Speaker 3 So I recommend you to invest some time between the sessions to watch videos and practice. Speaker 1 Because in this case you will easier. Speaker 3 Understand our next topics. Speaker 1 ",
      "page": 197
    },
    {
      "title": "",
      "content": "You will get more experience at that topics and think it will be in. Speaker 3 General faster for you. Speaker 1 So it will be faster boarding faster, let's say getting necessary expertise for you as developers. So at the end of the sessions. Speaker 3 You'Ll be able to pass an exam. Speaker 1 We call it Fast Track certification, which. Speaker 3 Includes homework very similar to what we do here and test. This test will require some time for you to prepare. So at the end of the sessions next week, I will explain you some. Speaker 1 Details how we will prepare for the exam, how it will be organized and. Speaker 3 This is optional thing. Speaker 1 So if you feel confident, you may apply for it. If not, you may use Academy website and apply for certification much later. ",
      "page": 198
    },
    {
      "title": "",
      "content": "Speaker 3 So if interested in preparation for the. Speaker 1 Exam, also keep it in your mind. Speaker 3 And if you have some questions, feel free to ask. Also maybe you will want to write me some messages. Speaker 1 Here is my email. I will be happy to answer you and support you during your practicing with. Speaker 3 Examples in our sessions. Speaker 1 Thank you for your time today. Speaker 3 See you tomorrow as usual. Speaker 1 And as usual, you will receive videos of today's session very soon, maybe 40 or 50 minutes to get this video. Speaker 3 Thank you and goodbye. ",
      "page": 199
    },
    {
      "title": "",
      "content": "Speaker 1 See you tomorrow. Bye. Speaker 2 It. ",
      "page": 200
    },
    {
      "title": "",
      "content": "Speaker 1 So today's day five of our development on Creature platform guided learning and we continue to work with some parts of Creature user interface slightly moving forward to so to study some server side items. And also I need to tell you about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui. So what I need to tell you first today, this is about details. Because this is a very important piece of Creature configuration and you will face it almost everywhere. Let me show you what detail is go to customer 360 because it's a good example of details. We go to accounts section and then we can open any account record. Detail is separate entity which keeps some data in connection to our main record. Here we can see an example. Main record is account and detail is account address. Speaker 1 And you can see that for one main account record we can save unlimited number of addresses. So we can put unlimited number of addresses here and they will be usually displayed in a list. And the reason why Creature has details is need to save additional data in connection to our main entity. So our main entity is a single record and then we need to keep information for example about different types of addresses for our customer or different emails. Or maybe it's just simple list of contacts connected to this account. So you should understand that detail is usually based on a separate entity. So account is one entity, Account address is a separate entity, it means separate object and it means separate physical date table. Usually we have one too many relationship between details and main records. Speaker 1 So one account connected to as many detail records. And this physical connection is provided by use of lookup columns, correctly filled in for detail records. Vikrat, thank you very much for confirmation. Thank you for working with your redis and I'm really happy that you finally made your system working correctly. Thank you. And so details, they are usually connected with main entity with the help of lookups, lookup columns. And each detail record has information about its parent account. And that's how system can filter through all addresses and show only addresses related to this currently selected data record. Details are very common in creation. If you will turn on bigger product like sales service and marketing, you will see details almost everywhere. And we have big entities like contacts or accounts and they have plenty of details like addresses in accounts. Speaker 1 We have contacts list, we have also emails or sorry, we have probably it's better to say communications. If you go to contacts open any record, you will see communications detail. So here you see we have mobile phones, email, business phone, but in general we have plenty of Supported communication options and communications are saved as a detail connected with main entity in context. We also have detail named job experience. And when we have several entities, sometimes they are connected with each other with the help of lookups. And that's why and that's how we can make some details. For example, we can look at accounts and see list of connected contacts because contact has a reference to account. Let me show you here Account select. And now you see that we have contacts and they have reference to account. Speaker 1 And that's how we can select a company and to see all its connected contacts. So usually connection is one too many. Maybe some of you will ask about is it possible to make a connection one to one or data connection many to many. Physically this is possible, but you should use for one to one you still will have to use separate object. And for many to many we will have to use supporting additional object which will use two lookups for two connected entities. So the easiest to implement and I think the most commonly used case is use of one to many relationship. And now let's return back. Let's return back to our reality section. So we will study and we will learn how to make ",
      "page": 201
    },
    {
      "title": "",
      "content": "details. Speaker 1 And some of you who already participated in our develop and in our customization course, you already know how to do this and you already saw building details. So this is nothing special for you. But some of you who never attended any of creatio training sessions, so you need to know what detail is how to build it because it's almost the same important as knowledge how to build sections. So I will show you step by step example of building details and I will explain why we need it. The main reason is our business requirement to keep a lot of connected information for our main record. And this connected information usually should be saved in a separate entities. So when we talk about details, we talk about separate connected entities. So let's do some quick and simple example. Speaker 1 In our realty business, we definitely need to speak with potential customers. We need to provide some kind of show for them or our apartments or houses set for sale or rental. And we need to organize these actions. So we need to organize such visits, such conversations. And it's better not to intersect and overlap different visits at same time. So we need to have some kind of schedule for future visits connected to a certain realty record. So it looks like we will have a separate entity called realty visits. And for each house or apartment we will have a list of planned visits for future we can do it with a separate object and I recommend you to create new details for the first make an object for it. Speaker 1 So let's go to our configuration section select our package where we will work on maybe we focus on objects first and we will create manually create new object. So new object requires new good working friendly code. We can call it something like realty visit title will be also good. Sorry realty visit inheritance it makes sense to inherit only from base entity in order to get just six standard system columns here keyfield historical columns. Okay, we do it inheriting from base entity and we can create our own custom columns for our new entity. One of the first column will be connection with parent realty because our visit will have no sense if we are not connecting it to any reality. So let's create new lookup column. Speaker 1 We can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI USR realty and we can make it column required because it's not good idea to keep it empty if we create any valid visit so this colon will be required. We have no default values here, but we have a special lookup behavior. Normal behavior means when we delete value from corresponding reference table from realty Having such connection with any other data table will prevent our delete and we will have a foreign key reference error message. Because we can't delete reality if it has some visits and we have a standard delete behavior. So block deletion. Speaker 1 But in details it's very common that detailed data is not as important as main record and when we plan to delete main record delete data should be deleted. So our child detail data should be deleted without any questions like when we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact communication so we don't care. We also want to delete them as well as addresses or some payment information or something else. So anything which is connected to the main record. If we decided to delete main record usually ",
      "page": 202
    },
    {
      "title": "we are interested in silent delete of all the child parts.",
      "content": "Speaker 1 ",
      "page": 202
    },
    {
      "title": "",
      "content": "So here our reality visit is something that is not very important in case if we delete parent reality so we can set delete records from current object it means when parent reality is deleted, all connected visits will be removed automatically physically. This is performed by help of foreign key at the database and with option cascade on delete. So physical delete performs on the database level, not at application level. Unfortunately you can't handle you cannot handle such delete at application level because it will be triggered and made by database foreign key tools. But okay, so we have parent reality required special set for delete behavior. Good. This is our column for connection between visits and parent reality. Now we have to make some columns that will work for business part of us. So any visit will have date and time of visit. Speaker 1 So we can call this colon visit date time. We can make some default value just to make it easier to set up new values and will be system variable current time and date Default value will be provided in case if you try to add the new record. And it makes sense especially if you want to change for example till tomorrow. But having similar time setting automatical value here will be quite good. So visit date and time it makes sense to make it required because having no visit time, it's definitely not good to visit data. One more thing we may know potential customer this is a lookup. We can call this potential customer. Why potential? Because we already have a real customer for our realty who asked us to help with sale or rentals. Speaker 1 So potential customer is a person who probably will buy a house or will rent an apartment. So potential customer, we don't know who it is. So sometimes could be empty. And lookup is contact object which is a very typical way when we need to get some kind of personal reference. So usually we use contacts for this and for context selection. Maybe we need full scale selection window instead of list and using normal block delete option here. Also you probably will be interested in some very rare cases you may not need foreign keys at all. For example, you do something artificial like selecting data not from a real table but from some data view as a lookup. In this case you will not be able to construct a valid foreign key. Speaker 1 So we have an option do not control integrity which means please do not create foreign keys by default. When you create a lookup column foreign key is created automatically. But if you enable option do not control integrity it means that foreign key will be not created. It's interesting fact that such option was used for created by you see do not control and for modified by. The reason why developers need it is performance. So created by and modified by is usually set automatically by system. You see system variable, it's a current user contact and usually system sets this value correctly. Speaker 1 So such a column is usually not edited by end customer and it means that we have pretty no serious reasons to control it with the help of foreign keys only in case if you try to remove corresponding contact then such created by or modified by columns should prevent this data from Removal. But it's very rare case when you remove contact who previously was a user of your system. So generally we can say that in this example having foreign key is not so critical because value for this column is usually set by system and it's set correctly. So developers also realized that if we have no such option and let's imagine we have probably thousand of out of the box objects for our big base product like sales, service and marketing. So it will produce 2000s of foreign key. Speaker 1 So for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing to contact entity. So now let's imagine you have a database which pretends to be quite fast and comfortable for work for big company. And then you have a table in this database contacts table which has 2000 foreign keys on it. Each time you try to make any changes in these tables, such foreign keys will be invalidated and they will be checked ",
      "page": 203
    },
    {
      "title": "",
      "content": "and it will be a huge performance impact on your database. And each time you do some operations like inserts and updates, such foreign keys are also checked and the contacts table will take a huge time for blocks that is necessary to perform low level database checks for work of foreign keys. So developers decided to sacrifice referential integrity here. Speaker 1 And that's why they decided to make it with no foreign keys. For created by and for modified by and such behavior was inherited from base lookup. Oh sorry. From base entity. If you will search for a base entity in our packages, open it. You will find out that this column created by has option do not control integrity and the modified by also has this option do not control integrity. So this is made intentionally and because of performance. So maybe something like. Interesting fact, you may need this option in very rare cases when you create some artificial lookups based on something that is not a table. Like something that is a database view or even something more weird thing like a programmed stuff at the server side, not a database item at all. Speaker 1 In this case do not control integrity will save you because otherwise system will fail to save your object where it can't find physical data based at your point on selecting your lookup data source. So here we have just standard situation potential customer based on contact. We have all standard settings and the only change was selection window. So full scale selection window selected just to make it more comfortable to select potential contacts potential customers as a context from big selection window. Okay, what else? Probably we need one more column here. This is comment. Let's make a text 200 and comments. Sorry. Yep, title will Be comment. So any visit may end out with something like we need to remember to write down and just to have some notes, maybe some decisions, maybe some ideas. Speaker 1 So comment after a visit could be really helpful if you want to proceed with this realty. So we can have a comment as a text field, very simple, not required and just text value. Okay, so now it looks like our simple detail object is almost ready and we have to save and publish it. Clicking publish as you remember will automatically perform save first. Now you see it and then it will do publish operation and it also takes couple of seconds. Great, our object is ready. But what we need to do and what is a bit different from maybe you have some experiences older UI and maybe you have some previous creation experience. So Starting from version 8, objects are connected to page object connected with pages with a separate special setting inside of objects properties. Speaker 1 So now you can see pages tab and we have to specify edit page for our reality visit. Obviously we don't have any page for this, so we can easily create with the add new page button we can create new page edit page for our detail we can specify select some parent template that will be used as a basis for our page. Our column set is not so big and impressive so we can just take some mini page example which will also look good if you have not so many columns. So I will select mini page and this mini page offers us possibilities. Okay, we can use some code, let's say, let's put some good looking code like realty visit page title Reality visit page. Okay, maybe we can call it form page just to make it traditional with realty form page. Speaker 1 So reality visit form page Its parent packages realty template is mini page. Great, now we have to use existing columns. As you can see we can add new columns but we already have data model attributes already designed in our object so we can just show it up. So what we need here is visit date and time. Probably the first important column that we need to display. Second important column is potential customer and third one will be comment. Okay, so you may ask me and what about parent reality? It's mandatory. Why don't we show it here? ",
      "page": 204
    },
    {
      "title": "",
      "content": "Speaker 1 The answer is that in case of detail management, when we add new data from the main edit page from main realty page, our parent realty will be already known and we should not allow to change it for user and we should probably should not even show it for a user. So we can hide this column so we cannot show it on the page. And in case of creating a record detail or in case of Updating new record or update an existing record or editing record. In all the scenarios we can set parent realty automatically. So we may not allow our user to change reference to a parent realty of an existing visit. And that's why I will not show this column for user at all. Speaker 1 So it will be just hidden, it will be not shown on the page and our reality visit page will look like this. We can see why is there a red asterisk beside visit date and time and parent realty. It means the column is required system will not allow us to save data if required column is empty. Okay. And for parent reality we will guarantee that it will be filled incorrectly. So even if it's required, we will make we will take care about setting it properly in all possible scenarios. So we don't need to show it in edit page. We can show it and probably make it locked just to display and demonstrate that this visit is connected to some parent reality. But we will always look at this page from realty main page so maybe it's not necessary. Speaker 1 This is very common for details and creature to hide parent column from the page at all. So we can save our page now. So save it fully. No business rules, no code, no any special settings. So try to keep it as simple as possible and when we did it so we can find this page in this list. So let's search for something connected to visits realty visit form page default page here means that it will be used for all scenarios to add, to browse, to edit data. So it will be used for all scenarios. And you can see it's possible to make a separate add record window in case if we need to do it in a very specific way. For example, when you add data you have to specify one set of columns. Speaker 1 When you edit, you want to specify totally another set of columns. It could be used. And also we have an option for different pages depending on some specific field value. This can be helpful in case if your entity is quite big and complex. We have examples of such big complex entities in creatio and one of them is activity. And personally I don't really like this, but it turned out that activity is used for calls, for emails, for meetings, for to do tasks which you can create for yourself. So you can see a bit of different nature for the same entity. So you have one single section and many different purposes in it. Obviously for email we will have a different edit page than for a call and different set of columns, different display and different page design. Speaker 1 And that's why we have this Option multiple pages based on specific field value. So for example, activity entity has a field value category which shows us is it an email or a call or a meeting. And depending on this column we can use different pages. And when you look at activities section, for example, you select an email, try to open its page based on this information system will show you email edit page. If you do the same for a call, it will open you call edit page for activity. But now I try to keep it simple. So we will have just one single page for all possible visits. Because we do it and we just need to get used with the details in general, we need to understand them well. So we have this option. This is mandatory. Speaker 1 Okay, finally we finished and we can publish our object again. As you can see, we have to do it twice. First to create it, second to finalize assigning of a page for the object. Okay, great. Now our object is ready. We can close it. Now we ",
      "page": 205
    },
    {
      "title": "",
      "content": "can see that in our package two items appeared. So we have realty visit page, we have object for realty visits. You can find some additional strange items called add ons. And sometimes we have add ons for pages and we can find add ons for objects. Add ons are separately saved pieces of metadata. You can try to open them, but you will see read only text in JSON which represents metadata. We have some a bit more user friendly way to read it. You see read only way and you can see property names. Speaker 1 But in general this is only makes sense to base core creation developers who wants to check if everything is okay with metadata or not. In projects development and the end user customization, add on is just something that is saved in addition for the page or object. So we don't need to modify it. Attempt to modify. We should not remove it from the system. Let it be so it's just a separate stored stuff connected with page or an object. Good. So now we have our object and it's time to think how we can put it to our page and display corresponding data. So we can do this with the help of edit page button. As you can see, it's my favorite way to customize your system and other options. Speaker 1 We have another options like finding your corresponding form page and open it from configuration section to be the same result. Or you can achieve the same result if you go to settings page physically system designer. Then you find application hub. Then you find your realty application. Switch to pages and find form page. So this same way for opening. Oh no no. Not visit reality form page the same way to open the Same page editor and I personally prefer to do it from section because it makes less chance to make mistake. And when you click on this to always open corresponding page and you should not focus on its name in the list of pages. Okay, so we opened our editor to design our page. Our task is to display details and details are usually displayed with the items called list or expanded list. Speaker 1 I prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it and it will take less space if it's not necessary or you can expand it. That's why it's called expanded. I would say it's expandable when it's necessary to see some data from it. So let's use this expanded list component carefully drag and drop it on our page. I will use just free space in the bottom of this tab, but it's also possible to use additional tabs if you want to. You can organize your data stored in different tabs. It's up to you. So here we have expanded list and show part of it includes only settings like buttons and title and so on. And inner part of it represents data list. Speaker 1 Of course we have to specify object first and as you probably guess, we have to find our real table visit object for our detail. It immediately shows us set of columns. So possibly we have to take care of set of columns. And I would like to show here first to be date and time potential customer, maybe comment and then create it on maybe just for reference. I would also display parent reality. Then I can hide unnecessary columns. And now you see how we should display our data. We can carefully shrink some columns. Okay, as you can see in Freedom UI system offers us horizontal scroll so we can add unlimited number of columns. We can flexibly design their widths and the horizontal scroll will show us. And Classic UI does not allow to do this. Speaker 1 And there is no horizontal scrolls in classic UI and only 24 available columns to be displayed. So freedom UI is more flexible here. Okay, so we have this list of data, but what we need. How did you add the columns again? I just missed it. This plus add the columns and then you can select. Please note the order of how you click here matters. So if you click here and here you will see the same columns in corresponding order selected at your list. I first clicked on visit date, then potential customer, then comment in the same order. Columns appeared here and you can specify such columns in order to provide default column setup for your detail. It will be nice for your users to see your detail with ",
      "page": 206
    },
    {
      "title": "",
      "content": "some preset columns so they will easily understand what it is about. Speaker 1 And if it has some data, they will also see corresponding data and they will see what they expect. So here is our list. But also we need to do some additional settings in the right part. This is detail and detail must show us data only connected to his main entity record only for currently selected realty and not any other realty. So we have to make some filtering of page data. As you can see, this information tells us about that we may use it for example for detail filtering. So let's click on this plus and we have to construct simple filter which will be applied for all the data which you plan to see in this list. This simple filter is based one condition. Some column from reality object must be matched with realty visit. Speaker 1 In reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for main record for this. So here you see this filter by page data will be based on ID of realty and it must be equal to realty visit parent realty. That's how we will filter our data and show only visits for corresponding house, not for any other another house. Okay, this filter is mandatory, so you must do this. Otherwise you will constantly see big set of visits not related to your selected apartment. For example, no need to use static filters, but if you want you can apply there. And we have some options like row numbering, multi selection, allowed inline editing, inline insert. Okay, I can forbid inline insert and we will only use plus button to add new data. Speaker 1 We can also program bulk actions for list. So when you operate with a list it's possible to select multiple records and then we have bulk actions. For example, you can program additional actions here and that's how you can do some customization and additional functions that will be running for selected data. They are called bulk actions. Bulk here means that you can select several records and then perform one single action for such records in order to so to process data more efficient. So we have element code here and it looks like our main list part is already set. All we have to do now is to find the small plus button. This plus button is designed to add new data to the detail. Speaker 1 Of course its action will be open new record, it will be new reality visit object and system will find its page automatically. But here we have important setting which column values to set. As I told you, when we create new detailed data, we must take care about parent reality value. So we have to set here some default value for parent reality. Parent reality will have its default value. We have not so many options here. So value from another field and we will have parent realty id. That's the only thing which is suitable here. So when anyone clicks on the plus new realty visit page will appear. But parent realty for this data record will be already set up as ID of our reality. This is very important, otherwise we will not be able to normally create visits. Speaker 1 So please remember this is filling of a column that is used for connection between visits and our realty. Okay, great. No any additional settings. So you just have to remember when you build your detail, you should set up your list and then take care about plus button. That's all. We can save our changes and test how our detail works. We need to reload page just to make sure we are not fighting with any kind of browser cache issue. Let's go to apartment in New Orleans. Now you see our detail. By the way, it's interesting this status of expanded or collapsed system remembers it and it remembers it separately for each user. So if I prefer not to work with this detail, I can collapse it and system will forever remember it. If necessary I can expand it. Speaker 1 ",
      "page": 207
    },
    {
      "title": "",
      "content": "If other users prefer to expand it, they also may use this management and they can collapse or expand only necessary tails. So let's make a quick test of how our detail works. Let's try to add new record. You see default value of your visit date and time was set. Okay, let's set it for tomorrow the same time. Probably we do not know any potential customers, so let it be James Bond. Here is some trick. If you will click on this hyperlink, it will open corresponding contact page. So it's not what you plan. When we select data, it's better to click on the record but not on the hyperlink. So somewhere here double click. That's how we will select data in this column and comment some test comment. Save it. You see the data was created and parent reality was automatically set correctly. Speaker 1 We can copy this data, save it, check it out. You see the parent reality is copyable. It's very important to keep it copyable. So in this case creating a new record was correctly copied previous parent realty. And obviously we can do it one more copy. We can edit any record by double click on it or by clicking open. And obviously we can remove data if not needed. So our detail looks very good and works correctly. Let's check that for other realty records. We don't have this data. So let's go to select and find another realty. Oh, we have something interesting here. Let's check Out. You see, our page is hanging now. Probably it's because of browser issue. I just updated it recently. So possibly we have some kind of browser related issue. And also we can close all unnecessary pages. Speaker 1 Maybe it will help our system to work more correctly. Something unusual happens with my browser with my app. So let's check about its CPU and memory. Okay, I will reward the page fully. This is not a result of adding details, so it's probably some kind of crash but not related to our detailed data. So now you can see our apartments and visits for apartments were done. Okay, another house in Miami, another data. So we have no data. Let's make for a house in Miami some visit next month. We don't know who exactly will come. And we can save this planned visit. So depending on the record, you see corresponding detail values at our visits. You see. Okay, great. So now we successfully made our detail. Of course we have to take care about saving everything on disk. Speaker 1 We have to submit our changes to version control just to finalize this step of our settings so we can like more confidently move on without afraid. Without being afraid of something can be lost in the middle. So I recommend you to do such comments in version control because it helps to keep all your history. And also if something happens with your environment, having such history will be a great help because you'll be able to recover anything that you developed. So in my case, now everything was saved. Let's commit it to version control. We have some data here. We have a lot of items modified. It looks like our section was never submitted to Version control. So it means like real tapp edit visits, detail added. Okay, so it would be a quite big commit for us. Speaker 1 And we will sync changes which means pull and push to common repository. And now it's okay, it's done. So we can track our changes at our GitHub repository 7commits. You can see all the history, you see how many files were changed and so on. Each time we do this, you'll be able to track all the history and make control over what is going on here. Okay, so what's next? What we can do next with our details and with our pages you can program something in edit page of a detail with the same way how we did programming in our big form page. So this is. This page is produced. As you can see we have a button for edit page. We also will be able to do programming of its handlers or validation. So rules are the same. Speaker 1 And also you can use business rules if you want to do some kind of filtering or simple fields hiding or showing you can use all the features. So you should remember that our page for detail is based on a separate client module that was created today. It was a reality visit page. So this reality visit form page, as you can see it's a separate client ",
      "page": 208
    },
    {
      "title": "",
      "content": "module. We can even look at its code if interested. It has its own Vue config view model config and empty handlers, validators and converters. Maybe you have any questions? Maybe you have some like notes ideas or something. And in some implementations you may need to create a read only details. In this case you may hide new button, you may construct your object which will have no edit page at all. And you may also disable editing in list. Speaker 1 So inline edit should be disabled. So read only details make sense when you have some data automatically calculated for it and such data is not expected to be added or modified by end user. Read only details are helpful, especially if you use some kind of integration with third party systems. And you can read data from third party data sources using for example some database to database connection if it's on site and then display such data as a list your pages. Okay, so that's how you may do such details and you may organize them in separate tabs of your page. Or you can put it down. There is no physical limit on how long you can scroll down. So you can put new items down this page and there are no limitations of number of rows. Let's try to move on. Speaker 1 And possibly before we moving on and work with classic ui, I need to show you something important related to customization of existing pages and also important things about customization of about managing your applications. So let me explain what I plan to do right now. Let's imagine this is very typical by the way, this is a very common scenario. Let's imagine your business user asks you and says hey, you know, you already created your own sections. It's very good we do this. For example, we have realty section, we keep some data there, it's okay. But also inside of our customizations we need to do some changes at existing entities. Speaker 1 For example, we have accounts which represent list of companies and we want to connect such accounts with some kind of third party website where we have a list of our customers and we need to make some connections with it. So we need one more extra column at our accounts section. And simply speaking, we need to add some columns into existing entities. We can do this easily with no code approach. Let me show you how it's possible to do. You can open account Page account form page. And then you can go and click on this edit page button. Let's try to do this. Let's see what happens. As we're running our system as administrators. So our supervisor user is a member of system administrators role. Now you can see account page design. And you may not. Speaker 1 You may now see some very strange package automatically created. And system does not allow us to change it. And this strange package will be used. So it will be created by system automatically. And when we customize something, system will save our changes into this package. Okay, let's agree. Let's allow it to do this. So let's agree for this procedure. So our task is to add one more column to the account. So we will have a text value. Let's put it somewhere here. We can name our new column Website code. We can also provide its code for it. Website code copy sorry. Confirm text 200 great editable. Great element code should be unique. Okay, let it be developer friendly. So we made our new column. This is very typical. We did not use programming at all. This is only customization. Speaker 1 But you need to know how technically this is done and where it will be finally saved. And how to for example, turn your system back to its previous step, previous stage. If you realize that such change was not designed, was not desired anymore. So when you change like this, you can save it. Also you can hide existing columns. Of course, in this case they will be not removed. You can move some columns. You can reorganize user page of existing section. It's also allowed to do. You can also add a lot of new components on the page, not connect to the database at all. So it's up to you how you do this customization. In my case, I try to keep it very simple. I just added one single column here. Okay, and then we save it. ",
      "page": 209
    },
    {
      "title": "",
      "content": "Speaker 1 Now I should pay your so I attract your attention that we will finally receive new package. Our customization will be saved as a special type of item into this new package. So let's try to do this and then let's see what finally will happen. This is a fully valid flow that valid algorithm how to customize existing tools. You could also customize it the same by going to application hub, finding Customer360 app and then making changes for a page from there. Okay, so we made our new column. Let's close the page here, open it again. Probably we already will see it. Yeah, Website code. You can test some value here. As you can see, it was correctly. It was correctly saved. Now let's save it. Some warnings but close maybe let's hide some unnecessary columns in order to display important for us columns. Website code. Speaker 1 Yes, it's saved correctly. So everything's good. We can even edit, inline edit. We can even do like this and save our changes. So then open it. You see, everything works just as planned. So we managed to create new column. It is displayed in our accounts section. Everything looks good. Now let's go to configuration section. Or maybe it's better to go here to Application hub because it will be more clear for you to see. Let's go to customer360app. Because our account edit page originated from this section. So it was designed in this section. Let's open it. Now we see some checks, some items. Our pages seems not to be changed. So we have the same set of pages as from out of the box. But when we look at number of our packages, we will see all three standard packages, but they are read only. Speaker 1 And once we need to save some customizations system created automatically new package with this strange name and it created several items for it. And such items are not so easy. Let me show you properties. We have special type of object which is called replacing object. It's not usual object, this is replacing object. And also we have special type of item which is called replacing client module. You can see replace parent option is on and this is extremely important for you to understand and feel this difference. So now we are going very close to understand what is replacing object and why it is different from regular object and what is replacing view module or simply speaking replacing client module from any previously known and studied types of client modules. Possibly it's make it's better to start from objects here. So what is replacing object? Speaker 1 Let's open it. Maybe we'll understand it better when we open it. First of all, it's interesting that replacing object it has replace parent option on which clearly states that this is not a usual regular object. Replacing object is used when your original object is present and your task is to customize it. But original object is not in your package and the original package is not editable. In our case, account entity was designed somewhere in base product creation packages. It was additionally customized in Customer360 packages, but they are read only if you want to change and save something. We have to use replacing object and save it into our package into new package. This package now is editable. It's very important. Also it's very important that in replacing object, parent object is mandatory. And now you see value here. Speaker 1 Parent object is account and replacing object code is absolutely the same. This is important rule of creature architecture. So when you replace some entity, its name remains the same, you can change its title. Moreover, it was used in base platform bank software products where original account was replaced and sorry, it was renamed with a another name called legal entity. But physically it was still account entity and it's still the same table and the same logical name at program code. So only title was changed. So when you replace some entity, you can change its title, but you cannot change its code. Okay, and the code should be remaining the same. And personally I would like to make it not editable. ",
      "page": 210
    },
    {
      "title": "",
      "content": "Speaker 1 As you can see here, this editor offers us possibility to change its code, but physically system will not allow us to save it and it will show us big red messages when we try to save such changes. So I think that this editor should not allow you to modify code in case if you work with replace an object. Okay? So code must be the same as original one. What we have as replacement, we have a lot of inherited columns. All the columns from original entity are shown here. We can slightly change them, we can change their title, we can modify their default value or make it required or not required. But we will not be able to rename original column, we will not be able to change its lookup property. Speaker 1 And in general it's not recommended to change its type, even though system offers us such possibility to change the type in its subtype range. For example, if original type was text 200, then potentially you can extend it to text 500. But I do not recommend you to do this because you will face some additional unexpected difficulties. So it's possible, but I think not so feasible. So it's better not touch types of columns when you make replacing objects. So the main reason why you need replacing object, of course is creating your own columns like we did here. So this is our own new custom column website code. And actually this website code is saved into our report place an object. All inherited columns are obtained from parent entity. So we cannot remove inherited columns and we cannot edit any property. Speaker 1 So we cannot rename inherited columns. We can only change its title. Our custom columns are shown here in columns list. And usually the reason why developers create replacing objects is need to add your own columns. Sometimes replacing object is created because you want to change some common properties like title of the object, like some behavior settings or maybe change of access rights settings. When you replace an object, you can modify access rights behavior change. And we have three types of access rights permissions related to objects in creation. Access rights set for general operations to Allow or disable selection, insert, update or delete operation for the object. Speaker 1 In total we have record level access rights where some records can be editable and others will be protected and will be read only and some other records maybe will be only hidden and shown only for developers and also for some rare cases. You can also use column level protection of data where some columns are shown and other columns are hidden and other columns are read only. So three levels of access rights protection and when you make a replacement object you can also change such permission set. Okay, so the main reasons Generally we have two reasons of using replacing object, making your own columns or customizing and changing some properties of existing object. What is also important for you to know is that replacing object is saved into your own package and it represents some changes that you add into existing structure of your entity. Speaker 1 This can be done. You can see it clearly if you go to configuration section. Let me explain. Let's go to all packages, search for objects and look for account object and make it strictly searched by equals condition. So only if object name equals to account it will be shown here. Now you can see we have some origin of it. Origin of account is somewhere in CRT core base. If we open its properties we will see that it was inherited from base entity base object. It's the same base object is title base entity, it's code and this is not a replacement, so no replacement. So this was original creating of new entity named account. Speaker 1 ",
      "page": 211
    },
    {
      "title": "",
      "content": "But then after creating it in CRT core base package we had several reasons to do changes in completeness package, in email mining package and in some other packages including this weird package related to Customer360 app made recently. So you should understand that we have original structure of the account entity and then we have some add ons added to it. Finally, our last addition will be from our customer, so from our editable package and it will be like a final layer of all the settings. As you may guess, the order of application of such layers is important because if this one is applied later than ours, so this one will declare final values of certain properties that we need. So the order of applying of changes is really important. And usually this order follows package dependencies Diagram. Speaker 1 So if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no problem for us to specify final properties of our object, for example disable some access restrictions or change some column titles. Final structure of account is formed by its origin plus all the replacements. It's interesting to mention that at the database level we have just only one data table. Let me show you. This is our set of databases D1 database which will work for now we have account data table. We can extend and see its set of columns. Now you see for account table we have a lot of base product columns and the last one is our website code that we added recently. So replacing object does not create any new table. Speaker 1 Replacing object uses existing table and adds new columns there. If you will remove replacing object from your system logically your new column will disappear physically. It will be present in the database as a kind of leftover. But it will be not so critical, not so important. And I think that end users will notice it at all. If you will recover your package again, you will still resurrect this column logically and it will be available at application. So that's how replacing object works. And you can use it to customize any existing part of creation objects, including some base objects like base entity and base lookup. So you can customize quite flexibly, even some, let's say top level objects that are used for many of inherited child items. So you can use replacement for any existing object. Speaker 1 And Adrian is asking very interesting question which I plan to move on here. So you work with some account page and you would like to keep your settings saved in a proper place. Yes, Adrian, I will show you now and I'm just going probably not so fast with explanations here. So now we have Customer360 app and for this app system created editable package. And we have some contents in this editable package. We have some customizations made especially for this app. Let's imagine that you have more apps like you have sales automation app when you add. So for example, you have case management app. It's a base product for service automation. You have some lead generation, some opportunity management. So let's imagine you have several apps and you want to customize most of them. Speaker 1 By default system will create separate editable package for each scenario, for each case when you want to customize some existing app. But obviously you may not want to work with such many packages. Also you may not want to work with packages with ugly names. Let me explain what I'm talking about. About let's reload our data, go to all items. And now you see package with some ugly name, usr CRT customer app and then some strange unique suffix added to it. So the same name will appear on our discord. Probably already appeared. Let me check it out. So I expected to see here. Yes, the same strange name appeared on our disk very soon this name will travel to version control and it will be not so comfortable for other developers to see such a strange package. Speaker 1 ",
      "page": 212
    },
    {
      "title": "",
      "content": "So your question and Adrian question is asking about is it possible to use your own package instead of such ugly stuff that was created by system? And the answer is yes, we can manage this. This is not obvious and you have to perform additional steps to enable such management. So let me show you how you should do this. Let's go to lookups or we can go to studio lookups. Okay. And then let's search for recently added lookups first. Sorting by date of creation. Okay. Then we can register special object as a lookup. This object is named something like packages. Yes, this name is package installed application and this is quite not obvious. I only knew this from my colleagues. So this is kind of a technological secret and I think it's not very easy to find. But if you know that it exists. Speaker 1 So you will enable it of course, package installed application and we will provide the same name for our lookup and try to save it. Okay. This is only developer tool so we do not need to transport such registering of package to test and production. We can open contents. And now you will see all installed applications, all existing packages and you will see settings for all packages. Are they primary for a certain app and are they used as a default current package? Current package means editable package that is used to save new customizations there. So let me show you how we can do some tricks. Now we have customer 360 app and we have this trench package is used as a primary and current package for this app. So any new customization that we do in customer360 will fall into this package. Speaker 1 We don't really want this, so we want probably to remove this package at all. And maybe we would like to use our existing new package which is a dev package. We have it Dev Classic package. So we would like to use dev Classic package for this. So we can try to do this replacement instead of this. We can clear and then search or maybe just type dev Classic package. So we can put our existing package as a target default package for Customer 360 customizations and confirm our decision. Of course we will have to take care about package dependencies. Now our dev Classic package has no dependencies, but it will appear so it will receive it soon. Let's go to our application hub. Now try to customize customer360. Go to advanced settings. Speaker 1 And now you see our dev Classic package is connected to this app and we can see properties of this package. Let's check. What about dependencies? You see that System automatically added Customer360 app as a parent dependency to this package when we made changes, when we customized this stuff. So we did something like this. Oh, something like this. Yeah. So we did this setting and it was important. So now we have automatic changes in package dependencies. Okay, great. So you can see Dev Classic is connected to this app. And probably the last step that we will need to do is we have some customization made in this ugly package and we can transport it to our Dev Classic because we don't want to use this package at all. We want to get rid of it. Speaker 1 And we will continue customization of Customer360 in our classic package. Andreen, is it what you were asking for? Okay, great. Thank you, Adrian. So now we have multi action move to another package. You should be mentally ready that this movement takes significant time because system performs a lot of checks and sometimes it fails because of missing dependencies or some other technical reasons. But in general it's quite safe too. So you will probably run it fully correctly if everything is okay with dependencies of target package. So now I'm trying to move items created in my ugly package into Dev Classic. Then I will I plan to remove my ugly package at all from my system. It will be empty and I can safely remove it. Speaker 1 As you can see, this transfer takes significant time because it looks like system performance performs a lot of ",
      "page": 213
    },
    {
      "title": "",
      "content": "checks of items that we process and it makes sure that we have no other connections to this item. So it does something like probably some excessive work. But okay, it makes it successful. Now you see, our customization traveled to this Dev Classic package. Now if we go here, you see our customization should be present here. Probably it's because of caching. So let's reward. Yes, now it's here. This information probably will. Let's reward this part. Oh, it still remembers of this connection. So we can remove now this package and this line also will be disappeared. Let's let me show you. So this ugly package, now it's fully empty. We can remove it, delete it fully. Also removed from the apps package. Remove takes time. Okay, please. Speaker 1 Now it's empty. It should not take a lot of time. Yes, successfully deleted. So we have no ugly package anymore. We have some correctly created packages, good names. We use this good named package as a target package for our customization of Customer360. Now you see everything looks good. Our changes that we made are saved in a proper place. So that's how you can manage connections between packages and applications. I agree this is not transparent, so let's close open this register. Okay. Package installed application. You see no ugly package at all. We see our dev classic as a target for this app for realty. We have only one package, so you can easily add the new data here if necessary to connect some packages with some applications, you can do whatever you want. Speaker 1 Of course, you should be quite rational here without obvious mistakes that you can prevent because this is developer oriented tool. If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking for. So you should consider yourself before making changes here because it's like architecture but you can manage. Thank you Adrian for your questions. Okay, it's time for us to have just a short break, probably five or seven minutes. And Adrian tells us about the question. Customize account Page and Freedom UI generates new package. Yes, it was in. In January 2024 and the answer was from Ryan Farley where we had probably no such tool. So he advised us to do something like movement of items and then just use this loop up. Yeah, yeah. Thank you. Thank you, Adrian. Speaker 1 Okay, thank you for all of your active questions. Let's make a five or seven minutes break, we'll refresh a bit and then move on with next topics. Thank you. Speaker 2 Hi. Speaker 1 Yes, hello. Speaker 2 I have a. I have a small question I have. Yeah, so I said we use the two lookups. Speaker 1 ",
      "page": 214
    },
    {
      "title": "",
      "content": "Okay. Speaker 2 First one is for country and second one is for city. Right? So in the drop down button we have one plus icon is there if you remember. Speaker 1 So what about which lookup you're interested? Is it the main realty or. Speaker 2 Yeah, main reality. We have country and city. Right? Country, drop down and city. Speaker 1 Drop down type. Speaker 2 No country and city. Speaker 1 This one. So I can't hear. I can't hear properly. Country and city. Okay. Speaker 2 Yeah, yeah. So we have a plus icon over there, right? Adding. So what is the use of that? Or can we hide that button if possible? Speaker 1 So you ask about if it's possible to manually create new city for this. ",
      "page": 215
    },
    {
      "title": "",
      "content": "Speaker 2 Okay, Can I, can we hide that button? Disable that button if possible. Speaker 1 This. Yes, sure you can. I just forgot to do this. Yes, let me show you. We can go to edit page. We can find corresponding lookup country and there is an option to allow add new value so we can disable this. And for city we will also disable enabling new values. So just tick off save it and we will only be able to select from the list without possibility to add any new countries. Close open. Now you see some selection. Now you see only available columns. Thank you. Rakhi states. Oh, we have New Orleans, no corresponding city. Okay, would it be. Thank you for a question. Any other questions, feel free to ask because now I plan to show you something which will be a final step about user interface. Speaker 1 And you should know that we are working with Freedom ui, but maybe you will also need to work with some classic UI old projects. So you need to get some basic understanding of how classic UI can be managed. And before proceed with classic UI customizations, we need to make some preparation that is necessary and very important for classic ui. So in order to create new section in classic UI you need to prepare target package. We already did it. Here is our dev classic package. But also you need to tell creatio this package should be used and we will go to system settings, then we will find a special system setting named current package. Open it and by default you see custom here as a current package. Rakhiv is asking can we change the color of collects icon? Speaker 1 Oh, I'm not sure because it looks like this is hard coded thing. So possibly you may find somewhere in CSS value for this color, but it looks like this is an image designed somewhere in the app. So it was not supposed to be customizable, I think. Let me show you with CSS it's not possible. Probably it's because of this is an image. Okay, let's try to understand. Let's try to do inspect. Then you see we have so inspect some marker, some kind of div and what else? It looks like we have some image. As you can see such images are hard coded, but you may find where they are saved. So possibly you can replace such images with something else. Speaker 1 You see the current source, so you may try to replace actual storage of this image and you may design your own and that's how you will finally make corresponding change. Rakhi, is it clear? Of course it's not recommended way of customizing creation by changing of its core files, but physically you can try to replace this file with something else and check it out how it works at your environment and then you can if it's on site, you can also get this file to the other, let's say test and production environment, so it may work for you. You probably will not be able to apply such change at cloud conditions, because cloud engineers will definitely will not agree for changing files somewhere in ",
      "page": 216
    },
    {
      "title": "core part of Creature and it will be not saved into your package.",
      "content": "Speaker 1 So this is part for core which is not designed to Be changeable by configuration changes. But if you really want, you can replace files on disk with another ones and that's how you can do this. Thank you Rakhi, Very interesting question and let's move on. So I just wanted to explain you that in case if your plan is to use classic UI customization, then you will have to take care about current package system setting. By default it is set to save ",
      "page": 216
    },
    {
      "title": "",
      "content": "settings into custom package and we plan to save it into our dev Classic. We should do this before starting of any customization. And also take care this system setting is not cached. Cached settings are loaded at the start of user session and cached settings if you change them. So you will need to fully apply changes. Speaker 1 And if you change cached setting, you will have to log out and log in order to read changed values properly for your user session. In the current example, current package is not cached, so we may change it without logging out. Okay, great. So we can change save it then. One more tip that you need to know before starting Section Wizard. We may experience difficulties because of recent changes in object model without compilation without application restart. So we will need to restart our app in order to guarantee normal work of Section wizard. Especially on save object operation of Section Wizard. As you remember, restart of the app now can be done quite easily with maintenance tools made by our Swiss partner. So restart application. This is necessary to normalize our server side cached data about object structure. Speaker 1 If you recently made changes in your object and even published it still may keep some incorrect settings at application server level cache. So we need to do this restart. In this case everything will work. Okay, good. Now we go to settings. Then we find item called Section Wizard. And this tool is designed to create new classic UI sections. I will quickly make some simple example not as complex as we made for Freedom UI just to demonstrate you such tool. So I will do it fast. May you may not reproduce all the steps after me. So it's up to you. Would you like to do this or not? So I will make some new classic UI section. When we do this we have to provide its title. So let's call it Realty Classic. Speaker 1 And we have to be very careful with the code because code will not be able to change if we finish its input. And that's why we have to type it correctly from the first attempt. Realty Classic. So this is our code. Once we move our focus out from this control, you will see system will think for a bit and then we will not be able to change this code. So if you made mistake. Then you only cancel and run section wizard again. Workplace. Okay, let's put it to the same studio workplace and background icon. Let it be green so it will be our icon for the color of our section icon. Okay, Great. Then we go to setup page. We need to do some minor settings. I'm still a bit afraid of what may go wrong ",
      "page": 217
    },
    {
      "title": "when I save my section wizard section.",
      "content": "Speaker 1 So I will only change something like a name column. I will provide some minor change copyable setting, no any other settings. So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue customizing of my section. But in case if it fails to save and it will be obvious that I need some more steps to prepare my system, then I will not lose time for setting up columns. So saving objects is the most critical step of this procedure. If it goes correctly, then we will successfully continue our customization. If it fails now, it's correct. Yes. Great. So if it fails, we will make something like discovery of what went wrong. But now in our case it looks like ",
      "page": 217
    },
    {
      "title": "everything is okay. Great. So we saved our section correctly.",
      "content": "Speaker 1 Now we can edit it. And editing a section is much safer than creating it. So we can go to edit page. Now we can customize it. And I will quickly add similar columns as we had for Freedom ui. So decimal column drag and drop to be our price. You see a bit different user interface, but the same sense. We add new columns, we provide title code, no element code and just save. I provide area I can use lookups. As you remember, we made a lookup for type of our reality. We can call this column USR type. The reason why we use prefix is the same. So system asks us to keep prefixes for our customized stuff bus telling that he has two leave no problem. Thanks you. Thank you. Thank you. And you will watch videos. Great. We will finish soon. Don't worry. ",
      "page": 217
    },
    {
      "title": "",
      "content": "Speaker 1 Today's Friday and probably tired a bit. So copyable value type based on existing lookup realty type or Classic UI Drop down list block behavior, no redundantly, no hiding titles. Everything is okay here. Save it. Great. I will show you how we can make new lookups in Classic ui. No existing lookup so we have to make offer type. Code is USR offer type and no existing lookup. So we will create one and as usual we'll provide title for this new lookup Realty Offer type Classic ui. So this is how we provide title and code for our new created object that will be inherited from baselookup and register it as lookup by section wizard, drop down list, standard behavior for delete. No any other options. Okay, great. And finally we can make some kind of text just to make comment. Speaker 1 By the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui. Comment here in their name is comment. But what is interesting here we can make a special option called multiline text. You will see what will turn it into the column. So multiline text has a very interesting feature which is not implemented in Freedom Live. I will show it for you. Multi line text. Obviously it's designed to make possible multi line values here to be said, maybe it also makes sense to have 500 just to make sure we have big enough value. But multi line text has also very interesting property. You will see it soon if necessary we can also add an object for detail and register detail. I will try to keep it simple. Speaker 1 We have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary. And let's go back keep it simple and save the changes. So I want you to see how Classic UI section looks like. In Classic UI we have much more objects created for a section. Now you will see in configuration section close properties of package, probably reward it. Okay, saved correctly. Now I reload section with configuration so we can go to dev Classic sort by date of modification and you will see how many new objects were recently created. Let me show you. We have objects for file for folders for in folders for tags feature and also we have object for main Classic reality ",
      "page": 218
    },
    {
      "title": "section and we have an object for our lookup created.",
      "content": "Speaker 1 So we have much more objects for Classic UI section because such things as tags, folders and files are saved in a separate dedicated objects. And we have more tables for this for the database. And in Freedom UI such tools are incorporated into commonly used objects for tags for files for folders and it makes it more efficient storage. Okay, so let me show you how Classic UI section looks like. We will have this realty classic section but it probably will fail when we try to open so we have to reload because of Classic UI is much more sensitive to cache issues. So you should always reward your page. If you do any client side changes in Classic UI you see it's still faces some troubles. Let me show what's happening there. Or maybe we just have to wait. No, it doesn't look good. Speaker 1 Okay, let's go to another page. Go to reality Classic page. Yes, we have some minor issues here, but in general it works. Okay, Try to add new record. Here you can see how Classic UI edit page looks like. I need to tell you that in Classic UI we have a totally different background frameworks used for user interface. In Classic UI we use EXT framework EXT versions. So you see it's Quite old, probably 10 years old framework and it's quite old but it works. And it's a JavaScript framework which keeps controls and some UI stuff. And in Freedom UI we use Angular so classic UI uses EXT and TerraSoft core framework. Freedom UI uses Angular framework so it's totally different and module structure is similar but still we have some serious differences. When we create new record we didn't assign any default values so far. Speaker 1 ",
      "page": 218
    },
    {
      "title": "",
      "content": "So okay, let it be Paris Ren. The type is apartment. Offer type is not filled in so far. And here is what I wanted to show you. This is voice input and speech recognition piece. So you see it works only in Classic ui. In Freedom UI we don't have it so far. We don't have it in Freedom UI so far. And recognition quality is quite high as you can see. So you may use it for Classic UI implementations. And I think that in Freedom UI system developers should develop something like this and enable it. In Freedom UI now we don't have it and offer type is empty so we have to probably take care about offer type for Classic ui. Speaker 1 This one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it into our dev Classic package. So this is important step because such data also should travel to our test and production. Now if we go to Reality Classic you can see that offer type can be selected and we can save it. Okay, looks good. Some minor steps, minor preparations. For our section we can go to Workplace Setup Studio. Now we have our section for Classic UI quite far in low rows we can put it upper. Maybe we can also bind the contents of this workspace and at the same IoT save it successfully. View details Three items were created but you remember. First one will be information about workplace. Only one data row, nothing changed. Speaker 1 This one will be about position of a module in Workplace. Let's check Reality Realty Classic. Great. Third one will be about access rights. That's okay. Rakhi asks about voice languages. It depends on browser. And also I need to tell you this voice recognition feature is browser dependent. For example, if I try to do the same in my Firefox. Let me show you my Firefox here. It still doesn't work in Firefox Let me quickly show it for you. It works in Edge and in Google Chrome recently. So I asked some colleagues. It looks like it works in Safari as well, but unfortunately it doesn't work in Firefox. Let me show you Firefox here you see no support of this feature. Speaker 1 So it's also browser dependent and you should check and test it before you advertise this for your customers because it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this. So some browsers does not. Some browsers do not support this and that's why you see it's not in any browser. Okay, thank you, Rahi. And what about languages? So so languages now let me remove this part now. So languages are supported and I successfully used other languages to normally detect it. You should use change. So if you change your user profile and change to another language, then your voice input recognition will also support chosen language. So yes, it supports other languages. At least two more languages which I tested. It worked well for me. Thank you Rakhi for your question. Speaker 1 So finally we had an example of Classic UI section. We can set columns for our section list set fields to display in Classic UI we have different approach for setting up columns. So we can provide column settings type, maybe you need price offer type. Okay. And finally we can have a menu comment. Okay. And then we can save it for all users. When you save columns in Classic UI for all users, then it's possible to use data binding tool to help us to remember such column setup in our package bind column setup for Classic UI save it into our target package. And by doing this we can transport setting of columns for this list to other environments. So it will not travel automatically. Only if you make corresponding data item. It will save it and you should do it default settings. Speaker 1 So you should save for all users and such default profile will be saved as data item to our package. You can find it here reload and that's how we can change and transport Classic UI columns setup to test and production. This one ",
      "page": 219
    },
    {
      "title": "",
      "content": "is saved in sysprofile data at the same with details. Okay. Probably today's Friday and it's enough for today. And I would just want you to see a couple of images of what client modules in Classic UI looks like. So let's focus on clients modules only. Now you see we have section page and we have edit page. This one section page looks like a bit weird. We have a not so good looking name of it. We can try to modify it. Let's try to fix it so we can rename Quest ",
      "page": 220
    },
    {
      "title": "6 something section.",
      "content": "Speaker 1 But we should do the same code here and here. We should do it very carefully. Save it. Now we will have better names for our client module. Also it will be renamed on disk in our dev classic package. You will see realty classic section. Yes, this one renamed and this one was also renamed. So you see we have full correct renaming on disk as well. And after doing this I recommend you to instantly check it out if your section works well or not. Because now you see we have previous URL. Probably it will fail now and we have to probably simply go back somewhere like this. Go to classic UI section. Now you see another URL. So now it works. But we still miss columns because of changes and previous column setup was set for previous name of the client module. Speaker 1 That's why we have to do it once again. Okay, Price type, offer type, maybe comment. Then we save it for all users providing so called default profile. This is important. After we do this we can bind columns to our package creating one more data item in our classic section data was bound successfully close it. Now we have to review what we got in our package in order to remove previously created unnecessary data item here old one is not needed anymore because it represents old values, old settings which will be not so practical. You see, because we renamed our module and old name was remembered here. Even if we actualize it, probably we will see there is no data for this. Oh, it's still here. But we do not need to keep such data in our package so we can remove it. Speaker 1 It doesn't represent any useful data for us. This one is correct data with new client module. So when you rename client modules because of ugly names, take care about quest API column settings because you will probably have to review them afterwards. Okay, so final quick brief look at our client modules in Classic ui. So in classic UI section page looks like this. When you open it you will see this code. You will see define word, module name, dependency array, factory function and some body. So this is a body of our function which mainly returns an object with some set of settings. In our case it's almost nothing. So we have no any customization here. Classic UI pages are also inherited from some parent templates. Speaker 1 That's why we have a lot of common functionality and no need to implement this functionality each time in each separate section. So our functionality is now in parent one and all the buttons for classic UI section, like new actions, view buttons, grid folders, feature tag, everything is inherited. That's why we do not need to customize it and that's why this code is so small. But for page for edit page code you see much more significant difference. So you can see set of sections module name, factory function returns a bit bigger object and you can see set of columns here. So they are different from Freedom ui you should focus on Diff first because diff shows you information about user interface changes and each item in this diff array represents one control as the same as we had in Freedom ui. Speaker 1 So if you need to change something you can do it carefully here or better to rely on Section wizard because it will do it better for you than you do manually. And in Classic UI Section wizard doesn't allow you to use all available components, so you should be so in general Classic UI programming is harder because you can do some additional components and display them, but Section wizard does not support it. So in some cases, for example you want to add a button, you will find at Academy articles this definition of a button, put it to your code, provide corresponding handler and methods will be used as a place for your JavaScript functions to handle events of your controls. So in ",
      "page": 220
    },
    {
      "title": "",
      "content": "Classic UI you can also do almost the same programming as in Freedom ui. If really needed, just tell me. Speaker 1 I can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief review for you. Okay, that's all for today. We just briefly mentioned Classic UI and we probably need to pay some attention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers who started questiqi Solutions and unfortunately such migration is not automated yet. So today's session is over. Thank you very much for your time, for your patience and questions. Next week we will start with some migration questions from Classic UI to Freedom UI and we will move on with server side programming. So we will do some server side examples, we're writing C code, we will do integration with Visual Studio, working with File System and so on. Speaker 1 As a final step for today, it looks like I unnecessary caused it. I have to remember everything we did in File System of course then I will submit it to Version Control just to keep all the history. And any of you who wants to keep how our session proceed, you can also watch our repository at GitHub. Thank you for your time. Our session is over. In case if you have any questions feel free to ask. Our session is over and goodbye. Thank you, have a good weekend. ",
      "page": 221
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number six of our development on Creature Platform Guided Learning. Today I want you to see some additional materials related to Classic UI and Freedom UI and migration. And then we will fully switch to work with server side. So recently we managed to create a fully separate Classic UI solution. And this was a Classic UI section and list inside of this is called also it's called a section list. So we have a set of data records here. When you open edit page, you see Classic UI edit page with columns components. And we decided not to focus too much on Classic UI because this platform will be like deprecated probably somewhere in future. Currently it's supported, currently it's working. Speaker 1 But in future so it will be not developed, it will be not improved, you will not see new tools or components for the Classic ui. And most development is focused on Freedom ui. And you also remember some interesting feature, some feature for voice recognition, you remember we still missed it in Freedom ui. And you also can do details, you can program buttons or actions. Everything is explained at Academy. So if you ever need it, you can look at it. Also if you go to client module part for Classic UI you will see that code in Classic UI in general is I think a bit more simple than in Freedom ui. Because in Classic UI you can also make your items in diff array for example like a button. We will do it later. Speaker 1 Then you can create a handler as a function add methods section. And in general I think it's easier because more transparent work with object model, more transparent operation with view model data. I will show you more examples later. And this is just a quick brief introduction for you. If you will work with some Freedom Classic UI pages in this case, this possibly can help you. So what I want to show today, this will be a very typical task for future I think. And this typical task is your customer who already runs some Classic UI section successfully. And customer understands the future is in Freedom ui. Customer wants to use some Freedom UI features, tools, components and pretty look and user interface. So customer asks you to migrate some existing solutions from Classic UI to Freedom ui. Speaker 1 Unfortunately we don't have any automated procedures for this. And especially this becomes additionally complex if you have some programmed code in Classic ui. So I will show you the most practical way how you can switch from Classic UI to Freedom ui. I will also show you some settings and system settings for this which impact on how you see your system. So you'll be like more expert in it how to make this migration. So as my example I have realty Classic section implemented as Classic UI and I will show you how we can switch it in Freedom UI and what we have to do for this. So Freedom UI or Classic ui, the only difference is at client side. So we have different types of client modules. Speaker 1 Such items which have section in their name or page in their name, they usually designed as Classic ui. If you look at the pages and you see form page or list page, it's a Freedom ui. Of course, physically they are totally different. When you go to list page, you will see Page editor like this, it's a Freedom UI page. And when you will go for example to a section page, you will see only code because it's Classic UI and you can configure Classic UI sections only when you go to corresponding section and run Section wizard in it. That's how you can get to Page Editor in Classic ui. But now our task is to make an example of migration. Speaker 1 ",
      "page": 222
    },
    {
      "title": "",
      "content": "At the source part we have Classic section, this one and as expected result, we would like to make one more section, but showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some server side logic, maybe we have some business processes. So server side part will remain the same. Data, items, lookup contents, everything will be the same. The only change we expect to do will be our user interface area. So set of client modules and related code that is behind such items. So I will show you how to migrate from Quest CQI section to a Freedom UI section. Please note that it will not it will be not necessary to forever forget about Quest ui. It's still possible and different users may define themselves which type of user interface they want to run. Speaker 1 So it will be possible to switch. First of all, I need to tell you about some important settings related to such view. And I would like you to see this background like frame. You see this name which shows you some funny, some fancy background image, some kind of item which is called desktop and you can select and edit it. At the left part you see set of sections workplaces, you see for different workplaces, different contents and you also can see some image background and the top line here also use set of buttons items which are designed in angular and they are items of Freedom ui. So this left and top area is managed by Freedom UI and we can switch this background frame setting to Classic UI if we want to. Speaker 1 So let me show you system settings and this system setting is called like Freedom use Freedom UI interface. This setting generally turns on or off this background frame stuff. And if we just for test purpose want to turn it off so use Freedom UI interface was originally on we turned it off and it's cached. So in order to apply this we will need to log out and log in again. Now you will see how system will look like with the Classic UI set of section and the top search bar. Now you see system how it looked when we had no Freedom ui. You see a bit difference. Here you see that we still have different works workplaces. It looks like we totally miss Workplace which is based on Freedom UI. We miss workplace with customer360 from here as you can see. Speaker 1 And we can also go to Workplace Management System Designer. This page go to Workplace System Setup. Let's check our customer 360 workplace and you see use only in shell in like in usual words. If we want to translate it into something that you can easily understand, it means that use only in Freedom UI background settings. Now it's not Freedom ui, it's Classic ui. That's why this workplace disappeared. Okay, so you can manage how you would like to see background which is a Classic or Freedom ui. Okay, so we can go back because we're interested in migration now. Speaker 1 So we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's log out and log in again to see back our background Freedom UI setting, which is default setting now and which is recommended to work with Freedom UI sections and also with some Classic sections. It's still supported. You see, we have Freedom UI background, but we have Classic UI stuff inside of it. What I wanted you to know next is Special section designed to simplify such transition between Classic UI and Freedom UI sections and user interface. Now you see special section special setting for page which is called UI Management. And we can specify setting for Freedom UI for different roles or users, which makes possible to do it quite flexibly. Speaker 1 For example, some users are really stick to some Classic UI solutions. They are not ready to switch to Freedom ui. They work with some basic UI sections and it's critically important for them. So you can manage this stuff for ",
      "page": 223
    },
    {
      "title": "",
      "content": "different users. And also we have Form Page Preferences which is also designed to simplify the selection between Freedom UI and Classic UI and only in case if both options are enabled for a section. So in this case you see by default Freedom UI uses Freedom Pages, Classic UI uses Classic Pages by default and we have some exceptions for this. But personally I consider this stuff as over complicated. And once you started to migrate from Classic UI to Freedom ui, I think that it's better to finish this Migration and then do not use Classic UI and only invest into Freedom ui. Speaker 1 So this is a page which will be temporary important for you, so it will be not forever for you. And finally you will switch to Freedom UI all your necessary business sections and then you will feel quite okay with it. So you will not really need to switch back to Classic ui And that's how I recommend you to follow this personally. In our Inner Academy department in Croatia company, we still use some Classic UI solutions, but our plan is to migrate to Freedom UI and then to use only Freedom UI sections. So and this stuff like page for settings will be temporary useful for you I think. Okay, let's go back. So finally we have currently for Classic section, we only have classic user interface, so we have no option to display Freedom UI pages. Speaker 1 So how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way. So let's go to Settings, then go to Application Hub so we can create new app. As you remember, application is like a new top level setting or like application entity which may include one or several packages inside. We already have Freedom UI reality section, but we don't have any classical representation for it. So when we create new application, system will create new package to create. If we ask, it will create new section for us. So now I will show you how we can create new application. We can call it, we can make it based on records and business processes, but we will name it Realty Migration. So it means that we migrate from Classic UI to Freedom ui. Speaker 1 We can compose kind of icon for it. And we will use this very important feature link to an existing object. This is very important. So this is a key feature of all this migration idea. We will use existing realty Classic UI main realty classic entity. This one will be main and it will mean that system will not create new object for us. It will use existing object, it will create a new package, it will save all our application information into a new package. It will make dependency from real to classic existing dev classic package. And finally we'll have new app but based on existing object. And let's try, let's create it. Icon color is okay for me. So let's move it. This will be not so hard because system didn't create new objects for us. Speaker 1 It only uses existing object and then creates several client module. So I don't expect it to last longer than 20 seconds. So let's see how it works for us. And then you will see the main idea of migration. So Generally it's pretty simple. You will have a new app, you will have template for list and or edit page. And then we will have to manually set it up according to our expectations. So you can see there is almost no automation such migration unfortunately and a lot of hand work is expected here. So let me show you how we can do this. So we have data models. Our data model has no new objects, but it definitely has an existing object because it's based on this reality. Okay, let's go to ",
      "page": 224
    },
    {
      "title": "easy part. List page I think is easy part and it shows some columns.",
      "content": "Speaker 1 We can hide unnecessary columns. We can add the columns that we need you. Now you see all our classic object columns are here. So we can specify say okay, we want to see name, price, type, offer type and comment and then date of creation. Order of selection is important here. And we can hide this column. We can also hide this, we can shrink, we can move something if necessary. We can swap columns positions if you want. So now this is easy part. We only made our list settings for freedom UI page. Physically this page is saved. Let me show you this page. Page. ",
      "page": 224
    },
    {
      "title": "",
      "content": "Page here is saved into new package and its parent page is somewhere in template code and title is quite good. So we can save it, no problem. Speaker 1 I prefer to control what's going on at configuration section because probably I'm too stick to development and I don't really trust only no code tools. So I always want to check what is going on there. And that's why we go to corresponding new created package. You see this package must have dependency from dev Classic. Yes, has it. And this package now includes no owner objects. So it uses existing object from parent package from dev Classic. And you see no created objects here. So we did not customize our object model so far. So we use 100% of all existing columns from classic object. So data model is the same. User interface part is the only change here and we have list page changes. Now I will work with form page. So list change is okay. Now let's work with form page. Speaker 1 Form page is Freedom UI edit page for a section for an object. And as you can see it has its own properties in our package code title. Great. And we can specify columns as we wish. We already have all the classic UI columns, so we only can just drag them at its place where we expect it to work with. So let's go and display types. This is list of existing columns. So such columns were already added at this stage where we created in classic UI we have comment, we don't have any Other columns that could be useful. Also, it's interesting to mention that you see such notes here representing that colon was already added to the page. Speaker 1 So you will see such node if colon was already shown somewhere and you will not see it if colon is present in your object model but was not shown on the page here notes for example, the colon which is designed to work with attachments and that's why it was not shown as a separate component here and I do not plan to show it. Okay, so in general it looks like this. We can also try to specify drop down for types. Drop down for offer types. Okay, great. We did not create manager for this object and when we finished we can just click save. As you can see, even if we had some business logic in Classic ui, this business logic is not automatically migrated into Freedom ui. Speaker 1 There is so big difference between such platforms and code that now developers did not implement any kind of automation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom ui. So if such logic exists, you will have to reprogram it Working at code source code part of the client module. So I already saved it. You can close it. Now you see some changes. We can control what's going on at our package and that's how we can test how it works. So I expect to see new section somewhere here Migration section. Now you see the data which previously was shown in Classic UI also available in Freedom UI user interface. You can try to add the new data record. But now you see still you see Classic UI page. Speaker 1 This is a result of some browser cache issues. Okay, let's cancel this log out, log in, go to Freedom UI section. Also I would like it to be present in my. Let me show you in my studio Workplace. So let's go to Workplace Studio. I'd like to add my migration migrated section. We will find it Realty Migration Only sections which were not present here are shown. That's why only realty migration is shown, because Realty and Realty Classic are already done. Okay, migrations is somewhere at the end. So let's rearrange this as usual and move it upper just below the classic. We can also bind this workplace and save it to the same package where we originally saved it. And system creates corresponding three different data items for us. Okay, we trust that everything saved correctly. So we have three ",
      "page": 225
    },
    {
      "title": "sections.",
      "content": "Speaker 1 ",
      "page": 225
    },
    {
      "title": "",
      "content": "Now let's go to Studio Realty Classic and Migration is somewhere at the Antifa world. I expect to see my sections on their places. Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff. And migration is our Classic UI data shown in Freedom UI user interface. Trying to open the edit page shows us Freedom UI page for migrated stuff. So now we made our example with migration and we successfully implemented it's in user interface. So you see that this is a simple and quite straightforward way of how you can do this migration. You will have more difficulties with transferring of business logic making your own filters. Again if you made some filters for dropdowns. For example, in Classic UI it's possible to use programming or to use business rules. And business rules are not migrated automatically. Speaker 1 So you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages. But having the data stuff the same. It's so doesn't take too much time because your data is data model is ready. And what is interesting, we have special parts of section like folders like tags and notes. So nodes will be taken correctly from Classic UI part. You will see attachments here. And notes is a special component which is missing here and that's why you do not see it. But files will be shown here. So in Classic UI special component to show your files is code. So this detail. Oh, now it's failed. Yeah, because we probably. So as you can see, it's quite hard to make it work at the same time where you work with Classic UI and Freedom ui. Speaker 1 So it's really hard to. Now we switched to Freedom UI and that's why Classic UI edit page is not working normally. But for different users it's possible to set up. So Classic UI open the page. As you can see in Classic UI I open the page and I see Freedom UI edit page. Because my current setting is to show Freedom UI page and because of Freedom UI shell is activated. So you see this background, top panel and left panel are in Freedom ui. And because we see some background here and because it's made on Angular. So Edit page was chosen to be shown in Freedom UI even though we opened it from a section which is in Classic ui. So I understand this is kind of messing with different types of ui. Speaker 1 So finally when you do migration, you will use this help of Application Hub. You will get new package for your migrated stuff. From Classic to Freedom we will have set of client modules and all logic that you miss. You can implement with the help of business rules, with the help of components that are available as no code tools at Freedom UI and not available as no code tools in Classic ui. And also you Will be able to write your code for migrated pages to implement the same functionality that you needed and that you previously used in classic sections. So if you have any questions about this migration, please tell me. Server side part like business processes, like web services, like some C Sharp code, it's the same, so it operates with data model, it doesn't really depend on the type of user interface. Speaker 1 So server side part of your migrated stuff will be the same and you just need to check that it still works as expected. In case of any questions, I would be happy to hear. As usual, video recording is performed. So if you missed some part or if you so just watch this later, all the videos will be available. Peggy? Yes. Questions please. Speaker 2 ",
      "page": 226
    },
    {
      "title": "",
      "content": "Yeah, I have a question. Is realty. Sorry, not realty. Is Classic UI ever. Would it still be deployed to new customers or is it just mainly targeted towards legacy customers? Speaker 1 Currently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it. So it's like you have an old PC and new PC and you think about installing some program. Of course it makes sense to install it on UPC unless you have very serious reasons to use Classic UI for it. For example, you already have some marketplace add on which is very useful for your business, but implemented in Classic UI and is expected to be used in some Classic UI sections. So if you have some strong reasons like you stuck with some quasiQL solutions, then it makes sense to continue its development, to improve it, to advertise to your customers. But if you have equal chances and new customer and new project, of course it makes sense to look at Freedom UI first. Speaker 1 Because in Freedom UI you have in like in several times more available. No code, controls, components and Freedom UI will be developed in future and it supports or is going on. Classic UI is now supported only for existing components. No new components are created for Classic ui. We still have thousands of customers with running Classic UI solutions and it is quite good. So customers are happy with running what they have. But it's about future, it's about development and improvements in future. So if you have choice, of course it's better to select Freedom ui. If you don't have choice because of existing circumstances, then you can decide yourself and choose Classic UI if you do some customizations. That's brilliant. Speaker 2 Thanks Amelia. Speaker 1 Thank you Paddy. Thank you for your question. Okay, so now you know how to do first steps. Actually we also face the same stuff in our inside like team work and automation. Inside of Creatio we have several big creature based solutions inside of Creature company and it's also so we also like face as most of our customers we face such upgrade needs because Freedom UI is now like primary user interface and we still have a lot of Classic UI legacy. So we do some planned work on improvements from Classic UI to Freedom UI and we still work with some sections in Classic UI because of too many systems, too many changes to be performed. And one day we plan to switch from ",
      "page": 227
    },
    {
      "title": "Classic UI to Freedom UI in most of our currently used sections.",
      "content": "Speaker 1 And we have some tools as I showed you that intended to help you with it. But personally I think that once you started to switch, it's better to make it quick and then to continue improvements already in Freedom ui. So not to be too long in this intermediate stage where some users are working in Classic, others are working in Freedom. You will have double time for support of this intermediate stage. So it's better to try to make it shorter and to implement something like minimum value product in your Freedom ui, move your users there and then improve quickly, improve all necessary remaining things that will make your users fully happy. So not to stay long in this intermediate step. Speaker 1 Okay, so if you have some real life examples, some kind of like practical interest and practical experience with the migration also tell me, it's interesting what you think of it, what unexpected outcome you have. Probably so anyone I ",
      "page": 227
    },
    {
      "title": "",
      "content": "think may have something unusual and expected and even in creation we sometimes can't implement all possible scenarios. So if you will have something unusual, just tell me, I will try to help with it. So we have to switch from our client side, probably already get tired of it to some server side features. I will try to explain and to make this transition coordinate quite smooth. And now we will talk about more developer oriented things and more related to programming at Creature server side in C using dotnet framework and talking about compilation libraries, file system and so on. Speaker 1 So probably I have to start that in any package now we see we have some set of items of different types. So we have items with different types. If you try to add an item manually, you now will see we have objects and we also studied what is replacing object. We have pages, so client modules of different types. And also we have replacing if model which means replacing client module specially designed to extend and modify existing pages. And we already studied this one, we did not study source code, we will do it a bit later. And we slightly touched the question of making business processes. So I need to show you some items and explain where they are actually stored and how they actually work. So when you Operate with objects. We already know that it doesn't. Speaker 1 So object is a server side item, but its changes are applied easily without need to compile. So generally C Sharp code is not so let's say heavily used for objects and replacing objects. Of course, C Sharp source codes, if you design it separately in source code item will definitely require some configuration. So it means that when you develop something inside of item name source code, you will not be able to immediately start it. You need to run a special procedure called compilation and physically it means that creation handles some C Sharp sources at server side and when you want to apply them and when you want to implement and apply changes. So you will need to compile and ",
      "page": 228
    },
    {
      "title": "creature is capable to collect C Sharp sources of its compilable part.",
      "content": "Speaker 1 Finally to compile and get executable DLL libraries and then use such libraries at its website. So C Sharp sources definitely require compilation. All JavaScript part this all this JavaScript part obviously does not require compilation because it's a set of JavaScript files. They are executed as interpreted code at browser side. So when you save and apply any change in JavaScript part in client module part, it also does not require any compilation. So this is interpreted part fully. Business processes in general, such items as business process it's designed as interpreted setting. But for some processes you can add the C Sharp code and make it compilable. So in some processes, let's say we have plus minus. It means that some processes can include compilable code and we can run it and we can use such advantage of compilation and very fast execution, but it's not mandatory. Speaker 1 In general, it's recommended to have as less as possible for code in your processes. Because processes are originally designed to be a no code tool and possibility to code into it. It's not its primary purpose. The primary purpose of a process is to make your business logic a set of steps that you can easily construct with using of your mouse and which will not require programming and then you can get your business work done. But you can also use C Sharp code inside of it. And that's why we can call business processes as partly compilable. So I will show you example rest and swap services. They do not require compilation because mainly they are metadata used inside of business processes and user task is a C Sharp programmed item that requires compilation. So now SQL scripts obviously are not compiled items. Speaker 1 Data is also metadata, not compiled and import. We can import dll items if they are written in.net and add them to our packages and use them in Our compile bot stuff. So if in general such DLLs if we import them are included into compilation, so we can consider this stuff as involved in compilation. Now you see only four types of items that ",
      "page": 228
    },
    {
      "title": "",
      "content": "somehow touch the compilation and in general that's how we can say that creation has compilable server set. Also probably also need to tell you that objects can potentially include its compilable part. But now it's not recommended to be used. And in general this is feature that's still supported but probably will not use it. We will talk about object programming and possibility to use C Sharp compatible code there when we will talk about event handling at object level. Speaker 1 So in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they are turned into. Let me show you what they are turned into DLLs that you can find in Bin folder here. Or you can also find DLLs as a result of compilation in many packages. For example, we made dev classic package files bin and here is our DLO of a package compiled as separate assembly. So why you need to understand such files, DLLs and so on. Because now we will talk about server side functionality and you need to know how it turns into something that system can execute where you have to search for some sources and you need to like understand it in very general ",
      "page": 229
    },
    {
      "title": "things so you will know where to find some parts of execution executable stuff of creation.",
      "content": "Speaker 1 We will make an example now and I think that the easiest possible way to demonstrate how you can write and run C Sharp code at creation platform is to make a business process which will execute C Sharp script task into it. I intentionally avoid making our own C Sharp sources at the beginning. So first I plan to show you how we can make process with some piece of programming inside of it. We need some package for this. I prefer to do it in my realty package. This is Freedom UI solution. So one of our main packages here in total. Now you see we have three packages in our solution and it's not the end. So possibly we may have more if you want. You can also minimize number of packages if you play with you remember we studied it with the search rack setting. Speaker 1 Or maybe it's better to say lookup package installed application. It's possible to minimize number of existing packages for you if you connect all your editable applications with some packages that you already have. And we already did it avoiding creating one more package for Customer360 customization. So this is something that we already studied. You know how to find it just to find and register an object named package installed application as a lookup at lookup section. Then you will be able to handle all your applications, all your packages included there. And you can replace current package for some apps making system saving your application customization into a certain package. Okay, so what I plan to do now select my Freedom UI USR realty package, add the business process. Speaker 1 I need to explain that what business process is because some of you probably already have experience with customizations and some of you probably already know that business process is a server side functionality which is designed to automate some business steps that you expect to be performed by system. And in general business processes are interpreted. It means you construct such kind of diagram and then ask system to run it. System will read your diagram structure step by step and it will execute your diagram step by step. So in general business process is saved as set of metadata settings. Technically it's a text with all necessary information about its structure. Speaker 1 And we have a special process engine, so it's a backend server side item quite important and very big which is capable to get such metadata and execute it step by step according to the diagram items. Okay, let's start. So I need to provide a code usr and I need to explain the business sense of my future process. My business sense will include some calculations and also I will work with database. So I also plan to connect and to use one example for different purpose. And this example will be used not only to demonstrate how you can run C sharp code in creatio but also to demonstrate how you can write some a code that operates with the creature database and which operates with the ",
      "page": 229
    },
    {
      "title": "",
      "content": "creature data model using its own native tools. For this I will explain it later. Speaker 1 So my business sense is to make a process which will do some calculation at server side. And my calculation will include selecting some data and calculating average price for realty record. So my process name will be something like Coke Average Realty Price process and the title of the process will be Calculate Average Realty price. Please confirm do any of you follow me directly at the session or you just watch it as video and then you plan to do your own steps? It's important for me to know how long delays I should provide for you and how I should say make poses or not. So if you follow me just live during the session, please click Please type plus in our chat it will let me understand that I have to make poses for you to do the same during the session. Speaker 1 If not just type Minus which means you are only watching and I can do it faster. Okay, thank you. Thank you. Monica, Adrian, Eddie. Thank you to share. Okay, it looks like someone from you also following me. So I will not go too fast. Now I made a process with a title and the code. No any other changes and plan to save it in my USR realty package which is used for Freedom UI example. It also makes sense to name my beginning of the process. I call it like start. And here we will have successful finish. So normal end of the process. Okay, save it. As you can see, first time it takes a while to save it. But in general, now our process represents a diagram which has a starting point. Generally process will start from all items which have no incoming flows. Speaker 1 So if your process has no incoming flow, it means it's the start of your process. So take care. If you accidentally drop items on your diagram without incoming flows, it will be treated as a beginning. So please be careful. Okay? So my plan is to show you not all the process engine tools, but only developer part of it. So part where it makes sense to write code and include some, let's say developer skills into your product. Because also Business Process Engine and General Process Editor has a lot of no code tools which we will also use but without explaining all the possible functions. So I will show you only major things that we will need for our example. So my main focus today is to show you items that are included in development. Speaker 1 In general, you know that Business Process Editor has two types of items that you can add. System actions which are executed quite quick, they do not require user feedback and they are executed automatically at server side. And we have items called user actions. User actions are designed to show some page for a user, usually waiting for some feedback after it. And user actions are designed to stop your process execution for some time till user will respond something till user will provide some input or will confirm that user gets some output. So user actions will make your process much more interactive. Okay, we have some other types of items like starting events, intermediate events, finishing event and logical gateways. So I will show you on the developer part of it which you need to know if you're really interested in like becoming a process expert. Speaker 1 You can also consider going to our customization course where my colleagues teach how to manage processes. So what my plan is I user. I use system action script task, the only item in all business process which requires coding in this diagram. So this item should be carefully put on the diagram. I can intentionally show you how you can do it incorrectly. Like this. Then you move it like this and then it looks like you added this item to the diagram. But in reality this is not correct. I will show you that this item does not say connect to this flow. And if you do it like this item has no incoming flow. So it will be started at the process beginning, not as you plan. And that's why you should take care of it and put it properly. ",
      "page": 230
    },
    {
      "title": "",
      "content": "Speaker 1 Now you see when you slightly move it then you correctly put it on the flow. So you should practice a bit with placing items on the diagram and making sure that you do it correctly. Now this item has incoming flow, it has its own C sharp body. And we have some notes here, but it's only for long lasting operation. And then we have finish item. So what we can do here, this is a C script that physically will turn into a method of automatically generated class. Creature is capable to generate such some C sharp sources for it and then it's capable to compile them. Speaker 1 So now you will see that we can write some C sharp code here and then save apply changes for our process and it will turn into automatically generated class and our code here in this C sharp script will turn into a method. It will not take too much time for us because I already have some pre developed examples for you and it will be server side NDPTS schema query for calculation. So I already have some example which will work for us. Probably I should paste it into our chat and paste it for you because it's quite big. I will put it into parts because Zoom has some limitations on chat messages size so we can take chat messages. Probably we will slightly need to replace names here like this, but you will see it. Speaker 1 Okay, so I copy and paste this code to the editor. We can also expand this editor to see like in more comfortable ways. And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code to type code like this. Unfortunately for business processes it's not intended to be used so it's not supported. And for business processes writing a short code here in this editor in general it's okay. So you will not suffer too much by writing just 10 or 20 lines of such code. But if your plan includes to run very complex calculations, including different classes, including a lot of other things, libraries and tools, it makes sense to implement complicated logic separately. You can use C sharp source code for it and then just to create corresponding instances of your classes. Speaker 1 Probably also using a tool called class Factory and you may create instances of classes that will Work as helpers for you. Then you can just make corresponding setting and run corresponding methods. That's how you may keep this code quite small sized and do not need to create very complicated logic just here. So it was not intended to be used for complicated logic. It was created with ideas of using of existing classes and making this code not so big. So if you need big logic, please implement it separately as normal classes with source codes where you will be able to use Visual Studio to develop so you will have comfortable conditions for it. And here it's not so comfortable. I agree this editor is not so powerful, but you can bypass this disadvantage because of not writing too much code here. Speaker 1 Okay, so I will save my code example. It's not finished yet. I will just show you what happens if you try to save. So if you have a changes in your script task and you save, your process system asks you to compile here publish means start compilation and I do not plan to do it right now because my code needs some improvement and I need to explain what is going on and explain you step by step what is happening here. So in general I need to explain you like common idea of what we are doing. The common idea is to run a business process which will accept some arguments at the beginning and then we will do calculation of average realty price based on our existing data. But as you may guess working with realty data, we have different types of data records. Speaker 1 Let me show you a bit more examples like apartment in will be an apartment for sale. Okay. And yeah, it should be reloaded probably. I just feel okay, it's apartment and this also is an apartment for sale. So what I wanted to show you we have different types of realty like houses and apartment. They have different pricing values, they have ",
      "page": 231
    },
    {
      "title": "",
      "content": "different pricing models. So it's not good in general to mix apartments and houses. Also we have different offer types like sale and rental which are totally different. So it's totally incorrect to mix values for rental, monthly payments and full cost of some realty records. So it's not correct to mix them and try to calculate some average price because between it. So we have to do quite smart filtering. Speaker 1 We need to take into consideration only records with a certain type in order to split apartments from houses. And definitely we have to filter data according to offer type splitting sales from rentals. So when we do this average price calculation we will need to have filters or offer type to include only rentals or only sales and general realty type to include only apartments or only houses. And then we will calculate total Amount of all selected records, total price. Then we will divide by total area of them in order to include and consider different areas for different objects. So we'll count, in general, we will count like average price of a real to per square foot of the area. And that's how we will finally get our result. So the real sense is just counting similar objects and getting average price per area. Speaker 1 And physically how we do this is the C Sharp code written in this editor. And yes, I agree that if you don't know C Sharp, it could be quite hard for you to write it without mistakes. So if you type some code here, if it has mistakes, system will not show it immediately for you. For example, if you write something like this with a missing name of your method, so if you do some mistake with spelling, then you will note about it. So you will know about this mistake only when you start to compile. So unfortunately there is no background syntax check that will show you with a red color that you have some mistakes here in this text. But it's designed to be quite small and it should be quite obvious. So we do not think that it's a real issue. Speaker 1 Okay, so let me explain in general what is happening here. I plan to operate with creation database. We have two different ways to operate with the database. And now I'm using the approach which supports entity data model. Simply speaking, IT supports items like objects and respects object structure, object columns and references and everything that we design at creature orm Object relational model ORM of creation is based on objects and we can design them when we save and publish. Object structure is applied to the real database tables and columns. So that's how it works and working with this class entity schema query Class means making selections of data records from creation data model, respecting objects, respecting all their column structures. So using this information. Speaker 1 Another approach which we will study a bit later is based on direct database selection from its tables without use of object model. So we will be able to write down our own selects some columns from some tables where some conditions without taking care of support of object model. But now this approach shows you this possibility with support of object model. And this is one of two major approaches to get data. There are some advantages of using such approach and it supports access rights restrictions. So if this code is running under single user credentials, it's possible that user will have no enough access rights to operate with data. So if you run your data selection with entity level with support of object model, so it will restrictions, it will read no data if such Data is not available according to access rights. Speaker 1 Also Entity schema query supports caching at server side. If the same data is obtained too many times at the server side, it's possible to organize your code in the way that this data was first obtained from the database and all second times it maybe will update will be taken from the server side application cache and that's how you may do your selections more efficient. So entity schema query supports caching. Also it supports paging when you need to process a very big set of data records and you prefer to do it by parts working with portions of data pages and entity schema query also supports complex query structures including hierarchical queries. That makes sense when you ",
      "page": 232
    },
    {
      "title": "",
      "content": "operate some data which can be displayed in tree view. Okay, let's not go too hard and too deep. So currently simple answer. Speaker 1 Entity schema query is a class which supports object model and it has only one single purpose select list of records from the database. It has some arguments when we run its constructor. We have several overloaded constructors for this class and it has arguments. One of them is quite standard so you will always use it. And second argument is a text representing our object code. As you remember our code is USR realty so we have to correspondingly modify this one. So you should do this at your own. I will also note it in chat and this is how we can create an instance of our class which will be used for data selection of our entity schema query. We have to specify its settings, we have to make it work properly for us. So we need first to select columns. Speaker 1 Also you may ask me if we type this code like this how we know about present functions, methods properties and so on. We have some Academy server side documentation. Let me show you backend development.net classes Reference Go here and we have set of cluster libraries for creation. Server side you can search for entity schema query class. Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four different overloaded constructors. I'm using this 1/3 one and we have a lot of public properties. A bit below you will see public methods and so on. So if interested you may find this SDK information at Academy website and we'll go back to our code. I agree. Currently it looks like a bit boring stuff so I try to go through it quite quickly. Speaker 1 We only make sure that we have the same columns as we plan to work with and we don't have any obvious rude mistakes here. So let's look at our reality Object just to match our columns we need to select price and area. Here we have USR price USD column and USR area. Okay, so it looks like the same. We can add columns to our query. You may also face a method named addall schema columns. But I strongly warn you from using this method because when you add all schema columns may happen that you are working with a quite big entity with hundreds of columns and without thinking you can add a lot of columns which you will never use later in your code. So it's better to save system resources and do not add all the columns until you really need it. Speaker 1 So it's better to always add only columns into your selection which you really need to analyze later. In my case I need two columns, price and area and making such methods to our entity schema query will result into adding couple of columns. So the part of our selection statement that we will finally start at the database overcrowc select then set of columns that we do from our realty table. From this table is called root entity which is the first one which will be used for construction of our query. It's possible to use joins and add other columns to our selection. But in my case I need just very simple example. I will use the only one table. In general it's possible to make joins with other entities and in my case it's just not necessary. Speaker 1 But it's possible you can use this argument as a special column path expression. Column path may include joins if you use lookup columns of your main entity. In this case it's called direct join or if you use lookup columns of join the entity. In this case construction will be a bit more complicated and it's called reverse joins. If interested I can show you where I can get more information about this ORM programming. So let me show you database tools. No, no, no. It's about architecture probably second no, it's about architecture, Object events, data operations, Direct access, ORM overview. Yes, somewhere here. Speaker 1 ",
      "page": 233
    },
    {
      "title": "",
      "content": "So we have root schema which is the main from table of our select statement and it's possible to add connections to other entities and using direct connections when you select city, you can join to the sanctuary countries to get its name or you can use reverse connections when you have account and you would like to. Or in this case it looks like you select cities and you would like to join all accounts from this city. And this article will let you know more about it. Something like theoretical stuff. In my case it's pretty simple so I will select only one Table one Couple of columns from this table, no joins at all. And here is how I do this. But then I will need filters because my plan is to select only data for a certain realty type and certain offer type. Speaker 1 I plan to get corresponding values for my filters with the help of no code tools. So I expect to get such values. I will show you how to operators process parameters a bit later. Now we consider we getting it with a special get commands from process parameters. So we get couple of guids type and offer type and then we make filters. Such filters are made with the create filter with parameters method, which is I think the most popular method for building filters for entity schema query. And this filter condition is pretty simple. Column equals value and finally our where statement will look like this column equals one value and another column equals another vote. By default, a logical condition to join all the filters we have in filters collection is logical and that's why we do not modify it. Speaker 1 Because we know for sure that by default our ESQ filters has end logical connection logical conjunction operator. That's why we have it without any special setting. So if you want only for debugging purpose, you can get SQL text from your query, so it's possible it's supported. You can get SQL text and we can save it and then to use it for some display, but only for debugging purpose, especially in like especially highlight this for you because for real execution you do not actually need this SQL text. It will work even without your asking of SQL. And this is just for your better understanding of how selection is performed. So this will be necessary only for debugging for us. Speaker 1 So when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's done and we can run the main function for selecting data. This is getentity collection method, which finally returns as some collection. Also you may notice that we use special arguments here and here. And this argument is called user connection. This is very important instance of a class which represents current user connection context. So user connection is unique for each user session. Even if you have supervisor user and you started your system twice, for example in two different browsers, you will have two different user connection instances for this. So user connection has a lot of useful properties like current username, current user id, current user contact and some system stuff like information about database connection, some security stuff which is also important to know. Speaker 1 So generally when we user connection in our code it represents current user context and this is mandatory to operate with creature database. So each time when you will run any kind of query that you want to be finally operating with your database, you will have to provide user connection because this one is like in general what you plan to select. But user connection is an important argument which tells the system who exactly is running this query. System will include access rights permissions if necessary if this user is not an administrator. So user connection is a very important context information for system and it's mandatory for any database related operation. Okay, we finally got our collection as a result, this result is set of records. Each one represents an entity class entity represents one single data row of a certain object. Speaker 1 ",
      "page": 234
    },
    {
      "title": "",
      "content": "And as we get this collection, we have to process it line by line. So we can use for each statement or there are other ways to process collection. In my case I prefer to use for each and we use it for each row or as many rows we have in collection. We will have as many runs of our cycle body inside of our cycle. We can have this entity reference which implements just one data row of the collection and we can run. So this entity record is actually a supports an interface called Entity I entity and that's why it has methods. So we can run methods like get typed column value. Get typed column value lets us to get certain value of a certain column from our data row. Speaker 1 So simply speaking, this is the line how we get exact decimal price from our data. And next line is getting the same approach for getting decimal area. We have some counters here which we use to collect all the prices and all the areas. This example is pretty simple and so I'm just going into so many details only for those of you who probably have not so much experience of C Sharp. So you will understand in general how it works and you'll be able to reproduce it and fix it if something goes wrong. Finally, when we finished we'll have counter for prices and for areas and then total result will be a result of division of all the prices by all the areas and we will have a final result and we will save it into a certain parameter. Speaker 1 Currently it looks like our code is ready. We don't have corresponding parameters so far, so possibly we have to implement it and then save and publish. But it looks like we need some like say five or ten minutes or break. So let's make it break and then we will continue this stuff and you will see that finally it's not so boring. And I will also show you how to debug such code today. So let's make a break. If you have any questions in the break also please note please Type them or just ask. I will come back in less than 10 minutes. Thank you for waiting. Let's move on. And now we have to think of how to actually use this code into our process. So we have this part and we fixed all the items here. Now we have to think of parameters. Speaker 1 C Sharp sources inside of business processes can get some data from process interpreted part and then return some data into processes interpreted part. The best way to do this is to use parameters. So parameters can be considered as a variable for the process and process. Items also may have their own parameters. So in general we can think of parameters as global variables for the process or for certain values of process items. I plan to work with global process parameters and we need some of them like reality type id. So we plan to register such parameter as unique identifier. Code is used inside of programming title can be used for user interface settings in process diagram. That's why I use popular so title and code I copied it from the code. So here I used this one. Speaker 1 And when we use get generic expression on getting grid value and this parameter as an argument we ask system to read corresponding parameter value from the process and also we will do with the offer type. So I copy its name show it for you Go to process parameters. Also I need to explain if you click on some process item it will show you selected item properties. If you click on the blank or if you click on this green button you will see process from properties. I prefer to click on the blank because it's easier and parameters add unique identifier offer type id we need it as arguments for our code. Okay, couple of arguments are ready. Then I plan to return back debug sqltext parameter so it will be text 500. Speaker 1 So creating parameters you like declare variables for your process and the final result will be my average price parameter and it will be decimal. So add decimal parameter and I will do it like this. Okay, I hope you are quite good in doing it. So my question is for Monica and Paddy. Please confirm when you finish this part. We create couple of Guids unique identifier, 1 text 501 decimal. Monica and Paddy, please confirm when you're ready with this. Thank ",
      "page": 235
    },
    {
      "title": "",
      "content": "you Monica. Thanks Paddy. Okay, great. So we can move on. So we plan to use such parameters, but also I will tell you that unfortunately we have so fortunately we have possibility to run process as a no code tool with no programming from section list or section page in Freedom UI and unfortunately we can only pass one single value as an argument. Speaker 1 So my plan is to Use as much as possible of no code here. And for example we can select a source certain record or we can open certain page. Then I plan to make a button which will run the process, but unfortunately we can only pass one single data value as argument when running no code parameter processes. So in no code mode we can only pass ID of the currently selected record argument. And I plan to use it in my process. So my plan is to get this id, then to use no code tools to select corresponding data values from the database and then to provide corresponding parameter set. So as example in my case in my parameters I plan to get an input process parameter and we can name it reality id. Speaker 1 It will be also unique identifier so we can call it realty ID parameter and here its title will be reality id. Title is important for user display and code is important for programming. Okay, and we can set this parameter as input parameter. Input parameter will be designed as read only. So process expects this data to be set at the beginning of the process when process is called and it's not expected to be changed it. So input parameters will be treated as read only. You will not be able to save its changes. We have no initial value, so we expect this data to be provided from input. You can see that input parameters only one single green colored arrow and the directional parameters are used with two sides arrows and green and red. Okay, so we expect to get this reality id. Speaker 1 What we will do with this id, I will use a bit of no code tools. Read read data item carefully placing it on my diagram. You see there is a special display when you put it properly. Okay, my read data item will be used to get ID of type and offer type. So read first record of separate selection. Okay, what object? Reality object which is a Freedom UI example. In reading one single record, it makes sense to make filtering. Otherwise we will randomly get some data record and we want to get a corresponding proper one. So I will make a filter, click here, add condition type ID for comparison equals with parameter and I will select my process parameter realty id. This is and then click select or double click here. That's how I will make this filter. Speaker 1 This filter will be enough to make read data to select just single record from my database and we can name it read reality. Read reality will be its title and it will be also shown here. In general, it's good idea to provide corresponding titles for all of your items and no need to sort if you have just one record and reading all columns. I do not recommend you to use this option. So reading all Columns means you don't care how many columns will be there. And in some cases it can happen that you will have too many columns. So it will mean that you unnecessarily load your system with querying of all the data you have. So it's much better to set read data only for selected columns only. And we can specify what columns we are interested at. Speaker 1 We are interested in type and offer type. So originally we expect to get only ID of the certain reality record. Then we will look into database to get its type and offer type and then we will use read data item to get such type and offer type. Once we obtain it when process is started, results of such data records will be saved somewhere inside of this read data item. It turned out to be not very easy to get it outside from it with programming. So I decided to have a separate two parameters at process level. So I have specially designed parameters for type and author type and when the parameters are at the process level makes it not so hard to get and from the C sharp code. ",
      "page": 236
    },
    {
      "title": "",
      "content": "Speaker 1 So we will use getting data from read data into process level parameters and we can do it easily with formula. Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal value to. This is for example type ID and right part is formula expression value which will be used now just to get some data out from deeps of read realty parameter and offer and type. When I click double click here you see a special macro which displays formula expression and this expression will be interpreted in runtime and replaced by corresponding value in runtime. Formula is an interpreter tool so it will be started and run according to its settings. Speaker 1 My process will be started Set type it this is our formula title the same approach another formula drag and drop it carefully will be used to set offer type id. So parameter target parameter is offer type ID and form of value takes data from process elements. Read data offer type double click and then we have this macro save it. That's how we save this offer type ID here this item. We can call it calculate average price or calculate AVG price. This is our calculation part. Now it looks like we prepared with the set of no code tools parameters that we use for filtering. And now it's time for us to save our process. But first of all I want you. I want Monica and Padik to confirm that you are good at this stage. Speaker 1 So if anything should be shown or explained, tell me please if it's not clear what we are doing also please ask thanks, Betty. Thanks Monica. If you have any questions, don't. Don't be shy, don't hesitate to ask. I'm here to help you understand that listening and doing examples at the same time, it's really harder than just listening. So if any questions or some misunderstanding, tell me please. I will be happy to assist. So our recent steps included taking ID that we expect to get at the beginning of the process reading corresponding ID of reality. I read only two columns, type and offer type. Then I used two formulas to get it out from results of read realty. And then that's how we get ",
      "page": 237
    },
    {
      "title": "such parameters and then pass this data at our script task part.",
      "content": "Speaker 1 So Monica, if any assistance needed, just tell me that we know. Now. You see, I saved my process and I did not explain what is happening here. So when I saved it system. Oh, thank you, Monica. Thank you. So system told me that oh, you changed your C sharp part so it requires compilation. And now it saved my metadata and then started to do publishing, which physically means compilation. We can check what's going on at our application server side. We can see who exactly consumes most of our system resources. Now we can also look at memory consumption and possibly I looked here too late because I already do not see any traces of compilation. But CPU high volt CPU is quite loaded, so possibly we will see. Oh yeah, we see it here. We saw dotnet Exe at the top of consumption of cpu. Speaker 1 You saw dotnet Xeno you see. So here we have parts of. NET core framework which is used for creation and it's compiling our assembly in a dot NET library. As a result, we extract expect to get set of DLLs and our package is set to be compiled as a separate assembly. Let me explain now, probably I will be not happy. No, I will not be able to look at it the property of my package. So when we designed our package, it was automatically set compile as separate assembly while compilation is going on. Unfortunately, our system will be not response it will not display some data. So we will see forever hanging requests. And this will happen until our compilation finishes. When it's successfully finished, then we will see unfreeze of all pending queries. Speaker 1 So now you see our realty package has initial setting compiled into a separate smart. This option means that our ",
      "page": 237
    },
    {
      "title": "",
      "content": "contents that we did design in our. Oh Monica, you have to leave. Thank you. Thank you. Thank you very much for this. Well, soon we will finish very soon. Thank you. Okay, so our package is compiled to separate assembly. So it means special mode when package compilable Part is saved separately and compiled separately into a library that will be saved somewhere on disk nearby to our package stuff. So here we have USR realty. Here we have auto generated code. This code was generated by creatio according to the process structure. You see class definition. Class name is designed as name of our process plus process methods wrapper suffix. So we have class name as combined stuff from process name and some suffix. Speaker 1 Then we have method inside of it and you can see oh, this method is a constructor. Okay, not so interesting. This method is implementation of our script task. As we did not name our script task into something useful, then this script task has named Script Task 1. Let me show you our process. This script task has parameters and this is just name Script Task 1. That's why inside of our code we saw Script Task 1 execute. The text for 8 is exactly the same as we typed and saved. And finally this class will be used into compilation to get final result of compilation which is saved into files bin. And this is our DLL which includes results of our logic. Probably if we look here we may find some code. Speaker 1 But until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing this code. But you may just trust me that finally this code includes business logic and our class stuff here. Okay, so finally we compiled our solution. It turned out into a DLL saved on disk. This DLL is used as part of our application website. We have approximately 200 of similar DLLs and if our package for example was not compiled a separate assembly. So if you disable this option for a package, then it will turn to much longer compilation. Because a lot of base product packages, they have no such option. Compile a separate assembly. So they all compile into one big DLL which is saved here in terms of configuration auto generated folder. Speaker 1 So we have this set of C files and bin folder here turns into this DLL. So now you see 11 megabytes of executable code, which is quite a lot. And this is result of compilation of big number of base product packages that finally form this dll. So recompilation of such DLL takes much longer, probably three or four times longer than compiling of separate assembly. Adrian is asking what the difference of setting parameter value formula and by directly selecting the withered parameters section by process elements. Oh, Adrian, probably you are asking about this. We have a parameter, we have value for it. So we could provide value into this parameter and saving it directly from read data. Speaker 1 Yes, I understand this idea, but I Do not like this, because it will be not clear for me at what moment of time this parameter will initialize its value and at what moment of time this parameter will change its value. So possibly we can do this. You can try. And each time when your read data changes or it gets new results, your parameters should have corresponding mapped values from read data. But I prefer to make it clear and obvious according to the moments when we have some changes. So this is read data. As we finished with this item, it will have its own parameters and some results of selection will be saved somewhere here. Then we have formulas to get data from this and put it into parameters here. And it looks like quite exact moment when we change parameter values. Speaker 1 With this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly parameter will be changed. And so I think that our example will lack obviousness and lack visibility of what is going on. And is it more secure to use formula? Oh, I think it's the same. So it should work when you map parameter directly, but mapping parameter directly. So it's something that we can do like this, we can map it to process element like type like this. Mapping it directly makes it harder to analyze. So personally I do not like this, but I think it's ",
      "page": 238
    },
    {
      "title": "",
      "content": "supported on the platform, so you can do this. Thank you Adrian for your very interesting question. And let's move on. So now our simple example is ready. Speaker 2 I have a quick question about the. Speaker 1 DLLs, if that's okay. I do. Speaker 2 Is it possible when we're creating them this way that we can call other DLLs maybe outside of this package? Speaker 1 Okay, we can. Sure it's possible. Let me show you. We have also process level methods. This is kind of a method that is inside of script task, but we have also process level methods which can be used globally on the process level. For example, if you make a big logic and you finally realize that you do the same steps from different parts of your process, maybe you can implement it once in methods area and then call it many times with different script tasks in your process. So it makes it more organized and better constructed, so you make it easier to support in future. Also we have usings and you can include additional DLLs and namespaces here. So you can include necessary DLL necessary namespaces from DLLs from other parts of your system and that's how new namespaces will be available. Speaker 1 And this will be normally compiled and executed. So it's quite common thing how you can add other libraries and namespaces with usings and these usings will form into Let me show you pkg configuration pkg Then your package, then your source automatically generated source. Here you can see on this table standard set of usings. If you add your own, it will be added into this list. So that's how sometimes developers really need to use for example newtonsoft JSON library to make it simple with serializing or deserializing values and maybe other libraries. So you can add it here by providing using in process methods part okay, so we successfully saved and published our process and you saw it was no problems with compilation. Speaker 1 But in real life when you do development of your own solution, of course you will get compilation issues, you will get error messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and finally you'll have to make your process work normally. Please note if your system is saved in a state, that means you have compilation errors. You will not be able to apply any changes in compilable area until you fully fix your issue with compilation. So it's better and it's like strong advice for you. It's better to keep your system always in fully compilable mode. I mean making your solution. If you try to compile, it always compiles successfully. Because if you keep your solution with compilation errors, you will never know that something is working good or not. ",
      "page": 239
    },
    {
      "title": "",
      "content": "Speaker 1 And you will not be able to easily apply changes in your compilable stuff because each time you try to compile you will get the same errors. So it's recommended to keep your system to be saved in a healthy state when any compilation finishes successfully. So we already have some part of our process which finally performs some calculation. We can register our process at our section. I will show you how we can do this. So we can run a process as a action in our list, or we can run a process by action or a button in edit page. From edit page it looks a bit easier. So let's start from this opening our Freedom UI edit page, then go to its editor. We will finish soon today's session, so don't worry. Speaker 1 I understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more. So this is our page design. My plan is to run my process by a button, but I predict that I will have a bit more different actions, so possibly I can use a button with sub menu. Let me show you how we can do this. For example, we can Put a button somewhere here, modify its size, style and title like actions. And we can also provide some kind of typical icon used for actions. Something like this. This is very typical for creation no its own action. But we will have menu items. Let's make a subordinate menu items like calculate average price. Speaker 1 This will be our action title Action value will be run business profile process this one run process which process to run calculate average reality price. And we have different modes to start our process regardless of the page means with no parameters for selected page means for edit page data and it means we can only pass record ID as argument. This is good for us. And also we have new mode which appeared recently the selected records in list it will get list argument. It's not for our case here, but this is feature which appeared just recently in 8.1.2. I guess so just very recently. Okay, select the page and we have process where the record ID is passed. We have only three suitable parameters. Thanks developers for filtering this. Speaker 1 In previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good because all parameters included integers included decimals so not suitable for grid and we only now see some filtered stuff. So realty will be recipient of our ID of currently edited record. And as you can see this is a no code setting so it doesn't require any special coding for us. So we can do it with no code tools by passing this data. Okay, great. We can also use this icon for this stuff. We can do some calculation icon that will demonstrate make it a bit more attractive menu item. Speaker 1 We can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view config diff so as you can see this action is quite easy to do. Let's go back to actions list and we can check how it works. So action will be always available. We can just save this page. Also in recent version we had an unique option to run processes by for list for selected records in the list. Let's do this. Let's go back to list page. We can also make customization here. Now we can make an action it will be started for list. We have a special settings here Filter element bulk actions Such bulk actions is called by so we can call it. We can find it here when we start to select data. Speaker 1 So let's make one more bulk action like cultivate average price Our action will be again run process where. Oh, it's my fault, I do it incorrectly. Sorry for this. Not. Not this Way. Okay, let's go back. So it was not correct approach. I need to make a. But instead. Okay, let's make a button. Let's put it somewhere here. Size. Okay. Action run process which ",
      "page": 240
    },
    {
      "title": "",
      "content": "process to run? Calculate average realty price for selected records in list. And we have the unrestrictable list here Data table this one. Okay. No subordinate items. So it will be just an example for you how you can run process in lists. This feature supports is supported only starting from version 8.1.2. So quite recently only for recent months. I think if you have a bit older version, you will not be able to implement this easily. Okay, save it. Speaker 1 Let's just start to test it. So we can close the editor. You can also close this one. Maybe let's reload just to fight with any possible occasion of browser cache. So let's calculate something for houses for sale. For example, for this record calculate average price. Something was started with name undefined. Not found something is not good here. Okay, we can also check process log. Did we have any start of the process day? No, means that we faced something wrong. I did not start. Okay, and let's go to reality edit page. Okay. Apartments for sale. Opening it. So as an argument we have this ID Actions calculate average price successfully started. Now we have no visual output. So we only know that process started. We can go to process log. We can see that process successfully completed. We can open history execution of this item. Speaker 1 Sort by date of start. Read set formulas, calculation finish. It looks like everything went correctly here. We do not know exact values, exact numbers. We will study debugging of it tomorrow. Now we just make sure that the process starts and normally finishes. Okay, now let's fix our stuff with the list. Looks like I missed something very simple. So let's go to customize list again. Here is our button that runs process this process. How to run the process? Oh yeah, I just missed very important parameter where the record is passed. Real TID parameter. So it was my fault. I overlooked it. Okay, save it. Save this stuff and then we see how it goes. Okay, close probably to work. No, we have to reward it Houses for sale. No, no. We wanted to run it in list. Speaker 1 Okay, so this one is our list Selected data Calculate average price successfully started. I expect to run only one instance of a process here. Yes, it was correctly started seconds ago. We can see all the steps were done. We can also see execution diagram which will show us these steps executed. And tomorrow when Monica returns and you will be not so tired. So we will move on with. We will move on with debugging this code and also making it visible visual. So today we made only part of the work. Today we implement the main calculation part of the process. We got some result data, but we do not know how to actually see it. So tomorrow I will show you. Today we only ",
      "page": 241
    },
    {
      "title": "focused on C sharp part.",
      "content": "Speaker 1 But in order to make this example fully working, we need some more items and we need debugging to make sure that our code works accordingly our expectations. I just wanted you to see how we can run this calculation for multiple scenarios. For example, houses for sale, houses for rental and apartments for sale. We have three selected records. We can run this process and I expect to run three instances of processes. Let's check out. Yes. Now you see the last minute we have three instances of processes started and each one with its own input arguments. So how many records you run? The same number of records you will see here in calculate average price Process log record Process log shows you history of all started processes in your system. And for each process started you see its elements. Speaker 1 You see start and end date is status. We will see how you can how we can debug this especially C sharp part and also how to check its performance. So today's session is over. The most interesting part will be tomorrow when we will run this process and display some data and also how we will debug this process. Thank you very much for your today attention and education case. In case of any questions, please ask and we'll see each other tomorrow. Thank you very much. Adrian, Paddy Kratz, Francisco Rakhi and others. Thank you. ",
      "page": 241
    },
    {
      "title": "",
      "content": "Speaker 2 I have a quick question, if that's okay. Speaker 1 Yes, yes, please. Speaker 2 It's just about business processes. So at the moment we're tying them to. We're binding them to buttons. But like what can we bind them to? Like how robust is this? Can we bind them to like objects or can we bind them to whenever a data is changed on a certain object or something like that? Speaker 1 It's possible, sure. But I try to keep it simple and use it as possible of no code. That's perfect. Speaker 2 I understand. Speaker 1 I'm just curious manually. But yes. Later I will show you how we can trust trigger some business logic that will start according to data change. So we will do data change and for example insert of new reality. And then we can run some business process that will start only in certain conditions. And for example, only if house or apartment for reality was added. I will show traitor. It's not so difficult. So we are looking only at small part of available tools that we have on board on business process platform. So I'm trying to show it simply. But in general it could be much more complicated and also processes can be more complicated. We have a sub process item which makes it possible to develop big processes that contain smaller processes inside. Speaker 1 So you can do it in much more complicated way and trying to keep it simple. Because we are studying. We need to see some simple examples, understand how it works, understand how you can control it, and then go further with more complicated scenarios and topics. Thank you. Brilliant. Speaker 2 ",
      "page": 242
    },
    {
      "title": "",
      "content": "Thanks a million. Speaker 1 Thank you. See you soon. See you tomorrow. As usual, you will receive video recording very soon. Thank you. Goodbye. ",
      "page": 243
    },
    {
      "title": "",
      "content": "Speaker 1 Foreign number seven and today we will continue study of our server side of creation and we will continue to do our development. And let me show you where we finished at during our last yesterday's example. So we worked with our Freedom UI package. We made business process to make some calculations and we tried to. So we used a combination of no code items and coded stuff. So we used C code. We already compiled it successfully, we even started it. So today I will show you how we can debug such code. Generally you can manage processes not only from configuration section, you can also do the same from Application Hub or from process Library. Process Library at settings page is at the top position. So possibly it can tell you that it's something that Creatio thinks is really important. Speaker 1 Process Library on the top position here. This is a special section also available in Studio Workplace. Process Library we have a lot of existing designed processes for base product and also we can create our own processes. Process library has some advantages in comparison with just opening diagram from configuration section. So here I can see in process library we can go to process properties and that's how we will enable additional features that will be really helpful for us to run our processes and to get additional information. So let me show you what they are. First of all I wanted to tell you about tracing. By default this option is off and if you enable it shows so it collects additional data related to process execution. And we will be able to look at this data for process steps after they are executed. Speaker 1 And this tracing will help us to keep parameters values. We will be able to check how parameters are changed through process steps. And in general this is really helpful in case if you investigate why your process is not working as expected. So you'll be able to see parameter values their changes and it will explain you process behavior much better. Also we have some options like display in run process button list this one, this is a run process button and when you start it you see some message that quick process run is not configured and we will not be able to get any arguments if we start process from here. So that's why we usually design processes to be started from sections in order to get some input parameters input data. So if you want you can run process from here. Speaker 1 Our process is active and it's also possible to deactivate it. So if you don't like some process, for example you have some base product functionality that you really don't like, you want to stop it, you can deactivate any process you have in your system. This process will not be able to start regardless of the way how you expect it to start with a start signal or with the Start simple event. So for manual start and so on, deactivated processes cannot work at all. And also you will see versions of processes can be useful in case if you develop, test and run in production of your processes at the same environment. For example, you have version one which is actual and your customers end users are working with it. Then you start to develop version two of your process. Speaker 1 But while you are developing it will be not ready for end users and you still want to save some intermediate progress. Once you start to develop version two, you still keep version one as actual. Version two, for example will be under construction. And once you realize that version two is okay, it's ready. Then when you save a process you can make, you can run an action set. Here you will have an action set as actual and it means that any other process version could be manually set as actual version. That's how you will switch your users from working with previous versions to new versions. And older started processes will still keep going with previous diagram and new starter processors will go with a new diagram. But what I wanted to tell you about this. ",
      "page": 244
    },
    {
      "title": "",
      "content": "Speaker 1 So managing of processes versions is good if you develop directly on production, but if you have a separate developer environment, if you have separate test environment and so on, it probably will additional difficulties for you. And that's why I prefer not to enable this versioning or processes. And each time when system asks me to save a new version for process, I usually reject and overwrite existing version. Because when you have many versions of your processes, you also will have many items in your configuration. You have more items like this for your business processes and eventually all the items will be expired, so they will be not necessary, but they will present in your package. And if you attempt to delete them manually, you will finally delete the whole process including all of its versions. So it's risky. Speaker 1 You should take care and save some items as exported metadata here, then recover it. So it's something that looks like unnecessary difficulty. And it's better to avoid if you have a standard transition of your solution from developer to test and to production. So I recommend you to keep your version only one single version. It will be easier for you to have to control all your situations with your business processes, but it's up to you. So at least the platform offers you possibility to handle process versions. Okay, so what I want. Oh, sorry, this is setting which I planned to save also as you can see there is a red warning message that tells us about performance impact. So if we enable trace process will work a bit slower, but it's not so critical. Probably 5% slower. This is not a big deal. Speaker 1 And compared to what functions and what features it shows us. So usually we sacrifice a bit of performance here and enable this trace in case. So it really happens. Helps in case if we need to debug our process and to see how each step was executed. And to see process parameter values at each step. So this is significant in important information, especially when you develop and debug your process. Okay, so how we start our process? We went to reality section. We can select some data or we can use its page. But now let's say house for rental. Calculate average price Calculation was successful, but we did not see anything. We only can see some history of execution. And now we will be able to see trace data. Trace data became available because we turned on this option. Speaker 1 Trace data can be extremely helpful because it helps us to see our input parameter data which we had at the beginning of the process. Then we have parameter values of selected item. And finally, when we will move on. Unfortunately, not all of the items keep such trace and allow us to see it a bit later. I will show you how to see final trace data. You will understand how we can display it. So we can use some items later in our process. Then select on it and it will show us trace data with process parameters. And I want to. I wanted to show you one more additional feature which is important for processes. It's performance counters. Let me show you. So we can try to make a columns setup shrink a bit. And we can display execution time. Execution time is duration. Speaker 1 So let's display duration in milliseconds. This works good for system actions. And milliseconds are perfect for this. And also we can display the same duration, but in minutes. It will be useful in case of debugging, in case of some user actions used and some display messages shown. So users are usually not so fast as system. So we will see this performance. Now you see our process element performance for last response recent start. And you see that reading data took 21 millisecond. Then we have some more calculations. Also it takes some time. And in general you see that in total, not so much. But we can also enable duration display in process log. Let me select fields to display and close unnecessary columns in order to display duration in milliseconds for process in general. Speaker 1 ",
      "page": 245
    },
    {
      "title": "",
      "content": "And also we can set duration in minutes just to see some processes which were executed. Quite slow. So. So now you can see that we have total 130 and we have some items and you should be ready that it will never match. So total duration of items will not be matching the total duration of the process. Because it looks like business process engine has additional spending of resources for process start, maintaining it and then correct finish and such process elements duration is only part of overall resource spending and time spending of process engine. But process elements duration will show you relative speed. So it will make it clear that read realty takes longer than calculations in our C sharp code. And also you can see that formulas are almost lightning fast in comparison with any database related operations. Speaker 1 So you can see what items are fast and what items are slow in this list. Even in case of such numbers will be not really representative. And our total process execution is a bit more than 130 milliseconds. So it looks like 100 milliseconds were spent on process start and finish. But this is in general which will give you general understanding if the process is fast or not. For example, you see some other processes they take sometimes they take much more time for calculator. And we have a lot of system processes here. Everything is shown in this log. And you can try to improve your processes. You can try to implement some changes and then check its overall duration and the duration of items. Let me show you one more example. Let's go to houses for sale and run calculation. Then go to process logs. Speaker 1 Now you see second execution in even though it processed more records, but it was faster because of so called warm up effect. First time when you start process system takes a lot of resources to deploy process engine service in memory to organize and allocate all necessary class instances. So prepare everything to work with processes next time when you start a process system uses a lot of allocated classes and a lot of allocated objects in memory. So it takes much less time. And obviously your next start of the same process, the same data may work much faster. Next consequent starts will also be quite fast. And it will be I think not longer than the first one. And you can see items inside, you can see that still read data is lower than calculation. Speaker 1 And you still see that formulas are quite fast and takes almost no time. So that's how you can analyze performance of your processes. And you may think that it looks like everything is very good. So like 10 milliseconds, 15 milliseconds, even overall hundreds of milliseconds is very good time. Yes, I agree for this. But in real life processes and real Life environments, working in high load conditions, your situation will be different. You will work with much more loaded entities. And currently I'm running on my single PC as a single user, so I have almost no simultaneous access, no any concurrent activities. And that's why my website is working fast. And in real life conditions it may be different. So analyzing such performance, analyzing duration of items will help you to find bottlenecks in your process automation. Speaker 1 You will exactly and easily and clearly see what items take the most of system resources and you may think of how to improve it. Okay, so that's how you can in general check your process execution and analyze its speed. But now we will come back to our code. So we are interested in real debugging of this code. So we need to see how the C Sharp code is executed line by line and happily so we will be able to do this. And fortunately system offers us possibilities to do this. And first of all I need to show you that this code finally turns into automatically generated code that we discussed recently in our terrasoft web app. Terrasoft configuration pkg Then we go to our package folder and then we go to auto generated sources. Here you see automatically generated class. ",
      "page": 246
    },
    {
      "title": "",
      "content": "Speaker 1 It is generated by creatio and then used by compilation. So this class is saved on disk. You probably think of oh, we have C file. Possibly we can edit it. Unfortunately not here. And if this class is in so if you have a file in auto generated folder, you will not be able to modify this because each time you compile again it will be overwritten by creation. But you can use this file for debugging. I will show you how we can do this. For debugging we need some powerful tool. I will use Visual Studio, I'm using Community Edition. I will have to do some trick with administrator privilege. Just a second. Remember, in my administrator credentials I have to use a separate environment, separate Windows credentials for this. Okay, so I'm starting my Microsoft Visual Studio. Not now, sorry. Speaker 1 Here, this is Microsoft Visual Studio. I installed it recently. It's a community edition and 2022. So this is community 2022 version. You can install it almost for free from Microsoft website and download. So currently I use it for my personal developer needs and it works well. So Community Edition I only installed C Sharp Tools here, not so much. And it works for simple development and for debugging I have to run Microsoft Visual Studio as administrator, otherwise I will fail with the bargain. And debugging is important because we have code which we are not sure how it runs and we Want to run it line by line and check it out so to see if it works fully as expected. So I will show you the easiest possible way to debug our website and just please be very attentive here. Speaker 1 After you install Microsoft Visual Studio Community Edition, you need to perform some settings into it. If you do not perform such settings, if you skip this step, you will not be able to debug. Your breakpoints will not work. Let me show you Tools options here. Visual Studio usually hangs for some time. I have to click now it works more or less. Okay, so let's go to Debugging General. You see it's hanging. Okay, click back and forth. Now you see it shows more or less correct settings and we need to go tools Options Debugging General. And then we need to find the most important setting here, which is called Suppress Git Optimization on module board. This setting was off by default and we must turn it on. Otherwise our breakpoints will not work. So this is critically important setting. Don't forget about this. Speaker 1 This is important. Just my code was originally on. It's recommended to keep it on. But unfortunately Edit and Continue is not supported. So we can shut it off and so we can turn it off. It's not supported because compilation will be not done by Visual Studio. We will use libraries created by Creation and it's not good idea. Ask Visual Studio, try to recompile them. So Edit and Continue is not supported. Edit and Continue is a feature which helps us to modify code, recompile on the fly and to see how it works after recompilation. But in case of creation, compilation is done by Creation System, not Visual Studio. So this feature is not supported so far. Other items could be just out of the box. It's hard to remember all such settings. So I will show you where you can find the technical details. Speaker 1 This is about development tools external IDE basics. Scroll down till we find Visual Studio screenshots here and copy links. So now you see Suppress Git Optimization module Wallet must be on the most critical setting that you must do if you want to debug with Visual Studio. Okay, the corresponding link is in your chat. Okay, looks like we did everything that we need. We have to save our changes and then we have to perform our debugging steps. File Open and here you will be. You will see some surprise. File Open file so it's possible and it's enough for debugging to open. Just file that we plan to debug. Let me show you. No solution, no project. We just go to Terrasoft configuration pkg Then we go to our package folder. Then we go to auto generated and find corresponding C Sharp source. Speaker 1 ",
      "page": 247
    },
    {
      "title": "",
      "content": "Of course we will not modify it, we only open it. Visual Studio will create automatically generated solution for this. It's okay, we can go to its inner code and put breakpoint in order to stop execution of our code at this point, at this part, when we will finally run to this line. But now it's very tricky ways because as you can see, we only made it breakpoint. But we need to attach to our worker process. Let me show you how we can do this. Debug attach to process. And here it will be really important to run your Visual Studio as administrator as we did it. So we need to find the worker process. It's named W3WP and you can see its title and you can see username in case if you have many creation instances, you'll see the proper one. Speaker 1 So this is the way how you can select the proper worker process. W3WP . This is your worker process from IIS and of course we have to select it. And if you don't see it, you may try to show processes from all users. Here you will see much more processes. W3WP . Attach mode is automatic. And then we click just attach. Okay. System tells us that we are probably doing something suspicious, but we will agree attach anyway. Now you see that our breakpoint is not fully ready. Studio says us that it will be not currently hit some problem with symbols. So how to fix this? And I think that the easiest possible way to get started normally is to restart our app. You already know that restarting of the app is possible with the help of maintenance tools made by Neo Technologies from Switzerland. Speaker 1 So let's go to restart application button. This button appears as a result of installation of maintenance tools from Marketplace. Okay, we'll be restarting. Great, let's continue. It takes just 10 seconds to restart. But now you'll see what happens inside of Visual Studio. Visual Studio starts to show us this big red debugging line and. And also we will see some blinking messages. And finally our breakpoint became fully available. So this means that our restart made Studio able to correctly load symbol files necessary for debugging. So now we are fully ready, we can do debugging. And now Studio just waits for this line of code to be executed. So let's go. Let's try to. Now you see, restart of the app is finishing. Go to Real T section. So now our studio is attached to our process and it will stop its execution. Speaker 1 If we will run corresponding business process. Okay, let's calculate average for apartments for sale. We have two different departments here. Calculate price and what. Let me check process log. It looks like something is going not as expected, but it just took a bit longer time. And yes, we got our debugging. No exceptions. Everything looks good. We have just breakpoint and execution stopped at the moment where we have script task in our business process. So you remember the process structure. Now we are somewhere here and we can run this code line by line. I understand that this part is probably boring for those who do not plan to do a lot of development in creatio. But this is something that will let you understand how your code is actually started. And this is only possible if you run your creation locally. Speaker 1 Because you need access to file system, you need Visual Studio to attach to your worker process. So this type of debugging can only be performed in local environment conditions. Unfortunately when you work in cloud conditions, you will not be able to do this kind of debugging. Okay, so let's start. We can run lines one after another with the command F10 step over. You probably remember some debugging sessions in Google Chrome development console. So here we have something similar and even hotkeys are very similar. So F10 is very popular. We will use it and pressing F10 several times. Now you see 1, 2. We can also handle locals or watch variables. Let's try to look locals type. You see it was changed. Offer type was changed. Great. Filter was created and collection changed. Another filter, another add in. Then SQL text. Speaker 1 ",
      "page": 248
    },
    {
      "title": "",
      "content": "Now you see SQL text changed. We can view it. Here is our actual SQL text which will be running in the database. So this is important possibility for you. If you make some more complicated scripts, more complex filters, maybe some parameters that you don't know how to work with. So this is something that will let you understand much better how data selection is working in creation. Currently we got this SQL script out from entity schema query instance. We used get select query method. Then we used get sqltext method in certification questions. One of the questions will ask you about entity schema query available methods. So this will be one of the answers how to get SQL text out from esq. The answer is get select query and then get SQL text. Okay, we can save obtained result into parameter. Speaker 1 Then we run the most important line in this code. This is for getting collection data. You can see that we have collection number, collection records number two. We have two records there. So let's go to start our counters run cycle for our data records so we have only two apartments for sale. You see Austin and Florida apartments for sale. So we process such data, but we only can get their prices. Here you see price area and then we update our total counters, price and area and then go to the next line, another price, another area, update counters and finish the cycle. Finally total area, total result. Here you will see result was calculated like this. And we can save this result into decimal parameter and then return true. I did not tell you importance of this return true or return false. Speaker 1 So let me spend a minute on this C Sharp script task has options to inform process engine about is it successful execution or not? In case if your script task finishes with return true, it means that process engine is ready to execute next step immediately and no errors detected. If you return false, it means you tell to the process engine that your execution experience serious errors. So you have to stop process execution fully and process will be stopped with the error state. So if you return false, it means you perform unexpected, let's say like emergency stop of your process. And that's how you can manage this. Also you may create one more action for this you can handle no, you can raise exceptions inside of your C sharp code. This will be also treated as a emergency stop. Speaker 1 But also it will tell to the client side some exception text. And that's how you can provide some reason for stopping of your process. So you can throw exceptions with some error message text and user who started process step will see this error message. In our case everything is okay. Process executed normally. We have to continue our execution by pressing F5 means normal continue. In this case our process finishes its execution and now we can see so we have no data changes here. We can only see that calculations was done. If you go to process log the recent execution. You see, milliseconds have a huge value and we have more than six minutes of total execution time of our process. This is important for us to check how fast all execution was done. Speaker 1 And as you can see, our read data executed more or less according to expectations. But our coded part took enormous time of six minutes because of our debugging session. So you can check what steps take too much and you can think of how to improve it. In my case, you see, debugging definitely made it longer. But it's just our, let's say design and development attempts in real life it will be not so slow. Okay, I think that currently you understand how it works. So let's try to run it once again in a bit different conditions. So let's open house for Sale as an argument, we will only have this ID when we start a process. This ID is transferred as argument. We will get corresponding values and parameters. Now we already debug only our programmed code. Speaker 1 So you may ask about is it possible to debug no code items? Unfortunately no. And they will just execute it without any stops. But. But if you want to intentionally stop your process at some step in order to investigate status parameters, variables and so on, you can additional temporary items into your process that will display some data ",
      "page": 249
    },
    {
      "title": "",
      "content": "using any kind of show message, any kind of messaging like pre configured page or automatic auto generated page. So you can use it for like artificial process stop. And that's how you can get additional information about the process execution if you go to process log and see trace data. So in my case I plan just to run this process once again. Now I expect debugging debugger to be activated again. As you can see it takes significantly longer than expected time. Speaker 1 Oh yeah, it's already finished here. So just my fault. Okay, running in, running it again now you see all the decision, all execution goes. We can see this SQL text conditions parameters are saved separately. Selecting data again we have two records but different records. Working with price and area, updating totals, another pricing area updating totals again and calculating final result. Then we can just press F5 for normal execution. Oh, it looks like I accidentally started one more time. Okay, let's run the five again. Okay, so it was just my fault. I started this process twice. Let's go to processor log. Now you see this was my debugging stuff. This was just maybe three or four seconds to debug in the next time. Speaker 1 So you can see that all of your execution or your processes is tracked and also you can handle and check process parameters. Unfortunately this trace data is not shown for any item. Personally I have a question why? But possibly it's somehow connected with the type of executed item. And we still have good enough options to look at parameter data and to check it out during debugging. I mean during investigating how process executed and process was. But of course we cannot propose our customers to go here in order to check some result data. We need to have a fancy good looking way to do some kind of output. When we start a process like this, we want to provide some kind of good looking output for a user. And of course obviously we will do this. Speaker 1 So now we have process which only calculates data and saves its results into page into process parameters. We can use some items to make a good looking display of such data and I plan to user actions for this. Meanwhile, we already do not need to debug. So it's better to avoid unnecessary system resources spending. As you can see, 1.3 gigabyte of memory was allocated and for my app and visual studio can track it. So let's detach our visual Studio detach all. It will save a bit of our RAM for our creation. And let's check now you see that 1 gigabyte of RAM was still already eaten by creation process creature in general creature web worker process. Okay, so my plan is now to show user some output I plan to use. Oh, it looks like I lost my title here. Yes. Calculate average price. Speaker 1 Okay. The most important is not to change the code in C sharp part. In this case, system will allow us to save our process without any questions and without asking to recompile only if you change code here. System will detect this and ask you to perform compilation again. So my plan is to use some kind of output window. I will user actions and the most recommended option, I think the most popular, the most let's say useful is now pre configured page item. Pre configured page offers you possibility of fully to show fully customized page for a user. It means you have no any, let's say connection with existing data as you may find in open edit page item. Speaker 1 So open edit page can only show you pages connected with existing objects and pre configured page can show you any random page designed in your system. So let's use this option reconfigure a page and carefully put it on the diagram. Pre configured page is designed to show some pages for user according to process execution. Obviously this page will appear at user side. But you need to remember that in general business process is a server side functionality. So when we have a process, when we start it server side process engine service starts to collect metadata and process it step by step. It performs almost silently without showing any messages, without showing any UI changes. In general and only if you want to show some pages for user, we can use some special items for this. Pre configured page is one of such items. ",
      "page": 250
    },
    {
      "title": "",
      "content": "Speaker 1 I think one of the most recommended features for this task. Pre configured page will show some page for user at user browser which page to open. We don't have any suitable. We have a lot of out of the box pages, but they are not suitable for our task. And we want to display average price decimal value. And also we want to display SQL text only for debugging purpose. So we can simply create new page, add the new page and then we can decide which type of this page is a Freedom UI or Classic ui. Of course it makes sense to work with Freedom UI right now. So let's do this system will open new page editor dialog. We can use different types of pages. And let's use this one tabbed page with area on top. Speaker 1 Of course this is too big page for our purpose. But this is a simple example. In real life you may need a process which will ask user about some parameters, about some arguments. And in general business scenario it may happen that you will have quite a big list of some data for input. So in general you can create pages with unlimited complexity. As many parameters you want to input you can implement. So no limitations here. Great. And we can use different page parameters. They are not connected to any existing entities. So you see just set of controls. And in my case I need to display number. So use number control. Of course I will rename it into average price US dollars. The inner code will be maybe USRAVG price and format will be decimal two digits. Speaker 1 And as this is an output value, I do not want user to modify this. So I'll make it read only. It's quite obvious. You see it's no code settings, so very easy to do. Next parameter that I want to use will be a text. Or maybe I can try rich text. But first let's try text and make it a bit multiline like this and SQL text. It's just for demo purpose and for debugging reasons only SQL text parameter 500 probably multi line text will be a good option here. Okay, as you can see, I don't even care about element code because I do not plan to modify code of the page. But physically it's possible. This will be a Freedom UI page where you can also make your own handlers, you can add your own buttons or other types of controls. So you. Speaker 1 You see very rich possibilities to build your page. In my case, SQL text will be also read only because this is only for data output. So my SQL text is for data output. That's. That's it. Only two parameters here. In real life, of course you may use much more components and widgets and parameters. So this is just to make it simple and easy. You'll be able to reproduce it easily. My page will finish its work by clicking Save or close. Maybe we can hide cancel button. Is it possible to hide? No. Okay, we can save our page now. And also I need to check where is the page package. Let me check page settings. Okay, Reality, the same package as my main process is saved to the only disappointing Feature is a code automatically set for this page. Speaker 1 So I will use something like average price output page and we can also use the same title just to make it good looking at our configuration section. So it will be named and coded properly. Save it again. So now you see our page is ready well named, we can save it again, saved correctly, close it and then we can use this page. As you can see it still shows us a bit old code, but we can probably select this one. Yes, now it's correct. So our editor remember it created page so it shows us its title and its code. So whatever you prefer the most. And also we can name it something like show results. Who will see this page? User who performs a task. It means who will see the page? User. Speaker 1 ",
      "page": 251
    },
    {
      "title": "",
      "content": "There are other options like someone's manager or a role some member from a role. In my case, user is like simple and easy because server side will detect exact user session based on the contact value we provide here. So here we have to provide a contact of a user who we plan to show this page for. And current user contact is very like frequent typical value here. So we simply will show the page for current user. But it's possible to include several different persons into your business process logic. So it's possible to calculate another person or someone's manager or just read some specific place where you can handle another person's involved into some business activity. And you can provide here not only current user contact, but you can simply provide any contact of existing user that you need for your business logic. Speaker 1 Okay, show page automatically means that once this item will be executed page appears immediately you can hide it. So do not show page automatically. In this case, this item will be still pending, so it will still wait for user to start to show it. And user will see this item in this notification panel in business tasks list. So user will be able to find the pending item. And that's how it's possible to see such item in case if we do not use show page automatically. Recommendations and hints were used for classic UI examples of pre configured pages. Unfortunately it's not supported for Freedom ui. Probably developers decided not to keep it in Freedom ui. So it's up to you. Okay, we can ",
      "page": 252
    },
    {
      "title": "skip this part and what buttons complete the page.",
      "content": "Speaker 1 It's important to understand that when some page is shown for a user as a business process item, then this page will wait for a time user decision. So page will decide when its work is done. And in our case we can do it by buttons. If we do not press any button and we Just switch focus to another section and go on to work with another data. In this case, process will still wait for our decision and will not move on. So simply speaking, we can even stop our process. We can like block it at some stage without moving forward until we will specify some condition and make some condition in order to proceed with our process. In my case, let's make save and close buttons are enough to finish work with our page and move on. Speaker 1 And such options are important to specify how we plan to continue our execution. Okay, at the end this item has parameters page parameters. We need to load here data from our process. We will use parameters mapping here and it's very easy. We will just click on this lightning button, select process parameter, select corresponding parameter and click select. That's how we matched process parameter with page parameter. Let me explain how it goes. So here somewhere we have a process parameters somewhere like a memory of business process engine and we use it here, here we finally transmitted such parameters to our C Sharp code. Later on we expected to get such data back to process parameters and then such process parameters are held at process level. We can move our parameters back to. Sorry, we can move our parameters back to page. Speaker 1 So this is important for you to understand that data will go from process parameters to our page parameters. Now we set SQL text parameter and then average price for the page. We'll take its value from corresponding average price of a process. So in process parameters we have this select and this is called parameters mapping. And when this process item start, according to this mapping, SQL text will load data from SQL text parameter and average price USD will load data from corresponding average price process parameter. No need to run items next items in the background. No need to create a technical additional record in activities section for this. So we will not use this. We just set parameters and save. Each time we save, our process diagram saved in our package will be changed. Speaker 1 So if you do not save, your progress is only in your browser and will not work until you save it. So it's obvious I think. ",
      "page": 252
    },
    {
      "title": "",
      "content": "Okay, so now we made this item to display some results. If you work in classic UI usually so it's mandatory to reload the page in Freedom UI sometimes it's not mandatory, but I just want to make sure that everything works well. That's why I just reload the page for sure. Okay, let's open some house in Seattle and start our calculation. Now you see that our calculation was quick. We got average price calculated. We also have debugging SQL text just for developer need for debugging purpose. And our process seems to stop here. But if you go to so let's imagine you went to ",
      "page": 253
    },
    {
      "title": "another section.",
      "content": "Speaker 1 So you didn't finish this page, you went to another section, you started to work with different data. You almost forgot about your process. But if you go here into notification panel and find business process tasks list here you will see pending items. You will see items that are waiting for your response and they will be hanging here until you finally finish them. So that's how system reminds you about items that current users should do. And this list will include all pending items from all different processes started from our started for our user. So show results. We click here, we see again this page. We remember save or close button will finish work of this page. Okay, click save and process finishes. We can go to process log to see its execution. Speaker 1 It took 1.4 minutes and now you see that most of the time system spent on showing page and waiting for user response. Such analyzing of duration may help you to understand how actually your process is used. Where there are some tricky steps which make users to work longer to spend more time. So it will be helpful for you to understand your business and your level of automation and you will finally see what can be improved here. So this showing page also as you can see it enables trace data. For this step. If we enable show trace data you will see final values of our process parameters. This is our input value. Speaker 1 Here we have calculated offer type and so we have type and offer type input data is here and as a result we have average price and we have SQL text for debugging purpose. In case if you have any questions feel free to ask because we almost finished this step and now you see we made a process which is able to show us some data and also I need to explain you some side effects and the side questions. So for example user started our process but then okay, process can be quite long and the user had previous steps there. So it may happen that user just did not see this page. Something happens like something is broken and user was too quick to switch to other parts. User ",
      "page": 253
    },
    {
      "title": "thought that something was hanging, then switched to another section and so on.",
      "content": "Speaker 1 User can easily go back to the process by looking at notification panel business process tasks show corresponding page, save it and that's how the page will be fixed. I mean the process will be correctly finished. And you see now user has no items to execute. It's possible to include many different users into one business process. And also you need to understand that process is still executed at server side. So when we have some page Displayed for client user. This is a mechanism which sends special messages from server side to the client side. I think it was done with the help of websocket. Then client side page listens to such websocket and if it gets it then it shows you the page and also displays business process tasks data here. Speaker 1 So user can look at any time even if user accidentally closed the page at all. User can go anytime here and see what processes are waiting for the feedback. So this is quite efficient way of making your process interactive, making your process able to input some complex data to display some intermediate or finishing results of calculation. And all of this is possible thanks to user actions. We only used pre configured page. We have a lot of other options here like dialogues, open any page of existing section. Auto generated page is a very old item, probably 10 years old item and it is designed to just display different columns, different fields in one column and it also can be used for input and ",
      "page": 253
    },
    {
      "title": "",
      "content": "output. Speaker 1 We have send email item which will show you some email text before sending it and approval tool which can be helpful in case if you need to automate some kind of approval logic. When one user creates something and needs confirmation from another user or even set of users that everything is okay. And usually it's used for something which makes commercial importance like contracts, invoices or some other types of documents where some other people must confirm that everything is okay in some documents or data. So approval is a base product mechanism which helps to organize such kind of confirmation by different people and make it well automated inside of creation. If you want to know more about different process items, I recommend you to attend our customization course. There are more examples there and they are fully no code. Speaker 1 But our sessions are intended for developers. That's why we focus on coding. That's why we see how we can get parameter values, how we can save them and how finally we can merge this coded development approach with no code stuff which can be designed with no programming. In case if you have any questions feel free to ask. This example is over and probably it's time for us to have a 10 minutes break. So if you have any questions feel free or type your question during the break. So next topic for our session will be about processing events. So processing object events and I need to explain why you need to know about it. So this is a server side functionality and its possibility to handle some operations and possibility to react for system at some changes that we perform in our data. Speaker 1 Let me show you three ways to handle object events. But before it makes sense to download everything to file system to commit it to version control. Because it's our next step that we successfully did. We will save everything on disk in case if you have any questions, feel free to ask. So we save all of the changes we recently did at file system. You see, it takes a bit time, more than expected. Okay, we have real changes. We have migration settings. Okay, now we can commit our changes to version control. You see, I have two big topics here. Okay, we can commit. Great. Sync, pull and push. Yes. Okay, so now we finished finalized our steps that we did in previous example. And I plan to show you and explain what is event handling and how we can handle it. Speaker 1 We have three different ways to handle events at creation objects. Let me show you free handle handling object events. First one is very easy. This is no code solution. And using business process start signals, I will quickly made an example. I will make an example for you. You'll understand how it works to be very easy and very quick. But it has also disadvantages. It has only three supported events and relatively low speed. But it's really fast to develop. So I will show it for you. And let me show you this easy way of handling data changes. So let me explain some business sense. Let's imagine we create new realty. Like we press new, we fill in some data. Okay, so this is an apartment for sale sound test comment. So let's imagine when we save data. So physically we do insert into new realty. Speaker 1 So we insert a new reality record into our data model. And if we do the such insert, we want to create several realty visits automatically. Let's imagine we want to do this task. So once insert happens, we want system to automatically create some visits for us. This is possible to do and even with the easiest way of doing this, with the help of start signal, we can do this easily and make it using business process. Let me show you. Let's go to process library. And you should be very careful when you create processes from process library. Because when you click new here, system will take into consideration current package system setting. So this is a classic UI stuff. But you should be careful because you can create processes even for any kind of solution. ",
      "page": 254
    },
    {
      "title": "",
      "content": "Speaker 1 So go to settings and you see target package is dev classic. So you should change it for usr realty. Yes, modify. Also there is some side effect which I can't easily understand and explain here. Now you see some strange packages. Usr com something and combination home another something. So it looks like system dreams about some packages but we cannot find them in our packages structure. So we will not see it here in our packages. Also, even if you go directly to look at the database and we will search for packages, could choose information or maybe like this. No, it will be not so good. Okay, we can just select everything from this package, show a new one first and you see that we don't have any USR special packages here. Speaker 1 So it looks like here we have something artificially created, possibly used for future customizations of some apps, but we don't have it now. Okay, so we will select only one package here and our code will be USR2 Add Reality Visits process. So now you see Auto add realty visits process and you see we have code and title. Great. So the main idea of handling object events the help of start signal. Of course it's simply to turn our start simple event clicking on this button, change type button enter start signal event. Why I say start signal? Because technically we have another types of signals. So we have wait for signal or now we have throw signal. So we also have intermediate signals, they have a bit different functionality. So start signals are designed to start your processes and by default it's an object signal. Speaker 1 Technically you can use custom programmed signal, but object signal is the most commonly used and we have to specify object which we want to listen for our event handling. Of course, this is our reality hidden UI object, this one. And we have only three supported events so far. Developers have plans to improve this functionality to have three before events and three after events. Now we have only after events and we have after record added, after record modified and after record deleted. With delete we have some additional functionality which looks like this is actually before event because when we will handle record deleted and try to select record that is about to delete, it's still present in database. So for delete we use before delete event. Speaker 1 But for added and modified it's definitely after add and after modification because when we do selection from the database, it shows that data was already added or modified. So in my case I plan to handle insert event. So record edit and in. So in general you can use additional conditions here and such conditions could be helpful if you want to run your process not for any reality insert, but for some certain data, for example only for houses or only for apartments or some complex condition. So now I will just skip this part. But run following elements in the background is really useful feature. Speaker 1 If you run your process with no background option, it means that from user point of view, insert or update will take some time plus time for running of your process because it will Be started at the same scope at the same thread. So without background perceived speed of your solution will be not so perfect. It's if you set run following elements in the background physically system performs scheduling of your process according to insert event into one time execution with the help of background process scheduler and it will finally start in a separate thread. And from user point of view insert will be processed faster and corresponding event handling will be done in a separate thread without any visible delays for end user. So in general, running in the background is recommended to guarantee better user experience, better perceived speed. Speaker 1 ",
      "page": 255
    },
    {
      "title": "",
      "content": "We can name this signal realty added which means that once the signal is triggered, it means that some new record was added. Okay, so we can start the process with the help of signal. But what we have at the moment of start, unfortunately we don't have so much. We can switch to advanced module advanced settings and we only have one single parameter unique identifier of record which triggered our signal. So this record triggered this signal. And the only value we have is ID of the record. So no price, no name, no anything. And if you really need so you have to select this data from the database. In our case, I should explain the business sense of it. My plan is to automatically add realty visits after we add the new realty record. Speaker 1 To insert a visit we need parent realty and some additional columns. So let me use add data item which object to add data of course to the visit. Be able to visit one record. Okay, and we can specify columns of added visits. Of course it will be parent realty. This is mandatory column, we have to specify it. We probably can try to calculate potential date and time. And possibly we can specify comment or some other columns as ID and historical columns will be filled in automatically. Okay, parent reality, we can take it from start signal so we can take it from process parameters switching to process elements reality added and then double click on unique identifier. That's how we do this. Setting comment will be something like auto added visit. Physically it turns into a C sharp string here with double quotes. Speaker 1 Okay, and visit date and time can be something like current date and time and then we can go to formula. So for example, we can add some days, add days and let it be just one day forward. So one day into future from current moment. This is just a simple example. We can name it add visit. This will be just one visit. You can use copy and paste approach if you need many. But of course it's better to organize some cycle to make it more efficient. So now let's Test how it works with just one visits first so we can save this process. And you should remember once you save the process with start signal and if your process is active so it's not disabled. Now you see it's active and this process will work each time you have new insert. Speaker 1 Let me show you go to realty section, try to copy data, save it, look at it. Now you see new visit was automatically added. Automatically added and visit date and time is somewhere in future. So you see that it works. We can make many visits as one operation. I will quickly make a cycle for you. This cycle will include parameter. I will use integer n parameter just to make kind of a cycle variable for me. Initial value it will be for example 3 so it will be variable which I will decrease one by one and I will use formula to decrease my cycle parameter. So I will save value to n and formula value will be N minus 1. Especially use spaces here because so tiny formulas are hard to read and having spaces will make it better and like more visual. Speaker 1 Monica and possibly Paddy, are you following me today? Should I make poses for you? Please confirm if everything is okay with speed of our solution. Thank you Monica. Okay Adrian. Okay? Yes, Adrian. Sorry, not Paddy. Adrian. Okay, just a formula which makes it easy and you see we can just decrease n by 1 and rahi thank you. Thank you. Great. So we have something like n equals n minus 1 in this formula, this very easy expression. But then we have to organize a cycle and we can use conditional flow going back to this stage. Now this is a sequence flow, but we can convert it with this change type button to conditional flow. Conditional flow will only work if a certain boolean condition is true. So I have to compose this condition. Speaker 1 ",
      "page": 256
    },
    {
      "title": "",
      "content": "This condition will include double click on n parameter then comparison greater than zero. So if this boolean expression is true, then my conditional flow will work and will be used here otherwise. So this is another sequence flow. I will turn it into default flow. Default flow has a difference, you see a small dash at the beginning. Default flow works as a else statement for an if operator or default statement for a switch operator which probably is better alternative. So default flow will work in case of no one from conditional flows executed. By the way, I made here a condition and also I can make a title for it and I encourage you to provide enough titles to make your process self explanatory to make it easy to understand. Speaker 1 So while n is greater than zero, we go back, we do one more insert and then we go back to this formula and decrease N Again here we have N equals to zero. This is just a title, but it will show us that it's the end. Here it will be like finish item. Okay? And as you can see, it's very easy process. And also we can just make it a bit more useful for us. So for date and time calculation, we add some number here and we can add n days. Double click. And now you see special macro for n parameter was added here. So first time we will add three days. Next time we will add two days, then one day and then we will finish the process. As you can see, we can make simple cycles in business processes. Save it. Speaker 1 Once I save it, this process is already actual. So I do not need to start it with a special button. Then I will go and check it again. For example, we have an apartment in Florida. We have no details, okay. And we can copy it some new save it. When saved, we can see its detailed data. And you see we have three days ahead, two days ahead. And tomorrow you see all three visits were added successfully and our process executed correctly. We can go to process log to see our recent execution. And also it's interesting to look at the cushion execution diagram. This diagram shows number of items, how many times this step was actually started. So you see we had three cycles here, cycle bodies, then we finished our execution. Speaker 1 So execution diagram sometimes may help you to understand how exactly your process started, how it worked. And this can be helpful if you go to process work details. You see we add visits, add parameter and again if we enable trace, then we will see all the values of the parameters at each step of our process. You can also see duration in milliseconds. And you can analyze and understand what is the slowest part of your process, what is the fastest part, where you spend the most of resources. Such things as duration can be really helpful to analyze overall performance. So it was very easy. Simple example of handling object event with the help of start signal. As you can see, it doesn't so take too much time. It's very easy and fast to develop. But we have quite simple three events and relatively low speed. Speaker 1 When I say about low speed, you see point two second. It means 200 millisecond for execution. It's probably not so much, but if you work with multiple records. If your task is to process data with as fast as possible way. So having such time spent on it probably will be not the perfect, not the best idea. So we have two more options of handling object events. Both of them require coding. And the second is object embedded process. Let me Explain what it is about. We will focus on objects. Now let's open so any object. We can open any object and you can see its events tab. Events. Now you see 13 supported events. So it's a lot. We have 13 different options to handle events. Speaker 1 And once you start to use it, for example before insert you see system generated some code, we can copy it. Then we can look at open process button. So it's important to mention that any creatio object has its own unique individual embedded process. This embedded process is designed only for one process purpose only to handle ",
      "page": 257
    },
    {
      "title": "",
      "content": "object events. The way how you can handle it includes using of events sub process using its start message item and we have to paste our code that we initially copied from this into this. Then you can use items like script tasks, formulas or user tasks. And the most commonly script tasks are used. And then you can connect your start message with this script task. In this script task you can also operate with embedded. Speaker 1 So with your current entity with its data row, you can use entity methods for it. But there is a very strong disadvantage of using this approach in general, and this disadvantage is quite serious. This type of event handling does not work in packages compiled as separate assembly, simply speaking for all. So for any modern package where this option is turned on in order to make fast compilation, your event handling with embedded process will not work. And it only works in old styled packages where you have no compiling into separate assembly. For example CRT base this package, as far as I remember is not compiled as separate assembly and we can look at its objects. For example, we can find the contact object. It's one of the best examples. Contact. It's not here. Okay, let me find where it is placed properly. Speaker 1 Crtui let's check or maybe base something. CRT core base package. Yes, CRT core base this one Contact object if we open it, as you remember Creature has open source for base product configuration. We can see events. We have some events settings here for our object and before insert, after insert, before delete, after delete and then we can go to open process to see examples of implementing it. So you see some examples of event sub process, start message then script task for execution of some useful logic and in many cases it's based on script tasks. Also you can see examples where we have some methods running and methods can be implemented in embedded process properties here and also as well as using of some additional usings. Where we have my usings it should be somewhere here I believe Parameters. Oh, usings are here. Speaker 1 Sorry, quite obvious. So methods include Decoration of the class fully and including methods that you need here. And the using can be also typed manually if you want. But this stuff works only in this package because we have CRT core base package which is not compiled a separate assembly. But if you want to develop such code, if you want to compile it, ULIPs experience quite big delays. So in general use of packages not compiled a separate assembly will make it hard for you because long compilation time. And you may ask me about. Okay, so if this powerful tool with 13 supported event does not work, so how we can use it? How we can handle object events efficiently and supporting all modern package features? Speaker 1 The answer is third answer is Object events layer the most, let's say the most modern and like the most recommended way to handle object events. It also still needs coding. So it means we will have a compiled code and it has a bit less events. Only eight supported events, but it is the most flexible and I will explain why. So now you will see this example. We need some documentation for this. This is about backend server side data operations and I need to find object events. Yes, some here somewhere here. Great. This is our article that you need to study if you want to understand better how this mechanism works. We have eight supported events and the definition is before and after insert, before and after update, date, before and after delete. Speaker 1 And also we have very interesting and unusual event called saving before and after save. But what is save? It's interesting that save was used in order to make the same handler if you want to organize the same logic for adding data and for updating data record. So saving is triggered in case of insert and in case of update. And here we can see the exact order of execution. Saving, inserting, then actual add of data is performed in database, then inserted and saved. So that's how order of execution events is performed. Sara tells that has to leave and will be finished ",
      "page": 258
    },
    {
      "title": "",
      "content": "later. Thank you very much, Sara. Sorry for making my sessions a bit longer than expected. Possibly we had to plan it to run for 2.5 hours. Okay, Sara, thank you very much for your time. Have a good. Have a good Tuesday. Speaker 1 Thank you. So here we have a set of events for creating record, set of events for updating and obviously for delete. Thank you, thank you. So eight supported events and I told you that it's very flexible. So why it is flexible, I will try to explain. In previous examples we had to create a process which starts by signals or we had to make changes in object if you want to add some event handling. But in this case in this third way of event handling, I call it Object event layer or Object events or entity events. So in this approach we can create our own class which will not require any changes of the object that we plan to listen. So we will just specify object code and that will be enough for our class to operate normally. Speaker 1 So we can listen any existing system object, no matter how far it is developed inside of our package hierarchy. This approach does not care about package dependencies at all. The only condition for it to work is presence of corresponding object at our environment. And this is a C code that can be designed with the help of special item called C source code. So we will use this tool, we will use professional integration with Visual Studio and I will show you how we can make event handling with it. It will not take too much time. For those of you who do not really like to program in C Sharp, this will be a bit boring, but I will try to make it fast and you will see business results right now. Speaker 1 And it's important to mention that this kind of event handling will be performed as well at server side. So no matter how technically this insert will happen. Like we add data from user interface page or we add data with the help of business process, or we add data with the help of API calls, processing it at server side will trigger this event handling. So this event handling is inevitable for server side and there is no way how you can suppress such event processing. So it's quite reliable and that's why it is suitable to perform server side validation. Let me explain some business sense of it. Let's imagine our task is to make some limitation on data input. For example, we will have a very big price for our realty and we will put some very immense number here. Speaker 1 So okay, it's not correct too much. Yeah, you see we have some limitation here. Okay, what about this? Okay, looks good. So here you see our commission, our huge price with 9000 of three dawns. So okay, very big price and system still allows us to save it. So we want to limit this value. We want to make some server side limitation and we don't want to save such big prices in our system because it's obvious mistake. So I will show you how to make server side validation with the help of entity events. Let's go. So according to the manual, by the way, I did not share the link with you object business process. Oh, already shared. Okay, so according to the manual we have to make a C Sharp source code and implement the this kind of text there. Speaker 1 So let's do this, select our package add source code. This is a special type of item which is designed to provide a pure source of a C Sharp which we can develop inside of creature. Or we can create it separately using powerful external editors. But creating of C source should be done from this editor. Adrian is asking when do we use the server side validation instead of client side? This is a great question, Adrian. Server side validation is much more reliable because client side validation is only working when you operate with the page. You remember our client side validation does not allow us to put negative prices like this. So it will not allow us to save it. But it can be easily bypassed. So for example, you can make a business process which will do this. Speaker 1 ",
      "page": 259
    },
    {
      "title": "",
      "content": "Or we can make a hack now trying to edit data in our list utilizing our editable list features. And when you see that if we have no any event handling and we did not care about the handle, by the way, we don't have any no code options so far to make a custom handling of list edit events. So now you see we easily bypassed this. So I just wanted to say that client side validation is good, but it's not perfect. You can use bypass with list edit. You can use a bit more complicated approach with business process that you can run and it will not follow client validation. Or even more, you can use API call to insert new data and it will also do not use client side validation. So client side is not reliable. Speaker 1 This is only for page and it's limited on the page. So if data comes some other way not from your page. So your validation will not work if you do it in client side. Server side is much more reliable. It will work anytime when entity data model is used. No matter if it's used from ui, from API call from a business process. So it will work anytime when you use data model. So let's go back to our C sources. We have to create it. I selected a package add C sharp source code and that's how I get this tab. It makes sense to provide better friendly name here. Let's say it will be named USR realty events. So my code for this configurable item will be realty events. Speaker 1 I'm too lazy to compose a different title, so I will make the same title because it's technical thing. No one will be selecting it from any list. So let it be my package no description because I'm lazy again. And we have this example now you see all we have here is list. So just small set of properties and no localizable string and here we will have C Sharp code here. Of course we can type it in this editor, but it's not so powerful, not so quick and it will not display highlight some errors, syntax and other stuff. So I will show you powerful integration with Visual Studio if you work on local on site environment. Of course, if you work in cloud conditions, you will have to type your code here. And Rakhi is asking, oh, have to leave. Okay, thank you, Rakhi. Speaker 1 We will finish probably in 10 minutes, so it's not so hard. Thank you for your time. You will watch videos. So I will show you how to integrate it with Visual Studio because it's much more efficient than typing your code manually here. So we can save our new created source code schema source code item into our package. Physically it saves it on disk, so we can see it on disk. And of course we can also see it in our configuration in our package. This is our new item. This is a fully server side view feature. So it includes C sharp code and it's necessary to compile if you want to see how it works. Let's go to file system and check it out. So let's go to our package, then go to schemas and then we have to find realty events. Speaker 1 That's why having a friendly name is important because it will be good looking at our disk and also at our version control. So here we see some bit of metadata. We do not care about it too much, but a real T events CS file. It's a pure C Sharp code that we can develop into and we can develop with Visual Studio. So let me show you how to use Visual Studio for this. We still have to run it as administrator if you want to debug. We can close previously opened files. Probably we can close automatically generated solution, close solution. So no solutions at all. Then I will show you how we can use Visual Studio for efficient development. I also need to show you some file system settings that we have thanks to Creature. Speaker 1 So inside of a package folder we have files and we have csproj file. This project file was generated by creatio. It has several sections of libraries with references which makes it possible to add the custom libraries if you want to include them into this project. But the most important is that this csproj file is used to get your compiled library of ",
      "page": 260
    },
    {
      "title": "",
      "content": "your package. So what you need to know that all necessary for your Visual Studio to run and to work with your code is already created by creation by its own. So I will use Visual Studio file open project. Then I have to carefully select corresponding folder. As you can see, my previously opened projects were in D5. I go to D1 Webep, there's of configuration pkg. Then I will find my realty folder for my package files. Speaker 1 And then I have to open this C Sharp project file CSProj open it. Studio will think for a couple of seconds, but it will be still very quick. And if you want to do the same with a package which is not compiled as separate assembly, you have to look at special part in terms of configuration. SLN solution. This is a very big solution, includes more than several thousands of C files. So it will take couple of minutes for Visual Studio to digest all of its sources to understand everything all the references. And it will be possible for you to use it for development of C Sharp sources in case if you operate with the package that is not compiled a separate assembly. But in our case, luckily we use this option. And that's why opening this project is quite easy and quick thing. Speaker 1 So if we can find this C sharp file C sharp code of course, I already created an example, it will not take too much time. Entity event listener so my code is ready. I only have to copy it for you into chat. You'll be able to download chat messages along with video files. And I will use the same code into my own. I need to tell you that here we have full features traditionally supported by visual studio like IntelliSense using for example, like this Terrasoft. Sorry, you see in Auto IntelliSense you see autocomplete, you see system highlights text and you see that when I type something with mistakes, it will immediately show error messages. It will show that we have something wrong in our text. It will highlight this text and tell us that we have something missing. Speaker 1 So this is quite powerful editor with intellisense and Autocomplete we have to perform a class with couple of usings and inside of some namespace. There is a tradition to keep your configuration code into terrasoft configuration namespace. But in general you can decide yourself and you can create and support your own namespaces if you want. So here we have terracelot configuration just because of tradition using some system namespaces. And what is the most important here is how we decode declare our class. This class for listening of object events must be inherited from base entity event listener and also this class must be decorated with entity event listener C sharp attribute special part of C sharp code which sets additional properties to our class. And this property includes schema name parameter. That's how system will understand what Exact object you plan to listen. Speaker 1 So this line number seven is very important because it shows what object we plan to listen. Very important. We can easily make a mistake here. If we do, then nothing will happen and we will have no listening at all. You have to specify name of existing object here. Okay, then we have from one to eight supported methods that are virtual overridden methods over base class. So we have to make public override void and then provide corresponding method name. We have article explaining all supported methods here you can see and in my case I plan to make it a bit more interesting and useful. So I plan to use on saving event which will work in case of insert and in case of update. As this is an ing event, saving it will happen before insert and before update of record. Speaker 1 According to our documentation we have some arguments here and for before events we have reference to our data record which is an instance of an entity class and also we have some before arguments. Such arguments are quite interesting and important. We can check out what are the values there and you will see that inside of traditional properties we have is validation enabled boolean property key value which is ID of selected record which is currently being processed and also we have is cancelled property we which helps to organize graceful reject of execution of our event. And if you want to make it gracefully without any notes for end user you can just enable is cancel true and ",
      "page": 261
    },
    {
      "title": "",
      "content": "your event will not happen. But this approach has a disadvantage and this silence which user will notice probably is not self explanatory for the caller side. Speaker 1 So for example, if user tries to add new data and provides too big price then system says okay, no error messages. But when user will start to check it will turn out that corresponding record was not inserted or updated. So this silence sometimes is not so desired and we can make our operation like with some noise and it will be quite rude loud noise with throwing exception. So we can compose message text and put some data there and then throw an exception to make our message code dependent from language. We can use localizable strings. So let's save our code and we need to use localizable strings here. This will be also example for you and then we can go back to C sharp source code. Speaker 1 We already saved our code, open it from embedded editor and we can create localizable strings and our code is values too big. We use this localizable code and our localizable text message is here. Prices more than certain limit are not allowed. This text helps us to get localizable string from properties of this schema. Then we use String format to replace some pattern with a certain number with a certain string and then we show this message for user. As result, this throwing exception will finally make an error 500 at server side. So it will be internal server error. That's why I say it's quite loud and rude behavior. But it works. So it's very practical for our case. User tries to do something, gets error message, gets error text and everything is quite clear. Speaker 1 And user will see that operation was not done and there is a reason why it failed. So we will see this error message. Okay, sorry, not ready. Just a second. It okay, so we can save our C sharp source code. We did not change any line here with embedded editor and as you can see it works well. So we can use the same item with internal editor or you can use the same item with external editor. It asks us to reload. Okay, no problem. So we can reload it, we can save it, no problem. As you can see, it's up to you how you can, how you prefer to work with it. So finally we must make sure that everything was saved and then we go back to our application and start to compile code. Speaker 1 We can compile our package the first time we have to manually to do this our package and compile action compilation takes some time and first time probably it will take maybe 30 or 40 seconds. Next time for the same package it may take just 10 or 20 seconds. So it's quite good performance and it will be way faster than compile all of your system. So now you can see it probably took 30 or 40 seconds to compile and it finished with no mistakes, no errors. And you see that this compilation finished with no errors and we can check how it works. Once we created and successfully compiled such C Sharp source code, it automatically becomes active and will work with any kind of insert. Let's try to copy this big price as one more time data. Let's say two. Speaker 1 So we have definitely greater than 1 billion. So our logic, our comparison condition here checks. I did not explain how it works actually. So sender is an argument object. We can run some parent implementation of the same handler if necessary. If present, then we can turn our sender into entity. This is important to make possible running of entity methods for our data argument. Then we try to get price value. Our column is named USR price USD. Let me check to make sure that it's correct. Realty columns price USD yes, it's correct, no problem. So it's correct operation to read price. Then if price is greater than 1 billion we do throw in messages. If not greater, then it's okay, we do nothing. So it works like server side validation for us. And now I expect that system will not show me. Speaker 1 ",
      "page": 262
    },
    {
      "title": "",
      "content": "So it will show me some error message now because can also enable browser developer console control shift I in order to make so and go to network tab in order to see all text or requests that will happen here. So this value is definitely greater than 1 billion. So let's try to create new record. Now you see that insert failed prices more than 1 billion are not allowed. And you see that insert query finally finished with error 500 internal server error. Quite rude mistake from a server side when you perform your business logic. So it's like a crash, but it's okay, it's effective crash for us. We see some response, we see error message. It's quite obvious. And client side also was capable to handle such error. And when we try to do this, as you can see, we see error message. Speaker 1 Everything is quite obvious that something is wrong. So we can fix our data. Let's make it not so big like this. When we save it's okay. And you see that insert query now executed successfully. We have no troubles. We have data at our database and everything looks quite well for us. Existing data will be not. Will be not. So we can try to update it. Okay, let's try to update it with an edit page. So like slightly less clear save. We still have troubles. Prices cannot be allowed. Okay, cancel close. Now let's make trick make an update using list like this Clear. Try to save. As you can see, still favor because it's server side. Server side is efficient. And you see we still have error message. We have error description, prices are not allowed. Speaker 1 So you see we cancel such attempt only if we will edit it in a value that is below our limit. Then we can save it and update will work normally. Data is processed normally and it works efficiently. The same business logic will work in case if insert is performed from business process or if insert is performed with the help of API calls. We will study API calls and integration techniques. A bit later you will see possibilities for it and we will check again that this validation is quite reliable and works for any kind of insert or update attempts. Okay, that was the third option for our event handling. So we already finished with the creating examples of handling events. And if you have any questions for today, please ask me. I will finalize my today's session. Speaker 1 Save everything to file system because we had changes at our localizable strings business processes. So save everything and then committed to version control. Thank you very much for your time. Our session is over. In case if you have any questions, feel free to ask. You will receive video recording as usual. So our session is over. Thank you very much. See you tomorrow and goodbye. ",
      "page": 263
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number eight of our development on Creature Platform Guided Learning and we will continue to work with server side features and functionality. So today we will focus on the web services, making our own classes at creation server side and make it work at the web service, write C Sharp code and practice with calling of web services from Creature client side and from third party applications. So today is quite big plan. I hope we will have enough time for this. So possibly we will spend a bit more than two hours. I will try to squeeze it into our today's session. So what about web services and why we need it? In general, web services are server side items that we can easily call from client side with the help of HTTP queries. Speaker 1 So when you look at your network tab, for example, when you open any record page, you see plenty of different web service requests, different HTTP calls that were executed from server side. So from client side to the server side with different request body with different responses and in general all our website operation is set of different queries, different HTTP requests and then getting some responses at client side. Creature has a lot of embedded out of the box web services. Some of them are system web services, some of them are developed at configuration. And we can create our own web services if necessary. So we can do some certain functionality. And it will be much more efficient than to do the same functionality at client side. Because client side is less safe, it's less powerful. Not so fast as server side. Speaker 1 So client side definitely is not the place where you would like to perform some sensitive data operations or calculations. So server side is a very natural place to do some complicated business logic like doing some calculations, data processing, file processing and so on. So web services can be created in configuration and if you're interested you can look at existing examples. If you search for C Sharp sources that contain the word service in their name or title condition is contains. Okay, you will see a lot of examples. You can randomly select any item and you will see some C code inside. So the reason why we have so many web services is need to have and to run different functionality at server side. Speaker 1 Usually it's written in C Sharp and today I plan to explain how you can create your own web service, how you can make it run and how it can be useful for you. So we have a lot of existing examples, but the most important you need to remember that web service is a special piece of functionality that was specially designed to be called from client side. And this piece of functionality usually has no own user interface. It can only be called with the help Of HTTP queries like this, you can see examples of HTTP query. Here you can see request URL request method type, you can see some payload which means data parameters, you can see some response and so on. Speaker 1 So in general web service is something that we can call from client side which works at server side, usually gets some argument data, usually returns some result data and also makes some useful work etc. Side and that's why we need it. So it's a very common functionality to use to run different business logic. We have a lot of standard based platform web services like web services to get data like this one. This web service is called data service. We have a lot of other web services like file API services, like system setting services and a lot of other services. So probably hundreds of them. And also creation configuration offers us possibility to build our own web service to provide our own server side functionality that can be called from client side. And it doesn't matter which kind of client side you are using. ",
      "page": 264
    },
    {
      "title": "",
      "content": "Speaker 1 Is it a freedom user interface or if it's a classic UI so you can use web services? Absolutely the same because server side is on the single item and requests and payload and response data will be parsed and will be processed absolutely the same way. So we will study how to make our own web services. I also want to mention that web service can be used with a third party applications. So this is a tool of other system may call some functionality at creation ask and may probably transfer some arguments and then get some results. So we will study how to do this and before we continue I recommend you a couple of very useful examples. As you can see, we have plenty of examples here in base configuration. Speaker 1 If you randomly select then you probably will face unnecessary complex examples which will be hard to use it for training purpose for your study. So that's why I recommend you to use couple of very useful and simple examples. First one is a cryptographic service located in CRT base package. So it's a base platform item and it will be found in any creatio system. So you can find it at any environment, you can open it to see its code. So physically this is a C sharp source code item piece of code written in C and then to be compiled inside of a package or inside of an application. By the way, it's interesting, CRT base seems to be a package that is not compiled as separate assembly. Yes. Speaker 1 So it means that contents of this package will be compiled in all terasoft configuration sln and you will have terse of configuration DLL as A result. Okay, so this is a simple C Sharp code as I told you at the beginning, just expected but that creation developer has some experience in C, in JavaScript and also in SQL scripting. So here your C Sharp knowledge will be requested to be important. So physically what we have here we have a class which is declared in the C sharp module. We have set of usings and also namespace decoration. There is a tradition to put your custom classes into terrasoft configuration namespace but you can also make your own namespace and put your logic there. So it will work absolutely the same. Speaker 1 We use set of standard base platform and system namespaces that are necessary to declare our class to use some of functions that we need inside of it. And mainly all these stuff is made possible thanks to system service model namespace and I need to say that creatio uses. NET framework backed tools to create web services based on WCF Windows Communication foundation web services. So there are several conditions how we can make such a WCF web service. We have to declare a class. In our case it's recommended, strongly recommended to inherit it from base service. I will explain it a bit later why this is so recommended. But generally you have to create a class and decorate it with a special C sharp attribute, service contract attribute and ASP NET compatibility requirements attribute. Speaker 1 And then inside of this class you should make at least one method to turn it into endpoint something that we can call and this endpoint must be decorated method. This method must be decorated with operation contract attribute and some additional web invoke attribute. All such rules how to make it were delivered from WCF so it was not invented by creative developers. We just used WCF based approach for making creation web services. So when we have such class decorated with attributes, when you have at least one method decorated with corresponding attributes, when we compile our package or when we compile our full creation solution system will make DLL based on it and also it will host so it will register endpoints and it will host our web service at our website. Speaker 1 ",
      "page": 265
    },
    {
      "title": "",
      "content": "So after compilation this web service will be fully operational and it will be ready for calls that will be done from client side. It could be done from creation client side or even from third party applications client side. We will demonstrate how you can use it. So I will show you so the main reason why we need web services is to make some functionality that can be easily called from client side of creature page or from client side of third party application. So we can also use it for integration purpose. Okay, let's look Closer how in general it works, we can create at least one method decorated with attributes, and it makes sense to organize some kind of attributes that will be passed into this method and get some results back. Speaker 1 Also we will have some business logic functionality that also can include access to database, operating with some files, running other web services and so on. So we can use some useful method body. But in general you should expect that web service method can get some optional parameters, can return some results. If your data type of arguments and results if display the type is simple and standard like string, decimal, integer, guid or boolean or something like this, which is very easy for creation, to decode, to parse, then you need no additional settings and the system will be capable to run such a service and you will be able to transfer such relatively simple parameters as arguments or get result data. Speaker 1 But it can happen that you will need more complicated arguments like structures like instance of classes, objects and so on, and you may need to return some complex responses and complex result data. As example, you can see when we run some query at our creation list page, you see some request and response which usually includes a lot of properties, a lot of different values. Definitely for such complicated request body, we need some classes and we need to organize it in more or less structured way. And also response usually includes a lot of additional subordinate properties, values and so on. So it's also important to have a corresponding data types. So in case if you transport as arguments or get as results complex data arguments, you need some additional classes to let WCF know how to de serialize of arguments and serialize of results. Speaker 1 Why I'm saying about serializing because server side will be a dll, a library with a runtime code which will be capable to operate with some data with a certain data type. When client side calls a web service, it usually packs so parses, maybe encodes your arguments into a string. Here you can see an example of a big JSON string. So when server side receives such string, it must know how to convert the string into an instance of a class. And this procedure is called deserialization or deserializing, which means getting a string and then convert it into a class instance. This deserializing should be done according to some class information, and that's why we need definition of the class which was used to transfer this data. Speaker 1 The same task will happen when server side already finished execution of a method and needs to return some data. So server side returned data also represents some class with some properties, and then it's necessary to serialize it back into a string because originally HTTP query will transport some string for you as result. So serializing and deserializing is important part of any web service call. And in case if your data is complex so system will fail to deserialize it without additional information, you should use special classes such as data classes. Let me show you another example. So let's remember first one is cryptographic service which I recommend you to look at as a very simple and very useful template for your own services. And one more, a bit more complicated data. No, no, no. Visa data service, we need to look at all packages. Speaker 1 Visa data service web service is a good example of a web service which is designed to get some arguments and ",
      "page": 266
    },
    {
      "title": "",
      "content": "return some results using complex data type. In this example, Request options is a complex argument that is provided as an argument for your method. So we need to find corresponding class somewhere here. This class is called request options and you can see that in case if you need to transfer complex data arguments, you must create such a data type such class for your data transfer and you must decorate it with data contract C sharp attribute for a class and data member C sharp attribute for all fields or properties that you plan to serialize that you plan actually to transport. So this is example of much more complicated arguments for your data transfer. Speaker 1 And if you need it, so you have a lot of examples how to do this. You have samples in Creature, you can easily open it and find it. So don't forget about this Visa data service a bit more complicated example, so it will really work well for you. Why you need such examples? Because it's really hard to remember all necessary settings and implement it just by your memory in next example. So decorating a class with such attributes, decorating methods with such attributes, it's quite hard to remember. So I prefer when I need to create my own new web service, I prefer just to copy and paste some pieces from this example. It works well and it saves your time. So I think it's one of the most efficient ways to create your own web services. Speaker 1 Now I will show you how to make our own web service. How to use Visual Studio for its development, to make it more efficient and to make possible development of complicated functionality with a powerful editor. So let's do our own example and also later I will show you how to run it from Creature side, from Freedom ui, from Classic UI and also from third party application like post one. Let's go to our Freedom UI package and our creation of a web service starts with making of a new C source code item. We can create it only from embedded editor. So we select our package add source code. When doing it makes sense to provide some good looking friendly name because this name will also appear at file system, it will travel to version control. Speaker 1 So having this name well spelled is a good idea in general. So let's call it realty service and we can make the same title for this source code item saving our package no description and just apply. So as you already remember from yesterday example with handling object events, C source code item is just a big set. So it's just a code part of a C module and possibly you can also add some localizable strings into it. So we can put our code here if you work in cloud conditions or I just put some sample code if I work in my local environment. I have to save this item because we need to properly organize and make this item saved before running of Visual Studio to make our development. And now I need to explain you some business sense of it. Speaker 1 So my plan is to create a web service that will work at server side and will be capable to calculate maximum price of reality objects filtering them by type and offering type. This is important because it's not good idea to mix apartments, houses, parkings and so on. And also it's a good idea to filter by offer type because it's definitely not correct to mix rentals and sales. So the business sense of my web service will be to do some database calculations to do some operation with database. And also it will work as a good example for you how you can use alternative ways to operate with data without use of object model. So let's move on. Here is our C item. Some dummy code is here. No localizable string so far. Okay, great. Speaker 1 We can as you can see we have a star here which means not all the items were fully saved on disk. So let's do this. Download packages to file system. This usually is a safe action. It helps us to get all things right at the database. Now you still see this star. So sometimes you will get this star. But it's it doesn't show that something is really missing on your disk. So sometimes we have scenarios where this star doesn't disappear. But in general everything is okay with our data and all the stuff was saved on disk. Let me show you what you can see on disk now. So we go ",
      "page": 267
    },
    {
      "title": "",
      "content": "to our app folder test of the web test of configuration pkg. Then we go to realty package folder schemas realty service. Now you will see some metadata files. Speaker 1 I strongly recommend you not to modify Anything manually here and C sharp file which we will fill in now with the right good looking code. As usual I prefer to use local environment advantage and one of them is use of file system and use of external editors. So we can use Microsoft Visual Studio. I'm using Community Edition to operate with this code using external powerful editor. And previously we worked with realty events. Now we have one more item here, so possibly it will be updated quite soon. Now you see some realty service code and it's just not set properly. Okay, so let's do something here. As you remember from yesterday's session, here we have full support of intellisense autocomplete and you can put using system service model and so on. Speaker 1 I already have an example which implements all this logic and that's why probably it makes sense to do it faster. So let me show you. Here is my example of code. It's too big to fit into one zoom message in chat. So we try to fix it in two messages. Okay, this one and another is this. Okay, good. So now if you want you can get it from chat message. So I will put it into my C sharp code when I develop using Visual Studio. Finally I must save my changes otherwise creation will not see it and will not include it into our compilation. What is inside here? This example was originally made based on cryptographic service example. So I copied this part from it. And of course we have our own name for the class. My class is named realty service. Speaker 1 There is a tradition of creature developers to name classes which represent web services with the help of service suffix. So if you do something when you develop C sharp class for the service of it will be do something service. And it's quite common tradition. You may find a lot of examples in base product logic. So we made a class realty service and inherit it from special base service class. I need to tell you a couple of boring sentences about why we need to inherit from base service and generally the most important reason. So let's go and use Visual Studio tools to help us to understand what web service is. So we can click here you can see decompiled sources of base service class because its namespace is telesoft web common provided as a dll. So actually we don't have original services of this cloud. Speaker 1 But thanks to decompilation features of Visual Studio we can see some code from it at least interface part of it. And it has a lot of useful things. And the most important I think is property that is named user connection. Let me show You a lot of libraries abstract class service. Yes, this one the most important property, user connection. So user connection is a reference to a class that keeps context of our current user session and current user connection to the database. As you remember, user connection is used always when you operate with the database and it's used in many other places where you have to provide some current user credentials data and the current user session information. So if you make your own web service without inheritance of base service, you have to get this user connection, for example from HTTP context yourself. Speaker 1 Let me show you here you can see examples. So we have HTTP context usually like this, and this works only for. NET framework version. But also this code and this application may run in. NET core conditions in for example Linux operating system. So for Linux there is another way of getting user connection. And this base service class helps us to hide all this complexity of getting user connection reference and we just use it as a property. So you can see examples here. This property User connection is inherited from base service and you feel no troubles. So use of base service is strongly recommended, especially if you plan to make your solution that will be portable, so it will be transportable and compatible with. NET core version on Linux. So inheriting from base service is strongly ",
      "page": 268
    },
    {
      "title": "",
      "content": "recommended. We have also other useful properties. Speaker 1 But now you should remember that inheriting from base service helps to get user connection and helps to get it initialized properly. When your method started, your user connection property of your class will be already initialized. This is important also. Next, what you can see here is a strange interface named iReadonly session state. This makes sense only for Windows and doesn't makes any difference for Linux. And this is a marker interface, which means it has no methods, but it tells to the IIS that your web service has no code inside that changes session state variables. And if your code does not change such session state variables, it means that IIS can afford running your methods simultaneously utilizing multi thread support, utilizing multi core CPU and generally making your web service calls processed much faster. Speaker 1 So in general, declaring of support of this interface costs you nothing because you have no methods to implement for it. But it tells IIS that it can process your web service calls with the fastest possible way. So in general it is a good result for high load conditions and for situations when you have performance issues at IIS because of multiple calls or the same service and not so fast processing inside of these calls and just for better performance. Okay, so I recommend you to use it. And if you are curious, you can also find how many times let's go and make some research. We look at all terrace of configuration folder and for the beginning we can search to find any not any all files that include service contract attributes. Speaker 1 So now I'm searching through C files which include service contract attribute and I will find approximately 200 web services created out of the box in creatio based studio product. Okay, 157 files and possibly a bit more web services inside because one file may include more than one web service, but in general. Okay, so 157. Now let's search for I read only session state interface usage. So now we find only 54 places where this interface was used. In general it is recommended to be used for any windows based creation web service. And you see that each time when developers modify some code, when they improve existing web services, when they rewrite such code, reorganize it, refactor it, they usually add such interface declaring declaration into code and that why from time to time the number of such items is increasing from release to release. Speaker 1 Okay, so this is only for better performance. What we have inside we have some method, but probably I have to start with this. This is a simple method which is just gets no argument, returns some string and is organized as a web service method because of operation contract attribute. So it tells to WCF that we have to turn this method into endpoint and register it at our website. And we have setting get HTTP method the easiest possible way to call a web service. So we will be able to run this web service from an browser address bar. The reason why we do this is to make sure that our service is normally hosted, is normally operational. So our compilation was successful and no troubles with server side. So this method is only to check availability of our class and our web service in general. Speaker 1 You can create a lot of other methods in your class and some of them maybe will be decorated with operation contract. If method is decorated with operation contract it will turn into endpoint. If it's if you have just a single method which has no decoration, it means that it will be just a regular method that can be called by other methods, but not by HTTP query, not an endpoint which is registered at our web server. So as you can see, creating of web services in WCF is not so technically complex, especially if you understand how to write C sharp code. So in my example I have two methods. ",
      "page": 269
    },
    {
      "title": "",
      "content": "Speaker 1 One of them is very easy get example so this is just an example of a method which will return us okay string and if it, if we get it means that our web service is present Normally compiled and fully operational, this method get max price by type id. So I decided to name this method like this will go to the database and search for realty records with corresponding type offer type and also I plan to make it more universal and to call my service from different sections. That's why I need to transfer my source table which I plan to use for my calculations. So for Freedom UI section my source table will be USR Realty and for classic UI example I will have USR realty Classic. So different source tables, but very similar columns, similar conditions and filters. Speaker 1 And that's why I will use the same selection statement to work with different tables inside of my code. At the beginning it makes sense to make a very simple check of our arguments and if any of them is empty then we will return minus one. So we will do nothing. By the way, we return decimal result and we get three string arguments. So we use only standard data types, which means we will have no problems with serializing and deserializing and we do not need any additional data contract class in case if you have more complicated scenario, of course it makes sense to use data contract and so you may pass much more parameters properties and you can easily extend such structures. Speaker 1 Okay, we have several arguments, we check it out if they are empty or not and then I will show you another approach to get data. Previously you probably remember we used entity schema query approach to get data. Let me show you business processes and calculate an average realty price. It was couple of days before and we used this code and we used entity schema query class to make data selection and then we processed it with for each statement and we used entity data model here because as a result we get collection of entity class instances where we have special columns with data values and we can get such values from each data row. So this approach with support of data model worked for us and it respected column names, it respected columns lookups and joins and access rights restrictions and so on. Speaker 1 Now I will show you another approach to operate with data which will not use data model at all. So this is alternative approach to operate with data, but of course we need to know source table name. Here entity name is used as table name at the database. Of course we need to know exact column names and also for lookups you need to remember that at database Corresponding columns have id suffix, but @ your object level such columns have no ID suffix. Let me explain what I'm talking about. Let's go to objects, find our reality freedom UI object and let's Take a look at type column. Now all the columns will be loaded here. USR type this is a lookup column named USR type based on the reality type lookup. And we have a dropdown list here. Speaker 1 And as you can see, no ID suffix at column code. But when you go to the database. Let's go and check our database D1 you can make filter for tables contains USR. Now we'll have just a little set of tables USR realty columns. Now you will see the type column as suffix id and you may also notice such suffix ID for offer type, for city, for country and even for created by ID and modified by id. So for any lookup column in your object here system creates corresponding GUID column at the database table. But let me show you. You see that at the database table it always adds ID to column name. So it's kind of creature architecture. It's not likely that it will be changed in future. So you may rely on it. Speaker 1 ",
      "page": 270
    },
    {
      "title": "",
      "content": "And you should expect exactly the same data columns of your tables. And in general, when you operate with database like this, you must go to the database physically to see corresponding table, corresponding columns, just to make sure that all your columns that you work with are present and so they represent what you expect from them. Okay, my case I'm using direct database operation with select statement. It's also possible to use insert, update, delete and even stored procedure classes which will operate with the database directly without use of object model. And the best way how you can study how to use such classes is I think searching for existing examples. Let me show you how you can do this. You need to use some tool that will help you to find out files at file system. You can use Visual Studio code. Speaker 1 You can use Visual Studio or Total Commander. Or in my case I'm using far manager tool inside of JSoft Web folder, maybe even inside of JSOP configuration. We can use search for all C files where we have for example new select class usage. We will find more than 200 of examples, maybe even 300 examples, almost 300 examples. And there are a lot of different so randomly selecting them a lot of different examples. How you can create such class instance, how you can set it up, how you can use it and finally get result data from it. Let's look at another random example, maybe not so perfect. Here you see creating of a select example from where it's possible to use hints. It's possible to use different operators like group by like having. Speaker 1 And sometimes you will notice that use of direct database approach gives you More flexibility and more powerful tools than using just entity support and using entity schema clearer method. So depending on your task you can choose proper tool. And this select class works a bit faster because it doesn't include entity data model, it doesn't create corresponding instances for working with entities, and in general it consumes less memory. And I think it will work a bit faster than entity schema query. So we have a lot of examples of select class usage. I'd like you to see one of the best examples. I think this one it's I canonic iconic examples. So here you can create class instance. Then you already finish with settings and filters. Speaker 1 And also it's important to mention you create class instance and then in order to set it up you use different methods like top method, column method, maybe many times from method makes to run it one time where method is equal method and a lot of others. So finally running such methods will configure your class to read corresponding columns from corresponding tables. You can use joins, you can use different conditions and types of filters. And finally you will have select class. You also have to turn it back to select type and then you can use it for data selection. Data selection must be performed in two steps. First you need to ensure DB connection physically. Speaker 1 It means get one of the three database connection threads from thread pool from connection pool because connection to database is pooled and you have like set of available threads for it. Then you take it and this is DB executor reference and then you run your select statement with the chosen DB executor and finally you will get data reader. This data reader holds your data and offers you possibility to process it row by row. And you can run its read method to get next line of data. And you can use get column value method to collect corresponding result values from your result data collection row. In case if you have many rows you can use while or if statement or something else which will organize your cycle. Speaker 1 So while read returns you true, you can try to get some data and you can put it somewhere in order to analyze in future. So this tool is helpful to get data selection with many columns, as many data rows. And also you may notice some strange things here and here. Normally C code correctly operates with data allocates and releases memory ",
      "page": 271
    },
    {
      "title": "",
      "content": "with the help of garbage collector. But here as you can see, developers do not trust into garbage collection. The reason is when you run ensuredb connection or when you run execute reader, some subordinate functions are executed which are implemented in visual C and they implemented as a non managed code. Simply speaking Attempt to get some data from the database, runs some code that is part of Microsoft SQL Server client software written in non managed way. Speaker 1 And that's how that's why you need to handle memory yourself. So when this method was executed, some memory was allocated and in order to properly release it you need to dispose created class instance, you need to dispose the STB executor or you need to use special using operator which will do this dispose automatically when this code finishes its work. So you need to correctly dispose memory from ensuredb connection and also connect dispose memory after executing reader. If you will not follow such recommendations, your code will be compiled and working almost normally, but in high load conditions. Especially in high load conditions when there are many calls of the same logic in short period of time, you will notice so called memory leakage. This leakage will look like enormous memory consumption in your system resources. Speaker 1 So now you see 1 gigabyte, so 900 megabyte it's more or less okay, but you may see much more memory up to all of your available virtual memory and one it will come to a certain limit. IIS will suddenly restart your website and you will not know why this happens. So it will be very unusual for you. And the reason is that non allocated so not disposed memory will be leaked and so you have no way how to fix it until you will make this using operator protection. So you may find a lot of examples where creature developers do exec ensure the connection and supporting it with using operators. This is mandatory. If you do not follow this you will have memory leakage. And this works well for selections of some number of columns and number of rows. Speaker 1 But in my example you may notice that we don't have using protection, we just use execute scalar method which is a generic method and it accepts expected data type of our result. And execute scalar is useful in case if you plan to read only one data row and you expect to read only one column value there. So execute scalar returns you first row and first value of the first column that you select. In my case, running this aggregate function guarantees that I will have just one data row having only one column in my columns selection list is obvious and I will get only one column as a result. And that's why execute scalar is perfect for such scenarios. All necessary protection to using to use using for two methods for data selection is already performed inside of execute scour. Speaker 1 You can try to see it would possible to decode scalar async probably no, but let's see, you see decompiled stuff DB executor you see using yes so first using is already used here ensure special DB executor then internal execute scanner sync probably here failover execute and somewhere so you probably may find another using here in this decompiled code. But you can just trust me that execute scalar performs all code correct operation with memory so you do not need to handle and to care here with additional protection. Finally it returns your expected data type value. In my case this is decimal and this is our maximum price from some records where type equals certain argument and offer type also equals to another certain argument. So this is quite simple data selection procedure which makes one single SQL query and runs our data selection. Speaker 1 So my example here is not only how to organize your web service, but it's also how to operate with the database and how to use alternative data selection approach with some data that we expect to get and return. I try to make it simple without need to collect many data records with many data columns inside of it. If you want you can find more examples in these variation sources and make more complex calculations. This example just shows you general ",
      "page": 272
    },
    {
      "title": "",
      "content": "approach and you can see we have user connection as argument thanks to base service class. Speaker 1 We get this user connection as a property and this property is ready for use when at the moment when our method is called so WCF and our base service class makes all that is necessary to initialize user connection at the moment when our customer runs this HTTP post method. By the way, we used post because it's very common for creation. You may find that for example we can search for all sources where we have just get method information. We will find probably 50, 15 or 16 places including ours. So 15 base product places where a get method is used like this so you can see not so many. We have 150 plus examples and only 15 base product examples. And when we will search for the post example, you'll find more than 150 examples. Speaker 1 Because this is very traditional, very typical, difficult to create for creation to use post. It offers us quite comfortable way to handle data. You can serialize almost anything as a post request body. So post request data, that's why it is so comfortable and also it's well protected. It's better protected with security settings. Again if we compare it with get, I will explain and you will see it later. So post is very typical and okay, when we finished we can just save it. All the code samples are available for you so we can save this code. As you remember, configuration must be performed inside of creation so our code is Ready we can just check that column are the same as we expect to get it. And let's go back to our app and select our package. Speaker 1 We can also see our recent reality service item. It has all this code already, so it was loaded from the file system and we can compile it. Compiling package makes collection of all of its sources including automatically generated items and like process code. If process includes C sharp tasks and then it performs compilation of our CS proj C sharp project. So this one, this C sharp project will be compiled. We have several compilable stuff here. We have set of assemblies used in this project and that's why we can compile it normally without any error messages. And in general this compilation was quite fast. But in your case probably you will face some additional difficulties mainly caused by lack of assemblies, lack of some references or just incorrect code which operates with classes which were not mentioned in usings. Speaker 1 So in my case compilation was successful. And in case if you have compilation error, you will see a big error page with information about lines of code, type of the error and you will be able to look at it. Even after you close this page, you will have a special button in this list compilation error. So developers tried their best to support you. And if you have some troubles, you will be able to look at the list of your troubles in order to fix it. So once our web service was successfully compiled, it is already hosted at our application server and we can easily check it out. So we can check with get example method that our service is present. Let me show you how we can do this. We can use our browser to run get HTTP queries easily. Speaker 1 We need to get our browser URL copy go to separate tab paste. So this is my web server address including zero application alias. This zero is very important. Let me remind when we registered our application our website at creation at iis. So I have a structure of default website which uses port number 80. Then I register at my D1 Studio app this one. This is part of URL. And then we have zero application alias for main application part which is physically saved in chiras or the web folio. So this zero is very important. You will face it almost everywhere when you combine when you compose your URLs for creation. So this zero is pointing to main application part of creation platform. If you run creation on Linux, you will not see this 0 on Linux. ",
      "page": 273
    },
    {
      "title": "",
      "content": "Speaker 1 In net core we have all the stuff placed in one root folder. So it's a bit different, but all creature configuration will work absolutely the same. So we have functions that Return main application URL and for Linux it also returns everything correctly. So don't worry if you write something and run it on Windows there is a very high chance but it will also normally work on Linux. Okay, so let's move on. We have this main web server part of URL including zero application alias. What's next? We have to use special word that is used for automatic registering of all our configuration endpoints. So this word is rest. Okay, rest. Then we have some standard how creatio registers all our endpoints and it uses class name. Let's go to studio find our class name copy paste so we use 0rest/reality service/method name. Speaker 1 If you use URI template your method name may be different. I mean your code URI will be different. But in my case it's very simple. I will just use this get example method name. I'm lucky to have no arguments here so my query will be not so hard to do. I will copy this URL for you so you can also practice and check it out how it works and let's move on. Let's check also enabling browser developer console going to network tab clearing all the console. So let's see how it works. I press enter now you see that my get example was successful. 200 means successful execution. Here is my full request URL I have some request headers, I have some response parameters and here is you see my response JSON string returned some data. It looks like everything is okay. Speaker 1 So this is a very easy and quite practical way to check availability of your web service. For example, if you have compilation issue your web service will not be hosted at creation web server and your query like this will return you 404not found. So it will show you that there is no registered web service with this address. So in my case it looks good and it was get query which is very easy to get from your browser. But our main working query is a post query and we have to make a special steps to do this from our creation page let's make a five or seven minutes break. So just a quick. I hope to make it quick. I understand some of you have other plans after the finishing of the session. Speaker 1 So let's make a 7 minutes coffee break and then we will move on with calls of our web service. We will make call of web service from creature page and also I will show you to make how to make it from Freedom UI page, from classic UI page and from third party applications. In case if you have questions please type in your chat and we'll answer so let's make a quick break right now. So today, now our task will be to call creature service from our client side page. How we can do this? You already probably guessed that we will have to write some code. Unfortunately we still don't have no code options to call a web service. Like we start a process for example. So possibly we will have something like this in future. Speaker 1 And now we have to write some code at our creature client side in our browser JavaScript in our browser page JavaScript part. So let me show you. I already had all of the examples. It will not take too much time today. So I will show you how we can call the web service from creation client side. Of course we need to go to our page code. Let's go to edit page and then we can open its code. Also I can show you faster way to open source code and save and open it. Or you can go to client module. In my case it's a real T form page. You go to this right part, this actions three dot button. And then we have open source code action. I think it's more practical and faster than to do like this. Speaker 1 But okay, I will recover closed page. This one go to front page. Okay, this one. Let me show you what we need first. So we need first some button that will start our code and then we will implement it. So that's why I recovered this page first. Let's go to our actions menu. We already have one item here, so we can create another one. Another ",
      "page": 274
    },
    {
      "title": "",
      "content": "menu item. This menu item will include calculate max price and the action could be just some random action that we need temporary here because we will replace it with our own programmed method. Programmed handler. Let's use data, let's use icon. Let's do some. Some we can use some kind of things. Okay, let's take this one. So we will use it for calculations and element code. Okay, let's call it max price menu item and confirm. Speaker 1 So and then we have to save this. Our menu item will appear in actions menu and then we go to its code part. So let's go to open source code. You can close this editor so not to accidentally resave anything. Let's search for our max price item. And as you can see, this is somewhere like number 116. So here we have our menu item in view config div area. And we will just remember this line 116 because we need it a bit later. So let's collapse view config div, your model configuration. Collapse everything. Now we will make one More handler in our code, so please be careful. I put comma and I plan to paste here an example of handler for my calculation Example of a web service call work from Freedom ui. Example run web service in Freedom ui. Speaker 1 So this code will be quite big. I will copy it into parts for you. But first of all let's pay attention on the definition of our module. I copied it for you, so you'll be able to reproduce the same in this line where we define our module, we started to request one more additional module named Creature Dev Kit command. This module is kind of utility set of tools which includes a lot of useful things including HTTP service. So we requested this module to be created in our dependency modules list. So our require GS framework will first look at this array, find this array item, create its instance, return it as an argument when our factory function will be called. So we can call it SDK as we did it here, so we call it SDK here. Speaker 1 And if you forget about line number one here, your next code samples will not work because you have no these utility modules. Okay, we have this SDK now and it's time to implement our handler for our menu item. I will copy and paste it in parts for you because Zoom has limitations on size of code that is possible. So size of chat messages. Okay, three parts. And then of course I will copy it fully into my handlers area here. Taking care about commas, taking care about syntax. If you do some kind of syntax mistakes like this, you will immediately see this parsing error. So please be careful, avoid such errors and provide correct indentation. Don't forget about any brace here. And now I have to explain how it will work. So this is one more handler in my handlers array. Speaker 1 And this handler has its own request property. So it's like handler name. And you see, there is a tradition to name your own custom handlers with usr Prefix and base product handlers are usually provided with crt. Okay, we can name it as we wish. Then we have a handler implementation asynchronous function. So this function finally makes some useful code for us. And first of all we do some console output just to make sure that our button so our menu item normally worked. Then we have to compose some arguments to call our web service. And the main idea is we select a page which already has type value and offer type. So if we selected for example, apartments for sale, we have this type value and offer type. That's what we need to run our web service. Speaker 1 So we plan to get type from our page, but when we operate with it, we will get an object in JavaScript. This object will include several properties and if we need ID of selected data record we will look at value property. If you need to look at display text of a lookup value like this apartment, you have to operate with display value property of this object obtained from a lookup column. I also need to make sure that I'm using correct names here. Let's go to view model config search for type and now we see this attribute name. I will collapse unnecessary parts so you will easily see what we have here. So we need to look here. ",
      "page": 275
    },
    {
      "title": "",
      "content": "Speaker 1 Type represents this attribute name so I have to copy it, find my handler and paste it this one so PDS usr type and there is a unique name for this attribute. So that's how we will get with await operator we will get our type lookup value which represents an object and if this object is not empty so it includes something then we will try to get value property in case if it's empty we will keep it clear so we will not use it. The same with offer type. Let's go and find offer type attribute copy paste and we get offer type. If it's not empty we get its value. This is important to get corresponding arguments for type and for offer type that is required for our webshop. Speaker 1 Now we will use our dev kit library in order to get HTTP client service out of it so we can ask SDK to create one and that's how we get this JavaScript class instance in our code. We have to combine and collect correct viewers URL for our web service. I'm using Terasoft base product client side JavaScript framework. It's a core framework, you cannot change it easily and it has some functions to provide web service. Base URL so we have this base URL then we combine path in order to get rest then class name then method name. By the way my method name is called where is my visual studio here My method main is called get max price by type id I have to fix it. Speaker 1 I have to fix it in my code here get max price by type id so it was mistake because I renamed this method recently and finally my endpoint URL will be combination of the base URL/method name slash this rest like template part then class name then method name. Okay great, my endpoint is ready and here you can see some example of brick of my endpoint. I will name it better here something like this. Okay, now we have to prepare parameters and perform sending of an HTTP post query we have params. This is a JavaScript object with several properties and it's very important. Property names must match your web service method parameter names. Reality type ID here must match this offer type ID here must match this and entity name here matches with this. Speaker 1 And also I have to fix my code because this one already changed its name so my object is named usr reality. Okay, this is important part and parameters will be passed as a part of our request HTTP request body. So parameters will be encoded into a stream and thanks to this SDK library it will be done by this method post method, not by us. So we just wait for getresponse running post method. If you need to run get method you will have a get instead of post here. Endpoint is a URL and params is a JavaScript object with parameters. Now you can see we have an asynchronous call here. It actually includes two parts. Sending a request, then waiting for some time and then getting response. So physically it may take some time, like 30 or 50 or hundreds of milliseconds. Speaker 1 So you should understand that even if it looks like easy thing and line by line execution, physically it is asynchronous call which means we send request, then browser waits, then we get some response. Okay, we got response object which is a JavaScript object instance. We can look at its properties. This object will have a body property and then we'll have property name the same as our method name + result suffix get max price by type id result so this is our max price response and when we finish we just continue normal execution of potential other handlers with this typical return. So I had to make fixes in my video and such fixes were not down in the code in our chat. So please take care and modify this code accordingly to the video. Speaker 1 If you plan to perform your own examples of the same then we have to save this carefully because if you have mistakes of course you will see it doesn't work. And also let's remember about our your request name and return ",
      "page": 276
    },
    {
      "title": "",
      "content": "back to line number 115 or something like this. Let's go. Here we have our menu item, our action item and we have clicked event with the request name. Originally we set it to some random save request, but of course we will replace it with our own code. So I will highlight it in our chat. So don't forget about this. We need to organize running of our handler by manual changes in our diff view config diff array. This is responsible part, so please be careful. Please don't accidentally Remove any breakage, any comma or something like this. So please be careful. Speaker 1 And then we can save it. Great. Everything saved correctly. We can close this editor. Probably can just close and open the page. So now we have apartment for sale. That will be argument and let's try to find our action calculating max price. Go to network and clear all previous history. So now let's check how it will work for us. It looks like status 200 means it was collected correctly. Web service runs and returns our maximum price for apartments for sale. Okay, let's see network tab details. This is our request properties. This is full URL was created correctly. We have some request headers, response headers. Our request payload physically was a string, but we can parse it into look at it a bit more comfortably. So here we have all the parameters that were sent as arguments. Speaker 1 Then we have response with some number correctly calculated by our server side and returned and some timing information. Now you see it's quite fast execution. So it took only 31 milliseconds to run. It's very good speed. Okay, let's look at another example. We have a lot of apartments for maybe houses for sale. Let's search for random house and calculate max price. Now you see it's calculated correctly. We return the data. This is our max price returned by our system. And let's check out what was the paywall, what is the response? So here we have our response date. We can check it out if we go to our main list and sort by price. Yes, it looks like 99999 millions. Yes, it's okay. This is our max price according to current data. So it looks like correct calculation. Speaker 1 So our Freedom UI page calculation worked well. In case if you have any questions, please ask. I'll be happy to answer. Now I want you to see the same call how it can be done in Classic ui. Some of you probably will do some Classic UI customizations. So you may need to know how to do some simple programming steps. In classic programming page, let's go to our edit page in Classic ui. But it turns because of our migration into Freedom UI page. So okay, we can try to temporary switch all our user interface into Classic ui. So use Freedom UI interface. Open it, turn off, save, close, log out, log in. Now we see background in Classic UI we go to classic section. We open edit page and it's also classic. Great. Speaker 1 So now I will show you how to program some buttons in Classic ui. Go to view and open section wizard. So this is an alternative of what you get used to work with edit page in Freedom ui. So open Section wizard from this edit page will open as an editor for a button. Unfortunately you can't easily add a button using this page. So in Classic UI we have a lot of limitations according to controls used on the page and we will have to use code part for it. Okay, we can go to code part. Here we have Classic UI code. We need to look at default array and add one more button there. Adrian, question possibility of web service returns Is it possible to call a third party app that returns base 64 and how to handle? Yes. Speaker 1 So in case if you want to call third party application from Creature. So Creature will initialize this call and do it. It's even possible to make it no code solution for this. We will study it a bit later. Probably tomorrow I will show you how to make integration with third party apps and how to call third party web services. This is a bit separate from our today topic because today we create our own web services and call it from client side. Third party web services is better to call from creature server side. So you will see it's quite comfortable. Okay, I'm trying to make a button in my Classic ui. So here you see diff array which represents set of items and each item looks like definition of one control ",
      "page": 277
    },
    {
      "title": "",
      "content": "on the page. In my case I have name price area. Price area. Speaker 1 You see this is area and somewhere here just nearby I plan to put some code for a button I need to steal some button definition from Academy. So so I will show you how you can find it. Go to guides. By the way, our training ladies will write next. So current 813 release highlights with a video that will be released in a week. So you will see some news and it will be so probably interesting for those who keep an eye on evolution of Creature tools capabilities. So now we go to development front. Oh no. Platform customization Classic UI page button examples So I will find some simple button to the page and I need to copy piece of code which represents button properties ",
      "page": 278
    },
    {
      "title": "because it's really hard to remember them. So I just copy this part paste it into my code.",
      "content": "Speaker 1 Of course I will have to fix it. I will have to make it look correct. So comma is missing here. Here's my button definition and I. Oh, I have to exclude unnecessary stuff here. And yeah it looks like I have a lot of extra things copied. So this one is proper piece of code that I need to copy insert current name. So I will do it quite fast because probably you should not focus so Much on quisecure this will be just an example. So my parent name will be the same as for nearby fields because I want to put it nearby to area and values will include location and size settings in layout and here layout means position and size columns. So this is 012 column two for area. Here you see row two. Speaker 1 Then I will have row three because I want to put it a bit below Parent name is the same button. We can call it Run web service button. It will be our button name button title button caption should be localizable string. This editor does not allow me to do this. Okay, red color always enabled so I will do it always enable it. I will have to rename this on run web service button click I will have to make a method for it and the localizable strings should be managed in its editor. Okay, so I will do it a bit later. This is our button. It will have a red color. It will have some caption item type name. Okay, I hope I have no. Now you will see this button representation here. Go back to section wizard and save. Speaker 1 Probably it was not the best idea because I need to implement method for the button. I also need to make my in my classic package. I also need to make localizable string for the page. So let's make localizable string. I called my button action could be run service okay and try to save. Do we have any troubles with localizable strings? In previous versions we had okay, my button caption is okay, go to div in order to search for my new button here. I expect it to be present somewhere here and caption should be like this My button caption okay, great Method or click Run service button click. We have to implement in methods collection so usually you do it like this function and then we have some function body. Now I plan to get examples of running web service in client side. Speaker 1 So here is my own run web service button click. Okay, and also I need to have a callback function here. So we have two methods and that will fix it. Okay, so when I need to do this is my method name. I use it for a button and method is in classic UI it's easier way to call some functionality because it just implements some function in your JavaScript object. We will get type column and get its value. If it's not empty, we'll get offer type and get its value. We'll compose parameters. Let's check our entity name. It's called reality Classic. Yes, looks good. And we can run our web service run our method name let's check this method name. Get Max Price by type ID. Okay, great. Speaker 1 And we need to provide callback method to accept our result because in Classic UI we don't have so fancy stuff like ",
      "page": 278
    },
    {
      "title": "",
      "content": "await. And so it's because of the tools used here. So your JavaScript of course will run Await normally. But the tool that we use to call service expects to get this callback function and parameters should be executed. By the way, this tool is called Service Helper and we must ask for this module Service Helper and get its reference here. So this is also an important part in Classic ui. This is my set of methods for you in Classic ui. And this is a divide or a button. Oh, probably I should care about index, but okay, so it was already saved Item type originally was button but when ",
      "page": 279
    },
    {
      "title": "Section wizard saved it replaced with just a number.",
      "content": "Speaker 1 So it's a value of that enumeration item that we found in our article. So item type. This one turned to be a constant, which means five by the way, you can also study your client side framework. So you can just do terasoft. Then you see a lot of properties like item. Let's see how it looks like View item type. Sorry View item type. Then you see a list of approximately 30 different options here. So it means items available for Classic UI pages. In my case I used button. So looks like everything is ready. And this is how we use special utility module. It helps us with calling of web services. We have two steps, call service which means send request and provide response callback function. And when response will come, this callback function will be called. Speaker 1 That's how we will do some console output and show us returned data. Okay, finally we can save it. In Classic UI we have to constantly think of browser cache. So we have to reload the page in order to fight with cache. Now we have houses for sale. Okay, let's make a copy cheaper one. So we have two houses for sale in our database in Classic ui. Let's open. Now you see a button. Okay. Okay, let's check how it works. And the web service is the same, but we have different tables to calculate. So let's try. Our call was successful. You see maximum price was calculated. And also you can see history. You see request URL 200 it was a post query. We have payload. This is our request body. And we have response. And also it's timing. Timing is quite fast. 21 milliseconds. Speaker 1 So perfect time. Very good speed. Okay, great. We're almost done. And now we already practiced with Sending of queries from client side. But you may notice so we only worked with Creature client side. It's also possible to call same queries from third party apps. Let's go back to Freedom ui. We have better data there. System settings, put it on your interface, enable it, save, log out, log in. So I plan to show you how we can use third party app to perform such web service calls. As example, I will use Postman app. I already installed Postman app on my own and maybe you'll be interested also in some alternatives. Postman is a very helpful and useful and very like handy software. I have a collection of different tools which also work for the same purpose. Speaker 1 Postman is on first position but we have Thunder client. You may use Advanced Rest client, Rest, Wet Insomnia and a lot of other names. The recent one was Mako Kuhn and Talent API Tester. Or you can use hard code old tools like Fiddler Swap UI or Wireshark. So it's up to you what to use. Postman is one of the best from them. And no, no, don't upgrade now. So I need to show you. Let's close all existing. Don't say close all tabs. Okay. Don't save. Okay. Here is Postman app which is designed to test. To test queries, to test web service requests. We can try to run it so we can create new post query and we can take all the parameters we need it. For example, let's make calculation of the ",
      "page": 279
    },
    {
      "title": "most expensive apartment for sale. So we go there network.",
      "content": "Speaker 1 Try to run this button here. We can steal all necessary parameters. So this is our request URL. Okay, copy it, go to Postman, paste it here carefully. So this is our request URL. Great. This is a post query. Great. Body should be row JSON. Okay. And we will provide request body value, payload, view source so we can copy all of this and paste it into our Postman beautify a bit just to make it good looking view of what we're trying to do. And then we have originally no cookies and let's try to run this query. We will see what happens. Obviously creation server side will reject such ",
      "page": 279
    },
    {
      "title": "",
      "content": "executions because it means that we are trying to run some business functionality without any credentials. So trying to run it anonymously of course. Course rejected and unauthorized error 401. Speaker 1 Now you need to know that if you want to call Creature Services from third party apps, you have to pass authentication. Creature has different ways of authentication. Now let's go to our documentation about integration topics. We have authentication articles, basics and overview. So we have different authentication types. The most practical are forms authentication based on cookies or OAuth version 2 authentication based on application name or client name and client secret. I will show you forms authentication because it's out of the box and it doesn't require any other secret special settings. Any other preparation for my system? If interested how to make OAuth version 2 authentication, you can read corresponding articles. So here you will see all necessary data and I will show you forms authentication forms. Authentication is based on running a special web service. Let me show you examples and this one. Speaker 1 No, no, no. I need to reference for our service. So we need to run special web service providing request body with our name and password. As a result, we will have set of authentication cookies. And such cookies will include necessary data that will work like a temporary ticket. So for us to operate with creature. So in order to run this business logic query, we must provide special cookies. Originally we don't have such cookies and we will get it with the help of authentication query. So let me show you how we get how we make authentication query. This should be a post query. According to the article, we must use our web server address, service model or service login. Okay, Copy this ",
      "page": 280
    },
    {
      "title": "part here and then take our address without 0als because we work with root folder.",
      "content": "Speaker 1 So what we have here, this is our web server address. This is our root folder pass to our web service. Let me show you this. My is my web server folder service model O service. You see some definition of this web service class and some technical information from it. So this is in root part of our application. We have to provide body row JSON and we have to make this body with two properties. Okay, we can copy it from here. Username should be our name. We want to use and password like this. Okay. No special headers. Only body is required here. So let's try to run it. First of all, I would try to run with incorrect password. You will See error message. SO200 here, but error message code 1 invalid username or password. Okay. Speaker 1 And obviously we will not get full set of cookies. So we are getting only just one temporary cookie, which is not enough, of course. Okay, let's provide correct value. Now you see 200, which is okay. No error messages in response. And four cookies obtained. Only four? It's strange. I expected five cookies here. Let me think. What is missing? Oh, it was missing USR name. Okay. It's not. Not so. Not so difficult. Okay, we have four cookies. Normally it's five cookies, but probably something changed. The most important are BPM CSRF and aspx auth. Okay, so we have some set of cookies which will be working as a temporary tickets. Such cookies will work not forever, it will work just within our user session inside of having such cookies we can run query using postman. Speaker 1 In this query we already have set of cookies thanks to postman sharing cookies with the same sites. And then we can run our query. And it looks like we have one more error 403. But this time this error is not because of authentication. This is because of additional protection from CSRF attacks. If you have time you can find what is CSRF attack? It's a cross site request forgery special type of attack where a hacker may use current user session credentials and ask a user to run specific code which will turn into some change that was intended by hacker. So use of current user session in order to do some malicious functions across site request forgery. So we have special protection for it for this type of attacks. ",
      "page": 280
    },
    {
      "title": "",
      "content": "Speaker 1 And in order to run post queries you have to make a header in post query named BPM CSRF and the value for this header must match the same cookie BPM csrf. So I take cookie value carefully put it to value of our BPM CSRF header and in this case my calculation is correct. Response is 200 and I have some response data. So now I successfully called creation method from third party app from my Postman application. That's how you can do this. And also you probably will be interested to know that this session initialized by Postman is not forever and it has sliding expiration. We have default timeout for user sessions. Let me show you. It's about some session data information. So we almost finished for today. And let's go to system settings, I can show you Timeout user session timeout. Speaker 1 And you see original value was 60, which means 60 minutes 1 hour. I've already changed this timeout to 600 which means 10 hours. The maximum value here is 720 which means 12 hours and minimum value is 10, which means 10 minutes. So this is user session timeout. If you run any query within this timeout, then your session will be extended. So creature has sliding expiration of such cookies. And simply speaking, if you run queries too often, so often enough like every 10 minutes or every 20 minutes, you will have everlasting session. So your session will never die in practice. In real practice, such sessions will be finished if you do nothing for some time. Speaker 1 So in case if you plan to do some integration, of course first you will do authentication, then you Will do some integration steps and also you can check how it goes and you can check current user sessions. If you go to system users, find your user, go to access rules detail, then sort by start of the session. Now you see two different sessions initialized by our supervisor user. And one is browser based by our Chrome, another is made by Postman. Both sessions are active. Now you can close such sessions if you want. That's how you can track history of your users. And in general you can see this history also in database if you will do something like this sys user session. Speaker 1 So if you do something like this in your database, you will see all user sessions created initialized by any user in your system. And you will see session end date, session start date. You can calculate how long your users were working, who worked and who did not work in your system. So this may be really helpful for you. And you see we have different session end methods. Session end means the way how system finished to your session. And we have like log out scenario, we have timeout scenario. And you see different stories here, different history. Okay, at the end of today's session, I wanted to mention that it's also possible to make your own web services which will not require authentication at all. Such web services are called anonymous services, but you should be very careful implementing them. Speaker 1 Because anonymous web service is simply a back door or kind of place which could be utilized by anyone without any credentials. So potentially making it possible to do some kind of DDoS attack on your website. So generally it's not safe. You can read more data about anonymous web services at our documentation. So let me find it in backend web services examples Anonymous subservice so anonymous web service is similar to traditional one, but it has one difference in the code. You will have no user connection, but thanks to inheriting from base service you will have app connection. And also it's possible to get system user connection from it. So anyway, application has its own embedded system user session which is created actually by user who is specified into special system settings and the system operations. User System operations user system setting. Speaker 1 ",
      "page": 281
    },
    {
      "title": "",
      "content": "By default it's supervisor, but you can change and this user will be used for this Background Started and created user session used only for system purpose and running anonymous services is also based on this approach. So if interested in running anonymous web services, here is the article. And the difference is that you have to check out do you have user connection or not? If not, you can take app connection system user connection instead and then you can do all the same operations as you planned. Speaker 1 But in order to implement anonymous web service, you have to perform a lot of changes in file system, which is not a problem if you deploy your anonymous service at on site environment, where you have access to file system, but which will be a trouble if you deploy it in cloud conditions, because you simply cannot modify such files in cloud. You only can provide manual for support team and ask them, hey guys, please, I need to deploy anonymous web service at cloud environment. Could you help me and provide them all the necessary manuals for your web service to be deployed at cloud conditions. And as you can see, a lot of steps here. So it requires manual for support team, what exactly you plan to save, what file to modify. Speaker 1 And you may know that we have already a lot of base product anonymous services. You can find it inner web config file. Let me show you Inner it means inside of terrasoftware web config search for allowed locations. And you'll be surprised how many anonymous web services we already have on board. More than 30 items that could be called without authentication. So you see, when you run anonymous web service, you should not provide any authentication cookies and it will work for you even without any authentication. But potentially this makes a threat for you, because anyone can run such queries and anyone can use such endpoints to make some kind of DOS attacks denial of service, running it too often. So please be careful with making your own anonymous services. Speaker 1 And I will just show you a quick example of a web service which may work anonymously. The biggest difference is this. If you have user connection, you can just get it. If not, you can get it from app connection, system, user connection. That's how you use this user connection obtained with this code and can just copy it for you. So if you ever need it, you'll know what to do. And then you work with the same query, but using user connection obtained with this example. Okay, that's all for today. Thank you very much for your time. We already finished the questions with making our own web services, running it anonymously, making postman queries. And tomorrow we will continue with data exchange tools with integrations with coding of third party web services. So thank you for your time today. Speaker 1 Dimitri, I have one question, if that's possible. Yes, yes, please. It is a bit off topic, but we have an opportunity where we can also leverage the business to business portal users. And we would actually like to apply row level security. Is that possible? No, sure. We already have cloud powerful security tools in creation. We just did not cover it because it's something that is described and discussed at Customization course. So we have roles, we have users. And you can see list of users here you can create your own users, you can provide different role permissions. So everything is just out of the box here. We do not need to program specially things for it. Is it what you asked before or something? And also not if they are not allowed to see each other's data or is it still? Speaker 1 It's possible, but I would not recommend you to make such strict restrictions because your end users usually work as a team. And if one created a customer, someone else may need to look at it. But in general it's possible if you plan to implement couple of competitive teams or competitive users, so they should not see data from each other. It's ",
      "page": 282
    },
    {
      "title": "",
      "content": "possible to implement with the help of default record level permissions. You can find it here and object permissions. Then you can select corresponding entity like real T. You can enable record level permissions. And it's possible to make situation when first user creates some record. And obviously first user can see this record, but other users will not be able to see this record. If necessary, you can do this only in case if users have single user privilege, administrators will see data anyway. Speaker 1 So they will see all the data. Okay, that's clear. Let's try that. Thank you. Yes. And also Adrian was asking about business processes and call web service and to put our web service inside. Oh, in case if you run call web service. So it was designed to run third party web services. Let me show you. We had our own examples. And when you use call web service item, it is designed to run third party web services. We will study how to do this tomorrow. If you need to run your own service, you can write some code at client side. Or technically you can use code web service for your own web service. But in case, in this case you have to take care about all necessary things like authentication, passing cookies, passing parameters. Speaker 1 And in my practice we had successful examples where two different creation systems were communicating with each other using no code call web service tool. So it's possible. And what's the difference between implementing a button handler and launching web service from business process? There is a big difference. Because core web service is designed to run third party systems, third party endpoints, you can use it for your own, but you will have to provide too many technical parameters so the same number of settings that you will do it from client side. Also I need to mention, which is not obvious, that when we run our web service methods for creature web service from client side, we did not care about authentication. The reason Was we already have all necessary cookies in our browser in client side. Let me show you. Speaker 1 So let's look at our call again. Now you see this query, but if you look at headers part you will see that we have cookies. So this is our cookies parameter and such cookies were provided by our browser because we are running our creation page in a browser that was authenticated to work with this website. Browser supports all queries made from client side with cookies. And that's why our queries were executed without any error messages related to security. So we had cookies in our client side when we call any query. So for example, when you do some simple step like reward data, you see select query was performed. You see also cookie was passed from browser side and that's why we have no any issues with running the same query from the same page. Speaker 1 If we will steal all this data and try to make it from another browser without cookies, of course it will fail. And it was shown by postman, we will have 401. So Adrian, is it clear what we're talking? Okay Adrian, thank you very much. Thanks all of you for today. Attention. We will see each other tomorrow. Tomorrow we will talk about integrations. I will show you examples of onboard protocols supported by Creation, odata and data service. You will see how you can use it for integration with third party apps. And also we will practice with scope of web service and we will do ",
      "page": 283
    },
    {
      "title": "some calls to third party apps without programming using no code tools.",
      "content": "Speaker 1 At the end of tomorrow session I'm going to show you Clio tool, explain why you need it, how you can do some system maintenance with it and how you can organize delivery with help of Clio. So thank you for your time today and see you tomorrow. Please prepare questions because we will have Thursday and Friday sessions. You have chance to ask your questions related to development organizing or architecture of Croatia. I'll be happy to answer. So tomorrow we will work with integration tools and on Friday we will prepare for the developer action. Thank you very much for your time. See you tomorrow. ",
      "page": 283
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number four of our development on Creature Platform Guided learning set of practical sessions that we do for developing different features and functionality that requires some programming on Creature Platform and previously we finished with building our own section named Realty and we managed to set up List View, we managed to make a form page for it, we also added some default values and we. Speaker 2 Made some required fields and it was. Speaker 1 Pretty much easy and we used only. Speaker 2 No code customization tools for this. Speaker 1 Also we managed to make a button which had a custom handler. Speaker 2 So we made a button push me button and this custom handler shows some console output. We can also display some pop up. Speaker 1 Messages and also we can do any kind of JavaScript code behind this button. Today I will show you a bit. Speaker 2 More complicated examples of how you can. ",
      "page": 284
    },
    {
      "title": "",
      "content": "Speaker 1 Do some programming and coding and also we will discuss debugging. So you will see how it's possible to stop execution of your code and. Speaker 2 Make it executed line by line. Speaker 1 By line and to see all the. Speaker 2 Variables and to see all the conditions. Speaker 1 So so to make something that you probably get used to do when you operate with any like modern version, modern. Speaker 2 Development environment like Visual Studio or other so today question today's session I would. Speaker 1 Like to warm up with Simple Question. Speaker 2 ",
      "page": 285
    },
    {
      "title": "Which is about organizing of your sections. It's probably not so obvious so I.",
      "content": "Speaker 1 Will tell you all apps it's like Synthetic Workplace which includes all registered sections in one list. ",
      "page": 285
    },
    {
      "title": "",
      "content": "Speaker 2 We have Studio out of the box. Speaker 1 Workplace, we have customer360 because it's a result of loaded contacts and accounts. Speaker 2 So our loaded customer360 app also caused creation of new Workplace. Such workplaces also can be created, you can manage them and you can put your sections into it. You can also create data items for workplaces if you want to transport them between environments. Speaker 1 I would like to show you something. Speaker 2 That I think will be useful. It's about organizing of Workplace for your users and for my developer purpose it will be quite often when we will. Speaker 1 ",
      "page": 286
    },
    {
      "title": "Need to switch between our created section.",
      "content": "Speaker 2 ",
      "page": 286
    },
    {
      "title": "And some system sections like Process library, process logs or lookups and system settings.",
      "content": "Speaker 1 So I plan simply to put my new Created Reality section into this Studio Workplace. That will be very easy, but I need to demonstrate it. To show how you can do this, go to Settings. Speaker 2 ",
      "page": 286
    },
    {
      "title": "",
      "content": "Then find Workplace Setup. Workplace Setup helps us to create new workplace or to manage existing workplaces. As you can see, some workplaces are. Speaker 1 Present but not shown even if we are administrators. Speaker 2 So that it's very interesting because it's one of not so many places where. Speaker 1 User permissions Are still matter when we run system under administrator privilege. Speaker 2 So now you can see I see only four workplaces. Speaker 1 But in total it looks like we. Speaker 2 Have at least 5. And productivity workplace seems to not showing anything and not having any permission settings. Speaker 1 So that's probably why we are not seeing it. Okay, let's go to studio workplace. Speaker 2 ",
      "page": 287
    },
    {
      "title": "",
      "content": "We have set of sections for a workplace. Also it will be interesting for you to know that sections have positions. Speaker 1 ",
      "page": 288
    },
    {
      "title": "Let me show you columns set up for sections list. We can arrange and add the position column.",
      "content": "Speaker 2 Now you will understand why I display this position. Any section in a workplace has its position and position ",
      "page": 288
    },
    {
      "title": "organizes order. So it is used to specify order of sections in a workplace.",
      "content": "Speaker 1 ",
      "page": 288
    },
    {
      "title": "If we rearrange such items such sections.",
      "content": "Speaker 2 ",
      "page": 288
    },
    {
      "title": "Position will be changed. And finally your sections will be displayed in a different order.",
      "content": "Speaker 1 Sometimes this order is not so consistent. Speaker 2 You see UI management and message templates, they have the same position. Speaker 1 And sometimes UI management will be on top. Speaker 2 Sometimes message templates will be on top. Speaker 1 ",
      "page": 288
    },
    {
      "title": "",
      "content": "Depending on how data will be loaded at a certain time. Because sorting by this position it makes some ambitious result. Okay, so what I plan to do. Speaker 2 I plan to add one more section in the list system will show me only sections that are not listed here. And it's ",
      "page": 289
    },
    {
      "title": "interesting to see here that we have couple of accounts section.",
      "content": "Speaker 1 It's very unusual. Speaker 2 Couple of calls and couple of contacts. One of the possible explanation why we. Speaker 1 ",
      "page": 289
    },
    {
      "title": "Have two different account section is that.",
      "content": "Speaker 2 ",
      "page": 289
    },
    {
      "title": "One of them is section for Classic.",
      "content": "Speaker 1 ",
      "page": 289
    },
    {
      "title": "Ui, another is Freedom UI section. We can also display columns here which.",
      "content": "Speaker 2 Will let you understand what we are looking at. Speaker 1 So we can just squeeze a bit title display e.g. Speaker 2 ",
      "page": 289
    },
    {
      "title": "",
      "content": "Created on column save column settings. Speaker 1 Now when we try to add you. Speaker 2 Will see title, you will see created on and one of them is 19, another is 24. Speaker 1 And it looks like first one is classic UI, second one which is younger. Speaker 2 This is freedom UI. Speaker 1 So that's how you can detect which one is necessary for you to add. Speaker 2 In my case, I plan to find realty section created recently and we can see it at the end of this list. You see, its position is also not so consistent. Speaker 1 But it guarantees that it will be at the end. Speaker 2 But it's not so comfortable to see this item at the very end of this list. So possibly we would like to move it upper. ",
      "page": 290
    },
    {
      "title": "",
      "content": "Speaker 1 So let's go to do this. Speaker 2 You can move it even on the first top position. Unfortunately we cannot move it upper than home. And if you don't really like, we can suppress this home page for a workplace. You can see homepage you can clear. Speaker 1 It if you want and realty will be position zero. So when we save it we can. Speaker 2 Also reward this page. Speaker 1 ",
      "page": 291
    },
    {
      "title": "Probably we will see our reality section.",
      "content": "Speaker 2 Directly at Studio Workplace at zero position. But it's also important to say that other items were changed so they changed. Speaker 1 Their position because reality shifted them. Speaker 2 So if we want to transport such change, we must make a corresponding data item. Speaker 1 Or we can use help of data binding tool. ",
      "page": 291
    },
    {
      "title": "",
      "content": "Speaker 2 This data binding tool helps us to. Speaker 1 ",
      "page": 292
    },
    {
      "title": "Remember positions of O sections here and we can just click Bind Workplace, specify.",
      "content": "Speaker 2 Target package and click save. Then we can see what was created. It was three different data items. One of them is sysworkplace studio. It doesn't really necessary because this workplace is already present at our system. Speaker 1 And when we for example try to. Speaker 2 Actualize data and save it, we will. Speaker 1 See warning and this warning will tell us that such Studio Workplace was already. Speaker 2 Registered somewhere in parent package. Speaker 1 And even more it was registered one more time in another parent package. Speaker 2 ",
      "page": 292
    },
    {
      "title": "",
      "content": "But it's not a big mistake. So it's not a mistake at all. This is warning that tells us that. Speaker 1 Such data is already present somewhere in parent packages data items. So maybe we are doing it. So something that is unnecessary, but let it be. You can save it this warning, but. Speaker 2 It'S not a mistake. Another one is sys module in Workplace. This is a system table which keeps information about ",
      "page": 293
    },
    {
      "title": "section which is called module and workplace.",
      "content": "Speaker 1 ",
      "page": 293
    },
    {
      "title": "So you can see data and you can see all the sections in Workplace.",
      "content": "Speaker 2 Studio were listed here. And also it's important to mention that forced update option must be applied for. Speaker 1 Position column because otherwise update or position. Speaker 2 Will be not performed. Speaker 1 You probably remember from our Tuesday session that when you create data items, it's. Speaker 3 Possible that you will make data item that will perform update, not an insert. ",
      "page": 293
    },
    {
      "title": "",
      "content": "Speaker 1 In case of update in case of. Speaker 3 Target record was found. Speaker 1 By the way, I prefer to make it not by this key. Speaker 2 I prefer to make it by this. Speaker 1 Key and found by id. Speaker 3 So if record was found by ID. Speaker 1 And then it will update target database. Speaker 3 According to loaded data and in our case only position will be updated. Okay, we can save it. Speaker 2 Now you can see that save was. ",
      "page": 294
    },
    {
      "title": "",
      "content": "Speaker 1 Successful, but we have a lot of warnings related to parent data that was already registered in base product. And this is valid set of warnings because our change caused the change of position of all previously registered sections in Studio Workplace. So simply all of the registered sections had different position because we moved our reality to the top and we. Speaker 2 Had a warning that tells us that you're trying to Change the data which was originally declared somewhere else. Speaker 1 So maybe you're doing it wrong. Speaker 2 So please take care. Here is your warning. Speaker 1 But this warning is still so we can ignore this. And last one is admin unit in workplace. Speaker 2 This is about access permissions. System administrators have full access to Studio. Speaker 1 Workplace and probably this data is also. Speaker 2 Present in our database. Speaker 1 ",
      "page": 295
    },
    {
      "title": "",
      "content": "Yes, so maybe not so necessary to save it. Speaker 2 So it's warning, not an error in case if you have an error. For example, you save the same data twice in the same package. Speaker 1 In this case, save button will show you error message and save button will not disappear. If save button was disappeared, means your. Speaker 2 Data item was normally saved. Speaker 1 If save button did not disappear, it means an error. It's like serious mistake and the system. Speaker 2 Will not allow you to save such data. It happens only when you save the. Speaker 1 Same data twice in the same package. Okay, so it was set of client modules of sorry, set of data items. Speaker 2 Automatically created by help of data binding tool. Speaker 1 When we registered our reality section in a studio workplace, now we have comfort. Here is our new created section. Here is set of processes we will manage very soon. ",
      "page": 296
    },
    {
      "title": "",
      "content": "Speaker 2 Here we have lookups which we also often look at. Speaker 1 And we'll use it and some other. Speaker 2 ",
      "page": 297
    },
    {
      "title": "System sections that we may need.",
      "content": "Speaker 1 So we now have very comfortable conditions and easy transitions between different sections. So it was just a simple example how you can organize your workplaces in. Speaker 2 More complicated based products like sales, service and marketing. Speaker 1 ",
      "page": 297
    },
    {
      "title": "You will see more workplaces, more sections inside.",
      "content": "Speaker 2 And you also can create your own workplace with sections that you think will be necessary to use for your end. Speaker 1 ",
      "page": 297
    },
    {
      "title": "Users with particular roles.",
      "content": "Speaker 2 ",
      "page": 297
    },
    {
      "title": "",
      "content": "And you can provide permissions for such. Speaker 1 ",
      "page": 298
    },
    {
      "title": "Sections and for such workplaces.",
      "content": "Speaker 2 And what is important for you to understand that you can create many different. Speaker 1 Workplaces and include the same section many times. So if you added some section to some workplace, it doesn't ",
      "page": 298
    },
    {
      "title": "mean that you can't do it with another workplace. So one context section can be added.",
      "content": "Speaker 2 In different places with no limitations. Speaker 1 In my case, I have my applications. Speaker 2 ",
      "page": 298
    },
    {
      "title": "Workplace with real T section and I also have.",
      "content": "Speaker 1 Just a second. So what I wanted to show you. Speaker 2 ",
      "page": 298
    },
    {
      "title": "We can use the same section in.",
      "content": "Speaker 1 ",
      "page": 298
    },
    {
      "title": "Different workplaces and it's not a problem if we specify the same section in.",
      "content": "Speaker 2 ",
      "page": 299
    },
    {
      "title": "Different workplaces many times. So physically this is the same section.",
      "content": "Speaker 1 The same data shown in different places. Just a second. Okay, so what we will do today, it was a warm up example that. Speaker 2 I think will be interesting for you to know. So let's do something more serious. Let's think of improvements of our future section of Our reality section. And now I want you to see how you can do some calculations, how. Speaker 1 You can do some more serious programming. Speaker 2 Inside of Creature client side page using. Speaker 1 Some JavaScript and using creature tools and let's say data platform. First of all I will explain you some business ideas. So what we plan to do, my. Speaker 2 Plan is to show you some recalculations and it could be a good example. Speaker 1 ",
      "page": 299
    },
    {
      "title": "",
      "content": "If we for example create one more column, call it commission. So it will be our future profit from the deal. And this commission will be dependent on price. So it's normally and very typical for realty to have commission as some percent from price. Speaker 2 And also we have to take care. Speaker 1 About the type offer. Speaker 2 So for sale we have one formula. Speaker 1 And for rental we will have another formula. Speaker 2 Okay, let's do it step by step. So first of all we need new column. Speaker 1 New column can be added to this very easily. We can just go to modify our page. Then we can add new number column. Speaker 2 Carefully dropping it here it will be named Commission. And as we have a price in. Speaker 1 US dollars, so let it be a commission. Also in the same currency, the inner column name will be USR. ",
      "page": 300
    },
    {
      "title": "",
      "content": "Speaker 2 Commission. Speaker 1 And we confirm such code for this column. The data format will be decimal with two digits. Okay, great. Decimal with two digits. And we want to make this commission calculated automatically so we don't allow users. Speaker 2 To manually change it. That's why I will set read only. Speaker 1 Option on I temporary hide place attachments tab. So my commission will be read only. Speaker 2 And also just to make it easier. Speaker 1 To find in div array, I will name its element code so we can type it as we wish Commission USD. Let it be our element code. Speaker 3 This element code will be used in. Speaker 2 View config, div and also physically it. Speaker 1 ",
      "page": 301
    },
    {
      "title": "",
      "content": "Will be used for building real page. Speaker 3 HTML markup with set of divs inside. Speaker 1 And this code will be used. Speaker 3 To name set of items and div HTML tags inside of our page. Speaker 1 So element code, it's about physical component. Speaker 2 Representation on the page. Speaker 1 Okay, you already know this and that's all I can just save System will. Speaker 2 Automatically modify our object. Speaker 1 It will save changes to our page code which we can find here if. Speaker 2 ",
      "page": 302
    },
    {
      "title": "",
      "content": "We click open source code. So now let's just click save and. Speaker 1 That'S probably will be enough for the beginning. So this change will be made in objects and in our client module. Okay, finally it's saved. Speaker 2 Okay, we can move on. Speaker 1 And now we can close this page editor. Go to main page. Speaker 2 As you can see, I did not even reload it. Speaker 1 We can just open it again and. Speaker 2 Probably we will immediately see our new column and it's read only. Speaker 1 So you see this lock sign which. Speaker 2 Tells us that column is read only. So now we need to think of. ",
      "page": 303
    },
    {
      "title": "",
      "content": "Speaker 1 Implementing read calculation and it will be. Speaker 3 Triggered by change of price. And also we want to make it. Speaker 1 Dependent on offer type. So for the sales offer type it. Speaker 3 Will be more or less okay if. Speaker 1 We make commission like 2% from list price from our price of realty shown here. So to be quite fair and good enough commission for our business and for. Speaker 3 Sales it's totally okay. Speaker 1 Now let's create some sample for house for rental. Speaker 3 Our rental price will be 1200 bucks. Speaker 1 For some house in Miami. ",
      "page": 304
    },
    {
      "title": "",
      "content": "Speaker 3 I'm not sure that can we find. Speaker 1 So cheap houses in Miami for maybe it's not like not in a high. Speaker 3 Season and some area. And as you can see, commission will be recalculated. And we need to make another formula for rentals. So for rentals probably it will be quite enough if we will ask for. Speaker 1 50% from monthly payment price if this is a rental. Speaker 3 So for rentals we will have another percentage. So for sales it will be 1% or 2% value. Speaker 1 And for rental it will be 50% from price value. Speaker 3 So when we will do some calculation we have to take care about it. But also you should be mentally ready. Speaker 1 That in real life business it really. Speaker 3 ",
      "page": 305
    },
    {
      "title": "",
      "content": "Often happens that such ratios, such formulas. Speaker 1 Can be changed from time to time. Speaker 3 And once we introduce hard coded value like 2% a month later our customer. Speaker 1 May call us and say, you know. Speaker 3 Now conditions were changed so we need to modify this percent and now it will be 2.5. Could you please change it? And if we hard code it, of course it's not so good idea to go into code and change it. Then deliver changes to production. Speaker 1 So it will be really expensive. Speaker 3 To make such changes. Speaker 1 And our customer will be not ready. Speaker 3 Will be not really happy if we. ",
      "page": 306
    },
    {
      "title": "",
      "content": "Speaker 1 Ask for example for half, maybe for a couple of hours of work to be paid. If we want to change just one number. Speaker 3 Ideally customers should be able to change such ratios themselves. We have several options to do this. For example, we can make a separate. Speaker 1 Table which will keep necessary percents. Speaker 2 Or we can use some system settings for this. Speaker 1 Or as you can see, our ratio is really stick to offer type. Speaker 3 So probably we can add new column. Speaker 1 To offer type lookup in order to save one value in percent for sales. Speaker 3 And another value in percent for rentals. I will show you how we can do this. Let's focus on objects Again, now we have offer type object, we can open it for edit. I prefer to work from configuration section. Maybe you would like to focus on application first. Speaker 1 ",
      "page": 307
    },
    {
      "title": "",
      "content": "In this case you can do the same if you. Oh, I did not save it. Oh, sorry. Okay, my fault. Ruby House for rental Save it. Speaker 3 Great. So if you prefer to focus on application, you can go to Application hub, you may find your realty app, you. Speaker 1 Might check your data models and that's. Speaker 3 How you can find corresponding object. Or you can switch to advanced settings to see all the contents of your solution. So you may practically do almost the same as you can do it here. Speaker 1 So I just get used to work. Speaker 2 ",
      "page": 308
    },
    {
      "title": "With this configuration section.",
      "content": "Speaker 3 Also it has some useful actions like. Speaker 1 Save packages to file system. So that's why I stick to this. Speaker 3 Approach and I feel more confident when. ",
      "page": 308
    },
    {
      "title": "",
      "content": "Speaker 1 Work here because I have full available. Speaker 3 Set of tools to manage my system set my system configuration setup. So we opened corresponding object, we have inheritance from base lookup and that's why we have eight inherited columns and we did not add any other own columns so far. Speaker 2 So for each reality offer type for. Speaker 3 Rental or sale, we can add one more column to be number. Maybe we can do it with quite high precision. Speaker 1 Okay, two digits after decimal point. Speaker 3 We can call it something like commission percent. Speaker 1 So we can even specify what is. Speaker 3 The available range of our data values here just to make it clear for any user what type of value should be put here. So if we specify from 0 to 100 it means from 0 to 100%. Speaker 1 ",
      "page": 309
    },
    {
      "title": "",
      "content": "And it will be clear how to. Speaker 2 Put some value here if you want. Speaker 3 To save for example 2%. One more column is not a big deal, so we can easily add it save and publish. Speaker 1 But after we do this we may. Speaker 3 Start to get some additional unexpected difficulties. Now I will show it. Probably sometimes I get it, sometimes not. But anyway I have to tell you about this. So we added new column to some object that was already present for today morning. So it was already created recently. That's why we can face some unexpected behavior. Let me show you ",
      "page": 310
    },
    {
      "title": "what I'm talking about. Now you can see it's very close and easy to switch between our section.",
      "content": "Speaker 1 And for example lookups. Speaker 3 Let's go to reality offer type lookup and let's try to see its data. Now we have name and description. Okay, let's try to set up columns to display. Name is okay here description is also okay and we can try to display one more column. Commission percent looks good and we can save it. Okay, here this commission percent looks good. We need to Provide some initial data. Because we have to support our solution. Speaker 1 With some initial values for calculations. ",
      "page": 310
    },
    {
      "title": "",
      "content": "Speaker 3 And we agreed that for a sale it will be enough for us to specify 2%. According to this helpful message, 2% will look like this 2.00, so it means just 2. And for rentals we expect to earn 50% but from monthly payment. So our price will represent monthly payment. That's why for rentals we will have significantly bigger value. So it looks like our data is okay here, but we changed columns and we added some data. So possibly we have to look at data part and find corresponding object reality. Speaker 1 Offer type object. Speaker 3 So not object data item for this. Let me find it. This one Offer type. It looks like it was created by data binding tool, so we could also. No, no. This is lookup registering. Now I need to find it here this one values. So now we have one more column here. We can update this data item with the help of data binding tool. Or we can manually modify it by adding one more column. As you can see, originally this column was not present here because we created data item before adding new columns to the object. So now we have one more column here we have new data. 2% for sale, 50% for rental. We have to save it. Everything is okay. So our new column, our new values are here in our data part. Great. Speaker 3 It looks like we still did not need to do any additional steps related. Speaker 1 To adding new column into existing object. Speaker 3 But some of you may start to feel some difficulties and such difficulties are connected with the way how server side system remembers information about objects. And unfortunately it may happen that your kind of difficulty which you will finally face will be inability to display data here or inability to use new column a bit later. In order to fix this, you may need maintenance tools for creation so which we already installed. Maintenance tools can help us to restart the app or clear regis if I need it. I will do this restart but a bit later. Now I will try to avoid this to show you what will happen if you did not perform a restart. So let's check will we be able to make all the way all the settings as I plan to do this and will we need restart or not? Speaker 3 ",
      "page": 311
    },
    {
      "title": "",
      "content": "So let's go. Now we have offer type which also has additional data. For sale value we have one additional data and for rental value we also have another additional data. And it's really lucky for us that it's possible to get such additional data out from this lookup somewhere at. Speaker 1 The top where we can easily use such data columns. Speaker 3 Now I plan to show you how to get data out from a lookup. We will use again page editor. Our task is to get decimal value from this offer type lookup and display it somewhere. The reason why we need to display is to make it visual and also to make it fully no code. Speaker 1 So. Speaker 3 Now you will see this trick how we can make data out from existing lookup. We have new fields here, but if you add any it will add new. Speaker 1 Column to your object and it will. Speaker 3 Add a new control to your page. So such columns I would like to call data fields and data fields represents connection between controls and real life data column of your main object that this page works with. But if you scroll down you will find interesting set of components called inputs. Inputs are designed to organize input only without direct connection with your main data object and without direct save of any data that you input into this call. Simply speaking, inputs are controls that you use for inputs but not intended to. Speaker 1 Save data from them or at least. ",
      "page": 312
    },
    {
      "title": "",
      "content": "Speaker 3 Not save into main primary object with the standard tools. So maybe you will save it somewhere somehow else. Let me show you how I can use this for our task. I need number control. So I will take number and carefully drag and drop it somewhere on my page. This is a just control just input field with no any connection to any kind of objects and the data model. But we have additional function which will be really helpful for us. We can ask system to fill this number control from some column that we can take out from existing lookups or existing from existing fields. Let me show you how we can do this. We go to data source, click on this lookup button and then we will search. So select some data field that we will use to fill this control. Realty related objects. Speaker 3 It will show us all existing lookup columns in our realty object and then we will find offer type extended and system will show us only suitable on the compatible field which will be you can be used within decimal number control. This is our commission percent so we will select it and here now you will see some changes. Title appeared the same as title of your column inside of your offer type lookup Code appeared and cannot be edited. This is read only and also you can unlock it. So this column will be constantly read only. Title position okay title on the page and element code number input. So we can call it something like commission percent okay and save change of our element code. Speaker 3 So simply speaking we made read only column that will be automatically loaded each time offer type is set and each time offer type changed or cleared. Let's save our changes and we will see how it works. By the way, please confirm with plus in our chat if you follow me directly during the session. So I need to know, should I allow you some pause to do some steps after I demonstrate it? Marcel, thank you, Andre. Thank you. Okay, I will go. Not too fast. So you will have enough time. If something is not good and you would like me to stop for. Speaker 1 A while, tell me please. Speaker 3 Okay, Monica, thank you again. Secret and Rakhi, thank you for mentioning. Great. So we saved our page. Then we can go to our page close, open it again. Now you see this commission percentage shown. Okay, Maybe we can reward the page just to suppress any possible issue with the browser cache. So let's open again. Apartment of New Orleans we have offer type sale. But you see this commission percent is not shown. Okay, let's try to select another one. Rental or I chose sale again. Okay, rental 50 sale 202. Okay, save it. Close. Such data will be not possible to see in list. So we have no reality column which will represent our commission percent. Speaker 3 ",
      "page": 313
    },
    {
      "title": "",
      "content": "We can read it from the database if we use related objects, if we use offer type and if we display commission percent and this commission percent will be obtained from corresponding record from our offer type. But you see, now we have some troubles. We have some troubles and system does not recognize commission percent column fully. Probably it also shows us some error messages, I believe. Let's try to reload it and see what happens. No, no error message. It just doesn't show us corresponding values. But they are definitely there. So we can go to lookups, we can find our offer type lookup. We can find columns there. So our commission percent is here. So what is happening and why we have such a trouble? And if you open the page, you see no initial value here. Speaker 3 But if you click there and back to sale now you see this value is okay, save, close, open and still it doesn't work. So we still have some problem with this additional column. Speaker 1 And this problem unfortunately cannot be solved. Speaker 2 By logging out and logging in. Speaker 1 So let me show you. I try to log out. Speaker 2 Maybe thinking. Speaker 1 There is something like a user session cache issue. Then I try to log in. Speaker 2 When you work with client side, it's. Speaker 1 ",
      "page": 314
    },
    {
      "title": "",
      "content": "Better to keep your browser console on. Speaker 2 Probably you will see some interesting messages. Speaker 1 There or a lot of red messages. Speaker 2 In case of errors. Speaker 1 So it's important to see it quick. Speaker 2 ",
      "page": 315
    },
    {
      "title": "Okay, opening our realty section, ignoring all.",
      "content": "Speaker 1 Warnings here, open it once again and you see no, it did not help us. So unfortunately logging out and logging in. Speaker 3 Doesn'T help you and the only solution. Speaker 1 Which we can do is restart our app or shut it down and start. ",
      "page": 315
    },
    {
      "title": "",
      "content": "Speaker 3 It again for example with the help of IIS Manager. But it will take more than minute for us to normally shut down and start. So we have a quick solution. Speaker 1 This is restart our app and we. Speaker 3 Have a maintenance tools for this restart application. This is the only way to quickly fix this issue. Speaker 1 Now you see we have some. Speaker 2 Errors in browser console, but it looks. Speaker 3 Like not very critical. Speaker 1 So now restart is being performed. Speaker 3 We can check what's happening with our memory and with our processes using task manage. Speaker 1 ",
      "page": 316
    },
    {
      "title": "",
      "content": "W3WP . Looks like we have the same worker. Speaker 3 Process, but it has a comment to. Speaker 1 Restart so possibly to rewards some of its assemblies. Speaker 2 Okay, so we restarted our app. Speaker 1 ",
      "page": 317
    },
    {
      "title": "We go to reality section.",
      "content": "Speaker 2 Now we already will see the difference. Speaker 1 Now you see that commission percent here. Speaker 2 Was normally displayed in this list previously it was not normal. Speaker 1 And if we open any record now. Speaker 2 ",
      "page": 317
    },
    {
      "title": "",
      "content": "Commission percent will be fully normally loaded. Speaker 1 When we just open the page. So you see commission percent loaded correctly if you take any other value. Yes. If you go to rental. Yes, it's okay. Speaker 2 So now we fixed it. Speaker 1 And that's why I had to use this add on called maintenance tools for creature. Speaker 2 Such add on helps me easily restart. Speaker 1 The app with just waiting approximately 10 seconds. And it's much easier than restarting my app by shutting down and starting again. Speaker 2 My worker process or recycling worker process. Speaker 1 It's possible, so it will take significantly longer. Speaker 2 Okay, so we fixed this question with. ",
      "page": 318
    },
    {
      "title": "",
      "content": "Speaker 1 The commission percent and now. Speaker 3 Our task. Speaker 2 Is. Speaker 1 To make actual calculation. Speaker 2 So now we can think of how. Speaker 1 To trace changes of price or commission percent. Speaker 2 Luckily commission percent will be available for. Speaker 1 Us the same as any attribute for a real column. Speaker 2 So commission percent will be also an attribute for us. ",
      "page": 319
    },
    {
      "title": "",
      "content": "Speaker 1 So if this value changes or if. Speaker 2 This value changes, as you can see. Speaker 1 It will be changed in case if you clear in case if you set. Speaker 2 Some offer type or if you change to another offer type, commission percent is changed. Speaker 1 So price or commission percent should trigger recalculation of commission. Speaker 2 ",
      "page": 320
    },
    {
      "title": "I will show you how we can do this. Let's go to our configuration section.",
      "content": "Speaker 1 Find client modules. We are working with form page. So when we look at this stuff you can see this is a real T form page. That's why I know where to open corresponding code. So you can also open the code from page editor if you want. I just feel it's more comfortable to work here. So form page open source code. That's how we can go directly ",
      "page": 320
    },
    {
      "title": "to the JavaScript part of it and See what's happening.",
      "content": "Speaker 2 Andrean is asking is it possible to use this add on in a cloud environment? Speaker 1 ",
      "page": 320
    },
    {
      "title": "",
      "content": "Yes, all creation apps from Marketplace can be installed on cloud systems. Speaker 2 Absolutely the same as you can install it locally. When you install any add on, you. Speaker 1 Use only web interface. Speaker 2 So it will work absolutely the same. Speaker 3 Let me show you. Speaker 1 So you go to Settings, you go to Application management, Application Hub and then you click Install or Add new application. Speaker 3 And you can select something from this. Speaker 1 List or you can select Marketplace Powered. Speaker 2 And it will work absolutely the same. ",
      "page": 321
    },
    {
      "title": "",
      "content": "Speaker 1 If you run it in cloud. Thank you Adrian for your interesting question. Let's move on with your code. So we found reality form page. Speaker 2 We decided to open directly its source code. Speaker 1 That's how we open this tab. Speaker 2 ",
      "page": 322
    },
    {
      "title": "We can try to find our commission diff part.",
      "content": "Speaker 1 You can see this our commission column. It was added by help of page editor. Speaker 2 So practically we should not modify this. But it will be interesting to see how it will be connected with the. Speaker 1 Data attribute PDS USR commission USR so. Speaker 2 This is our attribute name. Speaker 1 Okay, we can collapse temporary all such things. ",
      "page": 322
    },
    {
      "title": "",
      "content": "Speaker 2 I will only show you. Speaker 1 So price. Okay, we need price, we need commission so we can collapse all other new config div items till we will face view model config. So attributes of view model config represent. Speaker 2 Set of variables that can be saved. Speaker 1 On the page level. Speaker 2 And we already started to work with. Speaker 1 It yesterday I just tried to explain you such attributes and now we will work with them. So for the price column we see this attribute name. Okay? And for the percent here. Speaker 2 We have this attribute name and finally. Speaker 1 We will save our data into commission. Speaker 2 ",
      "page": 323
    },
    {
      "title": "",
      "content": "Attribute which has this name. Speaker 1 This is important. Okay, I will collapse anything else to make it clear and quite compact for you. So we are interested in price attribute. Speaker 2 Percent attribute and commission attribute. Speaker 1 Okay? Nothing else. Speaker 2 Model config is not interesting. And then we will do something with handlers. Speaker 1 I already have an example which will. Speaker 3 Make it possible for us to do it quickly. So let me show you this example of the code examples reading UI and then we need calculated field example. Speaker 1 Field example. So now I will use a special. Speaker 3 Pre designed handler name. Probably we need to look at Academy. ",
      "page": 324
    },
    {
      "title": "",
      "content": "Speaker 1 To explain all possible handler names. Speaker 3 So let's go to Academy, let's go. Speaker 1 To go to guides development. Speaker 3 Front end. Speaker 1 Freedom UI and somewhere we will see some client schema references handlers. Speaker 3 Yes, this is an article explaining handlers and their definition. So we have some set of standard names for handlers and they represent some. Speaker 1 Important steps of page life cycle. In our case, we are interested in the handler which is triggered each time when some data, some attribute data changed. Speaker 3 At our page changes the attribute. Speaker 1 ",
      "page": 325
    },
    {
      "title": "",
      "content": "So this handler is called handle view. Speaker 3 Model attribute change request. Let me show you my example. Handle view model attribute change request. Speaker 1 So simply speaking, this handler will be. Speaker 3 Called each time when any column value. Speaker 1 Changes at our user at our client. Speaker 3 Side page in our browser. So this handler will be triggered quite often. We copy this code. Speaker 1 We will also. Speaker 3 Paste it for you and we will copy it and put it to our examples in our handlers area. So this is an array, we have to keep syntax well. And that's why I try to paste. Speaker 1 It like this, keeping commas, brackets and so on. Speaker 3 ",
      "page": 326
    },
    {
      "title": "",
      "content": "So now you see, this piece of code was just simply added. Speaker 1 This piece of code was added and let's check what we can do with it. Of course we have to take care about attribute names because they are always unique. Each time you do the same example again, you will see different unique names. Speaker 2 So how we can check it? Speaker 1 This handler will be called quite often for each column change. Speaker 3 And in order to make it efficient. Speaker 1 We need to check if some column. Speaker 2 That we are interested had changed or not. If yes, then we do our recalculation. Speaker 1 If not, we should do nothing in. Speaker 2 Order to save system resources. So we check request property here and. ",
      "page": 327
    },
    {
      "title": "",
      "content": "Speaker 1 We have attribute name. And if this attribute name is our price, then this is logical or attribute name is our commission percent. Speaker 2 Then we do some calculation, but we. Speaker 1 Have to actualize our names so you. Speaker 2 Can see our list of attributes for the price. Speaker 1 Here is our attribute name. Let's copy it and carefully paste here. And also as we already have it in our clipboard here when we need to read it, then the same for commission percent. Let's make sure this is our attribute name. Let me show you. Yes, it looks like it is already the same because generated by system and I usually do same examples. That's a bit strange shifts. Okay, Very unusual. Okay, we did this. So so now you see if price changed, if commission percent changes, then we take price value. We take commission value. Speaker 2 So how we do this? I already showed you yesterday. Speaker 1 We have to use operator await. Then request is our argument dollar context and then we have access to our certain attribute. Speaker 2 So we have just a variable in. ",
      "page": 328
    },
    {
      "title": "",
      "content": "Speaker 1 Our JavaScript code for price for percent. Then we do calculation of commission as result of multiplication and don't Forget to. Speaker 2 Divide by 100 because commission percent represents. Speaker 1 Percent, not just a decimal value. Okay, and then we will save our commission percent. We have to Provide correct value. Here is our commission attribute. Speaker 2 If we do it incorrectly, we will fail. Speaker 1 So this is important. Our commission value will be finally saved into this. Okay, now it's ready and we can check how it works by saving our code. Speaker 3 I provided an example for you, so you can also check out your example. Speaker 1 Just a second. Okay, saving was successful and we can move on with our checks. Let's go to realty section, open the page. Let's try to trigger change of price or change offer type, for example. Like this, nothing happens. Speaker 2 Probably it's because of cache. Speaker 1 ",
      "page": 329
    },
    {
      "title": "",
      "content": "So let's reload the page. Reloading helps to fight with browser cache effect. Open again, try to make changes. Speaker 2 Now you can see that recalculation works well. Speaker 1 ",
      "page": 330
    },
    {
      "title": "So we have our price for rental of our apartment.",
      "content": "Speaker 2 And you see our commission is correctly. Speaker 1 Recalculated and we can save our data. Speaker 2 Commission will be also saved. Speaker 1 We can see it here. Commission is our legal valid column, so it will be saved. Speaker 2 Let's open some sale example. Speaker 1 Now you can see. ",
      "page": 330
    },
    {
      "title": "",
      "content": "Speaker 2 Okay, price was not changed. Speaker 1 Commission is already calculated. Let's check if we switch from sale to rental. Speaker 2 You see, commission was recalculated. Speaker 1 If we switch back to sale, it's. Speaker 2 Also quite well calculated. Speaker 1 So now you see that our commission is quite fair for this amount of price for the house. Speaker 2 So our recalculation also works well and. Speaker 1 It shows even when page is opened. It looks like when page is opened our data filled in client side. So it triggers recalculation even if we. Speaker 2 ",
      "page": 331
    },
    {
      "title": "",
      "content": "Do not change anything. Speaker 1 But just open the page. Yes, we'll see. Speaker 2 So it looks like our calculation is. Speaker 1 Already done and works quite well. Speaker 2 And of course everything works quite smoothly. Speaker 1 When we have a pre programmed examples where everything is correct. Speaker 2 But in real life you will do. Speaker 1 Your own examples where some errors or mistakes could happen. So you will need to know how to debug this code. Speaker 2 I will show you how to make. Speaker 1 Such debug and you will see that's not so difficult. One of the easiest ways to debug. ",
      "page": 332
    },
    {
      "title": "",
      "content": "Speaker 2 Is to put a special debugger breakpoint into your code. Speaker 1 Like this, the word debugger. If you provide such debugger statement, it means that you ask for debug session and you stop execution of your JavaScript code. And if your browser has opened browser developer console. Speaker 3 So if browser developer console is on. Speaker 1 Then your debugging will work for you. But this approach has also disadvantage. Speaker 2 And when you finished your debugging, you. Speaker 1 Should not forget to remove all your debugger lines. Speaker 2 Save your changes again. Speaker 1 And ideally you have to run your. Speaker 2 ",
      "page": 333
    },
    {
      "title": "",
      "content": "Logic again just to make sure you did not accidentally damage anything. Speaker 1 Because when you save, you have chance that something will be incorrectly saved. Something will go not so well. Okay, so let me show you how we can do this type of debugging. Speaker 2 I need to explain and I need to show you. Speaker 1 We can go to this is easy. Speaker 2 Way to put debugger word. I will show you a bit more professional way to debug. We can go to our section open page which we plan to debug. Speaker 1 Then we enable browser developer console. Speaker 2 You can do it by F12 or control shift I. Speaker 1 And when you do this, you then. Speaker 2 Go to Sources tab. You see, we already opened some set of scripts here. We don't need it now. ",
      "page": 334
    },
    {
      "title": "",
      "content": "Speaker 1 Let's close everything and then we can. Speaker 2 Just search and you see we have. Speaker 1 ",
      "page": 335
    },
    {
      "title": "A USR reality form page part of the URL.",
      "content": "Speaker 2 So it's a page, it's a name. Speaker 1 Of client module and we can try to find it. Speaker 2 Control p Open file. Speaker 1 Let's try Control p open file. Which one? Reality form page USR realty form page. We have two options here, probably because of browser cache. Speaker 2 Okay, if you do not want to. Speaker 1 Guess which one is correct, we can go back reload the page. ",
      "page": 335
    },
    {
      "title": "",
      "content": "Speaker 2 So we will suppress any kind of. Speaker 1 Cache and then we will open it again. And we have just one option, single option to select corresponding file Control P . Okay, open the page, then control p open file and press ctrl P realty. Speaker 2 And you see only one form page here. Speaker 1 So no any cached, no any duplicates that will make you confused. And you probably may select Incorrect 1. So let's open the only one you. Speaker 2 See set of equalizable strings here. But the most important of course is our code. And you will see our module text here. Speaker 1 ",
      "page": 336
    },
    {
      "title": "Big part with view config div some.",
      "content": "Speaker 2 Part view model config. And finally you will have your header handlers. Part we are interested in debugging somewhere here. Speaker 1 For example, we can click on this. Speaker 2 ",
      "page": 336
    },
    {
      "title": "",
      "content": "Line number which will make a breakpoint for us. Speaker 1 So it's the same as debugger, but. Speaker 2 It doesn't change the source of our client module. Speaker 1 So we can use browser debugging tools for this. Speaker 2 Click on the line number. Speaker 1 That's how we activate breakpoint. So here we have one breakpoint that we just clicked here. Then when your browser developer console is on and execution comes to this line. Speaker 2 Execution will be stopped. Let me show you. Speaker 1 If you change for example offer type from rental to sale, you see These. Speaker 2 ",
      "page": 337
    },
    {
      "title": "",
      "content": "Lines are executed and now code stops and we can go line by line. Speaker 1 Now we have to use tools that. Speaker 2 Will help us to proceed with this piece. The most popular, I think the Most. Speaker 1 Efficient is F10 which is a step over running of a line without going into sub functions for it. So I will press F10. Now you see my price was taken from the column percent. Now you see new percent was taken when offer type changed. Speaker 2 Then you can see commission was recalculated. Speaker 1 Now you will see commission will be set here. So my commission is now 26, so I expect it to be saved here. Speaker 2 Yes, 26 and then we move on. Speaker 1 So here we can use resume F8 hotkey to normally continue execution. Speaker 2 That's how we can check this code. If we change the price. Speaker 1 ",
      "page": 338
    },
    {
      "title": "",
      "content": "You will see the Same I press F10 I have another commission F8. Speaker 2 Okay, we can make more serious price. Speaker 1 ",
      "page": 339
    },
    {
      "title": "For an apartment.",
      "content": "Speaker 2 And obviously we'll have more serious commission. So that's how you can debug your code. Speaker 1 Also, if your code has something has. Speaker 3 Some obvious mistakes and causes runtime errors, you will also see such runtime errors in your sources tab. You will also see your console which will be full of red messages. So in case if your code fails in runtime of course you should take care about it and look at your console tab and check if everything works well or not. When you finished your debugging you should click on wine number again removing your breakpoint and then your code will run without stops. It's interesting to see what value we will see in case if we will clear overtype. Speaker 1 Now let's check. You see that percent is empty so percent is null. Trying to multiply null on price results in zero. Speaker 2 So that's how we will clear. Speaker 1 Okay, when we have some valid percent, we can move on with F8 and you see setting is done. ",
      "page": 339
    },
    {
      "title": "",
      "content": "Speaker 3 If you have any questions related to this debugging, please tell me. As you can see, debugging can be. Speaker 2 Really effective if your code is more. Speaker 3 Complex, if you have sub functions. If you are not sure what values you finally get from your code so you can check it out with the help of browser developer tools. Okay, probably we got an hour of our session, so let's make a few five minutes break and then move on with next topics related to programming. I also plan to show you some examples of programming of validation. So I plan to show you validation. Speaker 1 And. Speaker 3 Different validators so different clones will be used for universal validation. And also I plan to show you some examples of so we already displayed debugging but also you need to know a bit more about logging. Okay, so let's make a five minutes break. Speaker 1 Foreign. Speaker 2 So today I want you to see. Speaker 1 Some more technical things about how client side works and how we can do. ",
      "page": 340
    },
    {
      "title": "",
      "content": "Speaker 3 Some technical steps with it. So we already know how to debug our code. I would also like to you to see that we have quite developed logging. Speaker 1 So I will show you login mechanisms. Speaker 3 That are available on Creature platform. Here is our installed app and this is our folder with installed application. We go to terrasoftware web and you already know that Creature uses analog libraries. Speaker 1 To provide the different logs and save them In Creature web server. Speaker 3 The most important log file for us is invoke targets config because here we can change default file to save our all default folder to save all our logs. You may be interested in the way how we can do some logging. So we have so called appenders and targets and probably have to start from appender first. So analog config I should use analog config first. And we have a lot of loggers. Speaker 1 As well appender so they are synonym. Speaker 3 Logger or appender they are synonyms. So you can see a lot of different loggers registered and appenders are settings that will collect log messages. And finally appenders will be connected with physical files. So you see we have more than 100 different loggers and logger is a. Speaker 1 Logical thing that you can use in your program code. Appender is a place that is used to collect your data and save ",
      "page": 341
    },
    {
      "title": "",
      "content": "it. Speaker 3 So we have a lot of loggers, a lot of targets. Sorry, targets. And you see we have so appenders it means it's a setting that represents physical file. Also targets are synonym and appenders shows us that we also have a lot of different logs that are saved here. And you can see different messages, different settings. So what do you need to know about this? So Croatia has a lot of default types of logs and all of them will be saved in a folder which we specify when we install our application. So in Analog Targets config line number three we have setting to save our logs to. Speaker 3 By default this folder is somewhere in temp Catalog Windows temp I decided to make it different so we can find logs and as you can see we have zero which means main application logs and log folder which. Speaker 2 Which. Speaker 1 Sorry. Speaker 3 A log folder which means loader part is not so interesting because it has no customizable items that will be interested for us to Interesting for us to see so loader is very technical and we have just several log files here, nothing very spectacular. And zero folder is what we really need because it's a log set of logs for our main application. And then we go inside, we see logs for each separate date. So you see for different days you have logs in different folder which makes it easy to find. And then you see different logs here. In total we have more than 50 different files with logs saved here. So a lot of different logs, a lot of different files. And what is the most important for. Speaker 1 You from the maintenance point of view? Speaker 3 ",
      "page": 342
    },
    {
      "title": "",
      "content": "I think the most important is error log. Error log represents all exceptions and keeps information about all exceptions that happened in your system. So error log shows all errors and of course you should take care about. Speaker 1 It because usually it is important and. Speaker 3 Sometimes you may find some errors which are not related to your changes. So you may simply speaking find some errors from base product like this 1 error parent schema is now parent ID sets to empty and so on. But it looks like nothing very critical for our application. You see the same error many times and it looks like not very important. But if you will get some error messages here related to your functionality and your users will start to complain about something is not working. Of course you cannot ignore this. You may ask me why we have some errors in a wait production release software. The answer is that Croatia is quite big and we have more than 200 libraries. We have millions of use cases that could be checked and used. Speaker 1 So it's really hard to test everything. Speaker 3 And to polish any line of code. Speaker 1 So it should show it so it. Speaker 3 Could not fail in any way. So in real life, in any big system, some errors usually happen. Speaker 1 But in our case it's not so. Speaker 3 ",
      "page": 343
    },
    {
      "title": "",
      "content": "Critical so you can simply ignore. But if you will find another errors with some user complaints, of course you should take care of it. So from maintenance point of view, I think looking at such error log is quite important. And this is something that you should do regularly. If you support some big creation implementation by your own. In cloud conditions, looking at such logs is complicated because you will not be able to directly go to cloud based file system to get it. So you only can ask for help at support team. By the way, you should know Support team lives here support creation.com so they work 24, 7. It means you can ask them any time, anytime you need, even on weekends. And if you ask for example for a yesterday logs for a searching website, they can give it for you. Speaker 3 But it will be more efficient for you if you can Collect logs by yourself. And that's why I plan to show you some special tool which makes it easier if you need to collect logs from cloud based environment. So I will show you Now I'm talking about telemetry log for creation. This is a special add on which we can get from Application Hub New application Marketplace powered. Then we can just search for the word log and we will easily find this Hokku app or telemetry log for creation. So Hoku is a company physically this company is like founded by our creation employees and this is something just so you should consider it made by creature and you can install this telemetry log. This is for free. Agree Confirm. You see it was just updated 2023 November. Okay. And install it. Speaker 3 It takes just almost no time, maybe 20 seconds. And you will see that new app is installed to our system. So you'll be able to collect vlogs but you'll be able to collect only runtime created logs. So it's like listener for logs. You will not be able to collect yesterday logs, but if you do some experiments and you need to see how logs look like when you do your experiments in cloud. So this app will be extremely helpful for you because it shows you all the messages all the log messages that are saved on disk. So you can listen to any logs saved on disk. Let's patiently wait for its installation. Surprisingly it takes a bit longer than I expected. But it's okay now it's not so critical. Maybe we can look at browser developer console here. But usually no trouble should be present. Speaker 3 Okay, wait for a minute. And I'm also curious about what is happening at my website. Oh, dotnet exe was running so it looks like compilation was done. So system decided it needs to compile and that's why it was so slow. Okay, finally our compilation finished. We can download installation log to see what it took so long and what operation took so long to install. So now you will see results. Okay, great. Here's our installation logs started 26:58, so almost 27, finished 29. It looks like 2 minutes and 3 seconds and yeah, it's a bit longer than usual. And 27:15, 28:56 so it looks like full configuration compilation was performed. That's why it took so long and okay, no problem, we can live with it. So now you will see one more app here in this list Telemetry and you can reload this tab. Speaker 3 Now you will see one more item at our settings page. Previously called System Designer, currently it's called Settings. So I Will show you how you can use this telemetry log here. Yes. Now let me show you. Speaker 1 ",
      "page": 344
    },
    {
      "title": "",
      "content": "We can check. Speaker 3 You probably remember we looked at our logger and appenders. So we have appenders, we have loggers here. Speaker 1 So we can listen for a certain. Speaker 3 Logs in order to get some error. Speaker 1 Messages for the certain, let's say subject or certain area of functionality. Speaker 3 And you can also listen everything like this, which will mean that you look and get every message. And I'll try to find a logger for SQL. Do we have anything? No, Let me find a corresponding logger. SQL. Oh, so it's called JSoft Core DB. Speaker 1 Executor SQL log appender. Speaker 3 Okay, will it be DB executor? And we're only interested in for example errors. Speaker 1 So I plan to make example of. Speaker 3 ",
      "page": 345
    },
    {
      "title": "",
      "content": "Listening of DB execution errors. And I especially will do some example which makes such an error. Let's go to customer360, find accounts and let's try to remove some account. Obviously we will not be able to do this because it has some connections with existing contacts. So I try to delete this account. Now you see no messages here. Try to do this. Of course I see error messages and here I expect to get. I expect to get error messages. Oh, I should subscribe. I should remember to subscribe. Speaker 1 Okay, let's try to delete once again. Yes, error message appears. Speaker 3 Logger pattern. Speaker 1 Maybe you should use info subscribe. Speaker 3 I will try to delete it once again. Speaker 1 Yes, now you see, funny thing, but. Speaker 2 It was not an error, it was just a warning. Speaker 3 So like yellow color, which means this is not an error, just a warning. ",
      "page": 346
    },
    {
      "title": "",
      "content": "Speaker 1 And okay, so I got some text. Speaker 3 Message from our DB executor and you see that my message has an error. So exception occurred, statement terminated. And you see that we get some text messages and logs. Speaker 2 You can also get the same logs. Speaker 1 If you go to your files, you. Speaker 3 Will find SQL JSON here we will have similar information. So you see my delete statement failed. Speaker 1 So it conflicted with foreign reference constraint. Speaker 3 And it's interesting that for the SQL. Speaker 1 Errors, system logs only queries that were failed. Speaker 3 ",
      "page": 347
    },
    {
      "title": "",
      "content": "So only queries that failed to be executed at the database. In my case, I intentionally made an error for the database level and showed. Speaker 1 You how you can handle it and. Speaker 3 How you can track it. You can also use all existing loggers for all messages subscribe. You will have plenty of ",
      "page": 348
    },
    {
      "title": "different messages here. Just when you go to any part.",
      "content": "Speaker 1 Of your system, when you open any. Speaker 2 ",
      "page": 348
    },
    {
      "title": "Section, you will start to get more.",
      "content": "Speaker 3 And more Logs because system usually writes. Speaker 1 Something to logs and it has quite verbose logging. So you will have more and more data. Speaker 3 You see more messages appeared, some of. Speaker 1 Them are useless for you and so. Speaker 3 ",
      "page": 348
    },
    {
      "title": "",
      "content": "You have to play a bit with it. But finally you will be able to do the same as you can do with log files. So this telemetry log for creation will be extremely helpful in case if you need to make some experiments and get logs directly in online mode from your cloud environments, including even production systems. Speaker 1 So this can be really helpful for you. Please remember about this telemetry log and we have some buttons here. Speaker 3 What is this? As you can see we have some help message explaining how to use this some button which shows or it runs. Speaker 1 And stops a listening of logs. Speaker 3 So green means run, red means stopped and that's how you can also use it. So listening all of the logs will provide you a lot of verbose noisy messages. It's up to you. So maybe this will be interesting for you. So just remember the name of the tool is telemetry for Creatio. Speaker 1 You can easily install it from Marketplace. Speaker 3 Okay, so what else you need to know about client site? Speaker 1 We will work with details soon and. Speaker 3 ",
      "page": 349
    },
    {
      "title": "",
      "content": "Before we doing this I need to explain you how to do validation. As you can see my previous program was a bit more oriented on classic ui. Speaker 1 So sometimes I jump from topics topics and that's why we are not following directly from this schedule. Speaker 3 So I plan to provide you material like step by step slightly improving complexity of topics. So I think it's not so hard, not so difficult for you to study. Speaker 1 This material this way. Speaker 3 So let's move on validation. What it is about and this is. Speaker 1 Check of data before it will be. Speaker 3 Saved at server side. Let's return back to our reality section and let's look at our data value. So when we add new values it may happen that user may save some very incorrect values. For example, we can try to save. Speaker 1 Negative price as you can see as. Speaker 3 A result we have negative commission. It's also possible to save negative area and also system does not prevent us from doing such things. So we can save it. And as you can see from system point of view, there is no troubles, no errors. But of course we have trouble from business point of view because we can't normally summarize values, we ",
      "page": 350
    },
    {
      "title": "",
      "content": "can't normally calculate commission. Speaker 1 So we have to make some kind. Speaker 3 Of protection for our data input. And luckily we have this on the platform level as existing validation tools. Let me show you how to use it. We also need to program this. Unfortunately, validation is only available when you do programming, so it's not a no code setting. But we are not afraid of this. Let's go to our configuration section, find. Speaker 1 Our form page again, open its source code again. Speaker 3 And I need to show you some examples at our Academy documentation which will really help you. So we have some architectural SDK things at front end documentation, but we have. Speaker 1 A lot of useful examples in platform. Speaker 3 Customization area of our academy. And we have examples for Freedom UI for fields examples and we have examples of population of fields. So it's example of calculations that we already discussed. And we have example of validation of. Speaker 2 Field which we are interested right now. Speaker 3 ",
      "page": 351
    },
    {
      "title": "",
      "content": "So I will share useful links for such articles. Speaker 1 I recommend you to read it or. Speaker 3 Just maybe look at it. So let me explain how we plan to move on. We have special area in our code named validators. Let me show you. So we have handlers and we have validators. Speaker 1 So it's a special designed place for us to program special functions that will be used for checks of data during input. And luckily we have examples at Academy. Speaker 2 Which will help us to make it. Speaker 1 Smoothly without spending too much time. So validators is a collection, this is not an array. Speaker 2 Now you see, this is a collection. Each collection item should include its name. Speaker 1 And implementation and validation. Speaker 2 Implementation includes validator property which is a. ",
      "page": 352
    },
    {
      "title": "",
      "content": "Speaker 1 Function that finally should return something set of parameters and async property. Then when we finish with this part, we will connect our created validator with set of columns. So we may use one validator for many different columns by connecting them to our page attributes. So let me show you how we. Speaker 2 Can do this and I already have. Speaker 1 An example, we will not spend too. Speaker 2 Much time on it. Speaker 1 So now you will see how we can do this validation. Speaker 2 First of all we go to validators. Speaker 1 Area and we will provide some code here. I already have example, no difficulties. So Freedom UI validation example and I need to provide this example of code. Speaker 2 Okay, let me copy and paste for you. Speaker 1 ",
      "page": 353
    },
    {
      "title": "",
      "content": "This is example of our validation. Okay, no need to use cameras to show. Okay, so this is example of code. Speaker 2 And I will also implement it. Speaker 1 It's my own validators area. So copy and paste. What do you see here? So we register my validator with a specific name. So this is a kind of type or maybe validator type, let's call it so. And we can declare different numbers or unlimited number of different validators. This validator includes three major properties, whether it validator, function parameters and async property. Speaker 2 So probably we have to Start with parameters first. Speaker 1 Because parameters are values that we can provide for each validated column and for different columns, we can provide different parameter values. Speaker 2 Here we have to declare what parameters we will have. Speaker 3 In my case there are two parameters. Speaker 1 Min value and message parameter. Speaker 2 Validator function has a bit complex structure. This is one function, it returns another. ",
      "page": 354
    },
    {
      "title": "",
      "content": "Speaker 1 Function and first function requests config, Another function requests control inside of control. Unfortunately we only have value so it makes it difficult for us to analyze several values from different columns on our page. Speaker 2 But it makes it universal. Speaker 1 If we have value, we don't know exact column. So we can use the same validator for many different columns or different columns and it will be universal for us. So we can take value and from. Speaker 2 The config we know what parameters to expect. So we have min value parameter and we have message parameter. Speaker 1 Our check is quite simple. Speaker 2 We get value and then compare with min value. And in case if our value is. Speaker 1 Greater or equal than min value then we think that data is correct and our returned result will be null, which. Speaker 2 Means no warnings, no messages, everything is okay. But in case that value is not. Speaker 1 ",
      "page": 355
    },
    {
      "title": "",
      "content": "Correct we have to return special type. Speaker 2 Of result which is a JavaScript object with a specific name, the property inside. Speaker 1 And with the message property inside of this property. So it's kind of nested JavaScript object and our message here will be text, it should be displayed nearby problem control. Speaker 3 And also this message will be explained. Speaker 1 Displayed when we will try to save our page. So we will say try to save data system will check all the validators and it will find that some columns are not correct and it will not allow to save it. Speaker 2 So this is our example of a. Speaker 3 Validation, but it's not applied yet. Speaker 2 So we have to set up some. Speaker 1 Columns which will work with this validator. ",
      "page": 356
    },
    {
      "title": "",
      "content": "Speaker 3 Otherwise our validator is useless because no. Speaker 1 Column expect checks with it. Speaker 2 So I do not need to change anything here. This code is universal as you can see. No any hard coded column names. Speaker 1 Only one hard coded thing is a validator type name. Next step is connection of validator with. Speaker 2 Certain columns or it's better to say with attributes. Speaker 1 So I will show you examples how we can connect. Maybe I should do it here. How we can connect validators to columns. I will put example so I have to find my price attribute. Let's go to my view model config div area. Here we have attributes. Here is my price attribute inside of its structure. Speaker 2 After module config I have to provide. Speaker 1 Validators setting so I should carefully copy this and paste it here. Speaker 2 ",
      "page": 357
    },
    {
      "title": "",
      "content": "And that's how I will put it. So here's my price attribute. Speaker 1 Here is my validator. The type of validator should be matched. Speaker 2 With what we created and parameter. Speaker 1 So the minimum value for the price. Speaker 2 I think it will be 50. Speaker 3 So we will not allow to save. Speaker 1 Any reality object with the price less than 50 bucks. Okay, and also we can use message, not just a plain string constant which. Speaker 2 Is also supported, but also we can use localizable string. Here is an example of a macro. Speaker 1 That you can use for localizable strings. ",
      "page": 358
    },
    {
      "title": "",
      "content": "Speaker 2 And localizable strings are saved separately and can provide translations into other languages. Speaker 1 So let me show you what localizable strings I plan to use. I will put it for you. And first, localizable string about price. So my localizable string is named price cannot be less. Speaker 2 I go to localizable strings. Probably we can save it before modifications. Speaker 1 But now I will modify non localizable. Speaker 2 Strings. Speaker 1 Take significantly longer than usual. As you can see, my worker process consumed quite a lot of ram. It's more than usual. Okay, we can try to create localizable string with the code price can't be less and the value is price cannot be less than something. Okay, try to add and then I expect some troubles here. Speaker 2 That's why I will try to save now. Speaker 1 If it saves correctly, okay, no problem. Speaker 2 ",
      "page": 359
    },
    {
      "title": "",
      "content": "But in previous versions I experienced some. Speaker 1 Troubles with localizable strings here and it turned out to save it. So when I added once, it physically. Speaker 2 Added it twice and then denied to. Speaker 1 Save because it tells that such localizable string already exists. In case, if you face this kind. Speaker 2 Of issue when you add localizable string. Speaker 1 Try to save and then get error message about duplicated localizable strings. You can just remove that visible one that you created. Speaker 2 Another one which is invisible will be still saved. Speaker 1 So that's how you can bypass this bug. Speaker 2 As you can see, Creature also as. Speaker 1 ",
      "page": 360
    },
    {
      "title": "",
      "content": "Any software, it has its own bugs. Sometimes bugs are detected, fixed new bugs appeared. So it's normal, more or less normal for any software. Speaker 2 Another localizable string that we will need is about area. Speaker 1 So localizable string for area. Speaker 2 And for its. Speaker 1 Value here, save it. Speaker 2 Area can't be less. Let's try to save. Speaker 1 And my intention when I save each time I add the localizable string is to check do I have any bugs with localizable string. It looks like in this version this. Speaker 2 Bug was finally fixed. Speaker 1 That's nice. So for the price we already set. ",
      "page": 361
    },
    {
      "title": "",
      "content": "Speaker 2 Settings, now we do the same for area. So let me show you what we. Speaker 1 Do for area we will set validators setting for one column. We can use multiple validators so it's possible to make checks with different criterias. Speaker 2 And in my case for the area. Speaker 1 I will use the same validator but. Speaker 2 Minimum value will be 100 square feet. Speaker 3 So it's close to 10 square meters. We think that we will not input any kind of realty less than 10 square meters or 100 square feet. Speaker 1 And that's our limitation here. Speaker 2 And we will use localizable string that. ",
      "page": 362
    },
    {
      "title": "",
      "content": "Speaker 1 We already successfully saved. Okay, now we have this example, save. Speaker 2 It and then it's our turn to. Speaker 1 Test and check out how our data were saved. How well it looks, we can close. Speaker 2 Our editor, go to main app probably. Speaker 3 Let'S reward it just to fight with. Speaker 1 Any potential impact of browser cache issue. Then let's open any record and specially intentionally open the record which has incorrect stuff here. Speaker 2 Now you see that once we finished. Speaker 1 And moved focus out of control, you see we have some checks and this checks displays error message. Speaker 3 ",
      "page": 363
    },
    {
      "title": "",
      "content": "Price can't be less than 50 bucks. Area can't be less than 100 square feet. If we try to save such data, system will reject it tells us we have problems and we have to fix them. Okay, let's fix only price try to save. We still have trouble with area. When we fix area, then our troubles are over and system saves it normally. Please note that if you do something like this and try to save your data Validation works at client side so it doesn't send any messages to server side. Now you see nothing appeared in network tab until we will fully fix our rental price. In this case you see update query executed. So physical data was sent to server side only in case of successful client validation. Speaker 3 So this validation may help you to improve your logic to make it more protected to get rid of like silly mistakes made by end users. Speaker 1 And I think that this is something that will be quite important in your future projects and implementation. Speaker 2 Now I plan to show you some. Speaker 1 Simple topic and it's simple but it's very important because such topic will be. Speaker 2 Quite often faced in your projects. It will be not really directly connected with programming, but it's something that you definitely should know about. Speaker 1 I'm talking about typical settings of columns. Speaker 2 That you need according to some conditions. Speaker 1 ",
      "page": 364
    },
    {
      "title": "",
      "content": "For example, some column must be visible. Speaker 2 Only in case of a certain condition and otherwise should be hidden or another. Speaker 1 Column must be required according to some conditions and otherwise should be optional. And also you may need some like talk about visibility, about required settings or about read only columns. So such Typical settings for columns are. Speaker 3 Frequently faced in requirements from business owners and that's why such functionality was decided. Speaker 2 To implement as a no code Tools. Speaker 1 And developers code such functionality. Business rules Let me show you how you can manage such business rules and I will show you a couple of examples. We can go to modify our page so edit page. Then we go to special button business rules. Please note we have two types of business rules. Speaker 2 Page business rules mainly used for controls. Speaker 1 Visibility, maybe required property, read only property and also we have object business rules here it's called realty business rules, but. Speaker 2 ",
      "page": 365
    },
    {
      "title": "",
      "content": "You should understand this is about object. Object business rules also offer us possibility. Speaker 1 To make some filtering and depending on the type of business row, it will be physically saved into metadata of a. Speaker 2 Page or into metadata of an object. Speaker 1 So let me show you. Speaker 2 Let's imagine our task is quite simple. Speaker 1 To show comment only in case of type is not empty. Speaker 2 So when we add new data, type. Speaker 1 Could be not specified. In this case, comment should be hidden. Let me show you how we can do this. Speaker 2 We can use page level business rules. Speaker 1 ",
      "page": 366
    },
    {
      "title": "",
      "content": "Because it's about column visibility add new rule. This rule will have automatically generated title to be applied to the page and it has triggering condition, page is open or some condition changed. Speaker 2 So we have if scenario and then action. Okay, let's start with if and now we will think of something like. Speaker 1 I should do it a bit better with initial status. Okay, so if our type is not empty, then comment should be visible. Speaker 2 Let's try to do this attribute or. Speaker 1 Data field realty and our type okay, if type is not empty so we can use condition is filled in. If this condition is true, then we will use action show elements on the. Speaker 2 Page and we can decide what element. Speaker 1 Will be shown to be Input column of a comment text comment okay, so if type is filled in comment will be visible. Speaker 3 Otherwise comment will be hidden. Speaker 1 So let's try to test how it works. ",
      "page": 367
    },
    {
      "title": "",
      "content": "Speaker 3 We can save it. Speaker 2 Save our page. Speaker 3 Now and let's check how it will be physically working for us. Speaker 2 As you can see, each time you. Speaker 1 Develop something, this is very important to immediately test it when it's ready and. Speaker 2 When you make many different changes you. Speaker 1 May think of okay, I will do many changes, then I will test them in total. Speaker 2 I do not recommend you to follow this approach, so it's much better and more safer. Speaker 1 ",
      "page": 368
    },
    {
      "title": "",
      "content": "If you will do some small step. Speaker 2 Then you go to your system and. Speaker 1 Start to test it. Speaker 2 Then you do another small step, then you do another test. Speaker 1 The reason is that creature client side sometimes could bring you surprises and it will be not so clear according to. Speaker 2 The error message text in your browser console. To understand what exact part is gave you such a surprise. Speaker 1 So it's better to make small steps and to test it frequently. So once you get and start to. Speaker 2 Get some error messages and you will. Speaker 1 Easily understand that it was caused probably the most latest recent changes and you. Speaker 2 ",
      "page": 369
    },
    {
      "title": "",
      "content": "Should take care about it and maybe. Speaker 1 Revert them maybe to look carefully and. Speaker 2 You will find some errors. So small steps and frequent testing. This is what I recommend to you. So let's open any record. Speaker 1 Type is set, Comment is visible. It's clear the type. Now you see it's a bit uncertain, so it's not cleared and let's set it again. Okay, if you clear it doesn't work. Speaker 2 I think that we have a problem because of initial state of the square column. Let me show you how we can fix it. Speaker 1 Initial state should be aligned with our business rule and in case if we. Speaker 3 Check some condition and turn this column on. So make it visible. So by default this comment should be hidden. Let's select comment, let's set its visibility default visibility not visible and then save our changes. So by default comment will be hidden and according to the business rule, it will be enabled if type changed and became not empty. Let's check it out. We need to reload. Fighting with browser cache. Speaker 1 Clear. Speaker 3 ",
      "page": 370
    },
    {
      "title": "",
      "content": "Now you see our comment disappeared. If we set some type, it appeared again. If we change type, it appears again. Speaker 1 If you clear, it hides. Speaker 3 Hides? Yes. So that's how you can manage visibility and such setting. As you can see, it's a no code setting. So you can make all the settings with your mouse. It doesn't require any programming. I would like you to see another example. So you can also see visibility, editability and required property. And one more thing which is interesting I think is about selecting values in lookups. Now we have selection of manager from contact. We can display additional columns here. For example, contact type. Okay, I'm too lazy to scroll. I will type this. Now you see some contexts have customer type, some contexts have employee type, and so on. Finally, my contacts list will include many different persons and only some of them will represent my company employees. Speaker 3 When I want to specify manager here, I definitely want to specify someone who is company employee and not just a random contact. So I want to make some simple filter here which will help me to select only context with a certain type. And we can do such filtering with the help of business rules. So let's go back to our page, go to business Rules. Now I plan to use object level business rules. So here you see real to business rules which means realty object business rules. Here was page. Now here is object level. Speaker 3 Okay and first of all I will check available action here and in comparison with page level we have more options here and I plan to use simple static filter Business rule Static filter will not require any as you can see static filter will not require any special conditions I mean for triggering so it will be applied always. That's why it's called static. And I will have a column which column I plan to use for filtering. This will be manager column and what filter I plan to use I have to specify it with additional condition. Please note here those of you who use Windows Home probably you may experience difficulties because it was found that users with Windows Home experienced troubles opening this tab and it was simply not possible if you use Home Edition. Speaker 3 So please be careful when you use this home version and just know about this. So this will be temporary not available for you. I can make condition here. Contact type equals to a constant employee. So if this filter will be constantly applied on my lookup, save it. Speaker 1 ",
      "page": 371
    },
    {
      "title": "",
      "content": "And then save it again. Speaker 3 Now I save page and I will reload my main tab and you will see how this manager filter will work for us. Go back. Okay, let's save changes. Close reload this reloading is necessary only to work with browser cache. Let's check. Now let's try to select values. Here you select data. Now you see only context with employee type. Speaker 2 Okay, let's make more examples better examples. Speaker 1 And go to customer 360 add more contacts to make it representative and let's make a contact name something like James Bond and type will be customer. Okay, one more Bruce Lee will be our employee and Bruce Willis will be also our employee. So you will see we have some different contexts, different types and let's go back to our realty, try to select manager system only shows us only context with a certain type. Speaker 2 This is very simple filtering tool. Speaker 1 As you can see we just used only mouse to set up this type of customization. But it's very efficient and that's why. Speaker 2 I think it's important for you to know about it. Speaker 1 Because even if it doesn't require programming. Speaker 2 ",
      "page": 372
    },
    {
      "title": "",
      "content": "But if you did not attend our. Speaker 1 Customization course, you still need to know. Speaker 2 That such type of filtering is supported. Also I can quickly show you another filtering of connected fields like filtering cities by countries. Speaker 1 So or maybe if we focus on us only. For example we can filter cities by states but Maybe for countries it will be more clear and understandable. Speaker 2 So let's go again to our page. In order to filter something by something. Speaker 1 Of course we need to have connected lookups. Speaker 2 Luckily in base product cities and countries are already connected. Speaker 1 Each city has corresponding country reference. Let me show you cities lookup already has connections with country. Let me select fields to display. We have names. I don't need time zone at all. But I want you to see country. Okay, save it. Now you see a lot of different cities from different countries and it looks like data lookups. Data in our lookups is already well, so let's do such settings. I will add two drop down columns to my page and it will be. Speaker 2 Probably we have to start from country. ",
      "page": 373
    },
    {
      "title": "",
      "content": "Speaker 1 Because we plan to input data starting from country providing country value and then USR country copy and lookup. We will use standard lookup. Country that is already present will be drop down list. Okay. And here element code will be also country related. So that's how I add new lookup. Now I will show you CT's lookup. So it will be city confirm lookup. Speaker 2 That will be based on. Speaker 1 It's also CT drop down list. And here we can name something like city. It will be enough. The most important is uniqueness of this column. But city is good enough. Speaker 2 Good unique value for us. Speaker 1 Okay. Is it okay? Should be. I don't like. Yeah, probably there are limitations about the length of this. Okay, so what we have here is country and city and we need to save it first in order to apply. Speaker 3 Changes to the object level. Speaker 1 And so to fully modify our data model properly to take maybe less than a minute our time. It okay, saved. Well, now we go to business rules. So I will show you how we can make a object level business rule for connected lookups. Let's add one more lookup. Action will be apply filter. Speaker 3 ",
      "page": 374
    },
    {
      "title": "",
      "content": "This is a special type of filter. Speaker 1 Which is I think originally designed for connected lookups. And we can specify what column to filter. Obviously we will filter cities by what another column by country. And this editor will automatically detect connections. Speaker 2 Between cities and countries. So it will show us where city. Speaker 1 Country which means country value inside of city lookup equals to value of country. Speaker 2 Provided in our realty page and also automatic settings for clearing when country changed. Speaker 1 Clearing cities when country changed or automatically set country if city was set and for example country was empty. So you can do this also then country will be automatically populated. Speaker 2 So this rule will work good for us. Speaker 1 But what I need to add here is triggering condition. Speaker 2 We need to change such Filter each. Speaker 1 ",
      "page": 375
    },
    {
      "title": "",
      "content": "Time when country changes, so page is opened or some changes and when country. Okay, we can select here is filled in. Then we have to apply this filter. So if country changes and becomes filled in, then filter should be applied. Otherwise you may face some glitches in. Speaker 2 Working with this filter. Speaker 1 Sometimes it will work, sometimes not. Speaker 2 So you should not forget about this condition. Let's save it. Speaker 1 Save page and then we will test it. You will see how it works. Great. You see data was successfully saved, page saved. Speaker 2 Okay, let's test. We need to reward it. And now let's check it out. Speaker 1 So let's say Miami and you see. Speaker 2 Country, you see city. Speaker 1 Okay, Country, States, United States. ",
      "page": 376
    },
    {
      "title": "",
      "content": "Speaker 2 Cities. As you may see, cities are filtered by country. You only see cities. Speaker 1 Oh, Hartford, Frankfort. Speaker 2 Looks like only. Speaker 1 US cities I think. Okay, so now you see it looks. Speaker 2 Looks like. Well, okay, let's take another example. Speaker 1 No country, you see all cities from different country. Ararat, Astrakhan, Baghdad, you see Bishkek, you see Bratislava. Speaker 2 So from different countries from. Speaker 1 Okay, so if you set some city. Speaker 2 ",
      "page": 377
    },
    {
      "title": "",
      "content": "Country will be populated automatically in this case. Speaker 1 But if you clear country, city was cleared automatically. So if we provide some country like Bangladesh, you will see only filtered cities. Here if you change country to something else like Egypt, you will see only Egypt city. So filtering works well. Speaker 2 Let's go to our states. Speaker 1 Now we have to search for Seattle. Speaker 2 Yes, you see it finds and filter works well. So this type of filtering can be. Speaker 3 Done not only for citizen countries. For example, you can make two connected hookups. Speaker 1 One is type of document and second one is for example subtype. Speaker 3 And subtype should have a lookup column. Speaker 1 Referencing to corresponding type. Speaker 3 ",
      "page": 378
    },
    {
      "title": "",
      "content": "And in this case when user specifies type, it will be technically possible to. Speaker 1 Filter subtypes according to selected type. But this canonic example with countries and cities, I think it's the easiest to. Speaker 2 Understand examples so you can also use it. Speaker 1 Don't forget about business rules triggering by changing country. So save it. Probably that's enough for today and we. Speaker 2 Have one more session tomorrow that will. Speaker 1 Be dedicated to our client side. Speaker 2 I plan to show you how to. Speaker 1 Make details and also probably answer your questions if appear. If you ask something about some cases with programming inside of our pages in Freedom UI later we probably will also invest a bit of time into classic. Speaker 2 UI examples and I think you'll be. ",
      "page": 379
    },
    {
      "title": "",
      "content": "Speaker 1 Interested in migration from Classic UI to Freedom ui. It will be only client side, so objects will be the same. I will show you how you can do such migration. Speaker 3 Thank you very much for your time. Speaker 2 Today our session is over. In case. If you have any questions with your. Speaker 1 Environments, with your homework, tell me please. It's important for me to know. Do you have any troubles or other notes, any questions? Speaker 4 I have one. Did we go over. I could have just missed this now. It could have just been me. Did we go over the overriding. I think it was on the list of the. The kind of schedule for each day we had Parent overriding. Overriding a parent method. Did we go over that and I just. Or is that something we have to go back to? Speaker 1 You probably asked about something that you. Speaker 2 Already saw in Classic UI with overriding of methods or this is something else. So can you explain the business example? Speaker 4 ",
      "page": 380
    },
    {
      "title": "",
      "content": "No, sorry, I just saw it on the list on. So you know you have the list of the breakdown of each day. It was an. It's kind of what you open up with this. With the start of each day. Speaker 1 Oh, you mean this one? Speaker 2 This is. Speaker 1 Yeah, yeah. So this schedule is a bit outdated unfortunately. Okay, try to find some time and yes, there are some topics that are not so applicable to Freedom UI and you may find something like alternative JavaScript editors. Okay, I can explain you something and overriding of methods. Speaker 4 That's it. Speaker 1 It was possible in Classic ui, but it looks like fully not supported and not practical in Freedom ui. In Classic UI you could rewrite or interfere into some life cycle stages of page by replacing its like critically important methods. In Freedom UI you can write your. Speaker 2 Own methods, but system does not allow. Speaker 1 You to significantly change this life cycle. So it looks like I tried and. Speaker 2 It looks like when you have for. ",
      "page": 381
    },
    {
      "title": "",
      "content": "Speaker 1 Example some handler and you already know that there is a base product handler which is declared somewhere in parent. Speaker 2 Templates, you cannot replace it with your own. Rejecting execution of all parent implementation. Speaker 1 ",
      "page": 382
    },
    {
      "title": "So in Freedom UI you can write your own part and it will be.",
      "content": "Speaker 2 ",
      "page": 382
    },
    {
      "title": "Just part of all the steps executed.",
      "content": "Speaker 1 In total and you can't break the way how pages code and what handlers are called there until you will write your own control, I think so in Freedom UI we have different conditions for programming. I plan to update this program for. Speaker 2 Our sessions and it's a bit outdated. Speaker 1 Here, but I try to provide you the latest useful material and in the order which looks like the most, let's say natural. So when you do simple settings, then. Speaker 2 You do a bit more complex. Speaker 1 ",
      "page": 382
    },
    {
      "title": "",
      "content": "And so our flow of real topics that we study, I think it's quite optimal for current version. Speaker 4 Thanks Mario. Speaker 1 Thank you Paddy for questions and any. Speaker 2 Any, any difficulties with your Homework. Speaker 1 ",
      "page": 383
    },
    {
      "title": "When you do examples, when you make your sections, Maybe. Maybe you have something to say.",
      "content": "Speaker 3 It happens that most of our participants watch videos like you now and then they decided to process video files much later than finishing of the sessions. So I recommend you to invest some time between the sessions to watch videos and practice. Because in this case you will easier understand our next topics. You will get more experience at that topics and think it will be in general faster for you. So it will be faster boarding faster, let's say getting necessary expertise for you as developers. So at the end of the sessions you'll be able to pass an exam. We call it Fast Track certification, which includes homework very similar to what we do here and test. This test will require some time for you to prepare. Speaker 3 So at the end of the sessions next week, I will explain you some details how we will prepare for the exam, how it will be organized and this is optional thing. So if you feel confident, you may apply for it. If not, you may use Academy website and apply for certification much later. So if interested in preparation for the exam, also keep it in your mind. And if you have some questions, feel free to ask. Also maybe you will want to write me some messages. Here is my email. I will be happy to answer you and support you during your practicing with examples in our sessions. Thank you for your time today. See you tomorrow as usual. And as usual, you will receive videos of today's session very soon, maybe 40. Speaker 1 ",
      "page": 383
    },
    {
      "title": "",
      "content": "Or 50 minutes to get this video. Speaker 3 Thank you and goodbye. See you tomorrow. Bye. Speaker 1 It. ",
      "page": 384
    },
    {
      "title": "",
      "content": "Speaker 1 So today's day five of our development on Creature platform guided learning and we continue to work with some parts of Creature user interface slightly moving forward to so to study some server side items. And also I need to tell you about Classic UI and possibly you'll be interested in migration from Classic UI to the Freedom ui. So what I need to tell you first today, this is about details. Because this is a very important piece of Creature configuration and you will face it almost everywhere. Let me show you what detail is go to customer 360 because it's a good example of details. We go to accounts section and then we can open any account record. Detail is separate entity which keeps some data in connection to our main record. Here we can see an example. Main record is account and detail is account address. Speaker 1 And you can see that for one main account record we can save unlimited number of addresses. So we can put unlimited number of addresses here and they will be usually displayed in a list. And the reason why Creature has details is need to save additional data in connection to our main entity. So our main entity is a single record and then we need to keep information for example about different types of addresses for our customer or different emails. Or maybe it's just simple list of contacts connected to this account. So you should understand that detail is usually based on a separate entity. So account is one entity, Account address is a separate entity, it means separate object and it means separate physical date table. Usually we have one too many relationship between details and main records. Speaker 1 So one account connected to as many detail records. And this physical connection is provided by use of lookup columns, correctly filled in for detail records. Vikrat, thank you very much for confirmation. Thank you for working with your redis and I'm really happy that you finally made your system working correctly. Thank you. And so details, they are usually connected with main entity with the help of lookups, lookup columns. And each detail record has information about its parent account. And that's how system can filter through all addresses and show only addresses related to this currently selected data record. Details are very common in creation. If you will turn on bigger product like sales service and marketing, you will see details almost everywhere. And we have big entities like contacts or accounts and they have plenty of details like addresses in accounts. Speaker 1 We have contacts list, we have also emails or sorry, we have probably it's better to say communications. If you go to contacts open any record, you will see communications detail. So here you see we have mobile phones, email, business phone, but in general we have plenty of Supported communication options and communications are saved as a detail connected with main entity in context. We also have detail named job experience. And when we have several entities, sometimes they are connected with each other with the help of lookups. And that's why and that's how we can make some details. For example, we can look at accounts and see list of connected contacts because contact has a reference to account. Let me show you here Account select. And now you see that we have contacts and they have reference to account. Speaker 1 And that's how we can select a company and to see all its connected contacts. So usually connection is one too many. Maybe some of you will ask about is it possible to make a connection one to one or data connection many to many. Physically this is possible, but you should use for one to one you still will have to use separate object. And for many to many we will have to use supporting additional object which will use two lookups for two connected entities. So the easiest to implement and I think the most commonly used case is use of one to many relationship. And now let's return back. Let's return back to our reality section. So we will study and we will learn how to make ",
      "page": 385
    },
    {
      "title": "",
      "content": "details. Speaker 1 And some of you who already participated in our develop and in our customization course, you already know how to do this and you already saw building details. So this is nothing special for you. But some of you who never attended any of creatio training sessions, so you need to know what detail is how to build it because it's almost the same important as knowledge how to build sections. So I will show you step by step example of building details and I will explain why we need it. The main reason is our business requirement to keep a lot of connected information for our main record. And this connected information usually should be saved in a separate entities. So when we talk about details, we talk about separate connected entities. So let's do some quick and simple example. Speaker 1 In our realty business, we definitely need to speak with potential customers. We need to provide some kind of show for them or our apartments or houses set for sale or rental. And we need to organize these actions. So we need to organize such visits, such conversations. And it's better not to intersect and overlap different visits at same time. So we need to have some kind of schedule for future visits connected to a certain realty record. So it looks like we will have a separate entity called realty visits. And for each house or apartment we will have a list of planned visits for future we can do it with a separate object and I recommend you to create new details for the first make an object for it. Speaker 1 So let's go to our configuration section select our package where we will work on maybe we focus on objects first and we will create manually create new object. So new object requires new good working friendly code. We can call it something like realty visit title will be also good. Sorry realty visit inheritance it makes sense to inherit only from base entity in order to get just six standard system columns here keyfield historical columns. Okay, we do it inheriting from base entity and we can create our own custom columns for our new entity. One of the first column will be connection with parent realty because our visit will have no sense if we are not connecting it to any reality. So let's create new lookup column. Speaker 1 We can call it like parent reality we can name it parent realty so title to be lookup based on reality from freedom UI USR realty and we can make it column required because it's not good idea to keep it empty if we create any valid visit so this colon will be required. We have no default values here, but we have a special lookup behavior. Normal behavior means when we delete value from corresponding reference table from realty Having such connection with any other data table will prevent our delete and we will have a foreign key reference error message. Because we can't delete reality if it has some visits and we have a standard delete behavior. So block deletion. Speaker 1 But in details it's very common that detailed data is not as important as main record and when we plan to delete main record delete data should be deleted. So our child detail data should be deleted without any questions like when we remove some contact, we are not caring about his mails and if it has a couple of males saved in contact communication so we don't care. We also want to delete them as well as addresses or some payment information or something else. So anything which is connected to the main record. If we decided to delete main record usually ",
      "page": 386
    },
    {
      "title": "we are interested in silent delete of all the child parts.",
      "content": "Speaker 1 ",
      "page": 386
    },
    {
      "title": "",
      "content": "So here our reality visit is something that is not very important in case if we delete parent reality so we can set delete records from current object it means when parent reality is deleted, all connected visits will be removed automatically physically. This is performed by help of foreign key at the database and with option cascade on delete. So physical delete performs on the database level, not at application level. Unfortunately you can't handle you cannot handle such delete at application level because it will be triggered and made by database foreign key tools. But okay, so we have parent reality required special set for delete behavior. Good. This is our column for connection between visits and parent reality. Now we have to make some columns that will work for business part of us. So any visit will have date and time of visit. Speaker 1 So we can call this colon visit date time. We can make some default value just to make it easier to set up new values and will be system variable current time and date Default value will be provided in case if you try to add the new record. And it makes sense especially if you want to change for example till tomorrow. But having similar time setting automatical value here will be quite good. So visit date and time it makes sense to make it required because having no visit time, it's definitely not good to visit data. One more thing we may know potential customer this is a lookup. We can call this potential customer. Why potential? Because we already have a real customer for our realty who asked us to help with sale or rentals. Speaker 1 So potential customer is a person who probably will buy a house or will rent an apartment. So potential customer, we don't know who it is. So sometimes could be empty. And lookup is contact object which is a very typical way when we need to get some kind of personal reference. So usually we use contacts for this and for context selection. Maybe we need full scale selection window instead of list and using normal block delete option here. Also you probably will be interested in some very rare cases you may not need foreign keys at all. For example, you do something artificial like selecting data not from a real table but from some data view as a lookup. In this case you will not be able to construct a valid foreign key. Speaker 1 So we have an option do not control integrity which means please do not create foreign keys by default. When you create a lookup column foreign key is created automatically. But if you enable option do not control integrity it means that foreign key will be not created. It's interesting fact that such option was used for created by you see do not control and for modified by. The reason why developers need it is performance. So created by and modified by is usually set automatically by system. You see system variable, it's a current user contact and usually system sets this value correctly. Speaker 1 So such a column is usually not edited by end customer and it means that we have pretty no serious reasons to control it with the help of foreign keys only in case if you try to remove corresponding contact then such created by or modified by columns should prevent this data from Removal. But it's very rare case when you remove contact who previously was a user of your system. So generally we can say that in this example having foreign key is not so critical because value for this column is usually set by system and it's set correctly. So developers also realized that if we have no such option and let's imagine we have probably thousand of out of the box objects for our big base product like sales, service and marketing. So it will produce 2000s of foreign key. Speaker 1 So for created by and modified by for each object, if you had no such option, we will have two foreign keys pointing to contact entity. So now let's imagine you have a database which pretends to be quite fast and comfortable for work for big company. And then you have a table in this database contacts table which has 2000 foreign keys on it. Each time you try to make any changes in these tables, such foreign keys will be invalidated and they will be checked ",
      "page": 387
    },
    {
      "title": "",
      "content": "and it will be a huge performance impact on your database. And each time you do some operations like inserts and updates, such foreign keys are also checked and the contacts table will take a huge time for blocks that is necessary to perform low level database checks for work of foreign keys. So developers decided to sacrifice referential integrity here. Speaker 1 And that's why they decided to make it with no foreign keys. For created by and for modified by and such behavior was inherited from base lookup. Oh sorry. From base entity. If you will search for a base entity in our packages, open it. You will find out that this column created by has option do not control integrity and the modified by also has this option do not control integrity. So this is made intentionally and because of performance. So maybe something like. Interesting fact, you may need this option in very rare cases when you create some artificial lookups based on something that is not a table. Like something that is a database view or even something more weird thing like a programmed stuff at the server side, not a database item at all. Speaker 1 In this case do not control integrity will save you because otherwise system will fail to save your object where it can't find physical data based at your point on selecting your lookup data source. So here we have just standard situation potential customer based on contact. We have all standard settings and the only change was selection window. So full scale selection window selected just to make it more comfortable to select potential contacts potential customers as a context from big selection window. Okay, what else? Probably we need one more column here. This is comment. Let's make a text 200 and comments. Sorry. Yep, title will Be comment. So any visit may end out with something like we need to remember to write down and just to have some notes, maybe some decisions, maybe some ideas. Speaker 1 So comment after a visit could be really helpful if you want to proceed with this realty. So we can have a comment as a text field, very simple, not required and just text value. Okay, so now it looks like our simple detail object is almost ready and we have to save and publish it. Clicking publish as you remember will automatically perform save first. Now you see it and then it will do publish operation and it also takes a couple of seconds. Great, our object is ready. But what we need to do and what is a bit different from maybe you have some experiences older UI and maybe you have some previous creation experience. So Starting from version 8, objects are connected to page object connected with pages with a separate special setting inside of objects properties. Speaker 1 So now you can see pages tab and we have to specify edit page for our reality visit. Obviously we don't have any page for this, so we can easily create with the add new page button we can create new page edit page for our detail we can specify select some parent template that will be used as a basis for our page. Our column set is not so big and impressive so we can just take some mini page example which will also look good if you have not so many columns. So I will select mini page and this mini page offers us possibilities. Okay, we can use some code, let's say, let's put some good looking code like realty visit page title Reality visit page. Okay, maybe we can call it form page just to make it traditional with realty form page. Speaker 1 So reality visit form page Its parent packages realty template is mini page. Great, now we have to use existing columns. As you can see we can add new columns but we already have data model attributes already designed in our object so we can just show it up. So what we need here is visit date and time. Probably the first important column that we need to display. Second important column is potential customer and third one will be comment. Okay, so you may ask me and what about parent reality? It's mandatory. Why don't we show it here? ",
      "page": 388
    },
    {
      "title": "",
      "content": "Speaker 1 The answer is that in case of detail management, when we add new data from the main edit page from main realty page, our parent realty will be already known and we should not allow to change it for user and we should probably should not even show it for a user. So we can hide this column so we cannot show it on the page. And in case of creating a record detail or in case of updating new record or update an existing record or editing record. In all the scenarios we can set parent realty automatically. So we may not allow our user to change reference to a parent realty of an existing visit. And that's why I will not show this column for user at all. Speaker 1 So it will be just hidden, it will be not shown on the page and our reality visit page will look like this. We can see why is there a red asterisk beside visit date and time and parent realty. It means the column is required system will not allow us to save data if required column is empty. Okay. And for parent reality we will guarantee that it will be filled incorrectly. So even if it's required, we will make we will take care about setting it properly in all possible scenarios. So we don't need to show it in edit page. We can show it and probably make it locked just to display and demonstrate that this visit is connected to some parent reality. But we will always look at this page from realty main page so maybe it's not necessary. Speaker 1 This is very common for details and creature to hide parent column from the page at all. So we can save our page now. So save it fully. No business rules, no code, no any special settings. So try to keep it as simple as possible. And when we did it so we can find this page in this list. So let's search for something connected to visits realty visit form page default page here means that it will be used for all scenarios to add, to browse, to edit data. So it will be used for all scenarios. And you can see it's possible to make a separate add record window in case if we need to do it in a very specific way. For example, when you add data you have to specify one set of columns. Speaker 1 When you edit, you want to specify totally another set of columns. It could be used. And also we have an option for different pages depending on some specific field value. This can be helpful in case if your entity is quite big and complex. We have examples of such big complex entities in creatio and one of them is activity. And personally I don't really like this, but it turned out that activity is used for calls, for emails, for meetings, for to do tasks which you can create for yourself. So you can see a bit of different nature for the same entity. So you have one single section and many different purposes in it. Obviously for email we will have a different edit page than for a call and different set of columns, different display and different page design. Speaker 1 And that's why we have this option multiple pages based on specific field value. So for example, activity entity has a field value category which shows us is it an email or a call or a meeting. And depending on this column we can use different pages. And when you look at activities section, for example, you select an email, try to open its page based on this information system will show you email edit page. If you do the same for a call, it will open you call edit page for activity. But now I try to keep it simple. So we will have just one single page for all possible visits. Because we do it and we just need to get used with the details in general, we need to understand them well. So we have this option. This is mandatory. Speaker 1 Okay, finally we finished and we can publish our object again. As you can see, we have to do it twice. First to create it, second to finalize assigning of a page for the object. Okay, great. Now our object is ready. We can close it. Now we ",
      "page": 389
    },
    {
      "title": "",
      "content": "can see that in our package two items appeared. So we have realty visit page, we have object for realty visits. You can find some additional strange items called add ons. And sometimes we have add ons for pages and we can find add ons for objects. Add ons are separately saved pieces of metadata. You can try to open them, but you will see read only text in JSON which represents metadata. We have some a bit more user friendly way to read it. You see read only way and you can see property names. Speaker 1 But in general this is only makes sense to base core creation developers who wants to check if everything is okay with metadata or not. In projects development and the end user customization, add on is just something that is saved in addition for the page or object. So we don't need to modify it. Attempt to modify. We should not remove it from the system. Let it be so it's just a separate stored stuff connected with page or an object. Good. So now we have our object and it's time to think how we can put it to our page and display corresponding data. So we can do this with the help of edit page button. As you can see, it's my favorite way to customize your system and other options. Speaker 1 We have another options like finding your corresponding form page and open it from configuration section to be the same result. Or you can achieve the same result if you go to settings page physically system designer. Then you find application hub. Then you find your realty application. Switch to pages and find form page. So this same way for opening. Oh no no. Not visit reality form page the same way to open the same page editor and I personally prefer to do it from section because it makes less chance to make mistake. And when you click on this to always open corresponding page and you should not focus on its name in the list of pages. Okay, so we opened our editor to design our page. Our task is to display details and details are usually displayed with the items called list or expanded list. Speaker 1 I prefer to use expanded list and this is very traditional for creation because expanded list means you can collapse it and it will take less space if it's not necessary or you can expand it. That's why it's called expanded. I would say it's expandable when it's necessary to see some data from it. So let's use this expanded list component carefully drag and drop it on our page. I will use just free space in the bottom of this tab, but it's also possible to use additional tabs if you want to. You can organize your data stored in different tabs. It's up to you. So here we have expanded list and show part of it includes only settings like buttons and title and so on. And inner part of it represents data list. Speaker 1 Of course we have to specify object first and as you probably guess, we have to find our real table visit object for our detail. It immediately shows us set of columns. So possibly we have to take care of set of columns. And I would like to show here first to be date and time potential customer, maybe comment and then create it on maybe just for reference. I would also display parent realty, then I can hide unnecessary columns. And now you see how we should display our data. We can carefully shrink some columns. Okay, as you can see in Freedom UI system offers us horizontal scroll so we can add unlimited number of columns. We can flexibly design their widths and the horizontal scroll will show us and classic UI does not allow to do this. Speaker 1 And there is no horizontal scrolls in classic UI and only 24 available columns to be displayed. So freedom UI is more flexible here. Okay, so we have this list of data, but what we need to do how did you add the columns again? I just missed it. This plus add the columns and then you can select. Please note the order of how you click here matters. So if you click here and here you will see the same columns in corresponding order selected at your list. I first clicked on visit date, then potential customer, then comment in the same order columns appeared here and you can specify such columns in order to provide default column setup for your detail. It will be nice for your users to see ",
      "page": 390
    },
    {
      "title": "",
      "content": "your detail with Some preset columns so they will easily understand what it is about. Speaker 1 And if it has some data, they will also see corresponding data and they will see what they expect. So here is our list. But also we need to do some additional settings in the right part. This is detail and detail must show us data only connected to his main entity record only for currently selected realty and not any other realty. So we have to make some filtering of page data. As you can see, this information tells us about that we may use it for example for detail filtering. So let's click on this plus and we have to construct simple filter which will be applied for all the data which you plan to see in this list. This simple filter is based one condition. Some column from reality object must be matched with realty visit. Speaker 1 In reality visit we have suitable column parent real and system is smart enough to detect that you should use ID for main record for this. So here you see this filter by page data will be based on ID of realty and it must be equal to realty visit parent realty. That's how we will filter our data and show only visits for corresponding house, not for any other another house. Okay, this filter is mandatory, so you must do this. Otherwise you will constantly see big set of visits not related to your selected apartment. For example, no need to use static filters, but if you want you can apply there. And we have some options like row numbering, multi selection, allowed inline editing, inline insert. Okay, I can forbid inline insert and we will only use plus button to add new data. Speaker 1 We can also program bulk actions for list. So when you operate with a list it's possible to select multiple records and then we have bulk actions. For example, you can program additional actions here and that's how you can do some customization and additional functions that will be running for selected data. They are called bulk actions. Bulk here means that you can select several records and then perform one single action for such records in order to so to process data more efficient. So we have element code here and it looks like our main list part is already set. All we have to do now is to find the small plus button. This plus button is designed to add new data to the detail. Speaker 1 Of course its action will be open new record, it will be new reality visit object and system will find its page automatically. But here we have important setting which column values to set. As I told you, when we create new detailed data, we must take care about parent reality value. So we have to set here some default value for parent reality. Parent reality will have its default Value we have not so many options here. So value from another field and we will have parent realty id. That's the only thing which is suitable here. So when anyone clicks on the plus new realty visit page will appear. But parent realty for this data record will be already set up as ID of our reality. This is very important, otherwise we will not be able to normally create visits. Speaker 1 So please remember this is filling of a column that is used for connection between visits and our realty. Okay, great. No any additional settings. So you just have to remember when you build your detail, you should set up your list and then take care about plus button. That's all. We can save our changes and test how our detail works. We need to reload page just to make sure we are not fighting with any kind of browser cache issue. Let's go to apartment in New Orleans. Now you see our detail. By the way, it's interesting this status of expanded or collapsed system remembers it and it remembers it separately for each user. So if I prefer not to work with this detail, I can collapse it and system will forever remember it. If necessary I can expand it. Speaker 1 ",
      "page": 391
    },
    {
      "title": "",
      "content": "If other users prefer to expand it, they also may use this management and they can collapse or expand only necessary tails. So let's make a quick test of how our detail works. Let's try to add new record. You see default value of your visit date and time was set. Okay, let's set it for tomorrow the same time. Probably we do not know any potential customers, so let it be James Bond. Here is some trick. If you will click on this hyperlink, it will open corresponding contact page. So it's not what you plan. When we select data, it's better to click on the record but not on the hyperlink. So somewhere here double click. That's how we will select data in this column and comment some test comment. Save it. You see the data was created and parent reality was automatically set correctly. Speaker 1 We can copy this data, save it, check it out. You see the parent reality is copyable. It's very important to keep it copyable. So in this case creating a new record was correctly copied previous parent realty. And obviously we can do it one more copy. We can edit any record by double click on it or by clicking open. And obviously we can remove data if not needed. So our detail looks very good and works correctly. Let's check that for other realty records. We don't have this data, so let's go to select and find another realty. Oh, we have something interesting here. Let's check out. You see, our page is hanging now. Probably it's because of browser issue. I just updated it recently. So possibly we have some kind of browser related issue. And also we can close all unnecessary pages. Speaker 1 Maybe it will help our system to work more correctly. Something unusual happens with my browser, with my app. So let's check about its CPU and memory. Okay, I will reward the page fully. This is not a result of adding details, so it's probably some kind of crash. But not related to our detailed data. So now you can see our apartments and visits for apartments were done. Okay, another house in Miami, another data. So we have no data. Let's make for a house in Miami some visit next month. We don't know who exactly will come and we can save this planned visit. So depending on the record, you see corresponding detail values at our visits. You see. Okay, great. So now we successfully made our detail. Of course we have to take care about saving everything on disk. Speaker 1 We have to submit our changes to version control just to finalize this step of our settings so we can like more confidently move on without afraid. Without being afraid of something can be lost in the middle. So I recommend you to do such comments in version control because it helps to keep all your history. And also if something happens with your environment, having such history will be a great help because you'll be able to recover anything that you developed. So in my case, now everything was saved. Let's commit it to version control. We have some data here. We have a lot of items modified. It looks like our section was never submitted to version control. So it means like real tapp edit visits, detail added. Okay, so it would be a quite big commit for us. Speaker 1 And we will sync changes which means pull and push to common repository. And now it's okay, it's done. So we can track our changes at our GitHub repository 7commits. You can see all the history, you see how many files were changed and so on. Each time we do this, you'll be able to track all the history and make control over what is going on here. Okay, so what's next? What we can do next with our details and with our pages. You can program something in edit page of a detail with the same way how we did programming in our big form page. So this is. This page is produced. As you can see we have a button for edit page. We also will be able to do programming of its handlers or validation. So rules are the same. Speaker 1 And also you can use business rules if you want to do Some kind of filtering or simple fields hiding or showing. You can use all the features. So you should remember that our page for detail is based on a separate client module that was created today. It was a reality visit page. So this reality visit form page, as you can see, it's a separate client ",
      "page": 392
    },
    {
      "title": "",
      "content": "module. We can even look at its code if interested. It has its own Vue config view model config and empty handlers, validators and converters. Maybe you have any questions, Maybe you have some like notes ideas or something. And in some implementations you may need to create a read only details. In this case you may hide new button, you may construct your object which will have no edit page at all. And you may also disable editing in list. Speaker 1 So inline edit should be disabled. So read only details make sense when you have some data automatically calculated for it and such data is not expected to be added or modified by end user. Read only details are helpful, especially if you use some kind of integration with third party systems. And you can read data from third party data sources using for example some database to database connection if it's on site and then display such data as a list your pages. Okay, so that's how you may do such details and you may organize them in separate tabs of your page or you can put it down. There is no physical limit on how long you can scroll down. So you can put new items down this page and there are no limitations of number of rows. Let's try to move on. Speaker 1 And possibly before we moving on and work with classic ui, I need to show you something important related to customization of existing pages and also important things about customization of about managing your applications. So let me explain what I plan to do right now. Let's imagine this is very typical by the way, this is a very common scenario. Let's imagine your business user asks you and says hey, you know, you already created your own sections. It's very good we do this. For example, we have realty section, we keep some data there, it's okay. But also inside of our customizations we need to do some changes at existing entities. Speaker 1 For example, we have accounts which represent list of companies and we want to connect such accounts with some kind of third party website where we have a list of our customers and we need to make some connections with it. So we need one more extra column at our accounts section. And simply speaking, we need to add some columns into existing entities. We can do this easily with no code approach. Let me show you how it's possible to do you can open account page, account form page and then you can go and click on this edit page button. Let's try to do this. Let's see what happens. As we're running our system as administrators. So our supervisor user is a member of system administrators role. Now you can see account page design. And you may not. Speaker 1 You may now see some very strange package automatically created and system does not allow us to change it. And this strange package will be used. So it will be created by system automatically. And when we customize something, system will save our changes into this package. Okay, let's agree. Let's allow it to do this. So let's agree for this procedure. So our task is to add one more column to the account. So we will have a text value. Let's put it somewhere here. We can name our new column website code. We can also provide its code for it. Website code copy sorry. Confirm text 200 great. Editable. Great element code should be unique. Okay, let it be developer friendly. So we made our new column. This is very typical. We did not use programming at all. This is only customization. Speaker 1 But you need to know how technically this is done and where it will be finally saved. And how to for example, turn your system back to its previous step, previous stage. If you realize that such change was not designed, was not desired anymore. So when you change like this, you can save it. Also you can hide existing columns. Of course, in this case they will be not removed. You can move some columns. You can reorganize user page of existing section. It's also allowed to do. You can also add a lot of new components on the page, not connect to the database at all. So it's up to you how you do this customization. In my case, I try to keep it very simple. I just added one single column here. Okay, and then we save it. Now I should pay your. ",
      "page": 393
    },
    {
      "title": "",
      "content": "Speaker 1 So I attract your attention that we will finally receive new package. Our customization will be saved as a special type of item into this new package. So let's try to do this and then let's see what finally will happen. This is a fully valid flow that valid algorithm how to customize existing tools. You could also customize it the same by going to application hub, finding Customer360 app and then making changes for a page from there. Okay, so we made our new column. Let's close the page here, open it again. Probably we already will see it. Yeah, Website code. You can test some value here. As you can see, it was correctly. It was correctly saved. Now let's Save it some warnings, but close. Maybe let's hide some unnecessary columns in order to display important for us columns website code. Yes, it's saved correctly. Speaker 1 So everything's good. We can even edit inline edit. We can even do like this and save our changes. So then open it. You see, everything works just as planned. So we managed to create new column. It is displayed in our accounts section. Everything looks good. Now let's go to configuration section. Or maybe it's better to go here to Application hub because it will be more clear for you to see. Let's go to customer360app. Because our account edit page originated from this section. So it was designed in this section. Let's open it. Now we see some checks, some items. Our pages seems not to be changed. So we have the same set of pages as from out of the box. But when we look at number of our packages, we will see all three standard packages, but they are read only. Speaker 1 And once we need to save some customizations system created automatically new package with this strange name and it created several items for it. And such items are not so easy. Let me show you properties. We have special type of object which is called replacing object. It's not usual object, this is replacing object. And also we have special type of item which is called replacing client module. You can see replace parent option is on and this is extremely important for you to understand and feel this difference. So now we are going very close to understand what is replacing object and why it is different from regular object and what is replacing view module or simply speaking replacing client module from any previously known and studied types of client modules. Possibly it's make it's better to start from objects here. So what is replacing object? Speaker 1 Let's open it. Maybe we'll understand it better when we open it. First of all, it's interesting that replacing object it has replace parent option on which clearly states that this is not a usual regular object. Replacing object is used when your original object is present and your task is to customize it. But original object is not in your package and the original package is not editable. In our case, account entity was designed somewhere in base product creation packages. It was additionally customized in Customer360 packages, but they are read only if you want to change and save something. We have to use replacing object and save it into our package into new package. This package now is editable. It's very important. Also it's very important that in replacing object, parent object is mandatory. And now you see value here. Speaker 1 Parent object is account and replacing Object code is absolutely the same. This is important rule of creature architecture. So when you replace some entity, its name remains the same, you can change its title. Moreover, it was used in base platform bank software products where original account was replaced and sorry, it was renamed with a another name called legal entity. But physically it was still account entity and it's still the same table and the same logical name at program code. So only title was changed. So when you replace some entity, you can change its title, but you cannot change its code. Okay, and the code should be remaining the same. And personally I would like to make it not editable. ",
      "page": 394
    },
    {
      "title": "",
      "content": "Speaker 1 As you can see here, this editor offers us possibility to change its code, but physically system will not allow us to save it and it will show us big red messages when we try to save such changes. So I think that this editor should not allow you to modify code in case if you work with replace an object. Okay? So code must be the same as original one. What we have as replacement, we have a lot of inherited columns. All the columns from original entity are shown here. We can slightly change them, we can change their title, we can modify their default value or make it required or not required. But we will not be able to rename original column, we will not be able to change its lookup property. Speaker 1 And in general it's not recommended to change its type, even though system offers us such possibility to change the type in its subtype range. For example, if original type was text 200, then potentially you can extend it to text 500. But I do not recommend you to do this because you will face some additional unexpected difficulties. So it's possible, but I think not so feasible. So it's better not touch types of columns when you make replacing objects. So the main reason why you need replacing object of course is creating your own columns like we did here. So this is our own new custom column website code. And actually this website code is saved into our report place an object. All inherited columns are obtained from parent entity. So we cannot remove inherited columns and we cannot edit any property. Speaker 1 So we cannot rename inherited columns. We can only change its title. Our custom columns are shown here in columns list. And usually the reason why developers create replacing objects is need to add your own columns. Sometimes replacing object is created because you want to change some common properties like title of the object, like some behavior settings or maybe change of access rights settings. When you replace an object, you can modify access rights, behavior change. And we have three types of access rights permissions related to objects in creation. Access rights set for general operations to allow or disable selection, insert, update or delete operation for the object. Speaker 1 In total we have record level access rights where some records can be editable and others will be protected and will be read only and some other records maybe will be only hidden and shown only for developers and also for some rare cases you can also use column level protection of data where some columns are shown and other columns are hidden and other columns are read only. So three levels of access rights protection and when you make a replacement object you can also change such permission set. Okay, so the main reasons Generally we have two reasons of using replacing object, making your own columns, or customizing and changing some properties of existing object. What is also important for you to know is that replacing object is saved into your own package and it represents some changes that you add into existing structure of your entity. Speaker 1 This can be done. You can see it clearly if you go to configuration section. Let me explain. Let's go to all packages, search for objects and look for account object and make it strictly searched by equals condition. So only if object name equals to account it will be shown here. Now you can see we have some origin of it. Origin of account is somewhere in CRT core base. If we open its properties we will see that it was inherited from base entity base object. It's the same base object is title base entity it's code and this is not a replacement, so no replacement. So this was original creating of new entity named account. Speaker 1 ",
      "page": 395
    },
    {
      "title": "",
      "content": "But then after creating it in CRT core base package we had several reasons to do changes in completeness package, in email mining package and in some other packages including this weird package related to Customer360 app made recently. So you should understand that we have original structure of the account entity and then we have some add ons added to it. Finally our last addition will be from our customer, so from our editable package and it will be like a final layer of all the settings. As you may guess, the order of application of such layers is important because if this one is applied later than ours, so this one will declare final values of certain properties that we need. So the order of applying of changes is really important and usually this order follows package dependencies Diagram. Speaker 1 So if our package is somewhere at the bottom of the structure, our changes will be added the last and it will be no problem for us to specify final properties of our object, for example disable some access restrictions or change some column titles. Final structure of account is formed by its origin plus all the replacements. It's interesting to mention that at the database level, we have just only one data table. Let me show you. This is our set of databases D1 database which will work. For now we have account data table. We can extend and see its set of columns. Now you see for account table we have a lot of base product columns and the last one is our website code that we added recently. So replacing object does not create any new table. Speaker 1 Replacing object uses existing table and adds new columns there. If you will remove replacing object from your system, logically your new column will disappear physically. It will be present in the database as a kind of leftover, but it will be not so critical, not so important. And I think that end users will notice it at all. If you will recover your package again, you will still resurrect this column logically and it will be available at application. So that's how replacing object works. And you can use it to customize any existing part of creation objects, including some base objects like base entity and base lookup. So you can customize quite flexibly, even some, let's say top level objects that are used for many of inherited child items. So you can use replacement for any existing object. Speaker 1 And Adrian is asking very interesting question which I plan to move on here. So you work with some account page and you would like to keep your settings saved in a proper place. Yes, Adrian, I will show you now and I'm just going probably not so fast with explanations here. So now we have Customer360 app and for this app system created editable package. And we have some contents in this editable package. We have some customizations made especially for this app. Let's imagine that you have more apps like you have sales automation app when you add. So for example, you have case management app. It's a base product for service automation. You have some lead generation, some opportunity management. So let's imagine you have several apps and you want to customize most of them. Speaker 1 By default, system will create separate editable package for each scenario, for each case when you want to customize some existing app. But obviously you may not want to work with such many packages. Also you may not want to work with packages with ugly names. Let me explain what I'm talking about. About let's reload our data, go to all items and now you see package with some ugly name, usr CRT customer app and then some strange unique suffix added to it. So the same name will appear on our discord. Probably already appeared. Let me check it out. So I expected to see here. Yes, the same strange name appeared on our disk. Very soon this name will travel to version control and it will be not so comfortable for other developers to see such a strange package. Speaker 1 ",
      "page": 396
    },
    {
      "title": "",
      "content": "So your question and Adrian question is asking about is it possible to use your own package instead of such ugly stuff that was created by system? And the answer is yes, we can manage this. This is not obvious and you have to perform additional steps to enable such management. So let me show you how you should do this. Let's go to lookups or we can go to studio lookups. Okay. And then let's search for recently added lookups first. Sorting by date of creation. Okay. Then we can register special object as a lookup. This object is named something like packages. Yes, this name is package installed application and this is quite not obvious. I only knew this from my colleagues. So this is kind of a technological secret and I think it's not very easy to find. Speaker 1 But if you know that it exists, so you will enable it. Of course, package installed application and we will provide the same name for our lookup and try to save it. Okay. This is only developer tool, so we do not need to transport such registering of package to test and production. We can open contents. And now you will see all installed applications, all existing packages and you will see settings for all packages. Are they primary for a certain app and are they used as a default current package? Current package means editable package that is used to save new customizations there. So let me show you how we can do some tricks. Now we have customer 360 app and we have this trench package is used as a primary and current package for this app. Speaker 1 So any new customization that we do in customer360 will fall into this package. We don't really want this, so we want probably to remove this package at all. And maybe we would like to use our existing new package which is a dev package. We have it Dev Classic package. So we would like to use dev Classic package for this. So we can try to do this replacement instead of this. We can clear and then search or maybe just type dev Classic package. So we can put our existing package as a target default package for Customer 360 customizations and confirm our decision. Of course we will have to take care about package dependencies. Now our dev Classic package has no dependencies, but it will appear so it will receive it soon. Let's go to our application hub now try to customize customer360. Speaker 1 Go to advanced settings. And now you see our dev Classic package is connected to this app and we can see properties of this package. Let's check. What about dependencies? You see that System automatically added Customer360 app as a parent dependency to this package when we made changes, when we customized this stuff. So we did something like this. Oh, something like this. Yeah. So we did this setting and it was important. So now we have automatic changes in package dependencies. Okay, great. So you can see Dev Classic is connected to this app. And probably the last step that we will need to do is we have some customization made in this ugly package and we can transport it to our Dev Classic because we don't want to use this package at all. Speaker 1 We want to get rid of it and we will continue customization of Customer360 in our classic package. Andreen, is it what you were asking for? Okay, great. Thank you, Adrian. So now we have multi action move to another package. You should be mentally ready that this movement takes significant time because system performs a lot of checks and sometimes it fails because of missing dependencies or some other technical reasons. But in general it's quite safe too. So you will probably run it fully correctly if everything is okay with dependencies of target package. So now I'm trying to move items created in my ugly package into Dev Classic. Then I will I plan to remove my ugly package at all from my system. It will be empty and I can safely remove it. Speaker 1 As you can see, this transfer takes significant time because it looks like system performance performs a lot of checks of items that we process and it makes sure that we have no other connections to this item. So it does ",
      "page": 397
    },
    {
      "title": "",
      "content": "something like probably some excessive work. But okay, it makes it successful. Now you see, our customization traveled to this Dev Classic package. Now if we go here, you see our customization should be present here. Probably it's because of caching. So let's reward. Yes, now it's here. This information probably will. Let's reward this part. Oh, it still remembers of this connection. So we can remove now this package and this line also will be disappeared. Let's let me show you. So this ugly package, now it's fully empty. We can remove it, delete it fully. Also removed from the apps package. Remove takes time. Okay, please. Speaker 1 Now it's empty. It should not take a lot of time. Yes, successfully deleted. So we have no ugly package anymore. We have some correctly created packages, good names. We use this good named package as a target package for our customization of Customer360. Now you see everything looks good. Our changes that we made are saved in a proper place so that's how you can manage connections between packages and applications. I agree this is not transparent, so let's close open this register. Okay. Package installed application. You see no ugly package at all. We see our dev Classic as a target for this app for realty. We have only one package, so you can easily add the new data here if necessary. To connect some packages with some applications, you can do whatever you want. Speaker 1 Of course you should be quite rational here without obvious mistakes that you can prevent because this is developer oriented tool. If you intentionally do something incorrectly, it will not save you and it will try to do what you're asking for. So you should consider yourself before making changes here because it's like architecture but you can manage. Thank you Adrian for your questions. Okay, it's time for us to have just a short break, probably five or seven minutes. And Adrian tells us about the question. Customize account page and Freedom UI generates new package. Yes, it was in. In January 2024 and the answer was from Ryan Farley where we had probably no such tool. So he advised us to do something like movement of items and then just use this loop up. Yeah. Yeah. Thank you. Thank you, Adrian. Speaker 1 Okay, thank you for all of your active questions. Let's make a five or seven minutes break, we'll refresh a bit and then move on with next topics. Thank you. Speaker 2 Hi. Speaker 1 Yes, hello. Speaker 2 I have a. I have a small question I have. Yeah, so I said we use the two lookups. Speaker 1 ",
      "page": 398
    },
    {
      "title": "",
      "content": "Okay. Speaker 2 First one is for country and second one is for city. Right? So in the drop down button we have one plus icon is there if you remember. Speaker 1 So what about which lookup you're interested? Is it the main realty or. Speaker 2 Yeah, main reality. We have country and city. Right? Country drop down and city. Speaker 1 Drop down type. Speaker 2 No country and city. Speaker 1 This one. So I can't hear. I can't hear properly. Country and city. Okay. Speaker 2 Yeah, yeah. So we have a plus icon over there, right? Adding. So what is the use of that? Or can we hide that button if possible? Speaker 1 So you ask about if it's possible to manually create new city for this. ",
      "page": 399
    },
    {
      "title": "",
      "content": "Speaker 2 Okay, Can I, can we hide that button? Disable that button if possible. Speaker 1 This. Yes, sure you can. I just forgot to do this. Yes, let me show you. We can go to edit page. We can find corresponding lookup country and there is an option to allow add new value. So we can disable this. And for city we will also disable enabling new values. So just tick off save it and we will only be able to select from the list without possibility to Add any new countries, close open. Now you see some selection. Now you see only available columns. Thank you. Rakhi states oh, we have New Orleans, no corresponding city. Okay, would it be. Thank you for a question. Any other questions, feel free to ask because now I plan to show you something which will be a final step about user interface. Speaker 1 And you should know that we are working with Freedom ui, but maybe you will also need to work with some classic UI old projects. So you need to get some basic understanding of how classic UI can be managed. And before proceed with classic UI customizations, we need to make some preparation that is necessary and very important for classic ui. So in order to create new section in classic UI you need to prepare target package. We already did it. Here is our dev classic package. But also you need to tell creatio this package should be used and we will go to system settings, then we will find a special system setting named current package. Open it and by default you see custom here as a current package. Rakhiv is asking can we change the color of collects icon? Speaker 1 Oh, I'm not sure because it looks like this is hard coded thing. So possibly you may find somewhere in CSS value for this color. But it looks like this is an image designed somewhere in the app. So it was not supposed to be customizable, I think. Let me show you with CSS it's not possible. Probably it's because of this is an image. Okay, let's try to understand. Let's try to do inspect. Then you see we have so inspect some marker, some kind of div and what else? It looks like we have some image. As you can see, such images are hard coded, but you may find where they are saved. So possibly you can replace such images with something else. You see the current source. Speaker 1 So you may try to replace actual storage of this image and you may design your own and that's how you will finally make corresponding change. Rakhi, is it clear? Of course it's not recommended way of customizing creation by changing of its core files, but physically you can try to replace this file with something else and check it out how it works at your environment and then you can, if it's on site, you can also get this file to the other, let's say test and production environment, so it may work for you. You probably will not be able to apply such change at cloud conditions, because cloud engineers will definitely will not agree for changing files somewhere in core part of Creature and it will be not saved into your package. Speaker 1 So this is part for core which Is not designed to be changeable by configuration changes. But if you really want, you can replace files on disk with another ones and that's how you can do this. Thank you Rakhi, Very interesting question and let's move on. So I just wanted to explain you that in case if your plan is to use classic UI customization, then you will have to take care about current package system setting. By default it is set to save settings into custom package and we plan to save it into our dev classic. We should do this before starting of any ",
      "page": 400
    },
    {
      "title": "",
      "content": "customization. And also take care this system setting is not cached. Cached settings are loaded at the start of user session and cached settings if you change them. So you will need to fully apply changes. Speaker 1 And if you change cached setting, you will have to log out and log in order to read changed values properly for your user session. In the current example, current package is not cached, so we may change it without logging out. Okay, great. So we can change save it then. One more tip that you need to know before starting Section Wizard. We may experience difficulties because of recent changes in object model without compilation without application restart. So we will need to restart our app in order to guarantee normal work of Section Wizard. Especially on save object operation of Section Wizard. As you remember, restart of the app now can be done quite easily with maintenance tools made by our Swiss partner. So restart application. This is necessary to normalize our server side cached data about object structure. Speaker 1 If you recently made changes in your object and even published it still may keep some incorrect settings at application server level cache. So we need to do this restart. In this case everything will work. Okay, good. Now we go to settings. Then we find item called Section Wizard. And this tool is designed to create new classic UI sections. I will quickly make some simple example not as complex as we made for Freedom UI just to demonstrate you such tool. So I will do it fast. May you may not reproduce all the steps after me. So it's up to you. Would you like to do this or not? So I will make some new Classic UI section. When we do this we have to provide its title. So let's call it Realty Classic. Speaker 1 And we have to be very careful with the code because code will not be able to change if we finish its input. And that's why we have to type it correctly from the first attempt. Realty Classic. So this is our code. Once we move our focus out from this control, you will see system will think for a bit and then we will not be able to change this code. So if you made mistake, then you only cancel and run section wizard again. Workplace. Okay, let's put it to the same studio workplace and background icon. Let it be green so it will be our icon for the color of our section icon. Okay, Great. Then we go to setup page. We need to do some minor settings. I'm still a bit afraid of what may go wrong ",
      "page": 401
    },
    {
      "title": "when I save my section wizard section.",
      "content": "Speaker 1 So I will only change something like a name column. I will provide some minor change copyable setting, no any other settings. So I will just go back and try to save my section in case if it saves correctly, I'm happy and I can continue customizing of my section. But in case if it fails to save and it will be obvious that I need some more steps to prepare my system, then I will not lose time for setting up columns. So saving objects is the most critical step of this procedure. If it goes correctly, then we will successfully continue our customization. If it fails now, it's correct. Yes. Great. So if it fails, we will make something like discovery of what went wrong. But now in our case it looks like ",
      "page": 401
    },
    {
      "title": "everything is okay. Great. So we saved our section correctly.",
      "content": "Speaker 1 Now we can edit it. And editing a section is much safer than creating it. So we can go to edit page. Now we can customize it. And I will quickly add similar columns as we had for Freedom ui. So decimal column drag and drop to be our price. You see a bit different user interface, but the same sense. We add new columns. We provide title code, no element code and just save. I provide area I can use lookups. As you remember, we made a lookup for type of our reality. We can call this column USR type. The reason why we use prefix is the same. So system asks us to keep prefixes for our customized stuff bus. Telling that he has two leave no problem. Thanks you. Thank you. Thank you. And you will watch videos. Great. We will finish soon. Don't worry. ",
      "page": 401
    },
    {
      "title": "",
      "content": "Speaker 1 Today's Friday and probably tired a bit. So copyable value type based on existing lookup, realty type or Classic UI Drop down list block behavior. No redundantly no hiding titles. Everything is okay here. Save it. Great. I will show you how we can make new lookups in Classic ui. No existing lookup so we have to make offer type. Code is USR Offer type and no existing lookup. So we will create one and as usual we'll provide title for this new lookup Realty offer type Classic ui. So this is how we provide title and code for our new created object. That will be Inherited from baselookup and register it as lookup by section wizard, drop down list, standard behavior for delete. No any other options? Okay, great. And finally we can make some kind of text just to make comment. Speaker 1 By the way, I will show you some trick which is supported in Classic UI but is not yet performed in Freedom ui. Comment here in their name is comment. But what is interesting here we can make a special option called multiline text. You will see what will turn it into the column. So multiline text has a very interesting feature which is not implemented in Freedom Live. I will show it for you. Multi line text. Obviously it's designed to make possible multi line values. Here to be said, maybe it also makes sense to have 500 just to make sure we have big enough value. But multi line text has also very interesting property. You will see it soon. If necessary we can also add an object for detail and register detail. I will try to keep it simple. Speaker 1 We have business rules here similar to Freedom UI and also we can program in JavaScript code if necessary. And let's go back keep it simple and save the changes. So I want you to see how Classic UI section looks like. In Classic UI we have much more objects created for a section. Now you will see in configuration section close properties of package, probably reward it. Okay, saved correctly. Now I reload section with configuration so we can go to dev Classic sort by date of modification and you will see how many new objects were recently created. Let me show you. We have objects for file for folders for in folders for tags feature. And also we have object for main Classic reality ",
      "page": 402
    },
    {
      "title": "section and we have an object for our lookup created.",
      "content": "Speaker 1 So we have much more objects for classic UI section because such things as tags, folders and files are saved in a separate dedicated objects. And we have more tables for this for the database. And in Freedom UI such tools are incorporated into commonly used objects for tags for files for folders and it makes it more efficient storage. Okay, so let me show you how Classic UI section looks like. We will have this realty classic section but it probably will fail when we try to open so we have to reload because of Classic UI is much more sensitive to cache issues. So you should always reward your page if you do any client side changes In Classic UI you see it's still faces some troubles. Let me show what's happening there. Or maybe we just have to wait. No, it doesn't look good. Speaker 1 Okay, let's go to another page. Go to reality classic page. Yes, we have some minor issues here, but in General it works. Okay, try to add new record. Here you can see how Classic UI edit page looks like. I need to tell you that in Classic UI we have a totally different background frameworks used for user interface. In Classic UI we use EXT framework EXT versions. So you see it's Quite old, probably 10 years old framework and it's quite old, but it works. And it's a JavaScript framework which keeps controls and some UI stuff. And in Freedom UI we use Angular so classic UI uses EXT and TerraSoft core framework. Freedom UI uses Angular framework, so it's totally different and module structure is similar. But still we have some serious differences. When we create new record we didn't assign any default values so far. Speaker 1 ",
      "page": 402
    },
    {
      "title": "",
      "content": "So okay, let it be Paris Ren. The type is apartment. Offer type is not filled in so far. And here is what I wanted to show you. This is voice input and speech recognition piece. So you see it works only in Classic ui. In Freedom UI we don't have it so far. We don't have it in Freedom UI so far. And recognition quality is quite high as you can see. So you may use it for Classic UI implementations. And I think that in Freedom UI system developers should develop something like this and enable it In Freedom UI now we don't have it and offer type is empty. So we have to probably take care about offer type for Classic ui. Speaker 1 This one it's empty so we can simply add sale and rental for our Classic UI and also we can bind all data to save it into our dev Classic package. So this is important step because such data also should travel to our test and production. Now if we go to Reality Classic you can see that offer type can be selected and we can save it. Okay, looks good. Some minor steps. Minor preparations for our section we can go to Workplace Setup Studio. Now we have our section for Classic UI quite far in low rows we can put it upper. Maybe we can also bind the contents of this workspace and at the same IoT save it successfully. View details Three items were created but you remember. First one will be information about workplace. Only one data row, nothing changed. Speaker 1 This one will be about position of a module in Workplace. Let's check Reality Realty Classic. Great. Third one will be about access rights. That's okay. Rakhi asks about voice languages. It depends on browser. And also I need to tell you this voice recognition feature is browser dependent. For example, if I try to do the same in my Firefox. Let me show you my Firefox here. It still doesn't Work in Firefox. Let me quickly show it for you. It works in Edge and in Google Chrome recently. So I asked some colleagues. It looks like it works in Safari as well, but unfortunately it doesn't work in Firefox. Let me show you Firefox. Here you see no support of this feature. So it's also browser dependent and you should check and test it before you advertise this for your customers. Speaker 1 Because it's a browser dependent feature and it looks like it depends on HTML5 elements or something like this. So some browsers does not. Some browsers do not support this and that's why you see it's not in any browser. Okay, thank you, Rahi. And what about languages? So so languages now let me remove this part now. So languages are supported and I successfully used other languages to normally detect it. You should use change. So if you change your user profile and change to another language, then your voice input recognition will also support chosen language. So yes, it supports other languages. At least two more languages which I tested. It worked well for me. Thank you Rakhi for your question. So finally we had an example of Classic UI section. We can set columns for our ",
      "page": 403
    },
    {
      "title": "section list set fields to display in Classic ui.",
      "content": "Speaker 1 We have different approach for setting up columns. So we can provide column settings type. Maybe you need price offer type. Okay. And finally we can have a menu comment. Okay. And then we can save it for all users. When you save columns in Classic UI for all users, then it's possible to use data binding tool to help us to remember such column setup in our package bind column setup for Classic UI save it into our target package. And by doing this we can transport setting of columns for this list to other environments. So it will not travel automatically. Only if you make corresponding data item. It will save it and you should do it default settings. So you should save for all users and such default profile will be saved as data item to our package. Speaker 1 You can find it here reload and that's how we can change and transport Classic UI columns setup to test and ",
      "page": 403
    },
    {
      "title": "",
      "content": "production. This one is saved in sysprofile data at the same with details. Okay. Probably today's Friday and it's enough for today. And I would just want you to see a couple of images of what client modules in Classic UI looks like. So let's focus on clients modules only. Now you see we have section page and we have edit page. This one section page looks like a bit weird. We have a not so good looking name of it. We can try to modify it. Let's try to fix it so we can rename Quest 6 something section. But we should do the same code here and here. We should do it very carefully. Save it. Now we will have better names for our client module. Speaker 1 Also it will be renamed on disk in our dev classic package. You will see realty classic section. Yes, this one renamed and this one was also renamed. So you see we have full correct renaming on disk as well. And after doing this I recommend you to instantly check it out if your section works well or not. Because now you see we have previous URL. Probably it will fail now and we have to probably simply go back somewhere like this. Go to classic UI section. Now you see another URL. So now it works. But we still miss columns because of changes and previous column setup was set for previous name of the client module. That's why we have to do it once again. Okay, Price type, offer type, maybe comment. Then we save it for all users providing so called default profile. This is important. Speaker 1 After we do this we can bind columns to our package creating one more data item in our classic section data was bound successfully close it. Now we have to review what we got in our package in order to remove previously created unnecessary data item here old one is not needed anymore because it represents old values, old settings which will be not so practical. You see, because we renamed our module and old name was remembered here. Even if we actualize it, probably we will see there is no data for this. Oh, it's still here. But we do not need to keep such data in our package so we can remove it. It doesn't represent any useful data for us. This one is correct data with new client module. Speaker 1 So when you rename client modules because of ugly names, take care about quest API column settings because you will probably have to review them afterwards. Okay, so final quick brief look at our client modules in Classic ui. So in classic UI section page looks like this. When you open it you will see this code. You will see define word, module name, dependency array, factory function and some body. So this is a body of our function which mainly returns an object with some set of settings. In our case it's almost nothing. So we have no any customization here. Classic UI pages are also inherited from some parent templates. That's why we have a lot of common functionality ",
      "page": 404
    },
    {
      "title": "and no need to implement this functionality each time in each separate section.",
      "content": "Speaker 1 So our functionality is now in parent one and all the buttons for classic UI section, like new actions, view buttons, grid folders, feature tag, everything is inherited. That's why we do not need to customize it and that's why this code is so small. But for page for edit page code you see much more significant difference. So you can see set of sections module name, factory function returns a bit bigger object and you can see set of columns here. So they are different from Freedom ui you should focus on Diff first because diff shows you information about user interface changes and each item in this diff array represents one control as the same as we had in Freedom ui. Speaker 1 So if you need to change something you can do it carefully here or better to rely on Section wizard because it will do it better for you than you do manually. And in Classic UI Section wizard doesn't allow you to use all available components, so you should be so in general Classic UI programming is harder because you can do some additional components and display them, but Section wizard does not support it. So in some cases, for example you want to add a button, you will find at Academy articles this definition of a button, put it to your code, provide corresponding handler and methods will be used as a place for your JavaScript functions to handle events of your controls. So in ",
      "page": 404
    },
    {
      "title": "",
      "content": "Classic UI you can also do almost the same programming as in Freedom ui. If really needed, just tell me. Speaker 1 I can show you a bit more examples, but I believe you will not focus on Classic UI so hard and this is just for brief review for you. Okay, that's all for today. We just briefly mentioned Classic UI and we probably need to pay some attention on migration from Classic UI to Freedom UI because it will be very typical tasks for most of our customers who started questiqi Solutions and unfortunately such migration is not automated yet. So today's session is over. Thank you very much for your time for your patience and questions. Next week we will start with some migration questions from Classic UI to Freedom UI and we will move on with server side programming. So we will do some server side examples, we're writing C code, we will do integration with Visual Studio, working with File System and so on. Speaker 1 As a final step for today, it looks like I unnecessary caused it. I have to remember everything we did in File System of course then I will submit it to Version Control just to keep all the history. And any of you who wants to keep how our session proceed, you can also watch our repository at GitHub. Thank you for your time. Our session is over. In case if you have any questions feel free to ask. Our session is over and goodbye. Thank you. Have a good weekend. ",
      "page": 405
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number six of our development on Creature Platform Guided Learning. Today I want you to see some additional materials related to Classic UI and Freedom UI and migration. And then we will fully switch to work with server side. So recently we managed to create a fully separate Classic UI solution. And this was a Classic UI section and list inside of this is called also it's called a section list. So we have a set of data records here. When you open edit page, you see Classic UI edit page with columns components. And we decided not to focus too much on Classic UI because this platform will be like deprecated probably somewhere in future. Currently it's supported, currently it's working. Speaker 1 But in future so it will be not developed, it will be not improved, you will not see new tools or components for the Classic ui. And most development is focused on Freedom ui. And you also remember some interesting feature, some feature for voice recognition, you remember we still missed it in Freedom ui. And you also can do details, you can program buttons or actions. Everything is explained at Academy. So if you ever need it, you can look at it. Also if you go to client module part for Classic UI you will see that code in Classic UI in general is I think a bit more simple than in Freedom ui. Because in Classic UI you can also make your items in diff array for example like a button. We will do it later. Speaker 1 Then you can create a handler as a function add methods section. And in general I think it's easier because more transparent work with object model, more transparent operation with view model data. I will show you more examples later. And this is just a quick brief introduction for you. If you will work with some Freedom Classic UI pages in this case, this possibly can help you. So what I want to show today, this will be a very typical task for future I think. And this typical task is your customer who already runs some Classic UI section successfully. And customer understands the future is in Freedom ui. Customer wants to use some Freedom UI features, tools, components and pretty look and user interface. So customer asks you to migrate some existing solutions from Classic UI to Freedom ui. Speaker 1 Unfortunately we don't have any automated procedures for this. And especially this becomes additionally complex if you have some programmed code in Classic ui. So I will show you the most practical way how you can switch from Classic UI to Freedom ui. I will also show you some settings and system settings for this which impact on how you see your system. So you'll be like more expert in it how to make this migration. So as my example I have realty Classic section implemented as Classic UI and I will show you how we can switch it in Freedom UI and what we have to do for this. So Freedom UI or Classic ui, the only difference is at client side. So we have different types of client modules. Speaker 1 Such items which have section in their name or page in their name, they usually designed as Classic ui. If you look at the pages and you see form page or list page, it's a Freedom ui. Of course, physically they are totally different. When you go to list page, you will see Page editor like this, it's a Freedom UI page. And when you will go for example to a section page, you will see only code because it's Classic UI and you can configure Classic UI sections only when you go to corresponding section and run Section wizard in it. That's how you can get to Page Editor in Classic ui. But now our task is to make an example of migration. Speaker 1 ",
      "page": 406
    },
    {
      "title": "",
      "content": "At the source part we have Classic section, this one and as expected result, we would like to make one more section, but showing the same data in Freedom UI server side part, for example, we have objects, we have maybe some server side logic, maybe we have some business processes. So server side part will remain the same. Data, items, lookup contents, everything will be the same. The only change we expect to do will be our user interface area. So set of client modules and related code that is behind such items. So I will show you how to migrate from Quest CQI section to a Freedom UI section. Please note that it will not it will be not necessary to forever forget about Quest ui. It's still possible and different users may define themselves which type of user interface they want to run. Speaker 1 So it will be possible to switch. First of all, I need to tell you about some important settings related to such view. And I would like you to see this background like frame. You see this name which shows you some funny, some fancy background image, some kind of item which is called desktop and you can select and edit it. At the left part you see set of sections workplaces, you see for different workplaces, different contents and you also can see some image background and the top line here also use set of buttons items which are designed in angular and they are items of Freedom ui. So this left and top area is managed by Freedom UI and we can switch this background frame setting to Classic UI if we want to. Speaker 1 So let me show you system settings and this system setting is called like Freedom use Freedom UI interface. This setting generally turns on or off this background frame stuff. And if we just for test purpose want to turn it off so use Freedom UI interface was originally on we turned it off and it's cached. So in order to apply this we will need to log out and log in again. Now you will see how system will look like with the Classic UI set of section and the top search bar. Now you see system how it looked when we had no Freedom ui. You see a bit difference. Here you see that we still have different works workplaces. It looks like we totally miss Workplace which is based on Freedom UI. We miss workplace with customer360 from here as you can see. Speaker 1 And we can also go to Workplace Management System Designer. This page go to Workplace System Setup. Let's check our customer 360 workplace and you see use only in shell in like in usual words. If we want to translate it into something that you can easily understand, it means that use only in Freedom UI background settings. Now it's not Freedom ui, it's Classic ui. That's why this workplace disappeared. Okay, so you can manage how you would like to see background which is a Classic or Freedom ui. Okay, so we can go back because we're interested in migration now. Speaker 1 So we need to enable Freedom UI back, use Freedom UI Interface, open it, set it again, save it, close it and yes, let's log out and log in again to see back our background Freedom UI setting, which is default setting now and which is recommended to work with Freedom UI sections and also with some Classic sections. It's still supported. You see, we have Freedom UI background, but we have Classic UI stuff inside of it. What I wanted you to know next is Special section designed to simplify such transition between Classic UI and Freedom UI sections and user interface. Now you see special section special setting for page which is called UI Management. And we can specify setting for Freedom UI for different roles or users, which makes possible to do it quite flexibly. Speaker 1 For example, some users are really stick to some Classic UI solutions. They are not ready to switch to Freedom ui. They work with some basic UI sections and it's critically important for them. So you can manage this stuff for ",
      "page": 407
    },
    {
      "title": "",
      "content": "different users. And also we have Form Page Preferences which is also designed to simplify the selection between Freedom UI and Classic UI and only in case if both options are enabled for a section. So in this case you see by default Freedom UI uses Freedom Pages, Classic UI uses Classic Pages by default and we have some exceptions for this. But personally I consider this stuff as over complicated. And once you started to migrate from Classic UI to Freedom ui, I think that it's better to finish this Migration and then do not use Classic UI and only invest into Freedom ui. Speaker 1 So this is a page which will be temporary important for you, so it will be not forever for you. And finally you will switch to Freedom UI all your necessary business sections and then you will feel quite okay with it. So you will not really need to switch back to Classic ui And that's how I recommend you to follow this personally. In our Inner Academy department in Croatia company, we still use some Classic UI solutions, but our plan is to migrate to Freedom UI and then to use only Freedom UI sections. So and this stuff like page for settings will be temporary useful for you I think. Okay, let's go back. So finally we have currently for Classic section, we only have classic user interface, so we have no option to display Freedom UI pages. Speaker 1 So how we do this, how we can make a migration, I will explain it right now, I will show you, I think the easiest way. So let's go to Settings, then go to Application Hub so we can create new app. As you remember, application is like a new top level setting or like application entity which may include one or several packages inside. We already have Freedom UI reality section, but we don't have any classical representation for it. So when we create new application, system will create new package to create. If we ask, it will create new section for us. So now I will show you how we can create new application. We can call it, we can make it based on records and business processes, but we will name it Realty Migration. So it means that we migrate from Classic UI to Freedom ui. Speaker 1 We can compose kind of icon for it. And we will use this very important feature link to an existing object. This is very important. So this is a key feature of all this migration idea. We will use existing realty Classic UI main realty classic entity. This one will be main and it will mean that system will not create new object for us. It will use existing object, it will create a new package, it will save all our application information into a new package. It will make dependency from real to classic existing dev classic package. And finally we'll have new app but based on existing object. And let's try, let's create it. Icon color is okay for me. So let's move it. This will be not so hard because system didn't create new objects for us. Speaker 1 It only uses existing object and then creates several client module. So I don't expect it to last longer than 20 seconds. So let's see how it works for us. And then you will see the main idea of migration. So Generally it's pretty simple. You will have a new app, you will have template for list and or edit page. And then we will have to manually set it up according to our expectations. So you can see there is almost no automation such migration unfortunately and a lot of hand work is expected here. So let me show you how we can do this. So we have data models. Our data model has no new objects, but it definitely has an existing object because it's based on this reality. Okay, let's go to ",
      "page": 408
    },
    {
      "title": "easy part. List page I think is easy part and it shows some columns.",
      "content": "Speaker 1 We can hide unnecessary columns. We can add the columns that we need you. Now you see all our classic object columns are here. So we can specify say okay, we want to see name, price, type, offer type and comment and then date of creation. Order of selection is important here. And we can hide this column. We can also hide this, we can shrink, we can move something if necessary. We can swap columns positions if you want. So now this is easy part. We only made our list settings for freedom UI page. Physically this page is saved. Let me show you this page. Page. ",
      "page": 408
    },
    {
      "title": "",
      "content": "Page here is saved into new package and its parent page is somewhere in template code and title is quite good. So we can save it, no problem. Speaker 1 I prefer to control what's going on at configuration section because probably I'm too stick to development and I don't really trust only no code tools. So I always want to check what is going on there. And that's why we go to corresponding new created package. You see this package must have dependency from dev Classic. Yes, has it. And this package now includes no owner objects. So it uses existing object from parent package from dev Classic. And you see no created objects here. So we did not customize our object model so far. So we use 100% of all existing columns from classic object. So data model is the same. User interface part is the only change here and we have list page changes. Now I will work with form page. So list change is okay. Now let's work with form page. Speaker 1 Form page is Freedom UI edit page for a section for an object. And as you can see it has its own properties in our package code title. Great. And we can specify columns as we wish. We already have all the classic UI columns, so we only can just drag them at its place where we expect it to work with. So let's go and display types. This is list of existing columns. So such columns were already added at this stage where we created in classic UI we have comment, we don't have any Other columns that could be useful. Also, it's interesting to mention that you see such notes here representing that colon was already added to the page. Speaker 1 So you will see such node if colon was already shown somewhere and you will not see it if colon is present in your object model but was not shown on the page here notes for example, the colon which is designed to work with attachments and that's why it was not shown as a separate component here and I do not plan to show it. Okay, so in general it looks like this. We can also try to specify drop down for types. Drop down for offer types. Okay, great. We did not create manager for this object and when we finished we can just click save. As you can see, even if we had some business logic in Classic ui, this business logic is not automatically migrated into Freedom ui. Speaker 1 There is so big difference between such platforms and code that now developers did not implement any kind of automation and transition or business logic that is designed in Classic UI and you want to see the same in Freedom ui. So if such logic exists, you will have to reprogram it Working at code source code part of the client module. So I already saved it. You can close it. Now you see some changes. We can control what's going on at our package and that's how we can test how it works. So I expect to see new section somewhere here Migration section. Now you see the data which previously was shown in Classic UI also available in Freedom UI user interface. You can try to add the new data record. But now you see still you see Classic UI page. Speaker 1 This is a result of some browser cache issues. Okay, let's cancel this log out, log in, go to Freedom UI section. Also I would like it to be present in my. Let me show you in my studio Workplace. So let's go to Workplace Studio. I'd like to add my migration migrated section. We will find it Realty Migration Only sections which were not present here are shown. That's why only realty migration is shown, because Realty and Realty Classic are already done. Okay, migrations is somewhere at the end. So let's rearrange this as usual and move it upper just below the classic. We can also bind this workplace and save it to the same package where we originally saved it. And system creates corresponding three different data items for us. Okay, we trust that everything saved correctly. So we have three ",
      "page": 409
    },
    {
      "title": "sections.",
      "content": "Speaker 1 ",
      "page": 409
    },
    {
      "title": "",
      "content": "Now let's go to Studio Realty Classic and Migration is somewhere at the Antifa world. I expect to see my sections on their places. Yes, Realty is our new Freedom UI original setting Classic is our Classic UI original stuff. And migration is our Classic UI data shown in Freedom UI user interface. Trying to open the edit page shows us Freedom UI page for migrated stuff. So now we made our example with migration and we successfully implemented it's in user interface. So you see that this is a simple and quite straightforward way of how you can do this migration. You will have more difficulties with transferring of business logic making your own filters. Again if you made some filters for dropdowns. For example, in Classic UI it's possible to use programming or to use business rules. And business rules are not migrated automatically. Speaker 1 So you will have to implement the same settings that you made for Classic UI again manually at Freedom UI pages. But having the data stuff the same. It's so doesn't take too much time because your data is data model is ready. And what is interesting, we have special parts of section like folders like tags and notes. So nodes will be taken correctly from Classic UI part. You will see attachments here. And notes is a special component which is missing here and that's why you do not see it. But files will be shown here. So in Classic UI special component to show your files is code. So this detail. Oh, now it's failed. Yeah, because we probably. So as you can see, it's quite hard to make it work at the same time where you work with Classic UI and Freedom ui. Speaker 1 So it's really hard to. Now we switched to Freedom UI and that's why Classic UI edit page is not working normally. But for different users it's possible to set up. So Classic UI open the page. As you can see in Classic UI I open the page and I see Freedom UI edit page. Because my current setting is to show Freedom UI page and because of Freedom UI shell is activated. So you see this background, top panel and left panel are in Freedom ui. And because we see some background here and because it's made on Angular. So Edit page was chosen to be shown in Freedom UI even though we opened it from a section which is in Classic ui. So I understand this is kind of messing with different types of ui. Speaker 1 So finally when you do migration, you will use this help of Application Hub. You will get new package for your migrated stuff. From Classic to Freedom we will have set of client modules and all logic that you miss. You can implement with the help of business rules, with the help of components that are available as no code tools at Freedom UI and not available as no code tools in Classic ui. And also you Will be able to write your code for migrated pages to implement the same functionality that you needed and that you previously used in classic sections. So if you have any questions about this migration, please tell me. Server side part like business processes, like web services, like some C Sharp code, it's the same, so it operates with data model, it doesn't really depend on the type of user interface. Speaker 1 So server side part of your migrated stuff will be the same and you just need to check that it still works as expected. In case of any questions, I would be happy to hear. As usual, video recording is performed. So if you missed some part or if you so just watch this later, all the videos will be available. Peggy? Yes. Questions please. Speaker 2 ",
      "page": 410
    },
    {
      "title": "",
      "content": "Yeah, I have a question. Is realty. Sorry, not realty. Is Classic UI ever. Would it still be deployed to new customers or is it just mainly targeted towards legacy customers? Speaker 1 Currently we position Classic UI as still like working tool, but we do not recommend to create new solutions on it. So it's like you have an old PC and new PC and you think about installing some program. Of course it makes sense to install it on UPC unless you have very serious reasons to use Classic UI for it. For example, you already have some marketplace add on which is very useful for your business, but implemented in Classic UI and is expected to be used in some Classic UI sections. So if you have some strong reasons like you stuck with some quasiQL solutions, then it makes sense to continue its development, to improve it, to advertise to your customers. But if you have equal chances and new customer and new project, of course it makes sense to look at Freedom UI first. Speaker 1 Because in Freedom UI you have in like in several times more available. No code, controls, components and Freedom UI will be developed in future and it supports or is going on. Classic UI is now supported only for existing components. No new components are created for Classic ui. We still have thousands of customers with running Classic UI solutions and it is quite good. So customers are happy with running what they have. But it's about future, it's about development and improvements in future. So if you have choice, of course it's better to select Freedom ui. If you don't have choice because of existing circumstances, then you can decide yourself and choose Classic UI if you do some customizations. That's brilliant. Speaker 2 Thanks Amelia. Speaker 1 Thank you Paddy. Thank you for your question. Okay, so now you know how to do first steps. Actually we also face the same stuff in our inside like team work and automation. Inside of Creatio we have several big creature based solutions inside of Creature company and it's also so we also like face as most of our customers we face such upgrade needs because Freedom UI is now like primary user interface and we still have a lot of Classic UI legacy. So we do some planned work on improvements from Classic UI to Freedom UI and we still work with some sections in Classic UI because of too many systems, too many changes to be performed. And one day we plan to switch from ",
      "page": 411
    },
    {
      "title": "Classic UI to Freedom UI in most of our currently used sections.",
      "content": "Speaker 1 And we have some tools as I showed you that intended to help you with it. But personally I think that once you started to switch, it's better to make it quick and then to continue improvements already in Freedom ui. So not to be too long in this intermediate stage where some users are working in Classic, others are working in Freedom. You will have double time for support of this intermediate stage. So it's better to try to make it shorter and to implement something like minimum value product in your Freedom ui, move your users there and then improve quickly, improve all necessary remaining things that will make your users fully happy. So not to stay long in this intermediate step. Speaker 1 Okay, so if you have some real life examples, some kind of like practical interest and practical experience with the migration also tell me, it's interesting what you think of it, what unexpected outcome you have. Probably so anyone I ",
      "page": 411
    },
    {
      "title": "",
      "content": "think may have something unusual and expected and even in creation we sometimes can't implement all possible scenarios. So if you will have something unusual, just tell me, I will try to help with it. So we have to switch from our client side, probably already get tired of it to some server side features. I will try to explain and to make this transition coordinate quite smooth. And now we will talk about more developer oriented things and more related to programming at Creature server side in C Sharp, using dotnet framework and talking about compilation libraries, file system and so on. Speaker 1 So probably I have to start that in any package. Now we see we have some set of items of different types. So we have items with different types. If you try to add an item manually, you now will see we have objects and we also studied what is replacing object. We have pages, so client modules of different types. And also we have replacing if model which means replacing client module specially designed to extend and modify existing pages. And we already studied this one, we did not study source code, we will do it a bit later. And we slightly touched the question of making business processes. So I need to show you some items and explain where they are actually stored and how they actually work. So when you operate with objects, we already know that it doesn't. Speaker 1 So object is a server side item, but its changes are applied easily without need to compile. So generally C code is not so let's say heavily used for objects and replacing objects. Of course, C Sharp source codes, if you design it separately in source code item will definitely require some configuration. So it means that when you develop something inside of item name source code, you will not be able to immediately start it. You need to run a special procedure called compilation and physically it means that creation handles some C Sharp sources at server side and when you want to apply them and when you want to implement and apply changes. So you will need to compile and ",
      "page": 412
    },
    {
      "title": "creature is capable to collect C Sharp sources of its compilable part.",
      "content": "Speaker 1 Finally to compile and get executable DLL libraries and then use such libraries at its website. So C Sharp sources definitely require compilation. All JavaScript part this all this JavaScript part obviously does not require compilation because it's a set of JavaScript files. They are executed as interpreted code at browser side. So when you save and apply any change in JavaScript part in client module part, it also does not require any compilation. So this is interpreted part fully. Business processes in general, such items as business process it's designed as interpreted setting. But for some processes you can add the C Sharp code and make it compilable. So in some processes, let's say we have plus minus. It means that some processes can include compilable code and we can run it and we can use such advantage of compilation and very fast execution, but it's not mandatory. Speaker 1 In general, it's recommended to have as less as possible for code in your processes. Because processes are originally designed to be a no code tool and possibility to code into it. It's not its primary purpose. The primary purpose of a process is to make your business logic a set of steps that you can easily construct with using of your mouse and which will not require programming and then you can get your business work done. But you can also use C Sharp code inside of it. And that's why we can call business processes as partly compilable. So I will show you example rest and swap services. They do not require compilation because mainly they are metadata used inside of business processes and user task is a C Sharp programmed item that requires compilation. So now SQL scripts obviously are not compiled items. Speaker 1 Data is also metadata, not compiled and import. We can import dll items if they are written in.net and add them to our packages and use them in Our compile bot stuff. So if in general such DLLs if we import them are included into compilation, so we can consider this stuff as involved in compilation. Now you see only four types of items that ",
      "page": 412
    },
    {
      "title": "",
      "content": "somehow touch the compilation and in general that's how we can say that creation has compilable server set. Also probably also need to tell you that objects can potentially include its compilable part. But now it's not recommended to be used. And in general this is feature that's still supported but probably will not use it. We will talk about object programming and possibility to use C Sharp compatible code there when we will talk about event handling at object level. Speaker 1 So in general C Sharp sources for sure some business processes and user tasks they are compiled and finally they are turned into. Let me show you what they are turned into DLLs that you can find in Bin folder here. Or you can also find DLLs as a result of compilation in many packages. For example, we made dev classic package files bin and here is our DLO of a package compiled as separate assembly. So why you need to understand such files, DLLs and so on. Because now we will talk about server side functionality and you need to know how it turns into something that system can execute where you have to search for some sources and you need to like understand it in very general ",
      "page": 413
    },
    {
      "title": "things so you will know where to find some parts of execution executable stuff of creation.",
      "content": "Speaker 1 We will make an example now and I think that the easiest possible way to demonstrate how you can write and run C Sharp code at creation platform is to make a business process which will execute C Sharp script task into it. I intentionally avoid making our own C Sharp sources at the beginning. So first I plan to show you how we can make process with some piece of programming inside of it. We need some package for this. I prefer to do it in my realty package. This is Freedom UI solution. So one of our main packages here in total. Now you see we have three packages in our solution and it's not the end. So possibly we may have more if you want. You can also minimize number of packages if you play with you remember we studied it with the search rack setting. Speaker 1 Or maybe it's better to say lookup package installed application. It's possible to minimize number of existing packages for you if you connect all your editable applications with some packages that you already have. And we already did it avoiding creating one more package for Customer360 customization. So this is something that we already studied. You know how to find it just to find and register an object named package installed application as a lookup at lookup section. Then you will be able to handle all your applications, all your packages included there. And you can replace current package for some apps making system saving your application customization into a certain package. Okay, so what I plan to do now select my Freedom UI USR realty package, add the business process. Speaker 1 I need to explain that what business process is because some of you probably already have experience with customizations and some of you probably already know that business process is a server side functionality which is designed to automate some business steps that you expect to be performed by system. And in general business processes are interpreted. It means you construct such kind of diagram and then ask system to run it. System will read your diagram structure step by step and it will execute your diagram step by step. So in general business process is saved as set of metadata settings. Technically it's a text with all necessary information about its structure. Speaker 1 And we have a special process engine, so it's a backend server side item quite important and very big which is capable to get such metadata and execute it step by step according to the diagram items. Okay, let's start. So I need to provide a code usr and I need to explain the business sense of my future process. My business sense will include some calculations and also I will work with database. So I also plan to connect and to use one example for different purpose. And this example will be used not only to demonstrate how you can run C sharp code in creatio but also to demonstrate how you can write some a code that operates with the creature database and which operates with the ",
      "page": 413
    },
    {
      "title": "",
      "content": "creature data model using its own native tools. For this I will explain it later. Speaker 1 So my business sense is to make a process which will do some calculation at server side. And my calculation will include selecting some data and calculating average price for realty record. So my process name will be something like Coke Average Realty Price process and the title of the process will be Calculate Average Realty price. Please confirm do any of you follow me directly at the session or you just watch it as video and then you plan to do your own steps? It's important for me to know how long delays I should provide for you and how I should say make poses or not. So if you follow me just live during the session, please click Please type plus in our chat it will let me understand that I have to make poses for you to do the same during the session. Speaker 1 If not just type Minus which means you are only watching and I can do it faster. Okay, thank you. Thank you. Monica, Adrian, Eddie. Thank you to share. Okay, it looks like someone from you also following me. So I will not go too fast. Now I made a process with a title and the code. No any other changes and plan to save it in my USR realty package which is used for Freedom UI example. It also makes sense to name my beginning of the process. I call it like start. And here we will have successful finish. So normal end of the process. Okay, save it. As you can see, first time it takes a while to save it. But in general, now our process represents a diagram which has a starting point. Generally process will start from all items which have no incoming flows. Speaker 1 So if your process has no incoming flow, it means it's the start of your process. So take care. If you accidentally drop items on your diagram without incoming flows, it will be treated as a beginning. So please be careful. Okay? So my plan is to show you not all the process engine tools, but only developer part of it. So part where it makes sense to write code and include some, let's say developer skills into your product. Because also Business Process Engine and General Process Editor has a lot of no code tools which we will also use but without explaining all the possible functions. So I will show you only major things that we will need for our example. So my main focus today is to show you items that are included in development. Speaker 1 In general, you know that Business Process Editor has two types of items that you can add. System actions which are executed quite quick, they do not require user feedback and they are executed automatically at server side. And we have items called user actions. User actions are designed to show some page for a user, usually waiting for some feedback after it. And user actions are designed to stop your process execution for some time till user will respond something till user will provide some input or will confirm that user gets some output. So user actions will make your process much more interactive. Okay, we have some other types of items like starting events, intermediate events, finishing event and logical gateways. So I will show you on the developer part of it which you need to know if you're really interested in like becoming a process expert. Speaker 1 You can also consider going to our customization course where my colleagues teach how to manage processes. So what my plan is I user. I use system action script task, the only item in all business process which requires coding in this diagram. So this item should be carefully put on the diagram. I can intentionally show you how you can do it incorrectly. Like this. Then you move it like this and then it looks like you added this item to the diagram. But in reality this is not correct. I will show you that this item does not say connect to this flow. And if you do it like this item has no incoming flow. So it will be started at the process beginning, not as you plan. And that's why you should take care of it and put it properly. ",
      "page": 414
    },
    {
      "title": "",
      "content": "Speaker 1 Now you see when you slightly move it then you correctly put it on the flow. So you should practice a bit with placing items on the diagram and making sure that you do it correctly. Now this item has incoming flow, it has its own C sharp body. And we have some notes here, but it's only for long lasting operation. And then we have finish item. So what we can do here, this is a C script that physically will turn into a method of automatically generated class. Creature is capable to generate such some C sharp sources for it and then it's capable to compile them. Speaker 1 So now you will see that we can write some C sharp code here and then save apply changes for our process and it will turn into automatically generated class and our code here in this C sharp script will turn into a method. It will not take too much time for us because I already have some pre developed examples for you and it will be server side NDPTS schema query for calculation. So I already have some example which will work for us. Probably I should paste it into our chat and paste it for you because it's quite big. I will put it into parts because Zoom has some limitations on chat messages size so we can take chat messages. Probably we will slightly need to replace names here like this, but you will see it. Speaker 1 Okay, so I copy and paste this code to the editor. We can also expand this editor to see like in more comfortable ways. And if you ask me about is it possible to use modern powerful editors like Visual Studio or Visual Studio code to type code like this. Unfortunately for business processes it's not intended to be used so it's not supported. And for business processes writing a short code here in this editor in general it's okay. So you will not suffer too much by writing just 10 or 20 lines of such code. But if your plan includes to run very complex calculations, including different classes, including a lot of other things, libraries and tools, it makes sense to implement complicated logic separately. You can use C sharp source code for it and then just to create corresponding instances of your classes. Speaker 1 Probably also using a tool called class Factory and you may create instances of classes that will Work as helpers for you. Then you can just make corresponding setting and run corresponding methods. That's how you may keep this code quite small sized and do not need to create very complicated logic just here. So it was not intended to be used for complicated logic. It was created with ideas of using of existing classes and making this code not so big. So if you need big logic, please implement it separately as normal classes with source codes where you will be able to use Visual Studio to develop so you will have comfortable conditions for it. And here it's not so comfortable. I agree this editor is not so powerful, but you can bypass this disadvantage because of not writing too much code here. Speaker 1 Okay, so I will save my code example. It's not finished yet. I will just show you what happens if you try to save. So if you have a changes in your script task and you save, your process system asks you to compile here publish means start compilation and I do not plan to do it right now because my code needs some improvement and I need to explain what is going on and explain you step by step what is happening here. So in general I need to explain you like common idea of what we are doing. The common idea is to run a business process which will accept some arguments at the beginning and then we will do calculation of average realty price based on our existing data. But as you may guess working with realty data, we have different types of data records. Speaker 1 Let me show you a bit more examples like apartment in will be an apartment for sale. Okay. And yeah, it should be reloaded probably. I just feel okay, it's apartment and this also is an apartment for sale. So what I wanted to show you we have different types of realty like houses and apartment. They have different pricing values, they have ",
      "page": 415
    },
    {
      "title": "",
      "content": "different pricing models. So it's not good in general to mix apartments and houses. Also we have different offer types like sale and rental which are totally different. So it's totally incorrect to mix values for rental, monthly payments and full cost of some realty records. So it's not correct to mix them and try to calculate some average price because between it. So we have to do quite smart filtering. Speaker 1 We need to take into consideration only records with a certain type in order to split apartments from houses. And definitely we have to filter data according to offer type splitting sales from rentals. So when we do this average price calculation we will need to have filters or offer type to include only rentals or only sales and general realty type to include only apartments or only houses. And then we will calculate total Amount of all selected records, total price. Then we will divide by total area of them in order to include and consider different areas for different objects. So we'll count, in general, we will count like average price of a real to per square foot of the area. And that's how we will finally get our result. So the real sense is just counting similar objects and getting average price per area. Speaker 1 And physically how we do this is the C Sharp code written in this editor. And yes, I agree that if you don't know C Sharp, it could be quite hard for you to write it without mistakes. So if you type some code here, if it has mistakes, system will not show it immediately for you. For example, if you write something like this with a missing name of your method, so if you do some mistake with spelling, then you will note about it. So you will know about this mistake only when you start to compile. So unfortunately there is no background syntax check that will show you with a red color that you have some mistakes here in this text. But it's designed to be quite small and it should be quite obvious. So we do not think that it's a real issue. Speaker 1 Okay, so let me explain in general what is happening here. I plan to operate with creation database. We have two different ways to operate with the database. And now I'm using the approach which supports entity data model. Simply speaking, IT supports items like objects and respects object structure, object columns and references and everything that we design at creature orm Object relational model ORM of creation is based on objects and we can design them when we save and publish. Object structure is applied to the real database tables and columns. So that's how it works and working with this class entity schema query Class means making selections of data records from creation data model, respecting objects, respecting all their column structures. So using this information. Speaker 1 Another approach which we will study a bit later is based on direct database selection from its tables without use of object model. So we will be able to write down our own selects some columns from some tables where some conditions without taking care of support of object model. But now this approach shows you this possibility with support of object model. And this is one of two major approaches to get data. There are some advantages of using such approach and it supports access rights restrictions. So if this code is running under single user credentials, it's possible that user will have no enough access rights to operate with data. So if you run your data selection with entity level with support of object model, so it will restrictions, it will read no data if such Data is not available according to access rights. Speaker 1 Also Entity schema query supports caching at server side. If the same data is obtained too many times at the server side, it's possible to organize your code in the way that this data was first obtained from the database and all second times it maybe will update will be taken from the server side application cache and that's how you may do your selections more efficient. So entity schema query supports caching. Also it supports paging when you need to process a very big set of data records and you prefer to do it by parts working with portions of data pages and entity schema query also supports complex query structures including hierarchical queries. That makes sense when you ",
      "page": 416
    },
    {
      "title": "",
      "content": "operate some data which can be displayed in tree view. Okay, let's not go too hard and too deep. So currently simple answer. Speaker 1 Entity schema query is a class which supports object model and it has only one single purpose select list of records from the database. It has some arguments when we run its constructor. We have several overloaded constructors for this class and it has arguments. One of them is quite standard so you will always use it. And second argument is a text representing our object code. As you remember our code is USR realty so we have to correspondingly modify this one. So you should do this at your own. I will also note it in chat and this is how we can create an instance of our class which will be used for data selection of our entity schema query. We have to specify its settings, we have to make it work properly for us. So we need first to select columns. Speaker 1 Also you may ask me if we type this code like this how we know about present functions, methods properties and so on. We have some Academy server side documentation. Let me show you backend development.net classes Reference Go here and we have set of cluster libraries for creation. Server side you can search for entity schema query class. Here you will see all of its definitions structures so you will see all of its constructors 1, 2, 3, 4 four different overloaded constructors. I'm using this 1/3 one and we have a lot of public properties. A bit below you will see public methods and so on. So if interested you may find this SDK information at Academy website and we'll go back to our code. I agree. Currently it looks like a bit boring stuff so I try to go through it quite quickly. Speaker 1 We only make sure that we have the same columns as we plan to work with and we don't have any obvious rude mistakes here. So let's look at our reality Object just to match our columns we need to select price and area. Here we have USR price USD column and USR area. Okay, so it looks like the same. We can add columns to our query. You may also face a method named addall schema columns. But I strongly warn you from using this method because when you add all schema columns may happen that you are working with a quite big entity with hundreds of columns and without thinking you can add a lot of columns which you will never use later in your code. So it's better to save system resources and do not add all the columns until you really need it. Speaker 1 So it's better to always add only columns into your selection which you really need to analyze later. In my case I need two columns, price and area and making such methods to our entity schema query will result into adding couple of columns. So the part of our selection statement that we will finally start at the database overcrowc select then set of columns that we do from our realty table. From this table is called root entity which is the first one which will be used for construction of our query. It's possible to use joins and add other columns to our selection. But in my case I need just very simple example. I will use the only one table. In general it's possible to make joins with other entities and in my case it's just not necessary. Speaker 1 But it's possible you can use this argument as a special column path expression. Column path may include joins if you use lookup columns of your main entity. In this case it's called direct join or if you use lookup columns of join the entity. In this case construction will be a bit more complicated and it's called reverse joins. If interested I can show you where I can get more information about this ORM programming. So let me show you database tools. No, no, no. It's about architecture probably second no, it's about architecture, Object events, data operations, Direct access, ORM overview. Yes, somewhere here. Speaker 1 ",
      "page": 417
    },
    {
      "title": "",
      "content": "So we have root schema which is the main from table of our select statement and it's possible to add connections to other entities and using direct connections when you select city, you can join to the sanctuary countries to get its name or you can use reverse connections when you have account and you would like to. Or in this case it looks like you select cities and you would like to join all accounts from this city. And this article will let you know more about it. Something like theoretical stuff. In my case it's pretty simple so I will select only one Table one Couple of columns from this table, no joins at all. And here is how I do this. But then I will need filters because my plan is to select only data for a certain realty type and certain offer type. Speaker 1 I plan to get corresponding values for my filters with the help of no code tools. So I expect to get such values. I will show you how to operators process parameters a bit later. Now we consider we getting it with a special get commands from process parameters. So we get couple of guids type and offer type and then we make filters. Such filters are made with the create filter with parameters method, which is I think the most popular method for building filters for entity schema query. And this filter condition is pretty simple. Column equals value and finally our where statement will look like this column equals one value and another column equals another vote. By default, a logical condition to join all the filters we have in filters collection is logical and that's why we do not modify it. Speaker 1 Because we know for sure that by default our ESQ filters has end logical connection logical conjunction operator. That's why we have it without any special setting. So if you want only for debugging purpose, you can get SQL text from your query, so it's possible it's supported. You can get SQL text and we can save it and then to use it for some display, but only for debugging purpose, especially in like especially highlight this for you because for real execution you do not actually need this SQL text. It will work even without your asking of SQL. And this is just for your better understanding of how selection is performed. So this will be necessary only for debugging for us. Speaker 1 So when we finished with building entity schema query, adding columns and adding filters, we can consider at as it's done and we can run the main function for selecting data. This is getentity collection method, which finally returns as some collection. Also you may notice that we use special arguments here and here. And this argument is called user connection. This is very important instance of a class which represents current user connection context. So user connection is unique for each user session. Even if you have supervisor user and you started your system twice, for example in two different browsers, you will have two different user connection instances for this. So user connection has a lot of useful properties like current username, current user id, current user contact and some system stuff like information about database connection, some security stuff which is also important to know. Speaker 1 So generally when we user connection in our code it represents current user context and this is mandatory to operate with creature database. So each time when you will run any kind of query that you want to be finally operating with your database, you will have to provide user connection because this one is like in general what you plan to select. But user connection is an important argument which tells the system who exactly is running this query. System will include access rights permissions if necessary if this user is not an administrator. So user connection is a very important context information for system and it's mandatory for any database related operation. Okay, we finally got our collection as a result, this result is set of records. Each one represents an entity class entity represents one single data row of a certain object. Speaker 1 ",
      "page": 418
    },
    {
      "title": "",
      "content": "And as we get this collection, we have to process it line by line. So we can use for each statement or there are other ways to process collection. In my case I prefer to use for each and we use it for each row or as many rows we have in collection. We will have as many runs of our cycle body inside of our cycle. We can have this entity reference which implements just one data row of the collection and we can run. So this entity record is actually a supports an interface called Entity I entity and that's why it has methods. So we can run methods like get typed column value. Get typed column value lets us to get certain value of a certain column from our data row. Speaker 1 So simply speaking, this is the line how we get exact decimal price from our data. And next line is getting the same approach for getting decimal area. We have some counters here which we use to collect all the prices and all the areas. This example is pretty simple and so I'm just going into so many details only for those of you who probably have not so much experience of C Sharp. So you will understand in general how it works and you'll be able to reproduce it and fix it if something goes wrong. Finally, when we finished we'll have counter for prices and for areas and then total result will be a result of division of all the prices by all the areas and we will have a final result and we will save it into a certain parameter. Speaker 1 Currently it looks like our code is ready. We don't have corresponding parameters so far, so possibly we have to implement it and then save and publish. But it looks like we need some like say five or ten minutes or break. So let's make it break and then we will continue this stuff and you will see that finally it's not so boring. And I will also show you how to debug such code today. So let's make a break. If you have any questions in the break also please note please Type them or just ask. I will come back in less than 10 minutes. Thank you for waiting. Let's move on. And now we have to think of how to actually use this code into our process. So we have this part and we fixed all the items here. Now we have to think of parameters. Speaker 1 C Sharp sources inside of business processes can get some data from process interpreted part and then return some data into processes interpreted part. The best way to do this is to use parameters. So parameters can be considered as a variable for the process and process. Items also may have their own parameters. So in general we can think of parameters as global variables for the process or for certain values of process items. I plan to work with global process parameters and we need some of them like reality type id. So we plan to register such parameter as unique identifier. Code is used inside of programming title can be used for user interface settings in process diagram. That's why use popular so title and code. I copied it from the code. So here I used this one. Speaker 1 And when we use get generic expression on getting grid value and this parameter as an argument we ask system to read corresponding parameter value from the process and also we will do with the offer type. So I copy its name show it for you Go to process parameters. Also I need to explain if you click on some process item it will show you selected item properties. If you click on the blank or if you click on this green button you will see process from properties. I prefer to click on the blank because it's easier and parameters add unique identifier offer type id we need it as arguments for our code. Okay, couple of arguments are ready. Then I plan to return back debug sqltext parameter so it will be text 500. Speaker 1 So creating parameters you like declare variables for your process and the final result will be my average price parameter and it will be decimal. So add decimal parameter and I will do it like this. Okay, I hope you are quite good in doing it. So my question is for Monica and Paddy. Please confirm when you finish this part. We create couple of Guids unique identifier, 1 text 501 decimal. Monica and Paddy, please confirm when you're ready with this. Thank ",
      "page": 419
    },
    {
      "title": "",
      "content": "you Monica. Thanks Paddy. Okay, great. So we can move on. So we plan to use such parameters, but also I will tell you that unfortunately we have so fortunately we have possibility to run process as a no code tool with no programming from section list or section page in Freedom UI and unfortunately we can only pass one single value as an argument. Speaker 1 So my plan is to use as much as possible of no code here. And for example we can select a source certain record or we can open certain page. Then I plan to make a button which will run the process, but unfortunately we can only pass one single data value as argument when running no code parameter processes. So in no code mode we can only pass ID of the currently selected record argument. And I plan to use it in my process. So my plan is to get this id then to use no code tools to select corresponding data values from the database and then to provide corresponding parameter set. So as example in my case in my parameters I plan to get an input process parameter and we can name it reality id. Speaker 1 It will be also unique identifier so we can call it realty ID parameter and here its title will be reality id. Title is important for user display and code is important for programming. Okay, and we can set this parameter as input parameter. Input parameter will be designed as read only. So process expects this data to be set at the beginning of the process when process is called and it's not expected to be changed it. So input parameters will be treated as read only. You will not be able to save its changes. We have no initial value, so we expect this data to be provided from input. You can see that input parameters only one single green colored arrow and the directional parameters are used with two sides arrows and green and red. Okay, so we expect to get this reality id. Speaker 1 What we will do with this id, I will use a bit of no code tools. Read read data item carefully placing it on my diagram. You see, there is a special display when you put it properly. Okay, my read data item will be used to get ID of type and offer type. So read first record of separate selection. Okay, what object? Reality object which is a Freedom UI example. In reading one single record, it makes sense to make filtering. Otherwise we will randomly get some data record and we want to get a corresponding proper one. So I will make a filter click here, add condition type ID for comparison equals with parameter and I will select my process parameter realty id. This is and then click select or double click here. That's how I will make this filter. Speaker 1 This filter will be enough to make read data to select just single record from my database and we can name it read reality. Read reality will be its title and it will be also shown here. In general, it's good idea to provide corresponding titles for all of your items and no need to sort if you have just one record and reading all columns. I do not recommend you to use this option. So reading all columns Means you don't care how many columns will be there. And in some cases it can happen that you will have too many columns. So it will mean that you unnecessarily load your system with querying of all the data you have. So it's much better to set read data only for selected columns only. And we can specify what columns we are interested at. Speaker 1 We are interested in type and offer type. So originally we expect to get only ID of the certain reality record. Then we will look into database to get its type and offer type and then we will use read data item to get such type and offer type. Once we obtain it when process is started, results of such data records will be saved somewhere inside of this read data item. It turned out to be not very easy to get it outside from it with programming. So I decided to have a separate two parameters at process level. So I have specially designed parameters for type and author type and when the parameters are at the process level makes it not so hard to get and from the C sharp code. ",
      "page": 420
    },
    {
      "title": "",
      "content": "Speaker 1 So we will use getting data from read data into process level parameters and we can do it easily with formula. Formula is simply just an assigning operator for a left part of it will be your parameter that you want to set formal value to. This is for example type ID and right part is formula expression value which will be used now just to get some data out from deeps of read realty parameter and offer and type. When I click double click here you see a special macro which displays formula expression and this expression will be interpreted in runtime and replaced by corresponding value in runtime. Formula is an interpreter tool so it will be started and run according to its settings. Speaker 1 My process will be started Set type it this is our formula title the same approach another formula drag and drop it carefully will be used to set offer type id. So parameter target parameter is offer type ID and form of value takes data from process elements. Read data offer type double click and then we have this macro save it. That's how we save this offer type ID here this item. We can call it calculate average price or calculate AVG price. This is our calculation part. Now it looks like we prepared with the set of no code tools parameters that we use for filtering. And now it's time for us to save our process. But first of all I want you. I want Monica and Padik to confirm that you are good at this stage. Speaker 1 So if anything should be shown or explained, tell me please. If it's not clear what we are doing also please ask. Thanks Betty. Thanks Monica. If you have any questions, don't. Don't be shy, don't hesitate to ask. I'm here to help you understand that listening and doing examples at the same time, it's really harder than just listening. So if any questions or some misunderstanding, tell me please. I will be happy to assist. So our recent steps included taking ID that we expect to get at the beginning of the process reading corresponding ID of reality. I read only two columns, type and offer type. Then I used two formulas to get it out from results of read realty and then that's how we get ",
      "page": 421
    },
    {
      "title": "such parameters and then pass this data at our script task part.",
      "content": "Speaker 1 So Monica, if any assistance needed, just tell me that we know now. You see, I saved my process and I did not explain what is happening here. So when I saved it system. Oh, thank you, Monica. Thank you. So system told me that oh, you changed your C sharp part so it requires compilation. And now it saved my metadata and then started to do publishing, which physically means compilation. We can check what's going on at our application server side. We can see who exactly consumes most of our system resources. Now we can also look at memory consumption and possibly I looked here too late because I already do not see any traces of compilation. But CPU high volt CPU is quite loaded, so possibly we will see. Oh yeah, we see it here. We saw dotnet Exe at the top of consumption of cpu. Speaker 1 You saw dotnet Xeno you see. So here we have parts of. NET Core framework which is used for creation and it's compiling our assembly in a dot net library. As a result, we extract expect to get set of DLLs and our package is set to be compiled as a separate assembly. Let me explain now, probably I will be not happy. No, I will not be able to look at it the property of my package. So when we designed our package, it was automatically set compile as separate assembly while compilation is going on. Unfortunately, our system will be not response it will not display some data. So we will see forever hanging requests. And this will happen until our compilation finishes. When it's successfully finished, then we will see unfreeze of all pending queries. Speaker 1 So now you see our realty package has initial setting compiled into a separate smart. This option means that our ",
      "page": 421
    },
    {
      "title": "",
      "content": "contents that we design in our. Oh, Monica, you have to leave. Thank you. Thank you. Thank you very much for this. Well, soon we will finish very soon. Thank you. Okay, so our package is compiled to separate assembly. So it means special mode when package compilable part is Saved separately and compiled separately into a library that will be saved somewhere on disk nearby to our package stuff. So here we have USR realty. Here we have auto generated code. This code was generated by creatio according to the process structure. You see class definition. Class name is designed as name of our process plus process methods wrapper suffix. So we have class name as combined stuff from process name and some suffix. Speaker 1 Then we have method inside of it and you can see oh, this method is a constructor. Okay, not so interesting. This method is implementation of our script task. As we did not name our script task into something useful, then this script task has named Script Task 1. Let me show you our process. This script task has parameters and this is just name Script Task 1. That's why inside of our code we saw Script Task 1 execute. The text for 8 is exactly the same as we typed and saved. And finally this class will be used into compilation to get final result of compilation which is saved into files bin. And this is our DLL which includes results of our logic. Probably if we look here we may find some code. Speaker 1 But until we are not using any like reverse engineering tools, we probably will not be really successful with analyzing this code. But you may just trust me that finally this code includes business logic and our class stuff here. Okay, so finally we compiled our solution. It turned out into a DLL saved on disk. This DLL is used as part of our application website. We have approximately 200 of similar DLLs and if our package for example was not compiled a separate assembly. So if you disable this option for a package, then it will turn to much longer compilation. Because a lot of base product packages, they have no such option. Compile a separate assembly. So they all compile into one big DLL which is saved here in terms of configuration auto generated folder. Speaker 1 So we have this set of C files and bin folder here turns into this DLL. So now you see 11 megabytes of executable code, which is quite a lot. And this is result of compilation of big number of base product packages that finally form this dll. So recompilation of such DLL takes much longer, probably three or four times longer than compiling of separate assembly. Adrian is asking what the difference of setting parameter value formula and by directly selecting the withered parameters section by process elements. Oh, Adrian, probably you are asking about this. We have a parameter, we have value for it. So we could provide value into this parameter and saving it directly from read data. Speaker 1 Yes, I understand this idea, but I do not like this, because it will be not clear for me at what moment of time this parameter will initialize its value and at what moment of time this parameter will change its value. So possibly we can do this. You can try. And each time when your read data changes or it gets new results, your parameters should have corresponding mapped values from read data. But I prefer to make it clear and obvious according to the moments when we have some changes. So this is read data. As we finished with this item, it will have its own parameters and some results of selection will be saved somewhere here. Then we have formulas to get data from this and put it into parameters here. And it looks like quite exact moment when we change parameter values. Speaker 1 With this formula, if we use parameters directly mapped to read realty, it will be not clear for me when exactly parameter will be changed. And so I think that our example will lack obviousness and lack visibility of what is going on. And is it more secure to use formula? Oh, I think it's the same. So it should work when you map parameter directly, but mapping parameter directly. So it's something that we can do like this, we can map it to process element like type like this. Mapping it directly makes it harder to analyze. So personally I do not like this, but I think it's ",
      "page": 422
    },
    {
      "title": "",
      "content": "supported on the platform, so you can do this. Thank you Adrian for your very interesting question. And let's move on. So now our simple example is ready. Speaker 2 I have a quick question about the. Speaker 1 DLLs if that's okay. I do. Speaker 2 Is it possible when we're creating them this way that we can call other DLLs maybe outside of this package? Speaker 1 Okay, we can. Sure it's possible. Let me show you. We have also process level methods. This is kind of a method that is inside of script task, but we have also process level methods which can be used globally on the process level. For example, if you make a big logic and you finally realize that you do the same steps from different parts of your process, maybe you can implement it once in methods area and then call it many times with different script tasks in your process. So it makes it more organized and better constructed so you make it easier to support in future. Also we have usings and you can include additional DLLs and namespaces here. So you can include necessary DLL necessary namespaces from DLLs from other parts of your system and that's how new namespaces will be available. Speaker 1 And this will be normally compiled and executed. So it's quite common thing how you can add Other libraries and namespaces with usings and these usings will form into. Let me show you pkg configuration pkg Then your package, then your source automatically generated source. Here you can see on this table standard set of usings. If you add your own, it will be added into this list. So that's how sometimes developers really need to use for example Newtonsoft JSON library to make it simple with serializing or deserializing values and maybe other libraries. So you can add it here by providing using in process methods part okay, so we successfully saved and published our process and you saw it was no problems with compilation. Speaker 1 But in real life, when you do development of your own solution, of course you will get compilation issues, you will get error messages, so you will have to go to your code, find corresponding lines, fix it, save again, publish again, and finally you'll have to make your process work normally. Please note if your system is saved in a state, that means you have compilation errors. You will not be able to apply any changes in compilable area until you fully fix your issue with compilation. So it's better and it's like strong advice for you. It's better to keep your system always in fully compilable mode. I mean making your solution. If you try to compile, it always compiles successfully. Because if you keep your solution with compilation errors, you will never know that something is working good or not. ",
      "page": 423
    },
    {
      "title": "",
      "content": "Speaker 1 And you will not be able to easily apply changes in your compilable stuff because each time you try to compile you will get the same errors. So it's recommended to keep your system to be saved in a healthy state when any compilation finishes successfully. So we already have some part of our process which finally performs some calculation. We can register our process at our section. I will show you how we can do this. So we can run a process as a action in our list, or we can run a process by action or a button in edit page. From edit page it looks a bit easier. So let's start from this opening our Freedom UI edit page, then go to its editor. We will finish soon today's session, so don't worry. Speaker 1 I understand we are going a bit behind with the schedule and today we will spend maybe 10 or 15 minutes more. So this is our page design. My plan is to run my process by a button, but I predict that I will have a bit more different actions, so possibly I can use a button with sub menu. Let me show you how we can do this. For example, we can put a Button somewhere here modify its size, style and title like actions. And we can also provide some kind of typical icon used for actions. Something like this. This is very typical for creation no its own action. But we will have menu items. Let's make a subordinate menu items like calculate average price. Speaker 1 This will be our action title Action value will be run business profile process this one run process which process to run calculate average reality price. And we have different modes to start our process regardless of the page means with no parameters for selected page means for edit page data and it means we can only pass record ID as argument. This is good for us. And also we have new mode which appeared recently the selected records in list it will get list argument. It's not for our case here, but this is feature which appeared just recently in 8.1.2. I guess so just very recently. Okay, select the page and we have process where the record ID is passed. We have only three suitable parameters. Thanks developers for filtering this. Speaker 1 In previous versions this drop down showed all the columns or I mean all the parameters and generally it's not good because all parameters included integers included decimals so not suitable for grid and we only now see some filtered stuff. So realty will be recipient of our ID of currently edited record. And as you can see this is a no code setting so it doesn't require any special coding for us. So we can do it with no code tools by passing this data. Okay, great. We can also use this icon for this stuff. We can do some calculation icon that will demonstrate make it a bit more attractive menu item. Speaker 1 We can rename it so menu item cog average price just to make it easy to find if we ever needed to find in our view config diff so as you can see this action is quite easy to do. Let's go back to actions list and we can check how it works. So action will be always available. We can just save this page. Also in recent version we had an unique option to run processes by for list for selected records in the list. Let's do this. Let's go back to list page. We can also make customization here. Now we can make an action it will be started for list. We have a special settings here Filter element bulk actions Such bulk actions is called by so we can call it. We can find it here when we start to select data. Speaker 1 So let's make one more bulk action like cultivate average price. Our action will be again run process where. Oh, it's my fault, I do it incorrectly. Sorry for this. Not. Not this way. Okay, let's go back. So it was not correct approach. I need to make a. But instead. Okay, let's make a button. Let's put it somewhere here. Size. Okay. Action run process. ",
      "page": 424
    },
    {
      "title": "",
      "content": "Which process to run? Calculate average realty price for selected records in list. And we have the unrestrictable list here Data table this one. Okay. No subordinate items. So it will be just an example for you how you can run process in lists. This feature supports is supported only starting from version 8.1.2. So quite recently only for recent months. I think if you have a bit older version, you will not be able to implement this easily. Okay, save it. Speaker 1 Let's just start to test it. So we can close the editor. You can also close this one. Maybe let's reload just to fight with any possible occasion of browser cache. So let's calculate something for houses for sale. For example, for this record calculate average price. Something was started with name undefined. Not found Something is not good here. Okay, we can also check process log. Did we have any start of the process day? No, means that we faced something wrong. I did not start. Okay, and let's go to reality edit page. Okay. Apartments for sale. Opening it. So as an argument we have this ID actions calculate average price successfully started. Now we have no visual output. So we only know that process started. We can go to process log. We can see that process successfully completed. We can open history execution of this item. Speaker 1 Sort by date of start, read set formulas, calculation finish. It looks like everything went correctly here. We do not know exact values, exact numbers. We will study debugging of it tomorrow. Now we just make sure that the process starts and normally finishes. Okay, now let's fix our stuff with the list. Looks like I missed something very simple. So let's go to customize list again. Here is our button that runs process this process. How to run the process? Oh yeah, I just missed very important parameter where the record is passed. Real TID parameter. So it was my fault. I overlooked it. Okay, save it. Save this stuff and then we see how it goes. Okay, close probably to work. No, we have to reward it Houses for sale. No, no. We wanted to run it in list. Speaker 1 Okay, so this one is our list Selected data Calculate average price successfully started. I expect to run only one instance of a process here. Yes, it was correctly started seconds ago. We can see all the steps were done. We can also see execution diagram which will show us these steps executed. And tomorrow when Monica returns and you will be not so tired. So we will move on with. We will move on with Debugging this code and also making it visible visual. So today we made only part of the work. Today we implement the main calculation part of the process. We got some result data, but we do not know how to actually see it. So tomorrow I will show you. Today we only ",
      "page": 425
    },
    {
      "title": "focused on C sharp part.",
      "content": "Speaker 1 But in order to make this example fully working, we need some more items and we need debugging to make sure that our code works accordingly our expectations. I just wanted you to see how we can run this calculation for multiple scenarios. For example, houses for sale, houses for rental and apartments for sale. We have three selected records. We can run this process and I expect to run three instances of processes. Let's check out. Yes. Now you see the last minute we have three instances of processes started and each one with its own input arguments. So how many records you run? The same number of records you will see here in calculate average price. Process log record Process log shows you history of all started processes in your system. And for each process started you see its elements. Speaker 1 You see start and end date is status. We will see how you can how we can debug this especially C sharp part and also how to check its performance. So today's session is over. The most interesting part will be tomorrow when we will run this process and display some data and also how we will debug this process. Thank you very much for your today attention and education case. In case of any questions, please ask and we'll see each other tomorrow. Thank you very much. Adrian Peddy, Francisco Rakhi and others. Thank you. ",
      "page": 425
    },
    {
      "title": "",
      "content": "Speaker 2 I have a quick question, if that's okay. Speaker 1 Yes, yes, please. Speaker 2 It's just about business processes. So at the moment we're tying them to. We're binding them to buttons. But like, what can we bind them to? Like how robust is this? Can we bind them to like objects or can we bind them to whenever a data is changed on a certain object or something like that? Speaker 1 It's possible, sure. But I try to keep it simple and use it as possible of no code. That's perfect. Speaker 2 I understand. Speaker 1 I'm just curious manually. But yes, Later I will show you how we can trust trigger some business logic that will start according to data change. So we will do data change and for example insert of new reality. And then we can run some business process that will start only in certain conditions. And for example, only if house or apartment for reality was added. I will show traitor. It's not so difficult. So we are looking only at small part of available tools that we have on board. On business process platform. So I'm trying to show it simply. But in general it could be much more complicated. And also processes can be more complicated. We have a sub process item which makes it possible to develop big processes that contain smaller processes inside. Speaker 1 So you can do it in much more complicated way and trying to keep it simple. Because we are studying. We need to see some simple examples, understand how it works, understand how you can control it, and then go further with more complicated scenarios and topics. Thank you. Brilliant. Speaker 2 ",
      "page": 426
    },
    {
      "title": "",
      "content": "Thanks a million. Speaker 1 Thank you. See you soon. See you tomorrow. As usual, you will receive video recording very soon. Thank you. Goodbye. ",
      "page": 427
    },
    {
      "title": "",
      "content": "Speaker 1 Today is session number nine of our development on Creature platform guided learning. And today we will continue to study server side and we'll move on with integration tools. So yesterday we finished with our own web service. It was made at creation site, was made with the help of C Sharp sources and we programmed it, we saved it in file system. We used Visual Studio to develop this web service. So we used our examples. Now you know, okay, now you know how you can make your own integration tools. But in general, so integrations will require much more entities and will require much more tasks to exchange data. So it will be really hard for you to write a web service for each data transfer that you need in your system. Speaker 1 So what we'll study today, how to use standard platform level tools to operate with data with the help of HTTP queries. And we will discuss and I will show you examples of how to work with standard tools. And they are all data protocol and data web service. Also I plan to show you how to call third party web services with the help of no code tools, with the help of settings for web services and call web service item. And at the end of the session I want to tell you about Clio tool, Clio Commons. You will understand what is this, how it can be used, why you need some additional tools. So we will discuss a bit more about system maintenance delivery and if you have any questions, I'll be really happy to hear and to answer them. Speaker 1 So don't be shy, ask any questions if you feel something that you need to know and let's move on. So integrations with data tools. First of all I need to show you general integration capabilities that we have on board. Go to development guides integrations options and here you can see standard options that we have. We already studied custom web service option and it offers us possibility to program anything we need to ask for data, to make operations with files, to use any libraries. But this approach obviously requires some programming at creation site. And also this approach requires programming at third party site in order to normally correctly call such service and to get response data parse such response. So I just want to say that in general it's quite expensive approach if you need to do a lot of different operations. Speaker 1 As you can see we have other options to integrate with creation. We have two options for data transfer such called CRUD operations which means create, read, update and delete. So standard simple operations that you may need to work with your data and to organize. Possibility to read some data for third party app or to make some inserts, updates or deletes in creation by commands from other applications. And we have two different options for this. One is called Data Service, another is called Odata. And Odata is quite common because it was designed by Microsoft and it's possible to find Odata clients as third party sources. There are a lot of tools that understand how to work without data. So developers of Creation decided to support this type of client. And data service is much more unique. Speaker 1 It's very specific to creature, but it offers you more options, more possibilities, more complicated calculations. And that's why data services used for creation of client side and data service in general is more powerful than ODATA and more complex to program. So I will show you both ODATA and Data Service. You will see how it works. Also, it's worth it to mention that we have another integration option to run business processes. So you can use process engine service web service for starting or continue execution of business processes the same way how you can do it from creation client side. Physically, this web service is the only one to handle processes. And when we run processes from inner application. Let me remind you how we did it. ",
      "page": 428
    },
    {
      "title": "",
      "content": "Speaker 1 We had the class on Freedom UI section, we can open its page and then we made an action to calculate average price with the help of business process. You remember we did this calculation, we started process, now we have some results, average price in dollars. Then we save it or close it. And that's how we finish our process. So physically we did some calls to third part to process engine web service. Here you can see it. And the same calls with the same parameters can be done with third party applications. So it's possible to run processes from 30 third party. And of course in this case you need to pass authentication first. And we did it yesterday with the help of Postman tool. You remember we had the Postman authentication, we had set of authentication cookies. Okay. Speaker 1 So if interested, you can just watch yesterday video and get more details. So today we'll focus on data transfer integration options. And I would like to start from OData because it's easier, it's more friendly for beginners and it's quite easy to start from scratch. So what it is, this is a data transfer protocol which is supported at creation. We have all documentation about it. So for all data we have documentation explaining how to use it. And in general you need to know that creation supports OData 4 and OData 3. Unfortunately, OData 3 is not supported in packages. So it's not supported for objects that are saved in packages compiled as Separate assembly. So it means that for your ODATA integration, probably it's better to focus on OData 4 from the beginning. Speaker 1 We have a lot of documentation about it and if interesting you can find much more. And we have examples, we have references. So I prefer to show you something really useful. This article, it explains some general basics about how to use OData. We will try to make some examples and first you need to know that ODATA operates with the help of Data Model. So it means it respects all existing objects, their columns, their names and so on. So when you operate with OData, as well as when you operate with Data service, it uses Data Model. So it uses information about existing objects, columns, references and access rights restrictions. Speaker 1 Okay, so depending on what operation you need, you have to select the proper HTTP method, Get is used to select post for inserts, patch for updates, and HTTP Delete is used to perform physical delete operation. I will show you a couple of examples and also you need to know that we have a lot of interesting documentation samples here. And one of the good ones is creation API documentation hosted at Documentor, get postman. Com. This is one of the best sources that you can find for OData. I plan to show you examples with OData 4. As you can see, first of all, we have to make authentication correctly. Then we can do different queries and different examples. So depending on your task, you may find a corresponding sample here. And also we have a lot of samples to make different filters. Speaker 1 You see, for different filters there are special expressions in let's say ODATA language. And so you can find a lot of examples here. Even batch queries Supported Batch queue means running single query with several parameters. And each parameter explains to a system how to run a particular operation. So it can be useful if your plan is to run many data operations with one single query. So batch operations are also supported. But we can do it. Let's not go too far. And I understand that probably not all of you will start your integration at all. And this is something that you just need to know and let's say get familiar with it. You will see how it works. So let me show you examples. My plan is to make some selection of data. We have some examples of data records. Speaker 1 Let's read data from our reality object, but with the help of all data. First of all, I will use integration tool, I will use ",
      "page": 429
    },
    {
      "title": "",
      "content": "Postman app and my yesterday cookies are not working anymore. They will not help me to run queries. I can check it easily so we can Try to run our web service and as you can see we have 401 not authorized. It means that our cookies are related to expired session. So providing such cookies we will not be able to use any business methods any business logic methods of creation web services. So we have to get new cookies. I prefer to clear previously set cookies. We go to perform login operation again. Yesterday we discussed how to do this. We use special URL to all ",
      "page": 430
    },
    {
      "title": "service and its login method inside of a root part of our application.",
      "content": "Speaker 1 We provide login and password. No any special data, no any special headers. You may find some information here like authentication and some accept content type for C session. But it turns out to be not necessary to perform authentication successfully. So let me show you here we have some hidden headers made by postman like accept content type, application JSON and so on. But so I prefer to keep it as is by default. And we have login and password. Originally we have no cookies. So let's try to get new session for us. Yes, we got it. 200 no errors. So currently we have set of cookies enough for us to perform inner queries. Okay, we can create new query and our task. Let's keep it easy and keep it simple. So we will try to read data. Speaker 1 We will have to make a selection of data records and we will make it get HTTP query. Let's do this. So let's go to postman, create a new get query. We have to use our address of our app with 0 alias here and then we can look at this example or we can look at this document or get postman.com examples. So we need to do selection. And our part for odata web service is odata here. So it's a name of odata endpoint then/in odata4 we should use just entity name here. It's not obvious that collection one is entity name. And here you can see that it's also not so obvious, but maybe you can find examples. Yeah, here you can see an example. So it will make it clear how we can do this. So I will use an example with my USR realty. Speaker 1 If I provide no any parameters, system will try to read all of the data with all of the records, all of the columns. Let's try to do this and run send for get queries we do not need to use BPM CSRF protection. So for get queries, no cross site request forgery protection needed. And you see it took significant time, almost six seconds to run. And as a result we have Some JSON body with different data records about our reality record saved in database. As you can see all of the columns, a lot of unnecessary data. But that's how it works. If we provide no special parameters. Now I will show you how we can make it more interesting and more useful. We can use different parameters in our script in our query. Speaker 1 And let me show you for example parameters for selecting data collection instance selected fields. So here I can see an example and it means dollar select so question dollar select and then we have columns with comma separated values to get necessary columns. So I'm using this example, you can use this example and let me show you how we can do it. So question mark to switch to parameters Dover select is parameters specifying column names that we plan to use. Don't forget we have to use column codes, not titles USR name USR price USD maybe created on. So if you want you can get more. It's possible to use lookups in order to get corresponding names of type or name of a person who created the record. But now I try to keep it simple. So this is example of how we can run queries. Speaker 1 You see only requested columns. Now here and we can see all of the data. We can do some limitation. So we can use and another parameter dollar top three for example. And when we do such selection, it will read only top three records for us. You see on the top three records you can use sort, you can use filter. We can use x order by in order to organize some sorting. We can use special parameters to select only one specific record but filtered by ID a lot of other options. So if necessary you will be able to do this. And I try just to keep it simple and quite useful for you. So ",
      "page": 430
    },
    {
      "title": "",
      "content": "here is an example of a get query to read some data. So you can try to do it even in your browser. Speaker 1 In case if you will try to run such query in your browser, you do not need authentication because usually your browser is already authenticated in creation and you keep running session running pages of your creation in your browser. And that's why you don't usually need to prepare separate separate authentication for it. Okay, I think for selection it's quite clear. So let me show you how you can do insert data. I need to use almost the same set of parameters but for insert. As you can see here we have post to add data. Let's do this. We can also look at examples for post and our URL will be quite simple. We will just provide post and this URL which includes our website zero application Alice OData is the endpoint for OData Web Service. Speaker 1 Then usr realty is also part of endpoint and it gives information to data what exact object you plan to operate with. Then I have to look at body row JSON and we have to provide some data for example USR name. This is mandatory data from all data for integration it will be our name USR price USD okay, so you can see we have some data here. If we try to run a post query without CSRF settings we will get 403 because for post query we must perform BPM CSRF header we must put corresponding cookie value. Please carefully copy cookie value including some dots if they present. So it's important in this case our insert will work. Okay? No, it tells that comment doesn't exist. Okay, it was my fault because common name is USR comment. Okay, everything is working. Speaker 1 Now we can go to our main app, sort by date of creation and we will immediately see that our data was added and we can also check column values. Here you see price was added, we see column was added correctly. But what we really interested you can see the type and offer type were set by default. It means our object model worked well for us and moreover our object model also supported all event handling provided with help of start signals. Now you see three realty visits were already planned for upcoming days. So all business logic that was designed and programmed with the help of event handling with the help of start signals it will work for ODATA as well and server side handling like we did to validation for very big prices will also work. Now let me show you how it can look. Speaker 1 So let's try to add very big number and it will be more than 1 billion. So we will see how system will react on this attempt. Now you see we have a quite rude error and this is error 500 internal error. But we have error text which means we intentionally erased such exception. We provided error message text of what is wrong and of course physical insert was not done so we can read data, you see no new records created. So this is example how you can use old data for your tasks and it will be really attractive for relatively simple tasks for your future integration needs where you need to transport not so many data records. If your task is to transport millions of rows, possibly such approach with running separate queries for each record will be not very effective, not very efficient. Speaker 1 In case if your task is to transport huge amounts of data, you have the only one option. This is your own programming of such data and your own parsing your data structures and your own database direct operations and avoiding use of object model. Because when you use object model, you also support all of the object events. It works not so fast. And for example, when we did insert with the help of postman, it took almost 180. No, in total it took a bit longer. You see, we have some additional cost for preparation of the query. So it took 300 milliseconds. And it's important because if your task is to transport like 1 million of data rows, if you spend 300 milliseconds for each one, it means you will wait for several days and this speed probably will be not suitable for your customers. Speaker 1 ",
      "page": 431
    },
    {
      "title": "",
      "content": "So you have to search for a better solution. So in case of big number of records to process, in case of very, let's say, hard speed requirements for your solution, the only suitable option is your own web service with your own data formats, your own direct database management without use of object model. But in simple real life scenarios, I think all data will work well for you. And it's relatively easy because you see it's not so hard to build such query to run it even when your third party app is used. So you can do such programming. And also you will get response data in JSON string, so you can easily parse it, you can easily extract corresponding results that you may need. Here you can see JSON objects and you can also get corresponding values from here. So it's very suitable for beginners. Speaker 1 And for some tasks I think it will work perfectly. But for some other tasks you may find that all data is not enough, maybe because of hard load conditions you will finally realize that our data is not going perfect with hard, I would say hardwood big amounts of data. Maybe you will need some more complicated scenarios with reading data and performing some calculations like preparing reports and running it with third party app. And you will need some aggregation, some complex filtering. In this case, all data probably will be not the perfect solution. And data service may work better. For data service is created by creature developers, not by Microsoft. And this is unique to creature tool. Speaker 1 So it's appropriate way of operating with data using creature server side, it can do all the same operations like create, read, update and delete data and but it can do it a bit more efficiently. And also it supports different filter condition macroses and it's much more rich when you need to select data from different tables, perform some aggregations, perform some complex filtering. I will demonstrate what data service can do. And first of all I need to tell you the data service is mainly Used by inner creation client side pages. Each time when you operate with any list or edit page, you will see data service web service queries. You will also see that payload for that queries. It means arguments that you need to transport. Payload is quite complex. You see more than hundred of different settings and if you preview. Speaker 1 So if you view source, you see a lot of settings and parameters that can be passed as arguments for data service. But it also has a response with a JSON. So now you see JSON string which can be parsed and such JSON data not so hard to operate with. You can easily get corresponding values out from your results. So Data service web service maybe can be suitable in case if for some reasons old data doesn't work for you as you expect. I will show you examples of data service but first I wanted to mention that it's used inside of creatio pages. So data service was designed for inner creation data operations with client side. All lists and all edit pages are using data service to get or to modify, insert, update any data record. Speaker 1 So in documentation you will find that data service is promoted as integration tool. So it's a restful service. You can use third party to compose queries for it. And here it's promoted and advertised like an integration tool. But in reality it's not so integration oriented, but it is say platform UI oriented. Because all UI pages are working with the help of this web service. I will show you some advanced features that this web service supports and let me hide some unnecessary columns. So my plan is to show you special types of columns called aggregate columns and also a bit later aggregate filters. So aggregate column can make some calculation over connected data records. And such connections will be done with the help of main record. Let me show you what I'm talking about. So each reality record may have number of visits inside. Speaker 1 ",
      "page": 432
    },
    {
      "title": "",
      "content": "Recently created records are having more visits because we already had automatically creation for them. But also we have. Oh, we don't make any action to add the data director here. Okay, so we have some examples which already have created data records in visits detail. And for each reality record we have number of visits, connected detail records. So we can make a career column. We can make an aggregate column which will simply calculate number of connected records. This is one of the easiest possible aggregate columns that we can make. So let me show you how you can do this. Speaker 1 Add the columns and instead of working with traditional set of columns we have in main object you can go to related objects and then we will see all objects that are available for us according to lookup columns from main object and also we will see reverse joins. We will see other entities that have lookup columns pointing to reality. In my case this is realty visit. We have different options how to select data from it. And in last versions we have also advanced examples like reading top one record. For example, we can read top one comment sorted by date of creation. Or we can see top one customer who is specified in recent visits and so on. In my case I try to keep it simple. Let's look only at number of records of connected visits and click select. Speaker 1 It's also possible to specify special conditions to select data. For example, we can only calculate number of records that are in future or only visits where contact is specified. So you can do different conditions here. In my case I also try to make it easy and calculate total number of visits. And we can make the caption here visits count. So this visits count will be our title for new created aggregate column. Then we click save and now you see new column which shows us some data. And for each separate reality we have some calculation. It's interesting to mention that this type of calculation is also performed with the help of data service. Moreover, such calculation is performed with the same query where a main data record is selected. Speaker 1 So if you reload the data using this update refresh button, you see only one query was executed and if you go deeper in payload you will see that our column for calculation of aggregate number is also represented to the standard column. Here we have some column path for it, some setting for Type of aggregation. Aggregation Type 1 means count and that's how system knows what to calculate and returns as some calculated number. This it was example of aggregate column and it can be really useful. And you should understand that this selection is not performed from reality. This column is obtained as a result of subquery from reality visits. And I want you to see one more feature called folders and here we can make additional folders select and add the new folder here. Speaker 1 So in general folders work here like search folders in your outlook. So here we can specify some name and the filter conditions that will be useful for us to select only some searching data, not all of the data from our list. Let's call it three plus visits. So let's imagine for some reasons we need to look at realty records where we have three and more visits created. We are not interested in realty records with no visits. So we can make such a name here, save it. Then we can provide filter conditions for this folder. So now I'm planning to show you so called aggregate filters. We already saw aggregate columns and you understand that they represent result of subqueries but calculated with the same main query. Speaker 1 And aggregate filters will be used for selecting data applying conditions on connected records, not on reality data but on connected records. In my case I plan to select only reality data where this visits count is greater or equal to ",
      "page": 433
    },
    {
      "title": "",
      "content": "three so we can make condition and here we have to select connected entity. So not just dropping down here contents of reality columns. We have to click on this plus in order to select connected entity. In my case connected entity is real and the aggregation type will be just quantity and also we have alternative options like maximum or minimum date for creation or modification. If we had integer or decimal values there then it's possible to calculate average price maximum or minimum. Speaker 1 So in my case I will just do quantity calculation select and we have condition count greater or equal three that will be our filter condition. We also can make additional filters here like counting only visits in future or counting only visits with not empty comment. So whatever you think it will be useful you can do here. Then we save it and that's how we see result of this filtering. So all data shows us all reality records. This search folder shows us only records which follow corresponding filter conditions. Such filters are called aggregate filters and we can now go again to network and reward the data to see that our payload also has special filter condition. And this filter condition includes information that we use aggregate function. Speaker 1 We use count for our aggregation so it will do selection only of records where some sub select some count of connected data is greater than certain right expression and we have just value three here. So my example is to demonstrate that data service web service is capable not only to read plain data from the data sections, but also it's capable able to calculate aggregate columns and to use aggregate filters and you can use data service for your integration. But I think it's really hard because you will need to have a good make already good made examples to make it work. So if you make corresponding queries in your browser then you can steal all necessary parameters. Let me show you how we can do this. We can copy request URL from our query that we spotted in our network tab. Speaker 1 Then we go to postman create new actually you should be careful because data service is usually working with post queries only. So we go to postman. Regardless of the operation we will use post query and paste this URL should be careful. Okay Paste URL we have a huge body. We have go to payload view source select everything copy then we go to body here this is row JSON and we paste this big body it's really hard to analyze it so we can use beautify tool to see it in a more structured way. So now you see we have a lot of options here that are used by data service and required here to be present. And as you can see I did not type them manually. I only used existing example from my browser console. Speaker 1 This is a post clear so we obviously will go will fail into CSRF protection if we do not care about it. So BPMCSRF header and corresponding cookie value you should get it carefully copying full value and pasting it here. Now we will successfully run our query, we have some valid response JSON body and we see set of records, we see set of data and in general if you run something like this from third party app then you'll be able to parse your data and you'll be able to analyze it and get corresponding numbers or other columns if you need it. Adrian is asking is folder the only way to go to Advanced filter in Freedom ui? Yes, Currently we don't have any separate advanced filters for data selection, so developer decided to keep it saved into folders. Speaker 1 In Classic UI we had an option to keep such code advanced mode and make this filtering like flying in the air without landing anywhere in your system. But I personally think that this kind of advanced filter is not so good because once you take time to build it, once you make complex conditions there is a highly likely situation then you will need it to save. So developers in Freedom UI decided that no advanced filters anymore. If you need some complex filtering, just mentally prepare yourself to save it as a folder. It's not a big deal, not a trouble. And such folders usually have quite strict permission settings. So when you create a folder only your user will see it so it will not create too much ",
      "page": 434
    },
    {
      "title": "",
      "content": "of garbage records seen by anyone. Only your user will see such records. Speaker 1 If you don't like it you can also remove it. So I think it's not a problem. Thank you Adrian for your question. And yes I agree we have some changes between Classic and Freedom UI and it looks like such changes were discussed so it's not a real decrease of some important functionality. Thank you Adrian. So this example shows that Data Surveys is much more capable in comparison with ODATA because you can use more complicated calculations for columns for filters and everything is going with just a single query. How we did here and demonstrated in Postman that it works perfectly in real life. Your integration will include not but one or two queries in real life I think you will need tens or even more queries to start. So it means that you will have series of different queries. Speaker 1 You will need to remember data and save it somewhere. And in general it requires some quite strong professional developer skills and architectural understanding of what you are doing. In general, I recommend you to run queries that will not return you millions of records. It's better to operate with data using some portions and both ODATA and data service have their own limitation. So we can find some limitation. Number of requests is unlimited but integration options. I saw some information about it that we have a limitation about 20,000 of records per one selection and the same limitation will be applied for data service. This is limitation for OData and data service has very similar limitation. But I just suggest and recommend you to operate with data with some smaller portions. Speaker 1 Keep some logging by yourself so it will be easier for you to detect and understand how actually it goes and do you have any serious errors in your integration. So it's like a programmer task, but it's possible and in complex projects we also do this and it works well. So let's move on. We already studied how third party app can operate with creatio tools and odata and data service are already present at creatio server side so they are already prepared for you. So you only have to program at third party application to correctly call such tools and it will work for you. Now I wanted to show you an example how we can run third party web services from Creature and also how to do it with no code tools because no code is really attractive. Speaker 1 It takes very little time to develop and gives quite quick and valuable results. Let me show you. So let's imagine we have Creature app, we have different sections, data and so on and we have some third party application that we want to call and to use its data to perform some data transfer. Let me show you some example of it. We have a node with REST API samples so we can use something like this. Let me show you. This is a REST API URL call that we can send. This is a GET query. You can easily do it in your browser. Luckily it does not require any authentication. So it's a GET query performing with some kind of URL. No initial arguments but we have some response. Speaker 1 JSON body this JSON body is also shown here for us and this JSON body represents some prices and I need to tell you some physical sense of it. ID bank is one of the banks in Armenia and they sell gold bars, gold plates starting from 1 gram gold to up to 12 kilos gold, big gold slab and you see their prices are in local Armenian currency, Armenian drums. But in our case it's doesn't matter so we only want to practice here and also I want to show you some additional example. Not only just get couple of data values from third party app but also to show you how you can use no code tools to process collections and to get sets of some data records, how to store it, how to operate with it. Speaker 1 ",
      "page": 435
    },
    {
      "title": "",
      "content": "So let's imagine we have a task to regularly get gold prices from this URL, from this API, save it in creatio and make it possible to run multiple times and correctly update such prices. I will use only no code tools for it and you will see how we can do this. Also you may reproduce it just during today's session. So let's start. We have URL and it's nice if we have some description of this URL. So generally we have it but in my case it will be really simple so I did not really need it. But normally when you work with some kind of integration you will have this kind of explanation of how to call corresponding query, how to transport some parameters rate go. Okay, now you see example of query, you can see parameters, you can see requests and so on. Speaker 1 And in my case so I can also share with you this is kind of documentation but the most important we need example of call which works for us. Luckily we don't have any special protection, security or authentication necessary for this. You may also find a lot of other sources with similar functionality like currency exchange websites, like weather forecast websites, like other regular date that could be commonly interesting for people. It's usually shared without any special restrictions. In my case this doesn't require any parameters, any input arguments. So we can do it quite simple and I think that simple example is better for beginners just to get started. So we have this URL and then I will explain how we can work with it. First of all we need to go to studio workplace and find web services section. Speaker 1 We will properly register our new third party web service here and then we'll be able to call this web service from our business processes with the help of call web service item. This will not require actual development skills, but it requires some engineering knowledge and understanding of HTTP queries and HTTP methods type and just a bit of understanding of JSON string and you will see that it's not very difficult. So let's do this add new web service when we Created system uses current package system settings. So when we provide an example of a full web service URL, it parses it and creates corresponding web service setting and tries to save it. We need to take care about the proper package to save. Now you see some phantom packages which we can't really find in our configuration, so let's ignore them. Speaker 1 This is classic package because our current package system setting points to it. But my plan is to save our data to freedom UI realty package. Let it be here. This URI is like a main part which was extracted from our URL and it will be used as a like base part of our web service and then we can have many different methods. Method addresses will be added to our main web service URI address. The code is generated by app so let's call it something like gold bar service name will be displayed and the code will be used for configuration saving into a package. Finally, we will have a special type of item saved directly to the proper package. So you don't need to care about how such setting will be saved in our configuration. Speaker 1 This will be saved as special metadata directly to the package. And we have a method here, so let's save it first. Now you see configuration section and let's go to all items. You will see new type of item called web service and it's already saved in our package. So all you can do is to open its metadata. You will see some low level text definition of the setting like addresses and other settings and so on. But this is low level setting. You just need to remember that it will be saved in our package so you don't need to care about special transporting of it. Okay, we continue to do our setup. System was capable to automatically parse our URL and get web service main part and method part and you can see it's by default. This is a get method. Let's look at it. Speaker 1 And in general one web service may have many methods so you can register them manually in order to use different functionality of the same web service. Get method the content type is JSON and response timeout is 5 seconds by ",
      "page": 436
    },
    {
      "title": "",
      "content": "default, 5000 milliseconds means 5 seconds, no authentication necessary. And name is for display, code is for metadata to save and method address is the most important property here because it represents exact part of the URL which will be used to add and make full. So when we do this we will make foo method address in our we have a full method address in our lab service and this part was automatically parsed here. You can also type different types of Parameters like method parameter, method query value and also it's possible to transport additional data values depending on the type of request you use. Speaker 1 If you use get query like in our case you only can use method address parameters inside of this URL. If you use post, it's possible to fill in post body request body and it helps to get much more possibilities to transport different data values as arguments to your web service. In my case I have no request parameters at all, but if you will do it something like yourself with different web services, you need to remember that we have all possible ways to transfer data that is commonly used in the REST API. You can use address parameters, query values, header values. Remember like we did in our post query special headers setting. So it's like technical settings that will be passed as part of our query. So creation is also capable to provide headers and even cookies could be provided separately. Speaker 1 So if you do some operations with third party system which requires some authentication or requires some cookie for like your user settings, then it's also possible to use it in your query. So it's very universal tool. In my case I do not need request parameters in this example but I need response parameters. So let's save it again just not to lose anything. I will use response parameters first automatically. Let me show you. First of all I can run send test request, no parameters, no authentication so I just go and send it and I have a responsive JSON or in row HTTP . Of course JSON looks much more friendly for me and I will just copy this data and this is just an example of what web service answered me. Okay, this is my response then I go to the method switch to response parameter. Speaker 1 So my idea is to tell creatio how should I parse result data in order to extract specific values from it. So in my case response parameters can be added manually or we can use special very effective tool which is called quick setup and I will use example of my response body and give it to system in order to detect what are the possibilities, what are the possible values that we can get out from this example. So I will use setting of response parameters with the help of example in JSON quick setup example of response in JSON of course I have to paste my example of JSON data obtained as a result from my test request. Then I click next System was capable to parse my data. Speaker 1 As you can see it was it detected that I have two collections one is called cash sell it list of sell prices so bank sells gold bars and cash byte it looks like they have this data. But zeros tell us that possibly they are not really planning to buy anything. And it's just like useless part of the data for us. So we can select what part of data is interesting and what part can be skipped because in our case we do not need it. And this is a very good example because in my case I do not need cash buy part, but I need cash sell. Okay? And we can select only part that is necessary. It's important. Speaker 1 This is very important because in real life examples, for example, you can call some foreign currency exchange rate service and you know, we have almost 200 of different world currencies and you may face maybe 4 or 5 or even 1000 of records, 4 or 500 or thousands of records with different values and parameters as response. So it will be really important for you to select only parameters that you really need to get from results of web service. Because sometimes web service result body is quite excessive, including a lot of information that you don't plan to use or just not useful for you. In my case, I am interested in cache cell list and I will save it. Okay? So this helped me to avoid manual registering of parameters. It's possible I can create such parameters manually. I can reproduce everything by ",
      "page": 437
    },
    {
      "title": "",
      "content": "my hand. Speaker 1 But using this quick setup tool by examples is much more efficient. So I have a root item here which represents a collection is array. And also it's interesting to mention that creature uses such thing called JSON path. JSON path is a kind of address of a value inside of a JSON body. So this value helps to detect and get corresponding value out from JSON body text and creatio is using it to allocate and find the corresponding parameters. As you can see, it's body parameter and inside of this array we have pairs of data weight and rate. Let's look at our data closely. Weight usually so it's shown as a text, but physically it looks like a integer number minimum is 1 gram and maximum is 12,000 grams, which means 12 kilos. So we can afford to treat weight not as text but as integer. Speaker 1 Because we see that for all data values here it will be nice if we have an integer so we can treat results as integer and system will be okay with it. But when we go to rate and see some examples sometimes. So in general rate is a text and sometimes we see thousand separators and sometimes you see it even twice. So it turned out that this mechanism which gets data automatically with the help of data service works poorly with type conversion. That's why it makes sense to keep rate obtained as text. And if you really need to work with it, as with decimal, obviously this is a price, so it should be decimal. Speaker 1 So if you really need so you can parse this data lately after you've got it from the web service and then later and then you can save it as you wish. In my case I keep it simple. I try to not spend too much time on such data type transfer. So I prefer to keep it as text. So it will be just a good for our demo. It will be not so suitable for real life calculations. But later it will be not a problem for you to use date type conversion using. For example, you can use script task for it. If really interested we can try to do this. But I'm trying to, let's say save our time and to not to go quite far from our data obtaining from web service. Speaker 1 Okay, so this example takes result data and parses it and finally will present our data as collection of data records. We can save it. Save it. And this information is now saved in our configuration section. Now I propose to make a five minutes break. I promise not to go too far and then we will continue. So let's move on. And we finished on the creating of our web service. Checking out that our web service was saved into our package. This is very important. And now we will use it. So what how we can use it? We can create a business process which will run this call web service item. We will get response data. But we need to think of where we plan to save set of records with weight and rate information. We have only two possible options. One is memory. Speaker 1 But it will require some C sharp scripting for us in order to keep data in redis memory. For example, I prefer to make it more simplified and no code. So we will save our data into our database in just a simple lookup. This lookup requires integer weight and text rate. We can easily create it ourselves in this package. So I will do it Add object. This is necessary to organize storage of our data. And this storage will be named USR gold price. No, we can do it parent object but not base lookup because we don't need name and description. I will use base entity because it will only give us standard parent columns and we can add business columns ourselves. So we will create integer usr weight colon. It will be integer and one more will be text 50. Speaker 1 ",
      "page": 438
    },
    {
      "title": "",
      "content": "The minimum one usr rate will be our rate column text 50. You may ask me why text? The answer is because I do demo of getting data in real life. We will need to save our text values first or maybe to use them and process before saving with the script task and then we will use a decimal value to save finally converted value and in my case I went just to keep it as demo for you. So we'll save a text rate data as we get it from web service and that's all. No anything else we can publish our object. As you remember publish always performs save first so we don't need to click save button. Save was performed and publish was done. Great, now we have this object already applied. Speaker 1 One more small step we can go to lookups and register this object as lookup. So we click lookups new lookup find our gold prices save it. So now we have this lookup we can open its contents but we have nothing there. We can open properties and create data binding item and save it into our package. This is necessary to remember registering of the object as lookup. This is mandatory step if you want to go to your lookups and find it when we will go when we will deliver our solution to test environment. So now my gold prices object is ready and we can move on to work with processes. So we registered our web service and we can use no code solution with processes to get ",
      "page": 439
    },
    {
      "title": "this data from third party.",
      "content": "Speaker 1 We can create new process name it like USR yet road price main process this is main process because I also plan to use sub process to parse my collection. That's why I call this processes main process. No initial arguments simply starting our process by manual start and the first step we need to do is call web service process item and which web service to call. We have our ID banking web service then which method to call? We have the only one method that's why system selected eight method for us automatically. We don't have any request parameters. When we switch to advanced mode we can see response parameters and response is our collection with couple of values here also we will get HTTP status code which will be useful to check different errors and analyze what's actually happening. Speaker 1 And sometimes full response body will be important because it will be it will include everything obtained from third party without any parsing Boolean success property and probably that's enough. And we also have a SO request body but it looks like this is an input parameter and only for very specific cases. So I don't know how to make a no code example with this response request body so we will not use it now. Okay, so when we run this call web service we can run it like get Gold prices. This item will finally run this query. Let's go to primary mode, get code prices and it's important results will be saved somewhere inside of this item inside of the response parameter collection. So we will obviously have to process this collection somehow. Speaker 1 And first of all I will show you some error handling in case if our request finished successfully. We can turn this flow into conditional flow by clicking on this change type button and then set conditional flow so we can name it okay and we can check condition. This condition will include just boolean success property. If it's true then we will go here. Otherwise we will stop and we will have another terminate item code error and we can go from our call web service to this terminate item. You can name it error means something is not good and we can just turn our flow as into default flow. Default flow will be activated if no one from conditional flows worked for us and default flow will be our error handling. Speaker 1 So if we not successfully code our web service, no need to try to perform next steps. We just need to stop our so abort our process and use a separate terminate item because it will be stored in our history of execution so we will easily understand that it finished with an error. Okay, but if everything works well, we need to think of the place where we plan to keep our data when we first run it. Obviously our data table will be empty so no visible preparation necessary. But when we run it next time our data will be not empty and maybe it makes sense to clean it with the ",
      "page": 439
    },
    {
      "title": "",
      "content": "delete data item. So I will do this delete data and this will be an item to remove data from go price object. And as you can see we have kind of protection here. Speaker 1 This protection means that for delete data we must use some parameter. If we don't, this will not allow us to save process and it will show us errors. So we must use some parameters here. And this is kind of protection from unintentional delete of all the data. But in our case we intentionally want to do this. So we have to perform some kind of fake query which will be always true. And that's how we can make this correct condition to delete data. So I will make a filter like ID is filled in for any existing record. This condition will be true and that's why I can use it. And it's quite easy and simple. It will not require too much resources from system to make it. So this will be an item like clear prices storage. Speaker 1 So we delete prices from our storage and then we can use so we have a Collection and we have two options. To use no code approach with sub process to parse collection or to use C Sharp code in order to parse our collection with programming. Of course I prefer no code approach. Let's save temporary our current progress. Oh, it tells that the change is saved. Cyclic change in packet hierarchy. Probably it's because of I forgot to make dependencies and settings. Yes, it was my fault. Okay, it was unusual, but it was my fault. Well, it's because of current package system setting was pointing to classic UI package. I have to switch to realty. Yes, modify my setting and save again. Now I have no cyclic dependencies. Let's go and check our packages. Speaker 1 So realty package should be dependent from dev classic and dev classic package should not be dependent from realty. Yes, looks good. Yes, looks good. Very good. So now no cyclic dependencies, no troubles. And this was just because of the package. So that's why. So we worked with process library. If you select a corresponding package, if you start to create your process from here, then your process will be okay with the correct package setting. So possibly we have one more plus for creating processes from configuration section, but not from the process library. Okay, we have first now let's do not repeat this mistake again and we will select our package. Add one more package. I need a sub process to parse my collection. The main idea how we can parse collection is to make a sub process and to use arguments as parameters. Speaker 1 So we'll use parameters and I was a process to accept collection data values and I will make my process name USR add gold price subprocess. So it will be my sub process to add the gold prices. I need parameters because the only way to transfer data from main process to sub process is sub process parameters. One parameter will be integer. So I add the parameter which will mean weight integer input which make it makes it read only inside of my process. But I don't plan to change it. So I only plan to get it as input value no initial values. Save it. Another parameter is text 50 the shortest one and it will be rate and it's also input and no initial value. So here we have a couple of values we expect to get at the beginning of the process. Speaker 1 Then we will use our process and our process structure will be really simple. We will just use one add data item. We will add data into gold price object add price and we will fill one record and only couple of values weight and rate will be filled in very easy rate and weight. So rate will take its value from corresponding Rate text parameter weight Clicking on this lightning button, we'll get its value from corresponding integer weight parameter. Please note select parameter window always filters available parameters according to the data type. So that's why we see only decimals and previously we saw only text parameters. Okay, we have this stuff. So you see the sub process is pretty simple and we can save it, close it, go back to main process. ",
      "page": 440
    },
    {
      "title": "",
      "content": "Speaker 1 Now we will use an item called sub process and I will use this orange item and place it into my diagram. Normally when you want to run a single instance of a sub process, you just specify your sub process name and single instance call means you have to transport. They are just pair of values and this means that you will run your sub process only once. But in our case we plan to work with it and parse collection with the help of sub processes. So I will use special settings. Now please be careful and watch here what I will do now. For example, let's go with wait first. So we plan to turn this sub process into a collection processing mode. And this can be done by selecting special values here. And such values should be taken from collection. Speaker 1 So I click on this lightning button, select process parameter and then I will select process elements and our get gold prices call web service. It returns collection and we have corresponding weight column in this correction. So I have to double click it. And that's how our sub process immediately turned into collection processing mode. And it will run as many sub process instances as many collection data records we have. And we have execution mode sequential or parallel. In my case, no need to run parallel sequential means one by one and we have input collection. We already specified weight column for it. Now we will set rate column from process parameter rate double click. That's how we do this. Run it in the background is not necessary here will probably only take some additional performance. Speaker 1 But in here we can just run the process and we are interested that in finishing it fully synchronously. No strong reasons to run it in background creating some scheduler executed tasks. So we just can run it simply in a current thread. Okay, when it runs we can also call it like add prices. Okay, it prices and it will run ad vote price sub processes and we'll have as many sub processes as many collection records you found. So that's it. Our example is ready. So it will be our happy finish item. This is our start. It makes sense to note and make names for all the items. It will be like a documentation which makes it easy to understand and we have current version. Okay, let's Save it. So now we have this process and we can start it from here or from process library. Speaker 1 Let's reload it by clicking on this icon and we have to start main process. Let's start it. But also before starting it we can enable trace to be important for our debugging and we can also. That's it. Okay. Trace is the only one option suitable for us. So let's run this process. Then we go to process log. We will see our main process started and it took a bit longer than 1.2 seconds. And then you see number of subordinate sub process instances executed quite fast. But we have approximately 11 items here. So we can check main process and open its execution diagram so we can see how many times our sub process started. 11 starts, no errors and it looks like everything went fully okay. You can also see trace data. We are interested in how exactly our gold prices were obtained. Speaker 1 So we can click on show trace data. You will see all the parameters in your collection. We can see technical parameters like response status, code 200 means everything is okay, full response body sometimes can be important. And it looks like in our example everything went smoothly without any errors. So this trace takes some additional performance. But in general it's a good idea. And this trace helps you to understand if something goes wrong. And you will see exact parameter values, exact status code. So I recommend you to keep trace on if you want to support possibility of quick discovery of something if something goes wrong in your integration. So in my case everything went well and we go to lookups to see exact prices. So code, prices section, lookup list and we can just display weight and then we can display rate, save it. Speaker 1 ",
      "page": 441
    },
    {
      "title": "",
      "content": "Also it makes sense to look at the columns of creation, date of creation. Okay, and now you see we have all obtained data saved in creation. Physically this is text. So if really needed we can use parsing. We can use some C sharp scripting to parse such values into decimal and then save them into corresponding decimal fields. But technical side of running queries and asking third party system and to return some data. I think it's quite clear in case if you have any questions, feel free to ask, I will be happy to answer. This is example how we can call third party apps. And at the beginning of course you will need some example of a call some URL, example of parameters, maybe some description and documentation how to call this password public API. And you have all steps made with no code. Speaker 1 And finally we have a process which takes probably less than hour to develop with all the explanations and we successfully got our data. If we start this process one more time, you will see in our lookups, you will see new data. So you see date in time was changed. So our contents of previously obtained records was successfully removed and we have new data records inserted just seconds ago. This is also important when you develop your integration to check how it runs multiple times, because if it runs once, it's okay, but you should expect it to run regularly and it should properly include the existing data and correctly operate with it. Probably removing it, probably updating it. It's up to you in case, if you have any questions about it, tell me please. Speaker 1 My next topic for today is to explain you how to use Clio tool and explain why you need it. So first of all I should explain why we have some additional tools and not inside of the base platform. So previously we already had a tool that was necessary to support developers and this tool was called Let me show you Delivery Tools and Workspace Console Overview. So previously we had a special tool called Workspace Console and it's probably more than 12 years old and it was used only for developers and only for developer tasks. Sometimes tasks were included based product preparation, processing resources, translations and so on. And finally it evolved into a complex tool with Many more than 50 different functions related to C Sharp sources, related to stored localization files, XMLs working with file system, working with version control. Speaker 1 And so it has a lot of different, let's say quite technical purpose, which probably will be not necessary for end users. So developers used it for a long time. But now this is an old tool which has its own disadvantages and developers wanted to make something new, so they made a new tool called Clio. You can find it in GitHub, ATF Clio. If you search for this, you will easily find GitHub repository. You can find its root folder and then you can see a list of owners or maybe authors or contributors into this tool. And you need to remember that most of them are Creature employees, only some of them are outside of a company. So you see some strange users here and there are some people from outside of Creation, but most of them are from Creature. Speaker 1 So generally you can consider as this tool was written by Creation in general, but this tool has open source code. You can easily not easily, but you can analyze its source code. You can like propose your own improvements into it. You can even add your own functions and also collaborate and helps to fix maybe some bugs and maybe to improve documentation and so on. So this tool is open sourced, so it's free of charge and you can use it at your own. This tool has also more than 50 different columns comments and I need to quickly show you how you can use it and why you may need it. I will focus on the most useful examples that you may face when you develop your projects. Speaker 1 But you should keep in mind that this tool was written by developers of base product, so they had their own reasons ",
      "page": 442
    },
    {
      "title": "",
      "content": "and needs to operate inside of base product. And now you will see this difference. So let's go and I will show you how to use it. This tool was designed to use by command line, so you should use some Windows or if you use other this other operating system you should use command line for it. And first of all we need to check presence of this tool and you can find documentation here how to install it. So let's let me show you. You must install dotnet core framework on your PC if you want to use Clio. Speaker 1 I already have it dotnet tool list G this is command showing me existing installed dotnet core tools on my PC and Clio is already installed here. Okay, I can remove it dotnet to uninstall Clio G It means remove it from my system. Now if we check we have no creature Clio tool on my PC. This is a common line utility. It's managed by command line parameters and the most important property of it. It operates with target creation system with the help of web service calls. So Clio is managing creation by help of web services. It means that it can manage local or remote instance the same well so unlikely to workspace console which required file system access and database access to your creation. Clio requires only Internet network access to your creation. Speaker 1 Okay, let's install it.net sorry to install Clio G this is command that you can type in your windows command terminal. This is two this is common to install Clio. It will install the latest version. Let's see what version we will have. Now of course this comment requires Internet connection so it goes to nuget searches for the last package which it can find. And now you see the Last version is 61016. So this is current latest version of Clio. Okay, we installed Clio but not set it up fully. We already can run Clio command to see plenty. Oh sorry, my fault. Plenty of functions that it can do for you. So let me show you where is my scroll bar Here you see more than 60 different functions and I have. Speaker 1 I have suspect that the most early created functions are at the top of this list and the most recently lately created functions are at the end of this list, you will not need all of them. So it's like a universal tool. It has a lot of different parameters, a lot of different comments. So I will show you the most important, the most practical that you may need. And after installation we need to tell Clio what environments we will work with. Because Clio operates with target website and it needs to know URL, login and password. So we can use command clio show webep list and it will show a list of registered applications that are already present on my disk and physically saved into this app settings JSON file located somewhere in my user folder on disk. You see my previous attempts here. Speaker 1 So I already have some previous environments registered. I have to register my current environment. Clio reg web app I need to show you reg web app. Of course you need to know how to spell certain comments, how to get their parameters. So you can try to do something like this. And for some comments. Oh, doesn't show us. Okay, let's do this like this. So for most of comments you can type minus question and you will see some error that it did not obtained, did not understand the command. And it will show you a list of all supported comments. Most of commands have their short version and most of parameters have their short version. So in order to save your space you can use shorter parameters. And the reg the app command is used to register your app. Speaker 1 So it will be included into this file and then you will refer to it by name. This is easier than providing URL, login and password each time when you need to operate with target environment. So let me register my current environment. Clear reg the web app. I already have some example, so let me type it. So I have D1 to do. Yes, this is my environment. Okay. L means login supervisor, P means password supervisor and my name will be D1. So this is how I do my register. Copy it for you so you will remember it and you will understand why I need it. So when I register my app. Oh, we have some additional troubles. And path environment list is net core. So we have some troubles in existing app settings. JSON okay, it was not expected. Okay, show the list. ",
      "page": 443
    },
    {
      "title": "",
      "content": "Speaker 1 Wow, we have some troubles in this file line 41. Probably because I have some older versions of such settings. Okay, let's go where it tells users. What else? Users or user app data Local creation My user app data local creature. Sorry, sorry. Local creation Clear App settings JSON possibly I have some incorrect settings here or maybe outdated settings. Oh, I have something like this, which obviously it doesn't look good and probably it's a result of some previous stuff. It looks like I have some incorrect settings here. So okay, environments closed. Then here it's end of environments. Here is end of all stuff. Also I could remove my previous items here. So I have no environments. Now let's try to ask it. Clear show web app list. No troubles. You see, everything is okay. Clear reg web app. Configure it correctly. Okay, great. Speaker 1 So now we can do some simple operations with it. Cleoping and then we have different options. But the easiest way is to use E key for environment and then environment name. So this cleo ping will physically check availability of our web service. And if it's okay, you will see yellow. Sorry, not yellow green color text. So ping was successful. One of the functions that can be useful is restart. So you can use restart function. Restart comment clear restart ed1 this is for restart of our app. You remember we used maintenance tools add on for this. But also you can use this command to perform restart. Usually it's safe and quite quick. You will see what is happening. Now our application is being restarted. It takes up to 10 seconds and sometimes you will need this restart as part of your development process. Speaker 1 You remember when we modified some objects, added new columns, we had to restart our app to properly apply such changes. So we had such scenarios in our training when we needed it. And simple log out and login did not help. Okay, so let's move on. We already started restart. We have a lot of other commands and you will see plenty of them. A lot of comments. I will show you the most important ones. So from project development point of view, you need to know that Clio can really help you with saving packages and loading packages. So you can use Clio to download packages. This one, this comment. Download packages from source environment. For example it can be developer environment and then you can use install package. Let me find it. So we have download and we should have upload. Push pkg. Speaker 1 Let me switch find it should be somewhere here. Yeah. Push pkg. It has also short command install. I don't know why developers did not show it here. Install command is capable so it should be shown here. So you see documentation probably is not perfect. And the install command loads our package to target environment. This can help us to organize CI cd continuous integration and continuous delivery with a single script that can be started with the one step one operation. We can download and then we can install it. But also you need to know that create Clio has more other columns. Sorry comments and some comments like we use for download or install are using standard base product creation Web services. So system that we work with doesn't require any special setting. Speaker 1 But if you want to use all power of existing Clio commands, you must perform special command and this command is named Install gate. This Command downloads from NuGet and installs in your target system special package which keeps DLL inside. And this DLL includes all necessary web services that enable this set of commands. So such web services, simply speaking, are parts of Clio to implement corresponding comments without this comment, without install gate, without additional package installed to your system, CLIO will be not capable to perform corresponding commands. It will show you error 404, which means missing functionality in your target environment. So Clio only runs web services at your creature. And if it fails to run web service that it needs to perform a corresponding command, you will see this error. So let's try. ",
      "page": 444
    },
    {
      "title": "",
      "content": "Speaker 1 Let's try to run a command to install gate Clio install gate ED1 this is required in case if you want to enable full power of Clio commands. So in my case, I will do it in my source environment. This takes time because it Downloads package from NuGet, it installs this package into your target environment. This package is called Clio Gate. So you will see new package Clio gate in your system. And this package will have so called file contents and file contents will include compiled classes for your web services necessary for Clio to work. Let me show you. So here we have configuration section. Okay, it looks like we have some stuff here. Let's reload the package. Reload configuration section. We have some interesting information here. I did not expect it. It looks like we have some troubles with all data for compilation. Speaker 1 So system tried to compile and failed exceeded narrow try count work process. So our IIS prevented our system to compile. Let me check. Did I detach? Of course, my visual studio was detached. Okay, I need to look at such questions. And also we see some troubles with old data and probably it's file system issue. Okay, so now system tried to install and compile package named Clio Gate. I should expect it to see it here. No, now sort was performed with this case insensitive sort. Clio gate is a package with functions that are necessary to run Clio commands. And you see only a couple of data items here. Of course, it's not full stuff. So we go to file system, we go to our application, go to our packages Clio Gate package. Speaker 1 You can see its size 5 megabyte of executables not so little files Bin and here, here and here are DLLs included as file content for this Clio Gate package. So such DLLs are used to execute Clio commands. They implement the implement web services, install such classes into creature server side. So that's actually how Clio may work on a certain environment and how Clio may create and implement new comments. Because if you want to run something, your target system must be able to do this. Okay. So if necessary we can fight with it. It looks like I have not so much time today to fix this configuration issue. My command to install Clio gate package was quite correct. So it looks like everything is okay. So now I can show you some examples how you can use Clio efficiently for project development. Speaker 1 And this will be comments to save and load environment settings and Sorry, Save and load packages. Let me show you. I already have another test environment. You probably forgot about it. So we have D1 Studio as development environment and D2 second was used as a target and the test environment. Let's check it out. It should be alive. So let's go D2 it's used as test environment. So why it's loaded? I can also use Clio to. Sorry to register a new environment. So we load it here and then we will use it. So clear rag web app. I need to register D2 and I will call it D2 test to make it clear that it will be my test environment. Okay, register it Clio show the back list. Okay, my D2 test and Clio ping P D2 test. So. Speaker 1 So I will check availability of my second environment and it looks like should be okay. Yes, looks like Bing is okay. Here is my second environment. So my plan is to show you the most useful usage of Clio for project development. This is CI CD automation for saving and loading of packages. I already have examples of scripts that perform this save and load. So let's take this one. Probably Clio download so we can download set of packages. Let's check out how many source packages we have. So we have Dev Classic. Okay, here Dev Classic. Then we have USR Realty and also we have USR Realty migration. So we have three packages here. USR realty migration and Source environment is dynamic one. So Clio download is the same as Clio pool PKG command and we can download set of packages. Speaker 1 ",
      "page": 445
    },
    {
      "title": "",
      "content": "Not only one but several packages from source environment. Destination path is somewhere like this guided dev. Okay, let it be May 2024. So we will finally have a result of a zip file including all our packages. We can use this zip file into next command which will be used for loading clio install the same as clio pool push pkg we will use source file I will use on target environment D2 test and we need to use logs because it's important to see some technical details. So I will share such comments for save and load with you. It will be really important for you if you want to practice with it. And now let's check out how it works. We will remove unnecessary examples and this will be my save and load example of CI cd. Speaker 1 Let's try first system will save three packages into gz files organized into one single zip file and then it will be done and as you can see it makes it as a one operation if you do save manually saving of an app or saving of a separate package. So you will have to perform it with separate structure steps. As you can see it went but not so fully correctly. I will remove unnecessary files from my example the 7th of April so those are here. So here is our saved zip file. So it looks like save part went okay and may part it looks like I had couple of exceptions here. Let's analyze our logs. Speaker 1 So you see we have location packages more file descriptor more than one file app descriptor JSON what it is what package it's about real to migration No, I don't know. So something wrong with application descriptors we can check it at our file system. Probably it's a result of something messing with package dependencies. So our realty has its own information of app descriptor yes, this is realty app. Okay, realty migration has its own app descriptor yes and our dev classic should have no dependencies from existing reality stuff and it should have oh we have app descriptor extension. Speaker 1 Something is strange here and it looks like probably system failed to work with it but it looks like it's not a big trouble and you see one more issue here parent schema and was not found yes, this is more serious trouble because it looks like our target environment was not fully prepared to install our changes because it miss customer 360 app possibly previous error message that we had here previous message with this stuff here probably it was also missing corresponding app and we used so our solution expects that target system will help customer360 in my example customers current our target environment did not have customer 360 that's why we have this stuff. So in order to fix it of course we have to install customer360 first and then our solution next. In this case it will be loaded fully correctly. Speaker 1 But now we can test our target environment. So usually we need to reload it. We can find our items like oh, we don't have any, probably did not like it. Okay, we have to install customer360 here and then load our solution. So you see only Dev Classic was loaded here and recent stuff was not loaded. Okay, let's try to install customer360 install. Continue. I did not enable file system development mode here because it's like a test environment and no any creation, no any external ID. So let's install it. I install customer360, then I can try to load my settings again. That's how we will see our working example. So I plan to show you fully correct transition of my environments. This is customer360 installation on my target system. As you can see previous results of manual load of package. Speaker 1 Manual load can be done with new application and then install from file. Now we have successful installation. Great. If we reload we will see customer360 app added. Yes, customer360 was added. Now we can try to install our stuff ",
      "page": 446
    },
    {
      "title": "",
      "content": "one more time here. Let's remove previous package. So we will. And one more thing before we continue. So this is not so obvious, but when we developed C sources we used external editors. We have C code saved on disk only. And in order to make everything correct, we need to download all items that we develop manually inside of our embedded editors back to disk. And then we have to upload changes from disk. This is very important because our ",
      "page": 447
    },
    {
      "title": "database part of C Sharp sources may have old C source.",
      "content": "Speaker 1 And if we ever try to compile our package on target environment, we may have very unpleasant situation when we will try to compile old contents of C sources instead of actual one. So in order to make correct export of your solution to test in production, we need to save everything on disk. Then we have to take everything from disk update packages from file system. Now you will see system will show us differences in C Sharp code. Because both examples were written here and here were written with the help of external editors. This is very important. Now our system is ready to export. So let's do this again. Save and load. Thank you Adrian for your time. Yes, we are almost over. We will continue tomorrow with preparation for developer action and also answering your questions. Speaker 1 It will be not so hard and thank you for your time. So now I just plan to make it correctly with save and load and then if everything goes well, we will see our Apps we will see our functionality loaded to our target environment if something goes not as planned. This is also good because we will see some exceptions. You will see how we can troubleshoot them. It's important to understand how you may do some fixes when your package is not installed as you plan. Now you can see. Oh, do we have any errors? Yes, we had some errors here and it's interesting because it should not be so we should not have any issues here. Possibly it's about data. Let me check here we have a log file and we have data insert issue. Speaker 1 So sys module entity USR realty no then this module in workplace studio so violation of primary key. Oh, it's because of data binding which does not keep correct IDs but duplicate cases module in workplace. So it's registering of a section in the workplace and this duplicate is possible because of the way how data binding saves it. So we have one data item failed to load but in general okay, one more data item failed to load so we have only troubles in couple of data items. But general data was loaded so we have as a result some errors. But this is because of something is not exactly the same as our original stuff. Okay, let's try to reload our section. Let's see do we have anything loaded ",
      "page": 447
    },
    {
      "title": "Studio my applications we have realty section.",
      "content": "Speaker 1 We have classic we miss reality sections here because such data items were not loaded. I will show you how you can fix it. Let's go to advanced settings. Let's find our new packages loaded here so we can search for realty package and we can see couple of data items. So let's see only status has error or needs to actualize here so you can see list of items that were failed to install Couple of SQL scripts from base product we don't care and only one item in our reality package was not loaded. We can see error message text and properties. So violation of primary key. It looks like system can't find the correct value of what and it's hard to see. Okay, let's see. So it can't find correct duplicate value of sys module in Workplace. Speaker 1 It looks like we already have sys module in workplace ID and it looks like this data entity was not good. So we have some items here and we have key which was not ID and key was used by section and workplace. So we can fix this it's not good and this is behavior made by data binding tool. I don't really like it. So we can fix it with the another data Item organizing key by ID that will prevent the data from inserting twice with the same id so we can fix it. Let me show you. Since module in Workplace in Studio so it's our reality section. This is a data item. This module in workplace for Studio and such settings for key is not good ID key is better position for update if in case if record was ",
      "page": 447
    },
    {
      "title": "",
      "content": "found. Speaker 1 Great, and we can save it. And we have a lot of warnings, but it's about existing date. So let's actualize it save it. Just a lot of warnings about reorganizing of the same existing set sections that are already present in data. And also one more thing which we potentially have the same trouble sys module and workplace for this realty and it's 26 my application. Also it makes sense to our ID is already set here. Okay, great. Probably you can put position updates choice data save it. Great, Everything is okay. So we fixed it. We have to save everything on file system just to make sure we will correctly have all the data well in our repository version control. So now you will see that it's possible to save and load packages again. We can prepare something like order like v1 plus old file. Speaker 1 Now we will have a bit better version of it. Okay, saved. Now let's try to run this transport again so it will be final one. And this is example how you can automate delivery of your changes. How you can take data from developer environment and automatically save and devote it to some other task target test environment. Of course, as developer you understand that sometimes things are not going very smoothly. Sometimes we have unexpected errors. And having such errors during the training is also good because it helps us to see how you can troubleshoot, how you should search for error details and how you should do all changes. So now you see next time we load it took significantly less time because loader is smart. Speaker 1 Loader text takes zip file, takes information about its items, all the packages, all the items of configuration and it analyzes date of modification. If date of modification of the loaded item is the same as date of modification of items that you have already in your target environment, then it just skips it. And that's why if you have a big solution, but you have tiny small changes, they are from recent upload that you did previously. It will only analyze changed items when loaded on target environment and final total installation time will be small. And now you see only couple of data items that were failed were now updated and fully applied and everything else was correct. So now our system in our target environment has no errors. As a result of installation we can go to all packages to see items. Speaker 1 Actually only base product stuff. Okay, don't care, no errors. Okay, so our package with realty was fully correctly voided. All the items that we have were loaded well. And we can test it at our user interface. So you can go to corresponding sections, you can try to create data records. You see all three actions, all three sections here. So our reality with columns you can create new data. So find me cat here. And you see now we have default values working. We have some test data. Test price, negative price, validation works too big price will also work and system will not allow us to save because of server side. Okay, like this. But now you see price is more than 1 billion. So everything is working as expected. Speaker 1 So that's how you can deliver your solution to test and check it out and perform corresponding full scale test for your system to check how it works. Now you see details were filled in. So everything works quite well. And that's how you can do some automation with Clio. Clio has also a lot of interest in other comments I will show you just one of them. Clio SQL select name for contact. Okay, something like this. So this is example for Clio SQL execution. Sometimes when you work in cloud with cloud environments you just can't connect to the database directly and operate with it. So sometimes you need to run some simple select queries in database to make sure you have specific data. And that's how you can do it with your Clio. Speaker 1 ",
      "page": 448
    },
    {
      "title": "",
      "content": "So this is example of how you can read list of contacts from your database. Of course your queries could be much more complicated. And when you run SQL queries please be extremely careful because SQL statements is the way how you can easily damage your system, how it can easily destroy your database. So you should be extremely careful and please check your queries before execution. SQL can really help you and to see some data directly. Unfortunately Creature has no tools to work with SQL easily from user interface. Now previously we had such tool but was designed by some Russian partner. And as you remember, as you know, Croatia gave up any work with Russia or Belarusian partners and customers. So we also removed all of the add ons from the marketplace. Speaker 1 And that's why now we don't have any fancy good looking tool to run SQL query from application user interface. But now this is something that you can do. And the last information that you need to know about Clio is that it's also possible to use add on for Visual Studio named Clio Explorer. So Clio Explorer Is an add on that you can use in Visual Studio code. It automatically loads your information from file with connections for existing solutions. And you can use a lot of Clio commands from user interface including SQL. So you can do something like this. Then you can run your query. Let me see where there is a button to run query. This one. So this is Clio SQL comment and it tries to run my query. But what? Oh, D1. I already connected. Probably I connected. Yes. What's wrong there? Speaker 1 Split editor. More actions. Oh, probably this. Yes, it was case sensitive. I don't know why it's case sensitive. But now you see some data we got from the database and you have some kind of UI stuff. But with the help of Clio Explorer. Clio Explorer uses installed Clio Explore tool. So without Clio installed it will not work. But this is user interface feature which can help you to work with a particular environments. Would you like to current. No, no, no, no. Thanks. So we have a lot of functions of Clio the most commonly used and some of them. And also you can use Clio commands from terminal window of Visual Studio the same as we used in other Windows console bars. So, thank you for your time today. Today our session is over. We will prepare for the exam tomorrow. Speaker 1 As usual you will receive video recording of today's session. If you have any questions, ask today or prepare questions for tomorrow. Because we will have more time tomorrow. Thank you very much for those who stayed for this moment. You will see videos soon. Thank you and goodbye. Hi Dimitri, it's boss here. Yes boss. Please. Tomorrow I'm. I have other obligations to attend to, so I will probably follow it by video. But is there any special action I have to take the fast track on development certification? Oh yeah, I will explain. So I will send you final email with all video recording with homework for your fast track certification and quick explanations of what you should do. Speaker 1 So if you agree to run Fast track certification, you should just respond to my email and we will arrange individual date and time for you to run your exam. Your exam will include check of the homework. So you should prepare homework before exam starts. So you will have a couple of weeks to do this and you should prepare for the test using self assessment tests at Academy. I will show and so at the exam we will look at your homework and you will run your online exam test. Okay. If you fail, you can run this test again later. So don't worry. It's a bit nervous. I understand. And Fast track certification is free for our guided learning participants. Okay, cool. So you will receive all necessary stuff and videos explaining how to prepare for the test, how you should answer questions, and so on. Speaker 1 You will see the type of the homework Raki is asking will include. So let me quickly show. I planned to show it ",
      "page": 449
    },
    {
      "title": "",
      "content": "tomorrow, but okay, if you ask now. So let's do this, I will quickly show you. So the type of the homework will include making your section, this one, making your detail, make programmed validation, some calculations, web service, and for those who want to run an advanced level, some additional business process and adding data records and some automatic update. You can use live Update to automatically refresh your screen. Or I will show you how you can use WebSocket messaging if you prefer. If you prefer to do it a bit more professionally. So the homework simply is just similar to what we did during our sessions. And it requires some programming for validation, calculations and web service. Speaker 1 So it requires some javascripting and C Sharp scripting. And so it will not take too much time for you, I think, and I hope that it will be clear. So we discussed all the steps how to do this. If you will have more questions, you may ask tomorrow. So Rakhi, I think that those who passed our sessions watched our videos and practiced with their own. You can use even your own example because the name of the section is the same set of columns, very similar. So you can use your training session environment to perform your homework on it. So it may be helpful. You do not need to create a separate environment for your homework. Okay, thank you for your time today. Speaker 1 Sorry for staying a bit later than usual and if you will have more questions, so prepare for tomorrow, we will have time for this. Thank you very much for today's session and goodbye. You will receive homework assignment tomorrow as well as all video recordings and all the questions I will answer tomorrow. Thank you and goodbye. ",
      "page": 450
    },
    {
      "title": "",
      "content": "Speaker 1 Foreign session number 10 of our development on creation platform Guided Learning. Today we will prepare with the to prepare for the certification for the development exam. And this is an optional thing. So if you want, if you feel yourself ready for this, you can apply for this type of check certification. And as you are members of our guided learning, so you can run fast track certification for free. And I will explain what certification is, how it's held and what you should do for it, how to prepare. So all the certification steps we will discuss today and I hope it will be clear. So in general, the main purpose what is certification? This is a test. It's a check of your knowledge and skills. And we have some certification basics displayed at academy.academy.creation.com Go to certification if you're interested in development certification. Speaker 1 So you see that we check some major creation development skills related to some C sharp programming, JavaScript programming, understanding of general architecture, understanding of packages, some little SQL experience and integrations questions. So certification is like part of your path. And if you pass certification, you will get your certification certificate which issued for two years. And being a certified creation developer gives you some advantages. One of the obvious advantage is that you can ask for help at support team at creation support team with the questions related to development like how can I do something like this if you have no your own certificate Developer certificate support team will reject you on such questions. But if you are certified developer and you represent company with a paid support plan, so your company should pay some money to support for support. Speaker 1 In this case you'll be able to ask questions about development and improvements and support team will help will have to help you. So now you are somewhere here. You now started our customization and development already finished development course. And then the next step is to prepare for the exam and then pass this exam. This is optional so it's not mandatory. And if you do not feel yourself ready for this, you may do it later. You can also apply for certification at Academy website. But in this case there are a bit different rules and a bit different complexity. So at Academy you can register for an exam and if you are a partner, such exam is free. But if you are a customer, so member of a customer company, in this case certification is paid. Speaker 1 So if you are a customer and attended our guided learning session, obviously it makes sense to apply for a free fast track certification. RAK is telling that going to do the same step. So same step. Yep. Next price web service working parameters are not showing not passing. So it looks like Raki you need some help in your Environment and development and maybe debugging. Yes. So it's about the question how something is not working well and you need some assistance. Yes, am I. He's showing a screenshot. Let me show it for you. So it looks like your code is not working properly and possibly you should just check. Let me show you. I believe as you use the name of the ",
      "page": 451
    },
    {
      "title": "Freedom UI section. So we should go to Freedom UI package. We should go to find form page source.",
      "content": "Speaker 1 I will show you, Rakhi, how you get such data. Here you see handlers. Here you see your button handler and you take type object. You should check that this is your attribute displayed in view, model, config and this attribute. So for offer type. Sorry, type. Here you should copy this attribute. For author type, you should copy this attribute and use it in your code. If you do it incorrectly, of course it will not work for you. So such value here should represent type column and here should represent offer type. It looks like your code is not failing, but probably you just do not operate with these names correctly. So you should get it. If it's not empty, you will get value. Value here means id. You also may find display value, which is a display text you can see in lookup columns. ",
      "page": 451
    },
    {
      "title": "",
      "content": "Speaker 1 Yes, thank you Rakhi for telling this telling me about this trouble. So let's move on with the certification. So this is kind of Excel and this exam is free if you are participant of our guided learning session. But it has some timeout so it will be not forever free for you. And Fast Track certification is available for three weeks after the end of our training. So three weeks from today. I think it's quite fair. And you can easily make your homework and prepare for the test. If you would like to run your certification for example, two months later, somewhere in August 2024, then you can apply for this exam just from Academy website and register for the exam at Academy. But currently the best way for you is to apply for an exam as a member of our guided learning. Speaker 1 So today I will send you the homework and if you respond me on this proposal to pass the exam. And we will organize individual sessions with those of you who would like to run this exam. And in order to apply for Fast Track certification, I will ask you to respond on my email. So don't forget if you want to register, please respond on email. I have a question. Yes, please. And we have already applied for the certification later this June, like becoming June. So can we cancel that slot and apply for the Fast Track certification which you have just discussed? Yes, yes. You can. So please write me an email because today's Friday and it's a bit hard for me to remember everything in my mind. So it will be much easier for me to have this task for rescheduling noted somewhere. Speaker 1 So please send me a message about it, I will process it properly and we can run Fast Track certification with you or with someone with your team. Thanks. Okay. Thank you. Okay, and let's move on. So what certification includes? We have some kind of general policy explaining here. So this is a link at our certification tab about the general policy. It's a PDF file. You can also read it, but I will explain you in several words. So certification includes homework. It's also known as practical assignment and online test, which is our online session with the trainer. This online session will be up to one hour and your homework may take a lot of time or not so many, not so much time depending on your skills. Speaker 1 So all of you will receive your homework today with the final email with all the video recording sessions list and so on. So you will receive your homework and you will have some time. I think that one week will be probably fully enough for you to make your homework or adjust your current environment according to the homework assignment. And the homework is designed so you can use your current Freedom UI section that we designed to implement your homework. Because the same section, the same page, the same business logic, just slight changes in calculations and so on. Speaker 1 So if you spend your time, if you already spent your time on making all our training session examples, it will be very easy for you to make your homework because it's also very similar and that's how you can get benefits from your everyday activity during the session. So let me explain what will include, what will be included into your homework. I will show you an example right now. Just a moment here. Fast Track certification and you will see the document. Yes, here. Okay, so this is fast Track certification. I will provide a better, more modern link or download the very late the latest version of creation for you. So the Latest one is 813 and the homework includes very simple tasks like ",
      "page": 452
    },
    {
      "title": "create new section, provide its columns new detail.",
      "content": "Speaker 1 And also it includes some examples which will require coding and validate coding samples for you in JavaScript and ",
      "page": 452
    },
    {
      "title": "",
      "content": "in C. So validation should include coding at client side. We already discussed how to do this. Just to remind you, this is about checks of your data and in our case we checked that negative prices cannot be edited, cannot be added. So you see, price can't be less than 50 bucks, so we cannot save such data and area also is checked there so validation also checks. So you should do the same at your environment where you present your homework. Speaker 1 So validation we already discussed you may watch our previous videos if you skipped it and you will know how to do this calculation is about edit page online let's say runtime calculation that we did also in JavaScript and we made the calculation of commission depending on price and offer type. Let me show you we did it. So if price changed, you see for each typing and each change of the price we have called commission recalculated and offer type. If it changes, you see commission is recalculated. We also covered such example fully during our session, including even potential issues that you may face when you add new columns to your lookups. So you can just follow the same approach and make it work just as we did. Speaker 1 Please note we have a bit different percentage of prices and for center for rentals and for sales, so take care to provide correct values here. So this is important and we will check it the next task is about C Sharp programming make your own back service club. It will do some calculation of price minimum price. In our example we made a maximum price so it's very easy to change but it will require your own programming. It will require your understanding of a C sharp script tasks or sorry C sharp source codes. So here's your package. Here is our web service so you should present something like this during your exam. Of course it must be compilable and it must work normally. In my example we use max price calculation. Speaker 1 In your homework exam it will be minimum price calculation so they're easy to change but you have to perform this stuff in and that's why your homework sorry that's why your everyday work and your results of work at our sessions will be important and it's so it will be useful for your exam and we already discussed how you can write such code. We used Visual Studio to facilitate our development and make it really easy with the help of background syntax check, intellisense, autocomplete coloring and also if you're interested, you can study the structure of this project and understand a bit more how it was done and generally project files and all the preparations made by creation. We ",
      "page": 453
    },
    {
      "title": "only make our own part of it as a C Sharp source code.",
      "content": "Speaker 1 Of course you may use so it's expected that you will use your local instance if you have no any conditions to run local instance. You can use cloud one trial environment or dedicated demo environment if you have so you can do this in any kind of environments and it will work for you. Of course your system must be compilable so you should not get such compilation errors as I do here. In my case it looks like I had an issue compiling my environment because of the same process did not allow system to replace some libraries. We will try to compile today just to get rid of this error message. Previously we had no troubles with it. So your homework includes also some server side checks and if you do five tasks of your homework you can apply for a basic action. Speaker 1 Also we have a task number six which is a bit additional one. It's about business processes. So generally it's expected to make you using business process, but you can make it with another tools if you want. For example, you can create your own web service. You can run your web service from client side using your code like we did running of a client side web service method that we made in task number five. So if you want to apply for advanced level, you can make task number six and prepare for the advanced test. We have two levels of certification, Basic and advanced. They have the same legal like power. So if you apply for help at support team, any type of certificate will be working for you. So basic or advanced works the same. ",
      "page": 453
    },
    {
      "title": "",
      "content": "Speaker 1 And also I didn't tell you important thing that if you are a member of a partner company it makes big sense to get many certified professionals at your partner company because it impacts on your partnership level. And partnership level is something about margins, about deals and money sharing between partner company and creation company. The reason is quite clear. If a partner has a lot of professional experts then there is a lower chance that creature will have to support and like uphold the partner in case of some complex situations with real customers. So if partner is really expert and professional then it's possible to provide better margin and simply speaking to share more money ",
      "page": 454
    },
    {
      "title": "with partner and less money to creature when signing some deals with real customers.",
      "content": "Speaker 1 So if partner has not so many experts and certified professionals then such partner will have less partnership level. And probably this is more risky for creature when any kind of agreement will be signed with a real customer including partner part of work. And that's why any partner is interested in having as many as possible of certified experts, certified analysts or developers at Valer stuff. So it makes sense for partnership level. Okay, so task number six is about some automation of adding data to the detail. The easiest way to implement is use of business process and then we can add so you can easily make a button or action that will do some insert some data and also there is a task to Refresh list. So update number so list of records. Speaker 1 After you add this data, let me show you and remind you how we can do this. So it will be very quick and easy. And currently when we add. Okay, let's see. So when we add new data to our reality section, you remember we already made some automatic insert of data house for sale. So we made automatic insert of data into realty visits detail. Yes, this one. But we can make the same process or make a similar process, but it's better to make the same process operational. And also that can be called from some action. I will show it how we can do this for you. I can find the corresponding process. I prefer to work with processes from configuration section because it makes it easier for me and harder to miss and auto add reality visits process. Speaker 1 We already used this process to add data. When new record was added, we used start signal item for it. And it was also an example of entity event handling with the easiest possible way using start signals at server side. So it was one of the examples of entity events for objects. I will show you how we can do it in a bit different way. And for this let's imagine we can start this process not only by adding new reality data, but also let's imagine we can start this process manually. We will need parent realty ID in order to transfer this data as an argument to this process. So let's go to parameters add new GUID or unique identifier parameter and we can call it realty. This doesn't require any programming for us to be okay bidirectional. Speaker 1 So we can register such parameter as you remember, parameters are like variables at our process. And in case if we start our process manually so we can call it manual start, if we do it manually, then we expect that this parameter will be filled in and then we can just move on to our step where we add data and then we can replace here parent realty not from signal but from this parameter. So we can replace process parameter and put realty ID parameter here. So now if manual start is performed, we do not use background here, then we will use this reality ID and everything will work. Of course, in case of started by signal, we need to prepare this reality ID and we will easily take it from the signal. I will use formula for this. Speaker 1 ",
      "page": 454
    },
    {
      "title": "",
      "content": "You can see it's not so hard and it's very important for you to become familiar and to feel some confidence when you work with processes because this is like a brick game, like a Lego, which you can use for much more complicated Processes and business logic. If you understand well how such tools work, if you make your own simple examples and understand it clearly, then you can use it for much more complicated things and you can use it quite efficiently. So in my case I'm using formula to assign parameter value. Formula is assigning operator in creature. So we set the value to target parameter realty ID and formula value is our expression that we save here as expression we will just simply take our signal. You see corresponding icon representing this signal. Speaker 1 So we can look at its title or at icon type that will help us to get it. And the only suitable parameter from a signal is unique identifier of record double click and that's how we will get this data and save it as formula value. So if our process started as is driven by signal so if our process started as event handling or insert, then our formula will set reality ID ROM signal and then we will run our insert operation based on reality ID parameter. In case of manual start, we are expecting to get this reality ID as input data and then we will do our inserts and everything will work. So this is a single process that serves for us into two different situations. In a case when we add data, when we add new reality or in case if reality already exists. Speaker 1 But we can start this process manually. So of course we have to save it. Okay, and then we can register this process somewhere, for example as action to our page. Let's go to the edit page button, find corresponding action. Here we have one more action and we can call it add visits action which will run business process. What process to run Add realty visits and we will select it for the select page process parameter where the record is passed realty id finally in this version you see that this list of parameters is filtered. In some previous version like 8.1.1 we had a big list of parameters here even not suitable not guids. Now developers finally improved this part. So thanks developers to make it correctly and we also can use some icon would be fun. Nice to see how we can add some data. Speaker 1 Okay, little bit plus will be a good example and add visits menu item will be our unique element code. This will help us to easily find this item in view config diff part of the JavaScript code for our client module. Okay, looks good. We made it. We have to save as you can see, I'm very stick to no code approach and no code tools if it's possible because it helps it to get your results very quickly and efficiently. So you spend just a little time and you get something that works quite well even in case if I really like to develop something to write some code. But if you can avoid this and use no code. So in general it's an advantage for you. Let's try to test how it works. Open any existing data, find our action, add visits and icon. Speaker 1 As you can see it works, so let's try to run it. Process successfully started. And also you may find that our task our part of our task. As a result of running the action, the list of the reality visit detail must be updated automatically to display new records. And also you can use Enable Live Update. This is a no code option to make this update quite easily and with no need to program in and send in messages using WebSocket. So let's try this simple approach first. This simple approach. So now you see we have no automatic update. Let's try to reward refresh date. Now you see we have some data here. So it looks like data was added correctly, but automatic update was not done because we did not care about this option. Okay, let's make this live update. Speaker 1 I will explain how you can do this so we can close unnecessary tabs. Let's go to search for objects and find reality Visit object. We did not use this feature so far, but I will explain. So in Behavior settings there is a very important and quite new feature which appeared only in version 8. This version, this feature is called Enable Live Update. Live Data ",
      "page": 455
    },
    {
      "title": "",
      "content": "Update. What does it mean in case if your page is shown for a user? So we have a currently alive user session. This user opened some page where this object was used. So in case user opened it and the same data is changed at server side. For example, you changed and recalculated some column like you recalculated some amount or status or whatever. Then system is capable to automatically refresh corresponding column at client side for you. Speaker 1 So it was generally intended to be used for updates. Situation when you have a record it was already opened at client side and you change the data columns of the record at server side. So I believe it was initially designed for updates, but it also turned out that it works well for inserts and if we have a detail with a list, so we have a list of some detail and data was added at server side. This detail list is updated at client side in case if Enable Live Update option is on. So let's test and check how it works. Enable this option, publish our object and now you will see the difference. So you will see that system will automatically so it will automatically update corresponding data if it was added at the detail. Okay, so we can close it. Go to the page. Speaker 1 We need to use some good examples. So let's delete all the data records. Also, possibly we can face some cache issues. Let's reward the page just to avoid any potential threat of browser caching. Okay, open it, look at detail. Now add visits. And our reality visit object is now enabled its Live update feature. Now you see that it looks like data was added. Sometimes it has a glitch and sometimes you see not all of the data records, but actually you see something changed here. If you reload, you can see all three data records. Okay, let's remove them and try to run it once again. Now you see it works well, sometimes it works, sometimes not so good. But in general data is updated. Speaker 1 So if you do something like this and your end user will see the detailed data changed, so it will be quite good enough to display that data was modified and you see how it works. So also it's interesting to mention that it works for insert, it works for updates, but unfortunately for some unknown reason it doesn't work for delete. If we make a delete at somewhere at server side, this will be not represented, not automatically updated in the list shown in client side. But the lead situation is not so common, so possibly we can live with it. So if you do something like this at your exam, it will be enough and you can do it as is. Speaker 1 If you want to display and demonstrate more skills, you can also try to use a bit more complicated approach with the web sockets with messaging from server side to the client side. I can quickly explain you how you can do this. If you're really interested, we can try to make working sample of it. And let me show you how we can find it. Creation websocket socket freedom UI and why Russian? I don't know. Okay, customer ethics. So we have a partner customerethics.com and this partner. So this guy is Ryan Farley. It's a creation expert and a partner for many years. He likes to write such articles explaining for beginners some interesting aspects of creation. So they have their own like set of articles kind of knowledge base about different aspects of creation. And sometimes such articles are even better than in academy. Speaker 1 So we can use it for free. And the main idea is that we can. By the way, it looks like this is a classic UI stuff. No, in creation. No, it's okay. Your model config and in each request we can subscribe for websocket messages and we have to unsubscribe when page is destroyed. Okay, great. And here we can do something to refresh our list and so on. Okay, so if interested, you can implement something like this if you have enough time today. If you're very interested, we can also try this example and to make it work at our environment. But this is not so mandatory for your homework. I need to explain you some words about WebSockets messaging. So in general, WebSocket in creation is used as one so as alternative channel of communication between server side and client side. ",
      "page": 456
    },
    {
      "title": "",
      "content": "Speaker 1 Let me show you when page of creature is opened. You can also see we have some WebSocket hard beat and it's used to check that WebSocket connection is alive or not. WebSocket is the dual directional channel between client side and server side. We can use this channel to send the messages from client side to the server side and from server side to the client side. This option to send messages from server to client is extremely helpful because this is the only way how server side of creation can tell to the client side that something is not good or something should be changed or something should be displayed. For example, when we do running of some business processes like calculating average price business process, you probably remember. Then server side sends messages to the client side. Speaker 1 And one of the specific message tells client side that we have to show some specific process driven page. So system should show another page instead of current one. Let me show you how we can track this. We can go to. Okay, let me show you can open again and our page we can check network filters ws, which stands for websocket. So we will filter only websocket messages. But it looks like I have to reward this list. Okay, let's clear the root. So I will show you how we can track websocket messages at our browser client side. Let's imagine we open some edit page probably this one first one and let's check messages. Yes, we already got some websocket message sent from server side to the client side. And also I expect let's check do we have something here? No. Speaker 1 Okay, this one probably will better. So let me explain how it can be useful. Generally, creation uses such a socket for sending messages from creation server side to the client side. For example, when we run a process calculate average price. But it looks like possibly I did not see what I need here. You see. Oh, there are many. I just can't see anything of everything. So yes, unavailable list license common service body. Okay, let's clear this information save you see some websocket Messaging was done and it was related to process engine and let's try to run it again. Yes. So now you see that one server side tells client side to show some page physically this information is sent with the help of WebSocket message and it is being sent from server side to the client side. Speaker 1 It has some corresponding data parameters which will be enough for client side to understand what it talks about. And as you can see, we have some values here that are enough. And client side understand that if sender is processed dashboard, if it has some id, then client side should search and find corresponding task to be executed. You can see it here. Notification panel, business process task. This one. So client side knows that this one should be shown and if we close it system returns back to previous page and so on. So this is example of how WebSockets is used at creation. But also it has more different examples of implementation. So I know for sure it's used when we start. For example, when we start page editor. Let me show you what happens if we start page editor we can go to see. Speaker 1 Oh, you don't see it here easily because we opened browser developer to wait. Okay, let's open it again. Revote. Yes, now you will see that we have some websocket messaging processed here. When we do designing of our page and especially when we do designing of business rules, it's also used. And now you see one more connection for WebSocket was issued was initialized. So it's interesting that in Windows 10 Home Edition and Windows 11 Home Edition there are some limitations in IIS on number of WebSocket channels that can be opened. And that's why you have some significant limitations in working with creatio. So it only works when one page is open of creature. So it's connected with WebSocket connections and also even when you work with single page. ",
      "page": 457
    },
    {
      "title": "",
      "content": "Speaker 1 But when you start to design business rules, I faced situation when managing business rules requires additional websocket connections and it also failed in Windows Home version. So that's how you can track WebSocket messages. You can use some filters here. You can type some messages in order to filter because you may have plenty of different WebSocket messages and you may need to filter only necessary ones. And can we get the link? Oh yeah, sorry. This is the link. Yes, thank you, Patty. Here is the link. And probably I I have to implement this example, but maybe a bit later, because in this example we need some additional code to run Reloading of a list. I have this example, but I need to check it to make sure that everything works well to provide good looking and good working code. Speaker 1 But this is like a technical possibility for you to listen for this websocket at client side. You also need to know how to send messages at server side to the client side. Here is the link that shows how you can do this, because first you will do server side sending message. By the way, this example is not perfect because here Ryan sends message to all users and this is not perfect. Post message to all means it will search for all active user sessions and will try to send to their user session to the browser such messages. So I recommend to use post message. It will send only to current user. Speaker 1 So I think it's more efficient, it's more correct and like more fair to send messages only for current user because usually you need to do in like connection exactly to current user, not to anyone. And if you imagine working with thousands of end users, so it will be really noisy for them to see such messages that are not intended. So server side in C sharp we will use MSG channel utilities special class and run its post message method and there are some arguments. I already have some example for this websocket messaging, but this example is for classic UI so we can see post message. Let me show you MSG 10 utilities and you should remember that this is inside of configuration namespace so you have to provide user connection as argument. Speaker 1 Sender is a text MSG body as a text and such command will It's a C sharp and it will send the websocket message from server side to the client side. In the client side you can subscribe for it and this is classic UI example. Here is Freedom UI example and subscribing for it means that you may run some certain code in case if such message will be catched at client side. This is more complicated scenario than you probably would want to do. So if you need just to make it work, I think that using live update will be enough for the exam. Speaker 1 This type of messaging can be important in case if you don't really need live update or if you want to make some significant changes to server side and then run your necessary comments to update client side only once, which means to be a bit more correct to do. For example, if you add 100 records at server side, then you ask client side to update once, which will be definitely better than asking client side to update hundred of times because of live update option. But it's up to you so you can go through it if necessary, if interested and make it work. You need also to find example of code to refresh, to run certain handler to refresh data. If you will be really interested in it, just send me a message. I will try to find good examples and prepare for you. Speaker 1 Okay, let's go back to our general certification. So it was just about this advanced part of the homework. But if you do just basic part of the homework, it will be also good enough. When you finish this, please keep your environment on. It means that when you will start your exam, we have to look at your environment and we have to check that your ",
      "page": 458
    },
    {
      "title": "",
      "content": "system, your setting is working, your settings are working correctly. So at the exam session, I expect to see your working environment and then we go to the test part of the session. Test part of the exam. So homework should be performed before your exam starts. And the test will start at online session with the trainer. And of course you have to prepare for this test. Speaker 1 And before we continue, possibly let's make it five or up to 10 minutes break today. Today's Friday, all of you are a bit tired. So let's make a short break and then I will explain how to prepare for the exam. Test. So we'll work with self assessment tests. And it's not so easy as it may seem. So. So I will explain how to find answers, we will go through test examples and I will explain how you can prepare for it. Okay, let's make a break. Quick short break. Let's move on. So now we talk about how to prepare for the exam. Test. So I need to explain that our real exam includes homework and test. And your own total score will be based on your homework. So you will have up to 50 marks from 100 for your homework. Just try to draw something. Speaker 1 So 50 for the homework and also 50 for your test. Depending on the type of the test, there are different number of questions. So let's talk about basic exam. And you will have 25 test questions. So it means each question gives you approximately 2 marks. And in total you may have up to 100 marks. When you run the self assessment test, you will have no homework part. And if you run the same self assessment test for basic exam, it includes 25 questions. But this calculation logic will finally treat your results from 100 to. So from 0 to 100, it means that 25 questions will give you up to 100 in this test. And it means one mistake will cost you four marks in self assessment test. Speaker 1 So I'm trying to explain that in your self assessment test you will have slightly different so different results from the same answers if you do it on the exam. And self assessment test is harder and real exam is easier. So in real exam you may do up to seven mistakes from 25 or 28 questions. Let me show you how you can prepare for the exam. So exam for developer includes. So we have two levels, basic or advanced. Let's look at advanced part because it will show you some additional categories which are not shown in basic excel. So advanced level includes 28 theoretical questions. We can start this test and let's click Begin test. You will see questions with multiple choice. They are shown with square options. Speaker 1 And also you will face questions with single choice like radio button with circles on the letters not squares. And we have to answer this test properly and correctly. And please note test self assessment test questions will be similar to the same questions that you will get during real exam, but they will be not identical. So you should expect. You should see that such tests are not identical and you should be very careful. Okay, let's try to follow this test so you will see how you can do it. Purpose of the DB attribute for the redis section of connection strings. Let me show you where we are about it. So here when we set up our local system, we had redis section and DB section. Now the ",
      "page": 459
    },
    {
      "title": "question is about redis section and DB parameter. So redis section DB parameter.",
      "content": "Speaker 1 So this is about this setting and what are the purpose? So this purpose is a redis database number. Yes, this is correct. But this is multiple choice. So we must select at least one more item. Must be unique to each application environment connected to the same redis server. Yes, and indicates SQL database. No, it's not true. Optional. No, it's not true. It's mandatory. So now you see we have all answers. Let's go next. How users with system administrative privileges are different from regular users. Data access restrictions do not apply. Yes, no difference. No, it's not correct. And if this is multiple choice, so we have to select at least one, this is also correct. Can view all data and no restrictions. Yes. Let's move on what system settings should be created to implement standard odd numbering. ",
      "page": 459
    },
    {
      "title": "",
      "content": "Speaker 1 This is about very old times when you can use such system setting. And I can show you examples. We will see what it is about. Let's go to system settings. Let's search system setting which is the last number. Oh, we probably don't have system settings related to business sections code. Okay, let's try last number. Oh, accountless number, Knowledge base Last number. So we still have some examples of numbering but with very old approach where we have something like entity last number and entity code mask. Code mask. Yeah, we have for account coding mask and count last number. So the correct answer here for this test is something called mask something last number this one. And this set of system settings was used years before. We had auto numbering feature as a default value at object properties. Speaker 1 Now we use the sum default values for real t classic types. So we used it here columns code autonumber and we use the auto number prefix number of digits and that's how this numbering can be implemented now in current environment version. But for previous versions it was a bit different and we had to use couple of system settings and special code that should be used to generate number. So we have to answer this. Okay, which tools could be used for proper transfer of configuration modifications between environments? So in order to test and to run at production. Tushar, thank you. Thank you. You will receive all video recording homework and all necessary references and messages. No worries Tushar, thank you. And also you will receive proposal to pass our feedback. So to provide some feedback from your side, it will be really important. Speaker 1 Thank you to. Okay, so proper transfer of changes target database. No, no, we can't replace the database. Replace executable files. No, we can't do this. Export in configuration section. Let me show you what it is about. Here is configuration section. Here is export action. Okay, this is a valid way to export your package, especially for classic ui. It's totally correct. Workspace console quite old utility but still working. So. Yes. And in real exam you will also face clio utility option here. So this is also correct. Clio is correct way to export and import section settings between packages. So we practiced with it yesterday. Install from file in application hub. Yes, it is also correct. We used it to demonstrate how you can manually load your packages to some test environment. So this is correct. Speaker 1 I have a quick question about the multiple choice questions, if that's okay. Yes, yes, please. So is it basically all or nothing? So say if it's a Multiple choice of 5. Say for. For this example here, say if we only pick two, does that just count as being incorrect or is it somehow weighted? Do you need all three? If that makes sense. If in this question you pick only two, it will be treated as incorrect, unfortunately. Okay, perfect. You have to select all correct options, otherwise question will be treated as answered with mistake. Yes, I agree it's a bit tricky, but there are not so many questions where you will face so big amount of options. So let's move on. Two developers Work with the same creation. Speaker 1 In general, it's not so good and it's not recommended because they can temporarily do some violation like you made start to compile and another developer will see hanging of the website. So this is something that it's better to avoid and interfere with other developers. So this is correct Option is not recommended. So not recommended Other options like submitting changes of svn, it's also not true. And to publish and develop an environment Interfere can work when publishing users will not interfere. No, this is not true. So let's move on. I need to tell you that in total now we have the test which includes different categories. Here you can see name of the category and different categories have different number of questions. So in total our test has more than 120 different questions. ",
      "page": 460
    },
    {
      "title": "",
      "content": "Speaker 1 But for this test you will always get random 28 questions from different categories. It means that if you want to prepare better, you need to run this test more than once. I recommend you to start it five or 10 times. So you will feel much more confident when you will see all different questions and when you will know for sure and you will practice with answers. So it will take some time, but this is how you can prepare better for the test for the exam. So this is a question about SQL and in our certification we think that SQL knowledge is also important to be a good creation expert. That's why we ask something like this. So what are the difference between truncate, table and delete from? So truncate is used for triggering delete ignores. No, it's not true. There is no difference. Speaker 1 No, it's not true. When truncate is called table is completely cleared and deletes every record separately row by row. Yes, this is true. This is difference here. Let's move on. Object should be used as parent object. So any virtual it's not true. Not recommended to specify parent not true Base object and some of its child items. Yes, this is true. So main idea why we use inheritance is to get parent object structure and event handling so behavior. And that's why we almost always use inheritance from base object because of getting standard columns and standard behavior. So let's go on. This question is about package architecture, not a package component. This is about knowledge of what is part of a package and what is not part of package. So definitely not a package component is embedded package. Speaker 1 The reason is that packages cannot be embedded into each other. So packages cannot be included into another package and embedded packages are not allowed. Not a package component. Schemas means objects, client modules, processes they are package components. So not correct. Data not correct. Scripts not correct. External libraries not correct. Change log files correct. It's not a package component. In real exam, your question will be opposite, so you should be careful with opposite questions. So you should read it. Answer exactly of the question. Purpose of SQL scripts from package architecture we discussed it. We made a couple of scripts ourselves and you see we have a delete script for example create a view script, for example. So we already have some experience. Lookup records. No basic configurable items, no arbitrary scripts for some changes in the database. Yes. Let's move on. Speaker 1 One more package architecture question. If you do not specify dependency in the package, what will happen? Package cannot be fixed in version control. No, it's not true. Functionality will be available. Parent first version of the product will not be available in this package. Yes. Configuration items cannot be created. No, it's not true. If your package has no dependencies, you can create some items inside, but you will not be able to use parent base product functionality. So dependencies are about this base product functionality. Okay, let's move on. Next, what is the purpose of data binding tool? We studied it, we installed this data binding tool so we already know how to use it. And of course it's not complete queries in the cloud. It's not updating data uploading, no. Data binding elements in the packages. Yes. Printables? No. Let's move on. Speaker 1 This question is about Marketplace applications and this category is on the for advanced level. So we already studied almost all of proposed marketplace applications. So maintenance tools for creation. We installed it on our environment. Remember here. Here we have for clearing Redis for a start app. So this is example of Marketplace maintenance tools and of course it's restart web application and clear redis this one. Not data items, not deleting, not reading logs standard web services quite hard category because we did not study it so deep and you need to maybe dig a bit deeper into creation documentation. So what permissions to work with odata? Oh, I should tell it for you. So in order to enable odata we should go to special setting of system called operation permissions. We have different set of operation permissions enabling functionality for different logic for different users. ",
      "page": 461
    },
    {
      "title": "",
      "content": "Speaker 1 And we can search functionality for all data access to all data. By default it's provided for all administrators. So system administrators, yes, you can see single users by default cannot operate without data, so you should provide access for them. And of course we need to use can use our data service operation. And this is not correct. Another is not correct. Additional question about standard web services which web service you can use to launch processes? You already remember we used it when we started our sections and when we started calculations calculate average price. I can show it for you. Let's select some data clear filter all. Now you see here is process engine service. As we see this is business process which starts this web service starts business processes. So ",
      "page": 462
    },
    {
      "title": "process engine service not only from third party application but also from inside of creation.",
      "content": "Speaker 1 How do you use custom types? This is about data contract and data member. We discussed it when we build our web service and when you need to transfer additional data so large big data arguments. You should use special data contract class for this. This is correct answer other is incorrect can't use types this is not true Implement custom type class connect namespace no any word about data contract so this is not true A is True Moving one more standard Web Services question HTTP for OData to create new record we used it in our postman Here is my postman and here is example of a post query to create new data record. So the answer is post Obviously this one when you will run the same query I would say let me show you back and forth. Next you will see that list of answers. Speaker 1 Now you cannot see it, but usually it's randomized. So in order to make it hard to remember, you see that when you open same question next time it shows you randomized options randomized positions of options. So now post is on the third place and previously it was on fourth place. But it remembers your answers. So if you want to go back, you can see your answers that you provided. If you want to go further, you can switch to any question you worked on. Yes okay, let's click next. Server side development this category is about some server side settings and programming and disable file system development mode we need to make filesys file design mode False we need to set this one. Speaker 1 Please be careful Disable file design False Enable file design True you should not mix it this one is correct Entity schema query you remember this class? We used it for server side calculations and operating with data Also similar approach with client side Entity schema query can be used at JavaScript part with the client side code it can also work if you're interested, you can find other examples. So entity schema query has some features Access rights restriction yes Additional setup of queries like hierarchical queries and paging yes and caching yes so everything is true here. One more server side question a DB executor so DBexecutor is a Class that is very close for data operations and data selection. We used some example of it when I showed you how to use class. Select class to read data from the database directly. Speaker 1 So how to properly use it? This is about protection from memory leakage, you remember? So we have to use dispose if you do not use using yes or you can use using operator yes in single thread, yes, but now the documentation tells that you already can use multiple threads, but I would not recommend you to apply it widely. So I'm still thinking that using multiple threads here may cause some memory leakage. So single thread is still correct. Answer in this test Documentation says that you can use multiple threads, but it's up to you. So up to your consideration in this test, C is correct. Single class Single thread instance usage how to add data to cache storage Multiple choice question this and this are correct answers. First two options are incorrect. More server side questions. Method must be called to apply changes. ",
      "page": 462
    },
    {
      "title": "",
      "content": "Speaker 1 We did not actually study the entity class and you can study it yourself. You can find a lot of examples like this. I will show you. Go to terrasoftware Web Teresa configuration, Search through all C sharp files for a sample where we have save method. You will find many different examples of working with entity. So I will show you how. In general it looks like you create an entity instance here. Then you do some of its settings like setting column values, setting default values, maybe saving some parameters. And then finally you do save. In this case, system will perform insert. If you use class entity to select some existing data and then provide its columns, then you may run an update. Let me show you some examples for each. No. Yeah, this is example. Speaker 1 So when you use entity is an instance of an object so in memory and you can use it for data management. But one entity may operate only with one data row at a moment. Then you can construct some filters and search for a corresponding record. If you did not find it, then you can do insert. If you find it, you can just provide column values and save will mean update. So depending on the status of your class, I mean depending on the state of your class, it's possible to run the same method to make insert or update and save. An entity is quite useful class because it supports events, it supports entity events. And if you have something like listening class or you have a start signal, working with entity means that it will be triggered properly. Speaker 1 So here we have a question about how to apply changes. Working with entity Obviously this is running of the save network. Okay, let's move on features. Working with data using entity of course it offers all possibilities to read, add, edit and delete. So Entity class can be used for creating records or updating records for selection and for delete. You may find all four examples in Base product configuration using search and File system. What properties can be used for only in edit page? This is for Classic UI and the correct answer is Rules and details. This is about Classic UI so we can go to some Classic UI sample this one client module Classic Page and rules and details. So we have methods now it's called business rules. Rules are outdated. Speaker 1 So rules and details are supported in Classic UI edit pages only and not supported in list pages or they are called section pages. In section pages, rules and details are not present. Oh, details are here. Funny stuff. Oh my question has to be updated. Yes, it looks like system change from this moment, but this question still thinks that details and rules so this is correct answer for this question is outdated. We have to fix this entity schema name Also for Classic UI stuff. This one is about object name that is used for current page. So of course the name of the object entity schema used for this module trigger field validation in edit pages Multiple choice at least two answers. Speaker 1 So when we save yes, validation will be triggered when opening page for insert no, but currently we have to review this because when Freedom UI page opens, it also triggers for validation delete no switching focus from field to field. Yes, we are almost at the end and schema must be used as parent for a section schema. So how we can know this? You can go to Classic ui, look at the properties of client module and find Parent object base section V2 this is correct answer why you need to know this. In some complex cases for Classic UI it makes sense to manually provide parent item and that's why so previously it was important to know such items. Now in Freedom UI it's not so necessary and the question is a bit outdated. Speaker 1 But for those who work with Classic UI this knowledge I think it's quite actual. So this section V2 is correct here. One ",
      "page": 463
    },
    {
      "title": "",
      "content": "more question. Schema must be used as a parent. So this is a client side question Parent for section page which means edit page. Let's go to our example of Classic UI section page open it. Let's look at its parent base module page v2 is used as a template for all edit pages for sections in classic UI. So we have to find here base module page V2. This is a parent page for all creation base for all creature Classic UI section edit pages and it was very important in Classic UI programming Especially when you manually do some changes in your client modules for Classic ui. Okay, one of the last questions here for client side, how to add styles. Speaker 1 We did not study this. In Classic UI it makes more sense. And in Freedom UI it's also possible but not so practical. So let's imagine if you create new module, it's possible to set styles in less tab. So you can see we have a Special less tab, JavaScript tab and less tab. And the answer is that in the client schema, set module styles and less tab. This one we don't have a CSS tab, we don't have less property, so we have less step over module. This is correct answer. Now we can finish. Let's see how good we are. Yes, excellent result. It means no mistakes. But when you will prepare for the test, you will have many mistakes. Maybe half of the questions will be mistakes and you will have 50% only from 100. Speaker 1 So don't be so upset because each mistakes, each mistake takes 4% from your score. And when you run self assessment test you need to only to see different questions, potential possible answers and practice with it. So don't be so focused on final results. And when you're running self assessment tests, you need to see all variety of existing test questions. Finally, you will get better and better with this test. And in real exam you need to earn at least 85 and each mistake costs you just 2%. So if you do seven mistakes you will lose 14% and you will finally get 86 which is still enough to get certified. So in real exam you may do up to seven mistakes. So it's quite fair. Speaker 1 If you do seven mistakes in this self assessment test, you will lose 28 marks and your final score will be 72. But don't worry because your score in self assessment is not so important as your knowledge of answers of and your knowledge of existing questions. So that's how you can prepare. Of course you will need to run this test not that one or two times. I recommend you to run it maybe five or ten times. So you will become better at this test. And finally you will feel more confident and you'll be ready for the exam. So now our session comes to an end. If you have any questions, please ask me and your Rakhi asked questions. Yes please. We have time today so let's. Let's look at the ",
      "page": 464
    },
    {
      "title": "questions from our participant.",
      "content": "Speaker 1 And here is what this is a question from Rakhi and this is about client side programming and we did not study this part. It's about send box Messaging. I can show you where you can find answers about this. I'm sure you'll find it quite boring because such messaging made sense in Classic UI and not so practical in Freedom ui. Let me explain development Front end Classic UI send box messaging so we have two types of client side messaging. Websocket messaging, mainly used from server to client, and sandbox messaging which is used only between client side modules. In Classic UI there are a lot of separate modules that know almost nothing about each other and they have no reference to each other. There are many situations where such modules need to exchange data between them. Speaker 1 And for such purpose, messaging mechanism was designed and this is sandbox messaging mechanism which is only working at client side between modules. Between client side modules. There are some technical details about it. So just for your reference I will answer. I will provide you the link. But let's go closer to the question. So there are different types of client side sandbox messages. Point to point messages which are designed to be triggered and then processed and broadcast messages which can be triggered and then processed in many places. In general, message means some piece of information that is submitted from one module and then possibly can be like ",
      "page": 464
    },
    {
      "title": "",
      "content": "processed or taken by other modules. Modules have no information between each other about each other. And there is a central dispatcher called Sandbox which is capable to handle such messages and properly dispatch them. Speaker 1 So messages, they have different types and correct answers. Here are point to point message returns an object broadcast messages does not. Yes, this is true. Probably I have to show it as a green color. Yeah, so this is true. And subscribing broadcast message without channel only once. If no, no, no. Find point to point message without a channel and subscriber will get replaced. So this is about point to point messages. This is also true. Broadcast returns an object point to point. No, this is not true. So this is definitely not true. And this is also not true. So we have only two correct answers here, A and C. So Raki, I hope it's clear A C are correct. You can read more about such messages at Academy. This is about Classic UI programming. Speaker 1 I can quickly show you examples of how it can look like and example of sandbox messaging. So in such messaging we have an initializer. So kind of a person who can initiate this message. It's called publisher. So a person. So in our case it's a module which like Start asks system to run some particular functionality and it means publishing a message. Message can be correctly described in the body of client module. And we have methods to register and then to publish it. So it's like initialize initiated and ask system to run it. We ask Sandbox. Here you can see Sandbox is a central dispatcher who is in charge for processing of such messages. The party who will be responsible for processing this message is called Subscriber. Speaker 1 Subscriber is a party, so it's a module which declares that it can process certain messages and it also should register them and then this module must subscribe. Message has its own identifier. This is a text code and message when subscribed may have a method which will be actually used for getting message data and do something useful. So publisher initiates a message thanks to Sandbox, Subscriber knows about it and gets corresponding arguments and performs useful logic. The main reason of such messaging mechanism is that modules are independent from each other. They do not know any reference from each other and that's why such mechanism was necessary to keep and maintain independence, but make possible interaction between modules Another image from Rakhi how to define which properties events? It's very old question and you can easily guess it. Speaker 1 I think we have to remove this question from the test because it was from very early version 7 settings and it's about bind config for properties events for events. So A is correct here, but we will remove this question soon. So this question does not teach you anything because now it's totally not practical, neither in classic UI nor in Freedom UI. So old, very old question for 7.2 or something like this and A is correct, you can guess by events for events you can guess the answer. Thank you Rakhi for your interest, for your efforts for preparing for the exam. So you will have three weeks in total. You may run your exam earlier if you want. So for example, if you're really ready with the homework, maybe you can run your exam even at the end of next week. Speaker 1 So just make sure your homework looks good, run tests several times and then for example, some of you may apply for the exam and run it next week. But in general, usually participants need from two till three weeks and this is time quite fair which will be totally comfortable for you to prepare for your exam and then run it today you will receive your homework file and please respond at Please respond on my email with your confirmation that you are ready to or you plan to pass FastTrack certification and I will provide you individual date and time of course, taken into consideration your time zone. So you will get something suitable to your time zone, of course, and each of you who apply for this will get your homework and individual date and time for the exam session and Zoom link. ",
      "page": 465
    },
    {
      "title": "",
      "content": "Speaker 1 So you will receive everything necessary in email. And when the proper date will come, I will wait for you in Zoom session when you will finally proceed with your test. With your exam test, you will receive your certificate which will be available for you always at the Academy. Okay, here is my academy, here is my profile. So you will find your certificate when finished. Of course you will find your certificate in your certificates and badges section. You'll be able to download results of your test and get the PDF version of your certificate as downloaded file if you want. And that's how our session, that's how your certification will be finished. So, and then this certificate is valid for two years. Speaker 1 At the end of this period, while your certificate is still valid, you will be able to run recertification, which means getting new certificate by running test only with no homework. So if you want, when you have current certificate, you'll be able to get new one with a simplified procedure. So that's all for today. I thank you for your time. If you have any questions, any more questions, please tell me. Yeah, I have another one, if that's okay. Yes, please. It's about the. So it's about the exam. I just. If you wouldn't mind clarifying the difference between Basic and the Advanced. I think you said there's more questions and the weighting of answering incorrectly is different. Yes, the main difference between Basic and Advanced is that advanced has one more homework task. Speaker 1 Yeah, and advanced has 28 theoretical questions, while basic has only 25 theoretical questions. So Advanced is a bit. Is a bit harder to prepare because of more question categories. But in general they are like similar. So if you spend enough time, you will be able to pass Basic or Advanced with the same level of errors, I think. So maybe it's better to apply for Advanced. Yeah, you can apply for Advanced just from the beginning with so like skipping base part. So you can apply for. For Advanced just. Just with the first attempt. Okay. What? There was something else? Sorry. Now, so how to start an exam, you will get the link and this is a one time link which you will be provided during the online session. So when you will connect to Zoom, we generate one time link for you. Speaker 1 And unfortunately such links work only once and that's why we have to generate it each time when participants wants to pass an exam. Oh yes, sorry. So the. The exam and the going over the homework, there are two separate occasions, are they? So one time we'll have a meeting to go over the assignment. Or the homework. And then sometime a different time. Then will be when we set for the actual exam. Is that correct? You will receive email with the homework. If you agree to pass FastTrack certification. You just have to respond that okay, I'm planning to pass an exam. Please provide me exam date. And from this moment you can start doing your homework. And you can do it fully offline. So no any connection with the team trainer. At the real exam, you will have to show your results. Speaker 1 When we will have online session, you will show your homework. We will see if it's working. Actually, do we have some serious errors there. And at the same time, after checking the homework, which will take just 10 minutes, then you will run your test, which will take all rest time. But usually time is not a problem. And one hour will be totally enough to check your homework and run your test. Okay, that's brilliant. Thanks. Thank you. Paddy. I saw one more question here from. From chat. Maybe microphones. Any. Any questions? Hi, Dimitri. Yes, Tezo, please. My question about the previous lecture. It about the action. We made it to calculate average price. The average is calculate price divided by area, right? Oh yes, exactly. Okay, but when I do the action, the result is not. Not exactly true. All right. Speaker 1 ",
      "page": 466
    },
    {
      "title": "",
      "content": "Oh, so you are worried about the business sense of this time, of this type of cultivation. Or you have some errors in execution? No, no, the execution is right. But the result, the number, it's not like when I calculate it in phone. You can check. You can debug and check. Let me show you. So normally, let's imagine we have some houses for sale. They all have different prices, all have different areas. So we select any house for sale. Maybe let's fix this some stuff so it should not corrupt our results. Okay, so we have a lot of houses for sale. We can run process for calculation average price. Then we have average price value. But this price is result of summarizing all prices for corresponding type of reality. And the same offer type divided by all area of all the objects. Speaker 1 So in general, it looks like we have 300 bucks. 311 bucks per square foot. So it means we divide it and this number represents value per square foot, but not per realty item. So not per a house. And you if you see something totally different here, or if you see nothing, you can check how your calculation went on. And you can go to process log if you have. Okay, let me show you. Process library. Calculate average price process. You can enable trace. We already enabled it Trace. Then you can go to process log. So if you Started your process with enabled trace you can open it, you can see how your calculation finished and you can show trace data after your script task part here. Show show trace data will show you all your parameters including your results of calculation. Speaker 1 So it looks like this data was the result of our calculation and it looks like more or less close to reality $300 per square foot according to our current prices and areas. So area is used here in this calculation. And also if you're not happy with this number, you can try to do debugging of server side code like we did with Visual Studio Opening correspondent average price calculation script here methods wrapper so you remember we did it. And you also can put breakpoint and restart your app. Attach your visual Studio to your worker process. We did it during our sessions so you can handle and run your code line by line. You can see what actual values are used into this calculation, what actual result was obtained. So you can find explanations for everything related to this calculation procedure. Is it clear? Basil? Speaker 1 Yeah, yeah. Thank you. So if you have zero it's very oh so it's quite often happens that you have just small mistake in your process. So if you find that you have just zero there you can go to your average price calculation. And I also sometimes do this mistake. So it's quite common I think when you have final show results pre configured page you may just forget to set corresponding parameter here. This average price is a page parameter and AVG price is our process parameter. So we transfer our process parameter to the page. If you forget to do this you will constantly get zero because no data is coming to your page parameter. Such process parameter AVG calculation was generated here and this is our line of code where we saved it. Then it is kept in process memory here. Speaker 1 Then at next step it will go to page parameter here if you do something so if you lost your data something on the way so you will see zero and you should debug your process, you should debug your script task. And we already discussed how to do this. Rakhi is asking Rakhi yes, you can reply on Monday or whenever it will be suitable. But of course it makes sense to not take too much time because in total we have up to three weeks of a deadline for fast track certification. If you are not ready for such a quick start and you need much more time then you can apply for a regular certification at Academy website. Regular certification has a bit different homework. It also includes creating ",
      "page": 467
    },
    {
      "title": "sections, details, business logic and some server side web service.",
      "content": "Speaker 1 But I think that regular Certification is a bit more harder and it has different variants. There are different subjects, not just one realty, there are different subjects. So you will probably take more time to do regular certification. So that's ",
      "page": 467
    },
    {
      "title": "",
      "content": "all for today. I thank you for your time. If you will find some more questions that you forgot to ask now, please use your my email. I will be happy to answer Today I will send you final email with all fast track certification with all video recordings. And please remember video recordings at Zoom will stay only for 20 days. So if you want to download them, please hurry up because Zoom videos for our first session will expire very soon and each video will expire in 20 days after the moment of creating. So of course I will save them separately in another location. Speaker 1 But now you have automation with Zoom and with already prepared links for download. So probably it makes sense to use existing links without waiting for me to host the same video somewhere else. And that's why it makes sense to download it today. And Basil, if you fail the exam, yes you can take it again. So we can support some like rational number of attempts, like maybe up to three attempts to run your fast track exam and it's not really hard thing. So if you fail it once, no problem. Usually participants do quite well with their homework and test becomes a bit more surprisingly complex for them. So if you do your homework well and then fail with your test, then you can apply next time maybe in several days running test only. Speaker 1 So your homework, if you do it well, no need to do it again for the next exam, yes you can take it again. Thank you Basic for your question. So if any other questions please tell me. I will do my some final preparation step to download everything to file system to submit to version control. And thank you very much for your time. Yes thank you Andres for your feedback and also so I will wait for your answers for your response on proposal to start fast track certification. Thanks a lot for your time for your dedication and efforts with studying the platform. It was my pleasure to provide such training sessions for you. Hope to see someone from you at our exams. Have a great weekend. It was hard two weeks for you to study abroad. So thank you very much for your time. Speaker 1 Our session is over. Thank you and goodbye. It. ",
      "page": 468
    }
  ],
  "topics": [
    "crm",
    "bpm",
    "integration",
    "development",
    "configuration",
    "ui_ux",
    "database"
  ],
  "commands": [
    "$300 per"
  ],
  "api_references": [
    "subservice",
    "Usrmanager"
  ],
  "code_examples": []
}