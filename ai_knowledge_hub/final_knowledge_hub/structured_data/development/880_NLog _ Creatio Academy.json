{
  "id": 880,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.1/development-tools/logging/nlog",
  "title": "NLog | Creatio Academy",
  "category": "development",
  "description": "We recommend enabling logging to verify that the new functionality operates as expected. For optimal performance, enable logging only while testing and debugging Creatio. Creatio can log all primary operations. This is achieved using the NLog library, a free .NET logging library that supports routing features and log management. NLog is suitable for any Creatio instance regardless of size or complexity.",
  "content": "This is documentation for Creatio 8.1 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.1 On this page Level: intermediate We recommend enabling logging to verify that the new functionality operates as expected. For optimal performance, enable logging only while testing and debugging Creatio. Creatio can log all primary operations. This is achieved using the NLog library, a free .NET logging library that supports routing features and log management. NLog is suitable for any Creatio instance regardless of size or complexity. The library lets you perform the following actions : handle diagnostic messages sent in any .NET language enrich logs with contextual data format logs based on user preferences send logs to one or more message receivers, such as a file or database Learn more about the NLog on the GitHub website . Set up logging for Creatio on-site ​ Creatio logs events for the loader and Default configuration separately. You can set up logging for Creatio on-site in the following ways : via the configuration file via the LoggingConfiguration configuration object View an example that sets up logging in a separate article: Implement a modal box . Set up logging for Creatio on-site via the configuration file ​ 1. Set the path to the log configuration file ​ You can set up logging in the following configuration files of the ..\\Terrasoft.WebApp directory: nlog.config nlog.targets.config Set the path to the nlog.config file in the ..\\Terrasoft.WebApp\\Web.config configuration file. Example of the nlog.config file < common > < logging > < factoryAdapter type = \" Common.Logging.NLog.NLogLoggerFactoryAdapter, Common.Logging.NLog45 \" > < arg key = \" configType \" value = \" FILE \" /> < arg key = \" configFile \" value = \" ~/nlog.config \" /> </ factoryAdapter > </ logging > </ common > 2. Specify the log receivers ​ Log receivers display, store and transfer the log messages to other receivers. Log receivers have the following types : Receivers that receive and handle messages receivers that buffer or forward messages to another receiver Specify the log receivers in the <target> XML element of the ...\\Terrasoft.WebApp\\nlog.targets.config file. The configuration attributes of log receivers are as follows: name . Receiver name. xsi:type . Receiver type. Available values: \"File,\" \"Database,\" \"Mail.\" fileName . Log file and path to the log file. The log file location depends on the values of Windows system variables. Default path to the application loader log files Path example [TEMP]\\Creatio\\Site_[SiteId][ApplicationName]\\Log[DateTime.Today] C:\\Windows\\Temp\\Creatio\\Site_1\\creatio806\\Log\\2022_05_22 Path to the Default configuration log files Path example [TEMP]\\Creatio\\Site_[SiteId][ApplicationName][ConfigurationNumber]\\Log[DateTime.Today] C:\\Windows\\Temp\\Creatio\\Site_1\\creatio806\\0\\Log\\2022_05_22 [TEMP] . Base directory. By default, IIS uses the C:\\Windows\\Temp directory. Visual Studio (IIS Express) uses the C:\\Users[User name]\\AppData\\Local\\Temp directory. [SiteId] . Website number. For IIS, find the website number in the advanced website settings. For Visual Studio, the number is 2. [ApplicationName] . Creatio name. [ConfigurationNumber] . Configuration number. The number for the Default configuration is usually 0. [DateTime.Today] . Log date. layout . Template for populating the log file. Example of the nlog.targets.config file < target name = \" universalAppender \" xsi: type = \" File \" layout = \" ${DefaultLayout} \" fileName = \" ${LogDir}${LogDay}${logger:shortName=True}.log \" /> Learn more about log receivers in the official NLog documentation . 3. Define the log rules ​ You can define the log rules in the nlog.config file. The configuration attributes of log rules are as follows: name . Log name. minlevel . Minimum logging level. The default logging level for Creatio components is set to ensure the highest performance. Available logging levels in ascending priority: Trace . Log all events during setup. Set the initial and final methods. Debug . Log all events during debugging. Info . Log regular Creatio activity. Warn . Log warnings. Creatio continues to operate after logging. Error . Log errors that might crash Creatio. Fatal . Log errors that inevitably crash Creatio. Off . Disable logging. maxlevel . Maximum logging level. level . Log events of a specific logging level. levels . Log events of multiple logging levels, separated by commas. writeTo . The name of the log receiver. final . Whether to handle subsequent rules. enabled . Disable the log rule (set to false ) without deleting it. ruleName . The log rule ID. NLog handles logging rule attributes in the following order : level levels minlevel and maxlevel If minLevel = \"Warn\" level = \"Info\" , only the Info logging level is used, because the handling priority of the level attribute is higher than minLevel . Example of a log rule that writes a log to the database < logger name = \" IncidentRegistration \" writeTo = \" AdoNetBufferedAppender \" minlevel = \" Trace \" final = \" true \" /> Set up logging for Creatio on-site via the LoggingConfiguration configuration object ​ Create a LoggingConfiguration object that describes the configuration. Create the log receivers. Set up the properties of the log receivers. Define the logging rules using LoggingRule objects. Add the logging rules to the LoggingRules configuration objects. Activate the configuration. To do this, specify the created configuration object in LogManager.Configuration . Set up logging for Creatio in the cloud ​ To set up logging for Creatio in the cloud , contact Creatio support. Important It is impossible to add an additional log receiver when setting up logging for Creatio in the cloud. See also ​ Modal box Set up logging for Creatio on-site Set up logging for Creatio on-site via the configuration file Set up logging for Creatio on-site via the LoggingConfiguration configuration object Set up logging for Creatio in the cloud See also",
  "markdown": "This is documentation for Creatio **8.1**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/development-tools/logging/nlog)** (8.3).\n\nVersion: 8.1\n\nOn this page\n\nLevel: intermediate\n\nWe recommend enabling logging to verify that the new functionality operates as expected. For optimal performance, enable logging only while testing and debugging Creatio. Creatio can log all primary operations. This is achieved using the [NLog](https://github.com/nlog/nlog/wiki/Configuration-file) library, a free .NET logging library that supports routing features and log management. NLog is suitable for any Creatio instance regardless of size or complexity.\n\nThe library lets you perform the following **actions** :\n\n  * handle diagnostic messages sent in any .NET language\n  * enrich logs with contextual data\n  * format logs based on user preferences\n  * send logs to one or more message receivers, such as a file or database\n\n\n\nLearn more about the NLog on the [GitHub website](https://github.com/nlog/nlog/wiki/Configuration-file).\n\n## Set up logging for Creatio on-site​\n\nCreatio logs events for the loader and `Default` configuration separately.\n\nYou can set up logging for Creatio on-site in the following **ways** :\n\n  * via the configuration file\n  * via the `LoggingConfiguration` configuration object\n\n\n\nView an example that sets up logging in a separate article: [Implement a modal box](https://academy.creatio.com/documents?ver=8.1&id=15596).\n\n### Set up logging for Creatio on-site via the configuration file​\n\n#### 1\\. Set the path to the log configuration file​\n\nYou can set up logging in the following configuration **files** of the `..\\Terrasoft.WebApp` directory:\n\n  * `nlog.config`\n  * `nlog.targets.config`\n\n\n\nSet the path to the `nlog.config` file in the `..\\Terrasoft.WebApp\\Web.config` configuration file.\n\nExample of the nlog.config file\n    \n    \n    <common>  \n        <logging>  \n            <factoryAdapter type=\"Common.Logging.NLog.NLogLoggerFactoryAdapter, Common.Logging.NLog45\">  \n                <arg key=\"configType\" value=\"FILE\" />  \n                <arg key=\"configFile\" value=\"~/nlog.config\" />  \n            </factoryAdapter>  \n        </logging>  \n    </common>  \n      \n    \n\n#### 2\\. Specify the log receivers​\n\nLog receivers display, store and transfer the log messages to other receivers.\n\nLog receivers have the following **types** :\n\n  * Receivers that receive and handle messages\n  * receivers that buffer or forward messages to another receiver\n\n\n\nSpecify the log receivers in the `<target>` XML element of the `...\\Terrasoft.WebApp\\nlog.targets.config` file.\n\nThe configuration **attributes** of log receivers are as follows:\n\n  * `name`. Receiver name.\n\n  * `xsi:type`. Receiver type. Available values: \"File,\" \"Database,\" \"Mail.\"\n\n  * `fileName`. Log file and path to the log file. The log file location depends on the values of Windows system variables.\n\n    * Default path to the application loader log files\n    * Path example\n    \n    [TEMP]\\Creatio\\Site_[SiteId][ApplicationName]\\Log[DateTime.Today]  \n    \n    \n    C:\\Windows\\Temp\\Creatio\\Site_1\\creatio806\\Log\\2022_05_22  \n    \n\n    * Path to the Default configuration log files\n    * Path example\n    \n    [TEMP]\\Creatio\\Site_[SiteId][ApplicationName][ConfigurationNumber]\\Log[DateTime.Today]  \n    \n    \n    C:\\Windows\\Temp\\Creatio\\Site_1\\creatio806\\0\\Log\\2022_05_22  \n    \n\n  * `[TEMP]`. Base directory. By default, IIS uses the `C:\\Windows\\Temp` directory. Visual Studio (IIS Express) uses the `C:\\Users[User name]\\AppData\\Local\\Temp` directory.\n\n  * `[SiteId]`. Website number. For IIS, find the website number in the advanced website settings. For Visual Studio, the number is 2.\n\n  * `[ApplicationName]`. Creatio name.\n\n  * `[ConfigurationNumber]`. Configuration number. The number for the `Default` configuration is usually 0.\n\n  * `[DateTime.Today]`. Log date.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/NLogLogging/scr_nlog_IIS_advanced.png)\n\n  * `layout`. Template for populating the log file.\n\nExample of the nlog.targets.config file\n        \n        <target name=\"universalAppender\" xsi:type=\"File\"  \n            layout=\"${DefaultLayout}\"  \n            fileName=\"${LogDir}${LogDay}${logger:shortName=True}.log\" />  \n        \n\n\n\n\nLearn more about log receivers in the official [NLog documentation](https://nlog-project.org/config/?tab=targets).\n\n#### 3\\. Define the log rules​\n\nYou can define the log rules in the `nlog.config` file.\n\nThe configuration **attributes** of log rules are as follows:\n\n  * `name`. Log name.\n\n  * `minlevel`. Minimum logging level. The default logging level for Creatio components is set to ensure the highest performance.\n\nAvailable **logging levels** in ascending priority:\n\n    * `Trace`. Log all events during setup. Set the initial and final methods.\n    * `Debug`. Log all events during debugging.\n    * `Info`. Log regular Creatio activity.\n    * `Warn`. Log warnings. Creatio continues to operate after logging.\n    * `Error`. Log errors that might crash Creatio.\n    * `Fatal`. Log errors that inevitably crash Creatio.\n    * `Off`. Disable logging.\n  * `maxlevel`. Maximum logging level.\n\n  * `level`. Log events of a specific logging level.\n\n  * `levels`. Log events of multiple logging levels, separated by commas.\n\n  * `writeTo`. The name of the log receiver.\n\n  * `final`. Whether to handle subsequent rules.\n\n  * `enabled`. Disable the log rule (set to `false`) without deleting it.\n\n  * `ruleName`. The log rule ID.\n\n\n\n\nNLog handles logging rule attributes in the following **order** :\n\n  1. `level`\n  2. `levels`\n  3. `minlevel` and `maxlevel`\n\n\n\nIf `minLevel = \"Warn\" level = \"Info\"`, only the `Info` logging level is used, because the handling priority of the `level` attribute is higher than `minLevel`.\n\nExample of a log rule that writes a log to the database\n    \n    \n    <logger name=\"IncidentRegistration\" writeTo=\"AdoNetBufferedAppender\" minlevel=\"Trace\" final=\"true\" />  \n    \n\n### Set up logging for Creatio on-site via the LoggingConfiguration configuration object​\n\n  1. Create a `LoggingConfiguration` object that describes the configuration.\n  2. Create the log receivers.\n  3. Set up the properties of the log receivers.\n  4. Define the logging rules using `LoggingRule` objects.\n  5. Add the logging rules to the `LoggingRules` configuration objects.\n  6. Activate the configuration. To do this, specify the created configuration object in `LogManager.Configuration`.\n\n\n\n## Set up logging for Creatio in the cloud​\n\nTo **set up logging for Creatio in the cloud** , contact Creatio support.\n\nImportant\n\nIt is impossible to add an additional log receiver when setting up logging for Creatio in the cloud.\n\n* * *\n\n## See also​\n\n[Modal box](https://academy.creatio.com/documents?ver=8.1&id=15595)\n\n  * Set up logging for Creatio on-site\n    * Set up logging for Creatio on-site via the configuration file\n    * Set up logging for Creatio on-site via the LoggingConfiguration configuration object\n  * Set up logging for Creatio in the cloud\n  * See also\n\n\n",
  "analysis": {
    "word_count": 919,
    "key_concepts": ["configuration", "database", "operation", "contact"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "intermediate",
    "ai_tags": ["creatio", "contact", "intermediate", "operation", "documentation", "configuration", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:32:16.611157"
}
