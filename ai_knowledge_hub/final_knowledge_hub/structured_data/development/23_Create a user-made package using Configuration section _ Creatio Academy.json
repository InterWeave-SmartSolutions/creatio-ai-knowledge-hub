{
  "id": 23,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.2/development-tools/packages/create-a-package",
  "title": "Create a user-made package using Configuration section | Creatio Academy",
  "category": "development",
  "description": "1. Create a package",
  "content": "This is documentation for Creatio 8.2 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.2 On this page Level: beginner 1. Create a package ​ Open the Configuration section . Instructions: Open the Configuration section . Create a package . To do this, click in the package workspace. This opens the Package window. Fill out the package properties . Property Property description Name * The package name. The package name cannot match the names of other packages. Compile into a separate assembly The checkbox identifies an assembly package whose source and automatically generated code is compiled into a separate assembly. Out of the box, the checkbox is selected. Learn more: Assembly package . Use smart activation The checkbox that identifies a smart activation package that combines functionality of multiple apps for compatibility between them in a single Creatio instance. Out of the box, the checkbox is cleared. Learn more: Smart activation package . Description The package description. For example, package functionality details. Version control system repository * The name of the SVN version control system repository that will store the package changes. Only SVN repositories from the configuration storage list that are marked as active are available in the dropdown list. Important The Version control system repository property will become non-editable after you create the package. Version The package version in the SVN repository. Required if the package is connected to an SVN repository. Fill out the property when creating a package. Otherwise, the property is non-editable. The property accepts digits, Latin characters, as well as \".\" and \"_\" characters. The value must start with a digit or a letter. All package elements are of the same version as the package itself. The package version is not related to the version of the Creatio instance. Save the changes . As a result : Creatio will add the user-made package to the dependencies of the Custom preinstalled package automatically. Creatio will save the package properties to the descriptor.json file. A separate descriptor.json file will be created for each package version. descriptor.json file { \"Descriptor\" : { \"UId\" : \"SomeUserMadePackageID\" , \"PackageVersion\" : \"SomeUserMadePackageVersion\" , \"Name\" : \"SomeUserMadePackage\" , \"ModifiedOnUtc\" : \"\\/Date(1522657977000)\\/\" , \"Maintainer\" : \"SomeDeveloper\" , \"DependsOn\" : [ ] } } The Maintainer property contains information about the developer listed in the Publisher ( Maintainer code) system setting. 2. Set up the package dependencies ​ Creatio lets you set up the package dependencies while creating the package and developing the app functionality. To do this: Define the functionality to be inherited by the user-made package. Inherit the entire Creatio functionality Open the package dependencies diagram. To do this, click Actions on the Configuration section toolbar → go to the Packages action group → Package dependencies diagram . This opens the diagram in a new tab. Find the parent package or packages to the Custom package in the hierarchy. Click a diagram node with the package name to view the package dependencies as animated arrows. For example, the SalesEnterprise_Marketing_ServiceEnt package in the CRM bundle product depends on the ServiceEnterpriseSoftkey , MarketingSoftkeyEnu , SalesEnterprise , PRMMktgActivitiesPortal packages and their parent packages. Also, the SalesEnterprise_Marketing_ServiceEnt package is a parent package to the Custom package. Double-click the package name and copy it. Close the tab that includes the package dependencies diagram. Inherit functionality of a specific package or packages Search for a configuration element whose functionality needs to be inherited. Instructions: Search for a configuration element . Make sure the configuration element schema includes the required functionality. Find the package name that includes configuration element schema whose functionality needs to be inherited. To do this, click in the schema properties area → go to the Package property. Double-click the package name and copy it. Close the schema. note The CrtCore package is the most common parent package whose functionality is inherited by user-made packages. Add the package dependencies . Open the package properties. To do this, click → Properties . This opens the Package properties page. Click Add in the Depends on packages property block on the Dependencies tab. This opens the Select package window. Select the package or packages whose functionality must be inherited. Use the copied value if you need to inherit a single package. If you add multiple packages as dependencies to the current package, Creatio hides the packages you have already selected from the window. Click Select . Apply the changes . As a result , Creatio will save the package dependencies to the DependsOn property in the descriptor.json file. The DependsOn property is an array of objects that contain the package name, version, and unique ID of the package whose functionality will be inherited. descriptor.json file { \"Descriptor\" : { \"UId\" : \"SomeUserMadePackageID\" , \"PackageVersion\" : \"SomeUserMadePackageVersion\" , \"Name\" : \"SomeUserMadePackage\" , \"ModifiedOnUtc\" : \"\\/Date(1522657977000)\\/\" , \"Maintainer\" : \"SomeDeveloper\" , \"DependsOn\" : [ { \"UId\" : \"SomePackageID\" , \"PackageVersion\" : \"SomePackageVersion\" , \"Name\" : \"SomePackage\" } ] } } See also ​ Creatio IDE overview Assembly package Smart activation package 1. Create a package 2. Set up the package dependencies See also",
  "markdown": "This is documentation for Creatio **8.2**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/development-tools/packages/create-a-package)** (8.3).\n\nVersion: 8.2\n\nOn this page\n\nLevel: beginner\n\n## 1\\. Create a package​\n\n  1. **Open the Configuration section**. Instructions: [Open the **Configuration** section](https://academy.creatio.com/documents?ver=8.2&id=15101&anchor=title-2093-2).\n\n  2. **Create a package**. To do this, click ![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/CreateNewPackage/scr_pkg_create_button.png) in the package workspace. This opens the **Package** window.\n\n  3. **Fill out the package properties**.\n\nProperty| Property description| Name*| The package name. The package name cannot match the names of other packages.| Compile into a separate assembly| The checkbox identifies an assembly package whose source and automatically generated code is compiled into a separate assembly. Out of the box, the checkbox is selected. Learn more: [Assembly package](https://academy.creatio.com/documents?ver=8.2&id=15125).| Use smart activation| The checkbox that identifies a smart activation package that combines functionality of multiple apps for compatibility between them in a single Creatio instance. Out of the box, the checkbox is cleared. Learn more: [Smart activation package](https://academy.creatio.com/documents?ver=8.2&id=15071).| Description| The package description. For example, package functionality details.| Version control system repository*| The name of the SVN version control system repository that will store the package changes. Only SVN repositories from the configuration storage list that are marked as active are available in the dropdown list.ImportantThe **Version control system repository** property will become non-editable after you create the package.| Version| The package version in the SVN repository. Required if the package is connected to an SVN repository. Fill out the property when creating a package. Otherwise, the property is non-editable. The property accepts digits, Latin characters, as well as \".\" and \"_\" characters. The value must start with a digit or a letter. All package elements are of the same version as the package itself. The package version is not related to the version of the Creatio instance.  \n---|---  \n  \n  4. **Save the changes**.\n\n\n\n\n**As a result** :\n\n  * Creatio will add the user-made package to the dependencies of the `Custom` preinstalled package automatically.\n\n  * Creatio will save the package properties to the `descriptor.json` file. A separate `descriptor.json` file will be created for each package version.\n\ndescriptor.json file\n        \n        {  \n            \"Descriptor\": {  \n                \"UId\": \"SomeUserMadePackageID\",  \n                \"PackageVersion\": \"SomeUserMadePackageVersion\",  \n                \"Name\": \"SomeUserMadePackage\",  \n                \"ModifiedOnUtc\": \"\\/Date(1522657977000)\\/\",  \n                \"Maintainer\": \"SomeDeveloper\",  \n                \"DependsOn\": []  \n            }  \n        }  \n        \n\nThe `Maintainer` property contains information about the developer listed in the **Publisher** (`Maintainer` code) system setting.\n\n\n\n\n## 2\\. Set up the package dependencies​\n\nCreatio lets you set up the package dependencies while creating the package and developing the app functionality. To do this:\n\n  1. **Define the functionality to be inherited** by the user-made package.\n\nInherit the entire Creatio functionality\n\n     1. Open the package dependencies diagram. To do this, click **Actions** on the **Configuration** section toolbar → go to the **Packages** action group → **Package dependencies diagram**. This opens the diagram in a new tab.\n\n     2. Find the parent package or packages to the `Custom` package in the hierarchy.\n\nClick a diagram node with the package name to view the package dependencies as animated arrows.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/CreatePackage/8.1/scr_package_dependencies_diagram.gif)\n\nFor example, the `SalesEnterprise_Marketing_ServiceEnt` package in the CRM bundle product depends on the `ServiceEnterpriseSoftkey`, `MarketingSoftkeyEnu`, `SalesEnterprise`, `PRMMktgActivitiesPortal` packages and their parent packages. Also, the `SalesEnterprise_Marketing_ServiceEnt` package is a parent package to the `Custom` package.\n\n     3. Double-click the package name and copy it.\n\n     4. Close the tab that includes the package dependencies diagram.\n\nInherit functionality of a specific package or packages\n\n     1. Search for a configuration element whose functionality needs to be inherited. Instructions: [Search for a configuration element](https://academy.creatio.com/documents?ver=8.2&id=15101&anchor=title-2093-16).\n     2. Make sure the configuration element schema includes the required functionality.\n     3. Find the package name that includes configuration element schema whose functionality needs to be inherited. To do this, click ![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/ClientModule/8.0/scr_edit_button.png) in the schema properties area → go to the **Package** property.\n     4. Double-click the package name and copy it.\n     5. Close the schema.\n\nnote\n\nThe `CrtCore` package is the most common parent package whose functionality is inherited by user-made packages.\n\n  2. **Add the package dependencies**.\n\n     1. Open the package properties. To do this, click ![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/PopulateDeliveryType/8.1/scr_open_properties.png) → **Properties**. This opens the **Package properties** page.\n\n     2. Click **Add** in the **Depends on packages** property block on the **Dependencies** tab. This opens the **Select package** window.\n\n     3. Select the package or packages whose functionality must be inherited. Use the copied value if you need to inherit a single package.\n\nIf you add multiple packages as dependencies to the current package, Creatio hides the packages you have already selected from the window.\n\n     4. Click **Select**.\n\n  3. **Apply the changes**.\n\n\n\n\n**As a result** , Creatio will save the package dependencies to the `DependsOn` property in the `descriptor.json` file. The `DependsOn` property is an array of objects that contain the package name, version, and unique ID of the package whose functionality will be inherited.\n\ndescriptor.json file\n    \n    \n    {  \n        \"Descriptor\": {  \n            \"UId\": \"SomeUserMadePackageID\",  \n            \"PackageVersion\": \"SomeUserMadePackageVersion\",  \n            \"Name\": \"SomeUserMadePackage\",  \n            \"ModifiedOnUtc\": \"\\/Date(1522657977000)\\/\",  \n            \"Maintainer\": \"SomeDeveloper\",  \n            \"DependsOn\": [  \n                {  \n                    \"UId\": \"SomePackageID\",  \n                    \"PackageVersion\": \"SomePackageVersion\",  \n                    \"Name\": \"SomePackage\"  \n                }  \n            ]  \n        }  \n    }  \n    \n\n* * *\n\n## See also​\n\n[Creatio IDE overview](https://academy.creatio.com/documents?ver=8.2&id=15101)\n\n[Assembly package](https://academy.creatio.com/documents?ver=8.2&id=15125)\n\n[Smart activation package](https://academy.creatio.com/documents?ver=8.2&id=15071)\n\n  * 1\\. Create a package\n  * 2\\. Set up the package dependencies\n  * See also\n\n\n",
  "analysis": {
    "word_count": 847,
    "key_concepts": ["configuration", "section", "detail", "system setting", "package"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "beginner",
    "ai_tags": [
      "beginner",
      "creatio",
      "package",
      "system setting",
      "documentation",
      "section",
      "detail",
      "configuration"
    ]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:14:45.044726"
}
