{
  "id": 584,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/back-end-development/api-for-file-management/references/ifile",
  "title": "IFile interface | Creatio Academy",
  "category": "development",
  "description": "Terrasoft.File.Abstractions namespace.",
  "content": "Version: 8.3 On this page Level: intermediate Terrasoft.File.Abstractions namespace. The Terrasoft.File.Abstractions.IFile interface provides essential file management methods applicable in any file storage. The methods of this interface are used for asynchronous file management. Synchronous file management methods are available in the Terrasoft.File.Abstractions.FileUtils derived class. note Use the .NET classes reference to access the full description of the IFile interface. Properties ​ FileLocator IFileLocator The file locator connected to the current instance of the class that implements the IFile interface. Name string File name. Length long The size of the current file in bytes. CreatedOn DateTime Date and time the file was created. ModifiedOn DateTime Date and time the file was modified. Exists bool Checks if the current file exists. Methods ​ Task CopyAsync ( IFile target ) Copies the current file to the new target asynchronously. Task MoveAsync ( IFile target ) Moves the current file to the new target asynchronously. Task DeleteAsync ( ) Deletes the current file asynchrously. Task WriteAsync ( Stream stream , FileWriteOptions writeOptions ) Writes the contents of the current file to the stream asynchronously. Task < Stream > ReadAsync ( ) Reads the contents of the current file asynchronously. Task SaveAsync ( ) Saves the metadata of the current file asynchronously. void SetAttribute < TValue > ( string name , TValue value ) Sets value of the name attribute for the current file. TValue GetAttribute < TValue > ( string name , TValue defaultValue ) Returns the attribute value or the default value for the current file. Properties Methods",
  "markdown": "Version: 8.3\n\nOn this page\n\nLevel: intermediate\n\n`Terrasoft.File.Abstractions` namespace.\n\nThe `Terrasoft.File.Abstractions.IFile` interface provides essential file management methods applicable in any file storage. The methods of this interface are used for asynchronous file management. Synchronous file management methods are available in the `Terrasoft.File.Abstractions.FileUtils` derived class.\n\nnote\n\nUse the [.NET classes reference](https://academy.creatio.com/documents?ver=8.3&id=15293) to access the full description of the `IFile` interface.\n\n## Properties​\n    \n    \n    FileLocator IFileLocator  \n    \n\nThe file locator connected to the current instance of the class that implements the `IFile` interface.\n    \n    \n    Name string  \n    \n\nFile name.\n    \n    \n    Length long  \n    \n\nThe size of the current file in bytes.\n    \n    \n    CreatedOn DateTime  \n    \n\nDate and time the file was created.\n    \n    \n    ModifiedOn DateTime  \n    \n\nDate and time the file was modified.\n    \n    \n    Exists bool  \n    \n\nChecks if the current file exists.\n\n## Methods​\n    \n    \n    Task CopyAsync(IFile target)  \n    \n\nCopies the current file to the new `target` asynchronously.\n    \n    \n    Task MoveAsync(IFile target)  \n    \n\nMoves the current file to the new `target` asynchronously.\n    \n    \n    Task DeleteAsync()  \n    \n\nDeletes the current file asynchrously.\n    \n    \n    Task WriteAsync(Stream stream, FileWriteOptions writeOptions)  \n    \n\nWrites the contents of the current file to the `stream` asynchronously.\n    \n    \n    Task<Stream> ReadAsync()  \n    \n\nReads the contents of the current file asynchronously.\n    \n    \n    Task SaveAsync()  \n    \n\nSaves the metadata of the current file asynchronously.\n    \n    \n    void SetAttribute<TValue>(string name, TValue value)  \n    \n\nSets `value` of the `name` attribute for the current file.\n    \n    \n    TValue GetAttribute<TValue>(string name, TValue defaultValue)  \n    \n\nReturns the attribute value or the default value for the current file.\n\n  * Properties\n  * Methods\n\n\n",
  "analysis": {
    "word_count": 255,
    "key_concepts": [],
    "use_cases": [],
    "related_topics": [],
    "difficulty": "advanced",
    "ai_tags": ["creatio", "advanced", "documentation"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:26:14.753321"
}
