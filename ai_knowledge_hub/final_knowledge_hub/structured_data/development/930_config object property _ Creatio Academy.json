{
  "id": 930,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.2/mobile-development/mobile-basics/business-rules/references/config",
  "title": "config object property | Creatio Academy",
  "category": "development",
  "description": "Base business rule",
  "content": "This is documentation for Creatio 8.2 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.2 On this page Level: advanced Base business rule ​ The base business rule is an abstract class, i.e., all business rules should be its inheritors. The properties of the config configuration object that can be used by the inheritors of the business rule. Configuration object properties ​ ruleType The type of rule. The value must be included into the Terrasoft.RuleTypes enumeration. triggeredByColumns The column array that triggers the rule. message A text message displayed under the control element connected with the column in case business rule is not executed. It is necessary for rules that inform a user of warnings. name A unique name of a business rule. It is necessary if you need to delete a rule by the Terrasoft.sdk methods. position A position of a business rule that defines its order priority in the current queue. events An event array, defining the time of running business rules. It should contain values included into the Terrasoft.BusinessRuleEvents enumeration. Available values (Terrasoft.BusinessRuleEvents) Save the rule is executed before saving the data ValueChanged the rule is executed when the data is modified (while editing) Load the rule is executed when the edit page is opened Is required business rule (Terrasoft.RuleTypes.Requirement) ​ Defines whether an edit page field is required. Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.Requirement value for this rule. requireType Verification type. The value must be included into the Terrasoft.RequirementTypes enumeration. The rule can verify one or all the columns from triggeredByColumns . triggeredByColumns The column array that triggers the rule. If the verification type equals Terrasoft.RequirementTypes.Simple , one column in the array should be specified. Available values (Terrasoft.RequirementTypes) Simple value verification in one column OneOf one of the columns specified in the triggeredByColumns should be populated Use case Terrasoft . sdk . Model . addBusinessRule ( \"Contact\" , { ruleType : Terrasoft . RuleTypes . Requirement , requireType : Terrasoft . RequirementTypes . OneOf , events : [ Terrasoft . BusinessRuleEvents . Save ] , triggeredByColumns : [ \"HomeNumber\" , \"BusinessNumber\" ] , columnNames : [ \"HomeNumber\" , \"BusinessNumber\" ] } ) ; Visibility business rule (Terrasoft.RuleTypes.Visibility) ​ You can hide and display fields per condition using this rule. Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.Visibility value for this rule. triggeredByColumns The column array that triggers the rule. events An event array, defining the time of running business rules. It should contain values included into the Terrasoft.BusinessRuleEvents enumeration. conditionalColumns Condition array of business rule execution. Usually, these are specific column values. dependentColumnNames Column name array that the business rule is applied to. Use case Terrasoft . sdk . Model . addBusinessRule ( \"Account\" , { ruleType : Terrasoft . RuleTypes . Visibility , conditionalColumns : [ { name : \"Type\" , value : Terrasoft . Configuration . Consts . AccountTypePharmacy } ] , triggeredByColumns : [ \"Type\" ] , dependentColumnNames : [ \"IsRx\" , \"IsOTC\" ] } ) ; The fields connected with the IsRx and IsOTC columns are displayed if the Type column contains the value defined by the Terrasoft.Configuration.Consts.AccountTypePharmacy invariable. Terrasoft . Configuration . Consts = { AccountTypePharmacy : \"d12dc11d-8c74-46b7-9198-5a4385428f9a\" } ; You can use the 'd12dc11d-8c74-46b7-9198-5a4385428f9a’ value instead of the invariable. Enabled/Disabled business rule (Terrasoft.RuleTypes.Activation) ​ This business rule enables and disables fields for entering values per condition. Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.Activation value for this rule. triggeredByColumns The column array that triggers the rule. events An event array, defining the time of running business rules. It should contain values included into the Terrasoft.BusinessRuleEvents enumeration. conditionalColumns Condition array of business rule execution. Usually, these are specific column values. dependentColumnNames Column name array that the business rule is applied to. Whether a field connected with the Stock column is enabled depends on the value in the IsPresence column. Use case Terrasoft . sdk . Model . addBusinessRule ( \"ActivitySKU\" , { ruleType : Terrasoft . RuleTypes . Activation , events : [ Terrasoft . BusinessRuleEvents . Load , Terrasoft . BusinessRuleEvents . ValueChanged ] , triggeredByColumns : [ \"IsPresence\" ] , conditionalColumns : [ { name : \"IsPresence\" , value : true } ] , dependentColumnNames : [ \"Stock\" ] } ) ; Filtration business rule (Terrasoft.RuleTypes.Filtration) ​ This business rule can be used for filtration of lookup columns by condition, or by another column value. Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.Filtration value for this rule. triggeredByColumns The column array that triggers the rule. events An event array, defining the time of running business rules. It should contain values included into the Terrasoft.BusinessRuleEvents enumeration. filters Filter. The property should contain the Terrasoft.Filter class instance. filteredColumn The column used for filtering values. Mutual Filtration business rule (Terrasoft.RuleTypes.MutualFiltration) ​ This business rule enables mutual filtering of two lookup fields. Works only with columns with the \"one-to-many\" relationship, e.g., Country – City . Create a separate business rule for every field cluster. For example, for the Country – Region – City and the Country – City clusters, create three business rules: Country – Region ; Region – City ; Country – City . Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.MutualFiltration value for this rule. triggeredByColumns The column array that triggers the rule. connections Object array that configures cluster relationship Mutual filtration of the [Country], [Region] and [City] fields Mutual filtration of the [Contact], [Account] fields Terrasoft . sdk . Model . addBusinessRule ( \"ContactAddress\" , { ruleType : Terrasoft . RuleTypes . MutualFiltration , triggeredByColumns : [ \"City\" , \"Region\" , \"Country\" ] , connections : [ { parent : \"Country\" , child : \"City\" } , { parent : \"Country\" , child : \"Region\" } , { parent : \"Region\" , child : \"City\" } ] } ) ; Terrasoft . sdk . Model . addBusinessRule ( \"Activity\" , { ruleType : Terrasoft . RuleTypes . MutualFiltration , triggeredByColumns : [ \"Contact\" , \"Account\" ] , connections : [ { parent : \"Contact\" , child : \"Account\" , connectedBy : \"PrimaryContact\" } ] } ) ; Regular expression business rule (Terrasoft.RuleTypes.RegExp) ​ Verifies the conformity of the column value with the regular expression. Configuration object properties ​ ruleType Should contain the Terrasoft.RuleTypes.RegExp value for this rule. RegExp Regular expression whose conformity with all the triggeredByColumns array columns is verified. triggeredByColumns The column array that triggers the rule. Use case Terrasoft . sdk . Model . addBusinessRule ( \"Contact\" , { ruleType : Terrasoft . RuleTypes . RegExp , regExp : / ^ ( [ 0 - 9 \\( \\) \\/ \\+ \\- ] * ) $ / triggeredByColumns : [ \"HomeNumber\" , \"BusinessNumber\" ] } ) ; Custom business rules ​ When adding a custom business rule via the Terrasoft.sdk.Model.addBusinessRule(name, config) method you can use properties of the config configuration object of the base business rule. In addition, the executeFn property is also provided. Configuration object properties ​ ruleType Rule type. For the custom rules it should contain the Terrasoft.RuleTypes.Custom value. triggeredByColumns Array of columns which initiates trigging of the business rule. events Array of events determining the start time of the business rule. It should contain values from the Terrasoft.BusinessRuleEvents enumeration. Default value: Terrasoft.BusinessRuleEvents.ValueChanged . Available values (Terrasoft.BusinessRuleEvents) Save the rule trigs before saving the data ValueChanged the rule trigs after changing the data (at modification) Load the rule trigs when the edit page is opened executeFn A handler function that contains the user logic for executing the business rule. Properties of the executeFn handler function ​ Handler function signature executeFn : function ( record , rule , checkColumnName , customData , callbackConfig , event ) { } Parameters record a record for which the business rule is executed rule an instance of the current business rule checkColumnName a column name that calls business-rules firing customData an object that is shared between all rules. Not used. Left for compatibility with previous versions callbackConfig a configuration object of the Ext.callback asynchronous callback event an event that triggered the business rul. After the completion of function operation it is necessary to call either the callbackConfig.success or callbackConfig.failure . Use cases options Ext . callback ( callbackConfig . success , callbackConfig . scope , [ result ] ) ; Ext . callback ( callbackConfig . failure , callbackConfig . scope , [ exception ] ) ; Where: result – the returned boolean value obtained when the function is executed ( true / false ). exception – the exception of the Terrasoft.Exception type, which occurred in the handler function. Methods ​ In the source code of the handler function, you can use the following methods of the model passed in the record parameter: get ( columnName ) To get the value of a record column. The columnName argument should contain the column name. set ( columnName , value , fireEventConfig ) To set the value of the record column. Parameters columnName the name of the column value the value assigned to the column fireEventConfig a configuration object to set the properties that are passed to the column modification event changeProperty ( columnName , propertyConfig ) For changing column properties except its value. The columnName argument should contain the column name and the propertyConfig object that sets the column properties. propertyConfig object properties disabled activity of the column. If true , the control associated with the column will be inactive and disabled for operation readOnly \"Read only\" flag. If true , the control associated with the column will be available only for reading. If false – the access for reading and writing hidden column visibility. If true , the control associated with the column will be hidden. If false – the control will be displayed addFilter add filter. If the property is specified, it should have a filter of the Terrasoft.Filter type that will be added to the column filtration. Property is used only for lookup fields removeFilter remove the filter. If the property is specified, it should have a name of the filter that will be removed from the column filtration. Property is used only for lookup fields isValid flag of column validity. If the property is specified, it will change the validity flag of the control associated with the column. If the column is invalid, then this can mean canceling of saving the record, and can also lead to the determining the record as invalid Example of changing the properties (but not the values) of the Owner column record . changeProperty ( \"Owner\" , { disabled : false , readOnly : false , hidden : false , addFilter : { property : \"IsChief\" , value : true } , isValid : { value : false , message : LocalizableStrings [ \"Owner_should_be_a_chief_only\" ] } } ) ; Base business rule Configuration object properties Is required business rule (Terrasoft.RuleTypes.Requirement) Configuration object properties Visibility business rule (Terrasoft.RuleTypes.Visibility) Configuration object properties Enabled/Disabled business rule (Terrasoft.RuleTypes.Activation) Configuration object properties Filtration business rule (Terrasoft.RuleTypes.Filtration) Configuration object properties Mutual Filtration business rule (Terrasoft.RuleTypes.MutualFiltration) Configuration object properties Regular expression business rule (Terrasoft.RuleTypes.RegExp) Configuration object properties Custom business rules Configuration object properties Properties of the executeFn handler function Methods",
  "markdown": "This is documentation for Creatio **8.2**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/getting-started/development-recommendations)** (8.3).\n\nVersion: 8.2\n\nOn this page\n\nLevel: advanced\n\n## Base business rule​\n\nThe base business rule is an abstract class, i.e., all business rules should be its inheritors.\n\nThe properties of the `config` configuration object that can be used by the inheritors of the business rule.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nThe type of rule. The value must be included into the `Terrasoft.RuleTypes` enumeration.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n    \n    \n    message  \n    \n\nA text message displayed under the control element connected with the column in case business rule is not executed. It is necessary for rules that inform a user of warnings.\n    \n    \n    name  \n    \n\nA unique name of a business rule. It is necessary if you need to delete a rule by the `Terrasoft.sdk` methods.\n    \n    \n    position  \n    \n\nA position of a business rule that defines its order priority in the current queue.\n    \n    \n    events  \n    \n\nAn event array, defining the time of running business rules. It should contain values included into the `Terrasoft.BusinessRuleEvents` enumeration.\n\nAvailable values (Terrasoft.BusinessRuleEvents)\n\nSave| the rule is executed before saving the data| ValueChanged| the rule is executed when the data is modified (while editing)| Load| the rule is executed when the edit page is opened  \n---|---  \n  \n## **Is required** business rule (Terrasoft.RuleTypes.Requirement)​\n\nDefines whether an edit page field is required.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.Requirement` value for this rule.\n    \n    \n    requireType  \n    \n\nVerification type. The value must be included into the `Terrasoft.RequirementTypes` enumeration. The rule can verify one or all the columns from `triggeredByColumns`.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule. If the verification type equals `Terrasoft.RequirementTypes.Simple`, one column in the array should be specified.\n\nAvailable values (Terrasoft.RequirementTypes)\n\nSimple| value verification in one column| OneOf| one of the columns specified in the `triggeredByColumns` should be populated  \n---|---  \n  \nUse case\n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"Contact\", {  \n        ruleType: Terrasoft.RuleTypes.Requirement,  \n        requireType : Terrasoft.RequirementTypes.OneOf,  \n        events: [Terrasoft.BusinessRuleEvents.Save],  \n        triggeredByColumns: [\"HomeNumber\", \"BusinessNumber\"],  \n        columnNames: [\"HomeNumber\", \"BusinessNumber\"]  \n    });  \n    \n\n## Visibility business rule (Terrasoft.RuleTypes.Visibility)​\n\nYou can hide and display fields per condition using this rule.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.Visibility` value for this rule.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n    \n    \n    events  \n    \n\nAn event array, defining the time of running business rules. It should contain values included into the `Terrasoft.BusinessRuleEvents` enumeration.\n    \n    \n    conditionalColumns  \n    \n\nCondition array of business rule execution. Usually, these are specific column values.\n    \n    \n    dependentColumnNames  \n    \n\nColumn name array that the business rule is applied to.\n\nUse case\n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"Account\", {  \n        ruleType: Terrasoft.RuleTypes.Visibility,  \n        conditionalColumns: [  \n            {name: \"Type\", value: Terrasoft.Configuration.Consts.AccountTypePharmacy}  \n        ],  \n        triggeredByColumns: [\"Type\"],  \n        dependentColumnNames: [\"IsRx\", \"IsOTC\"]  \n    });  \n    \n\nThe fields connected with the `IsRx` and `IsOTC` columns are displayed if the `Type` column contains the value defined by the `Terrasoft.Configuration.Consts.AccountTypePharmacy` invariable.\n    \n    \n    Terrasoft.Configuration.Consts = {  \n        AccountTypePharmacy: \"d12dc11d-8c74-46b7-9198-5a4385428f9a\"  \n    };  \n    \n\nYou can use the 'd12dc11d-8c74-46b7-9198-5a4385428f9a’ value instead of the invariable.\n\n## Enabled/Disabled business rule (Terrasoft.RuleTypes.Activation)​\n\nThis business rule enables and disables fields for entering values per condition.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.Activation` value for this rule.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n    \n    \n    events  \n    \n\nAn event array, defining the time of running business rules. It should contain values included into the `Terrasoft.BusinessRuleEvents` enumeration.\n    \n    \n    conditionalColumns  \n    \n\nCondition array of business rule execution. Usually, these are specific column values.\n    \n    \n    dependentColumnNames  \n    \n\nColumn name array that the business rule is applied to.\n\nWhether a field connected with the `Stock` column is enabled depends on the value in the `IsPresence` column.\n\nUse case\n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"ActivitySKU\", {  \n        ruleType: Terrasoft.RuleTypes.Activation,  \n        events: [Terrasoft.BusinessRuleEvents.Load, Terrasoft.BusinessRuleEvents.ValueChanged],  \n        triggeredByColumns: [\"IsPresence\"],  \n        conditionalColumns: [  \n            {name: \"IsPresence\", value: true}  \n        ],  \n        dependentColumnNames: [\"Stock\"]  \n    });  \n    \n\n## Filtration business rule (Terrasoft.RuleTypes.Filtration)​\n\nThis business rule can be used for filtration of lookup columns by condition, or by another column value.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.Filtration` value for this rule.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n    \n    \n    events  \n    \n\nAn event array, defining the time of running business rules. It should contain values included into the `Terrasoft.BusinessRuleEvents` enumeration.\n    \n    \n    filters  \n    \n\nFilter. The property should contain the `Terrasoft.Filter` class instance.\n    \n    \n    filteredColumn  \n    \n\nThe column used for filtering values.\n\n## Mutual Filtration business rule (Terrasoft.RuleTypes.MutualFiltration)​\n\nThis business rule enables mutual filtering of two lookup fields. Works only with columns with the \"one-to-many\" relationship, e.g., **Country** – **City**. Create a separate business rule for every field cluster. For example, for the **Country** – **Region** – **City** and the **Country** – **City** clusters, create three business rules:\n\n  * **Country** – **Region** ;\n  * **Region** – **City** ;\n  * **Country** – **City**.\n\n\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.MutualFiltration` value for this rule.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n    \n    \n    connections  \n    \n\nObject array that configures cluster relationship\n\n  * Mutual filtration of the [Country], [Region] and [City] fields\n  * Mutual filtration of the [Contact], [Account] fields\n\n\n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"ContactAddress\", {  \n        ruleType: Terrasoft.RuleTypes.MutualFiltration,  \n        triggeredByColumns: [\"City\", \"Region\", \"Country\"],  \n        connections: [  \n            {  \n                parent: \"Country\",  \n                child: \"City\"  \n            },  \n            {  \n                parent: \"Country\",  \n                child: \"Region\"  \n            },  \n            {  \n                parent: \"Region\",  \n                child: \"City\"  \n            }  \n        ]  \n    });  \n    \n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"Activity\", {  \n        ruleType: Terrasoft.RuleTypes.MutualFiltration,  \n        triggeredByColumns: [\"Contact\", \"Account\"],  \n        connections: [  \n            {  \n                parent: \"Contact\",  \n                child: \"Account\",  \n                connectedBy: \"PrimaryContact\"  \n            }  \n        ]  \n    });  \n    \n\n## Regular expression business rule (Terrasoft.RuleTypes.RegExp)​\n\nVerifies the conformity of the column value with the regular expression.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nShould contain the `Terrasoft.RuleTypes.RegExp` value for this rule.\n    \n    \n    RegExp  \n    \n\nRegular expression whose conformity with all the `triggeredByColumns` array columns is verified.\n    \n    \n    triggeredByColumns  \n    \n\nThe column array that triggers the rule.\n\nUse case\n    \n    \n    Terrasoft.sdk.Model.addBusinessRule(\"Contact\", {  \n        ruleType: Terrasoft.RuleTypes.RegExp,  \n        regExp : /^([0-9\\(\\)\\/\\+ \\-]*)$/  \n        triggeredByColumns: [\"HomeNumber\", \"BusinessNumber\"]  \n    });  \n    \n\n## Custom business rules​\n\nWhen adding a custom business rule via the `Terrasoft.sdk.Model.addBusinessRule(name, config)` method you can use properties of the `config` configuration object of the base business rule. In addition, the `executeFn` property is also provided.\n\n### Configuration object properties​\n    \n    \n    ruleType  \n    \n\nRule type. For the custom rules it should contain the `Terrasoft.RuleTypes.Custom` value.\n    \n    \n    triggeredByColumns  \n    \n\nArray of columns which initiates trigging of the business rule.\n    \n    \n    events  \n    \n\nArray of events determining the start time of the business rule. It should contain values from the `Terrasoft.BusinessRuleEvents` enumeration. Default value: `Terrasoft.BusinessRuleEvents.ValueChanged`.\n\nAvailable values (Terrasoft.BusinessRuleEvents)\n\nSave| the rule trigs before saving the data| ValueChanged| the rule trigs after changing the data (at modification)| Load| the rule trigs when the edit page is opened  \n---|---  \n      \n    \n    executeFn  \n    \n\nA handler function that contains the user logic for executing the business rule.\n\n### Properties of the executeFn handler function​\n\nHandler function signature\n    \n    \n    executeFn: function(record, rule, checkColumnName, customData, callbackConfig, event) {    }  \n    \n\nParameters\n\nrecord| a record for which the business rule is executed| rule| an instance of the current business rule| checkColumnName| a column name that calls business-rules firing| customData| an object that is shared between all rules. Not used. Left for compatibility with previous versions| callbackConfig| a configuration object of the `Ext.callback` asynchronous callback| event| an event that triggered the business rul.  \n---|---  \n  \nAfter the completion of function operation it is necessary to call either the `callbackConfig.success` or `callbackConfig.failure`.\n\nUse cases options\n    \n    \n    Ext.callback(callbackConfig.success, callbackConfig.scope, [result]);  \n    Ext.callback(callbackConfig.failure, callbackConfig.scope, [exception]);  \n    \n\nWhere:\n\n  * `result` – the returned boolean value obtained when the function is executed (`true`/`false`).\n  * `exception` – the exception of the `Terrasoft.Exception` type, which occurred in the handler function.\n\n\n\n### Methods​\n\nIn the source code of the handler function, you can use the following methods of the model passed in the `record` parameter:\n    \n    \n    get(columnName)  \n    \n\nTo get the value of a record column. The `columnName` argument should contain the column name.\n    \n    \n    set(columnName, value, fireEventConfig)  \n    \n\nTo set the value of the record column.\n\nParameters\n\ncolumnName| the name of the column| value| the value assigned to the column| fireEventConfig| a configuration object to set the properties that are passed to the column modification event  \n---|---  \n      \n    \n    changeProperty(columnName, propertyConfig)  \n    \n\nFor changing column properties except its value. The `columnName` argument should contain the column name and the `propertyConfig` object that sets the column properties.\n\npropertyConfig object properties\n\ndisabled| activity of the column. If `true`, the control associated with the column will be inactive and disabled for operation| readOnly| \"Read only\" flag. If `true`, the control associated with the column will be available only for reading. If `false` – the access for reading and writing| hidden| column visibility. If `true`, the control associated with the column will be hidden. If `false` – the control will be displayed| addFilter| add filter. If the property is specified, it should have a filter of the `Terrasoft.Filter` type that will be added to the column filtration. Property is used only for lookup fields| removeFilter| remove the filter. If the property is specified, it should have a name of the filter that will be removed from the column filtration. Property is used only for lookup fields| isValid| flag of column validity. If the property is specified, it will change the validity flag of the control associated with the column. If the column is invalid, then this can mean canceling of saving the record, and can also lead to the determining the record as invalid  \n---|---  \n  \nExample of changing the properties (but not the values) of the Owner column\n    \n    \n    record.changeProperty(\"Owner\", {  \n        disabled: false,  \n        readOnly: false,  \n        hidden: false,  \n        addFilter: {  \n            property: \"IsChief\",  \n            value: true  \n        },  \n        isValid: {  \n            value: false,  \n            message: LocalizableStrings[\"Owner_should_be_a_chief_only\"]  \n        }  \n     });  \n    \n\n  * Base business rule\n    * Configuration object properties\n  * **Is required** business rule (Terrasoft.RuleTypes.Requirement)\n    * Configuration object properties\n  * Visibility business rule (Terrasoft.RuleTypes.Visibility)\n    * Configuration object properties\n  * Enabled/Disabled business rule (Terrasoft.RuleTypes.Activation)\n    * Configuration object properties\n  * Filtration business rule (Terrasoft.RuleTypes.Filtration)\n    * Configuration object properties\n  * Mutual Filtration business rule (Terrasoft.RuleTypes.MutualFiltration)\n    * Configuration object properties\n  * Regular expression business rule (Terrasoft.RuleTypes.RegExp)\n    * Configuration object properties\n  * Custom business rules\n    * Configuration object properties\n    * Properties of the executeFn handler function\n    * Methods\n\n\n",
  "analysis": {
    "word_count": 1860,
    "key_concepts": ["configuration", "lookup", "operation", "lead", "contact", "account", "case"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "beginner",
    "ai_tags": ["beginner", "creatio", "contact", "operation", "documentation", "lookup", "lead", "configuration"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:33:15.832254"
}
