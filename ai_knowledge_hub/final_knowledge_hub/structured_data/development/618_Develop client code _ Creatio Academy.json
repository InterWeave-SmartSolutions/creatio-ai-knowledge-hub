{
  "id": 618,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.1/development-tools/external-ides/examples/develop-the-client-code",
  "title": "Develop client code | Creatio Academy",
  "category": "development",
  "description": "To improve the developer experience, Creatio lets you manage the files of client module schemas in an external IDE, for example, WebStorm, Visual Studio Code, Sublime Text, etc. To do this, download the schema source code from the database. Creatio downloads the source code of client module schema as \\.js files and client module styles as \\.less files. Since database access is required to write client code, this instruction is relevant only for Creatio on-site.",
  "content": "This is documentation for Creatio 8.1 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.1 On this page Level: advanced To improve the developer experience, Creatio lets you manage the files of client module schemas in an external IDE, for example, WebStorm, Visual Studio Code, Sublime Text, etc. To do this, download the schema source code from the database. Creatio downloads the source code of client module schema as *.js files and client module styles as *.less files. Since database access is required to write client code, this instruction is relevant only for Creatio on-site. To write the source code of client module schemas in the file system : Enable the file system development mode. Set up the package in the SVN repository. Create a client module schema in Creatio IDE. Download the package to the file system. Write the source code of the client module schema in an external IDE. Debug the source code (optional). Disable the file system development mode (optional). 1. Enable the file system development mode ​ To enable the file system development mode , follow the instruction in a separate article: External IDEs . 2. Set up the package in the SVN repository ​ To set up the package in the SVN repository , take one of the following steps: Create a package in the SVN repository . Creatio lets you create a package in the following ways : Using SVN. To do this, follow the instruction in a separate article: Create a user-made package using Configuration section . Without using SVN. To do this, follow the instruction in a separate article: Create a package in the file system development mode . Install a package from the SVN repository . To do this, follow the instruction in a separate article: Install an SVN package in the file system development mode . Update a package from the SVN repository . To do this, follow the instruction in a separate article: Update and commit changes to the SVN from the file system . The steps below use the sdkPackageInFileSystem package installed from the SVN repository as an example. note When developing in the file system, it is more convenient to manage version control system repositories using client applications, for example, Tortoise SVN or Git , instead of the out-of-the-box Creatio integration. 3. Create a client module schema in Creatio IDE ​ To create a client module schema in Creatio IDE , follow the instruction in a separate article: Client module . For example, create a schema of the ContactPageV2 replacing view model and schema of the ContactPageV2CSS view model in the sdkPackageInFileSystem package. 4. Download the package to the file system ​ To download the package that contains the client module schema to the file system , select Download packages to the file system in the File system development mode action group on the toolbar. For example, after you download the sdkPackageInFileSystem to the file system, the ..Terrasoft.WebApp\\Terrasoft.Configuration\\Pkg\\sdkPackageInFileSystem\\Schemas subdirectories will contain the ContactPageV2.js (source code of the client module schema) and ContactPageV2CSS.less (client module styles) files. 5. Write the source code of the client module schema in an external IDE ​ For example, to hide the Full job title field from the contact page: Open the ContactPageV2.js file in an external IDE and add the source code displayed below. ContactPageV2.js define ( \"ContactPageV2\" , [ ] , function ( ) { return { entitySchemaName : \"Contact\" , diff : /**SCHEMA_DIFF*/ [ { \"operation\" : \"remove\" , \"name\" : \"JobTitleProfile\" } ] /**SCHEMA_DIFF*/ } ; } ) ; Save the ContactPageV2.js file. As a result, Creatio will hide the Full job title field from the contact page. Note that the changes will be displayed automatically. 6. Debug the source code (optional) ​ Debug the source code if it was written with errors. To do this, follow the instruction in a separate article: Front-end debugging . 7. Disable the file system development mode (optional) ​ If you do not need to use the file system for further development, disable the file system development mode. To disable the file system development mode : Select Update packages from file system in the File system development mode action group on the toolbar. Set the enabled attribute of the fileDesignMode element in the Web.config file in Creatio root directory to false . Resources ​ Official Tortoise SVN website Official Git website Module coupling (Wikipedia) 1. Enable the file system development mode 2. Set up the package in the SVN repository 3. Create a client module schema in Creatio IDE 4. Download the package to the file system 5. Write the source code of the client module schema in an external IDE 6. Debug the source code (optional) 7. Disable the file system development mode (optional) Resources",
  "markdown": "This is documentation for Creatio **8.1**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/development-tools/external-ides/examples/develop-the-client-code)** (8.3).\n\nVersion: 8.1\n\nOn this page\n\nLevel: advanced\n\nTo improve the developer experience, Creatio lets you manage the files of [client module schemas](https://academy.creatio.com/documents?ver=8.1&id=15106) in an external IDE, for example, WebStorm, Visual Studio Code, Sublime Text, etc. To do this, download the schema source code from the database. Creatio downloads the source code of client module schema as *.js files and client module styles as *.less files. Since database access is required to write client code, this instruction is relevant only for Creatio on-site.\n\nTo **write the source code of client module schemas in the file system** :\n\n  1. Enable the file system development mode.\n  2. Set up the package in the SVN repository.\n  3. Create a client module schema in Creatio IDE.\n  4. Download the package to the file system.\n  5. Write the source code of the client module schema in an external IDE.\n  6. Debug the source code (optional).\n  7. Disable the file system development mode (optional).\n\n\n\n## 1\\. Enable the file system development mode​\n\nTo **enable the file system development mode** , follow the instruction in a separate article: [External IDEs](https://academy.creatio.com/documents?ver=8.1&id=15111&anchor=title-2098-4).\n\n## 2\\. Set up the package in the SVN repository​\n\nTo **set up the package in the SVN repository** , take one of the following steps:\n\n  * **Create a package in the SVN repository**.\n\nCreatio lets you create a package in the following **ways** :\n\n    * Using SVN. To do this, follow the instruction in a separate article: [Create a user-made package using Configuration section](https://academy.creatio.com/documents?ver=8.1&id=15122).\n    * Without using SVN. To do this, follow the instruction in a separate article: [Create a package in the file system development mode](https://academy.creatio.com/documents?ver=8.1&id=15143).\n  * **Install a package from the SVN repository**. To do this, follow the instruction in a separate article: [Install an SVN package in the file system development mode](https://academy.creatio.com/documents?ver=8.1&id=15144).\n\n  * **Update a package from the SVN repository**. To do this, follow the instruction in a separate article: [Update and commit changes to the SVN from the file system](https://academy.creatio.com/documents?ver=8.1&id=15147).\n\n\n\n\nThe steps below use the `sdkPackageInFileSystem` package installed from the SVN repository as an example.\n\nnote\n\nWhen developing in the file system, it is more convenient to manage version control system repositories using client applications, for example, [Tortoise SVN](https://tortoisesvn.net/) or [Git](https://git-scm.com/), instead of the out-of-the-box Creatio integration.\n\n## 3\\. Create a client module schema in Creatio IDE​\n\nTo **create a client module schema in Creatio IDE** , follow the instruction in a separate article: [Client module](https://academy.creatio.com/documents?ver=8.1&id=15106).\n\nFor example, create a schema of the `ContactPageV2` replacing view model and schema of the `ContactPageV2CSS` view model in the `sdkPackageInFileSystem` package.\n\n## 4\\. Download the package to the file system​\n\nTo **download the package that contains the client module schema to the file system** , select **Download packages to the file system** in the **File system development mode** action group on the toolbar.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/CreatingPackageInFileSystem\\(7.17\\)/scr_download_to_fs.png)\n\nFor example, after you download the `sdkPackageInFileSystem` to the file system, the `..Terrasoft.WebApp\\Terrasoft.Configuration\\Pkg\\sdkPackageInFileSystem\\Schemas` subdirectories will contain the `ContactPageV2.js` (source code of the client module schema) and `ContactPageV2CSS.less` (client module styles) files.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/UploadClientSchemas/8.0/scr_pkg_exporer.png)\n\n## 5\\. Write the source code of the client module schema in an external IDE​\n\nFor example, to hide the **Full job title** field from the contact page:\n\n  1. Open the `ContactPageV2.js` file in an external IDE and add the source code displayed below.\n\nContactPageV2.js\n         \n         define(\"ContactPageV2\", [], function() {  \n             return {  \n                 entitySchemaName: \"Contact\",  \n                 diff: /**SCHEMA_DIFF*/ [{  \n                     \"operation\": \"remove\",  \n                     \"name\": \"JobTitleProfile\"  \n                 }] /**SCHEMA_DIFF*/  \n             };  \n         });  \n           \n         \n\n  2. Save the `ContactPageV2.js` file.\n\n\n\n\nAs a result, Creatio will hide the **Full job title** field from the contact page.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/UploadClientSchemas/8.0/scr_result.png)\n\nNote that the changes will be displayed automatically.\n\n## 6\\. Debug the source code (optional)​\n\nDebug the source code if it was written with errors. To do this, follow the instruction in a separate article: [Front-end debugging](https://academy.creatio.com/documents?ver=8.1&id=15193).\n\n## 7\\. Disable the file system development mode (optional)​\n\nIf you do not need to use the file system for further development, disable the file system development mode.\n\nTo **disable the file system development mode** :\n\n  1. Select **Update packages from file system** in the **File system development mode** action group on the toolbar.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/InstallPkgFromSvnInFileSystemMode\\(7.17\\)/scr_updating.png)\n\n  2. Set the `enabled` attribute of the `fileDesignMode` element in the `Web.config` file in Creatio root directory to `false`.\n\n\n\n\n* * *\n\n## Resources​\n\n[Official Tortoise SVN website](https://tortoisesvn.net/)\n\n[Official Git website](https://git-scm.com/)\n\n[Module coupling](https://en.wikipedia.org/w/index.php?title=Coupling_\\(computer_programming\\)&oldid=1086406506) (Wikipedia)\n\n  * 1\\. Enable the file system development mode\n  * 2\\. Set up the package in the SVN repository\n  * 3\\. Create a client module schema in Creatio IDE\n  * 4\\. Download the package to the file system\n  * 5\\. Write the source code of the client module schema in an external IDE\n  * 6\\. Debug the source code (optional)\n  * 7\\. Disable the file system development mode (optional)\n  * Resources\n\n\n",
  "analysis": {
    "word_count": 797,
    "key_concepts": ["configuration", "section", "integration", "database", "operation", "package", "contact"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": ["webhooks", "data sync", "web service", "api"],
    "difficulty": "intermediate",
    "ai_tags": [
      "creatio",
      "intermediate",
      "operation",
      "documentation",
      "section",
      "integration",
      "configuration",
      "database"
    ]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:26:55.877869"
}
