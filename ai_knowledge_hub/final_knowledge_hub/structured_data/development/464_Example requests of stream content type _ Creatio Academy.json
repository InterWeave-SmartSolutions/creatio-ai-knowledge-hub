{
  "id": 464,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.0/integrations-and-api/data-services/odata/examples/stream-data-type-request-examples",
  "title": "Example requests of stream content type | Creatio Academy",
  "category": "development",
  "description": "odata service lets you work with the following Stream content types:",
  "content": "This is documentation for Creatio 8.0 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.0 On this page Level: advanced odata service lets you work with the following Stream content types: Images Files Binaries Retrieve content of the Stream type ​ To implement the example: Retrieve the ID of the contact photo. Read more >>> Retrieve the contact photo. Read more >>> Example Retrieve the photo of a specified Creatio contact using the odata service. Response Status : 200 OK 1. Retrieve the ID of the contact photo ​ For this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact. To do this, execute the SQL query to the SysImage database table whose Data column stores the contact photos. SQL query select Id from SysImage where Id = ( select PhotoId from Contact where Name = 'Alexander Wilson' ) As a result , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" 2. Retrieve the contact photo ​ For this example, retrieve the photo of \"Alexander Wilson\" contact. To do this, execute the request using the odata service. Request // Retrieve the \"Data\" column value of the \"SysImage\" database table for the contact whose ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" GET CreatioURL / 0 / odata / SysImage ( E07885D2 - 90AB - 42AC - 59B5 - EF80EB6B8F09 ) / Data As a result , Creatio will return the photo of \"Alexander Wilson\" contact. View the result >>> Add content of the Stream type ​ To implement the example: Add a contact. Read more >>> Add a record to the database. Read more >>> Upload the file of contact photo to the database. Read more >>> Bind the photo to the contact. Read more >>> Example Add a new contact using the odata service. The contact must contain the photo. 1. Add a contact ​ For this example, add the \"John Best\" contact using the odata service. To do this, execute the request to the Contact database table that stores contacts. Request // Add the contact to the \"Contact\" database table. POST CreatioURL / 0 / odata / Contact Accept : application / json ; odata = verbose Content - Type : application / json ; odata = verbose ; IEEE754Compatible = true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF : SomeBPMCSRFToken { // Set the \"John Best\" contact name to the \"Name\" field. \"Name\" : \"John Best\" } As a result : Creatio will return the following response. Response Status : 201 Created { \"@odata.context\" : \"CreatioURL/0/odata/$metadata#Contact/$entity\" , \"Id\" : \"509c189d-37a0-49d5-80f4-7de9ab389f3a\" , \"Name\" : \"John Best\" , \"OwnerId\" : \"76929f8c-7e15-4c64-bdb0-adc62d383727\" , \"CreatedOn\" : \"2024-09-16T07:46:44.5045174Z\" , \"CreatedById\" : \"76929f8c-7e15-4c64-bdb0-adc62d383727\" , \"ModifiedOn\" : \"2024-09-16T07:46:44.5045174Z\" , \"ModifiedById\" : \"76929f8c-7e15-4c64-bdb0-adc62d383727\" , \"ProcessListeners\" : 0 , \"Dear\" : \"\" , \"SalutationTypeId\" : \"00000000-0000-0000-0000-000000000000\" , \"GenderId\" : \"00000000-0000-0000-0000-000000000000\" , \"AccountId\" : \"00000000-0000-0000-0000-000000000000\" , \"DecisionRoleId\" : \"00000000-0000-0000-0000-000000000000\" , \"TypeId\" : \"00000000-0000-0000-0000-000000000000\" , \"JobId\" : \"00000000-0000-0000-0000-000000000000\" , \"JobTitle\" : \"\" , \"DepartmentId\" : \"00000000-0000-0000-0000-000000000000\" , \"BirthDate\" : \"0001-01-01T00:00:00Z\" , \"Phone\" : \"\" , \"MobilePhone\" : \"\" , \"HomePhone\" : \"\" , \"Skype\" : \"\" , \"Email\" : \"\" , \"AddressTypeId\" : \"00000000-0000-0000-0000-000000000000\" , \"Address\" : \"\" , \"CityId\" : \"00000000-0000-0000-0000-000000000000\" , \"RegionId\" : \"00000000-0000-0000-0000-000000000000\" , \"Zip\" : \"\" , \"CountryId\" : \"00000000-0000-0000-0000-000000000000\" , \"DoNotUseEmail\" : false , \"DoNotUseCall\" : false , \"DoNotUseFax\" : false , \"DoNotUseSms\" : false , \"DoNotUseMail\" : false , \"Notes\" : \"\" , \"Facebook\" : \"\" , \"LinkedIn\" : \"\" , \"Twitter\" : \"\" , \"FacebookId\" : \"\" , \"LinkedInId\" : \"\" , \"TwitterId\" : \"\" , \"TwitterAFDAId\" : \"00000000-0000-0000-0000-000000000000\" , \"FacebookAFDAId\" : \"00000000-0000-0000-0000-000000000000\" , \"LinkedInAFDAId\" : \"00000000-0000-0000-0000-000000000000\" , \"PhotoId\" : \"00000000-0000-0000-0000-000000000000\" , \"GPSN\" : \"\" , \"GPSE\" : \"\" , \"Surname\" : \"Best\" , \"GivenName\" : \"John\" , \"MiddleName\" : \"\" , \"Confirmed\" : true , \"Completeness\" : 0 , \"LanguageId\" : \"6ebc31fa-ee6c-48e9-81bf-8003ac03b019\" , \"Age\" : 0 , \"IsEmailConfirmed\" : false , \"AdCampaignId\" : \"00000000-0000-0000-0000-000000000000\" , \"CustomerNeedId\" : \"00000000-0000-0000-0000-000000000000\" , \"ChannelId\" : \"00000000-0000-0000-0000-000000000000\" , \"SourceId\" : \"00000000-0000-0000-0000-000000000000\" , \"RegisterMethodId\" : \"00000000-0000-0000-0000-000000000000\" , \"LeadConversionScore\" : 0 , \"IsNonActualEmail\" : false , \"ContactPhoto@odata.mediaEditLink\" : \"Contact(509c189d-37a0-49d5-80f4-7de9ab389f3a)/ContactPhoto\" , \"ContactPhoto@odata.mediaReadLink\" : \"Contact(509c189d-37a0-49d5-80f4-7de9ab389f3a)/ContactPhoto\" , \"ContactPhoto@odata.mediaContentType\" : \"application/octet-stream\" } The \"John Best\" ID is \"509c189d-37a0-49d5-80f4-7de9ab389f3a.\" The odata service will add the \"John Best\" contact to Creatio. 2. Add a record to the database ​ To do this, execute the request to the SysImage database table using the odata service. The SysImage database table stores the contact photos. Request // Add the record to the \"SysImage\" database table. POST CreatioURL / 0 / odata / SysImage Accept : application / json ; odata = verbose Content - Type : application / json ; odata = verbose ; IEEE754Compatible = true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF : SomeBPMCSRFToken { // Set the file name of the contact photo to the \"Name\" column. \"Name\" : \"src_John_Best_photo.png\" , // Set an arbitrary record ID to the \"Id\" column. \"Id\" : \"410006E1-CA4E-4502-A9EC-E54D922D2C02\" , // Set the file type of the contact photo to the \"MimeType\" column. \"MimeType\" : \"image/png\" } As a result : Creatio will return the following response. Response Status : 201 Created { \"@odata.context\" : \"CreatioURL/0/odata/$metadata#SysImage/$entity\" , \"Id\" : \"410006e1-ca4e-4502-a9ec-e54d922d2c02\" , \"CreatedOn\" : \"2024-09-17T06:27:20.1826947Z\" , \"CreatedById\" : \"410006e1-ca4e-4502-a9ec-e54d922d2c00\" , \"ModifiedOn\" : \"2024-09-17T06:27:20.1826947Z\" , \"ModifiedById\" : \"410006e1-ca4e-4502-a9ec-e54d922d2c00\" , \"ProcessListeners\" : 0 , \"UploadedOn\" : \"0001-01-01T00:00:00Z\" , \"Name\" : \"src_John_Best_photo.png\" , \"MimeType\" : \"image/png\" , \"HasRef\" : false , \"Hash\" : \"\" , \"Data@odata.mediaEditLink\" : \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/Data\" , \"Data@odata.mediaReadLink\" : \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/Data\" , \"Data@odata.mediaContentType\" : \"application/octet-stream\" , \"PreviewData@odata.mediaEditLink\" : \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/PreviewData\" , \"PreviewData@odata.mediaReadLink\" : \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/PreviewData\" , \"PreviewData@odata.mediaContentType\" : \"application/octet-stream\" } The SysImage database table will include the record, however the value of the Data column will be \"0x.\" 3. Upload the file of contact photo to the database ​ Upload the file of contact photo to the Data column of the SysImage database table: Check the file name . To do this, ensure the file name of contact photo matches the value specified in the Name property of the request body on the previous step. Execute the request to the SysImage database table using the odata service. Request // Update the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"410006e1-ca4e-4502-a9ec-e54d922d2c02.\" PUT CreatioURL / 0 / odata / SysImage ( 410006e1 - ca4e - 4502 - a9ec - e54d922d2c02 ) / Data Accept : application / json ; text / plain ; /*/ Content-Type: application/octet-stream; IEEE754Compatible=true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF: SomeBPMCSRFToken As a result , Creatio will return the following response. Response Status : 200 OK 4. Bind the photo to the contact ​ For this example, bind the photo to the \"John Best\" contact. Bind the Data column value of the SysImage database table to the PhotoId column value of the Contact database table: Execute the request to the Contact database table using the odata service. Request // Update the value of the \"PhotoId\" column in the \"Contact\" database table whose \"Id\" column value is \"509c189d-37a0-49d5-80f4-7de9ab389f3a.\" PATCH CreatioURL / 0 / odata / Contact ( 509c189d - 37a0 - 49d5 - 80f4 - 7de9ab389f3a ) Accept : application / json ; odata = verbose Content - Type : application / json ; odata = verbose ; IEEE754Compatible = true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF : SomeBPMCSRFToken { // Set the ID of the contact photo specified in the \"SysImage\" database table to the \"PhotoId\" column. \"PhotoId\" : \"410006e1-ca4e-4502-a9ec-e54d922d2c02\" } Clear the browser cache . As a result : Creatio will return the following response. Response Status : 204 No Content The odata service will add the photo of the \"John Best\" contact to Creatio. View the result >>> Modify content of the Stream type ​ To implement the example: Retrieve the ID of the contact photo. Read more >>> Upload the file of new contact photo to the database. Read more >>> Example Change the photo of the existing contact using the odata service. 1. Retrieve the ID of the contact photo ​ For this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact. To do this, execute the SQL query to the SysImage database table whose Data column stores the contact photos. SQL query select Id from SysImage where Id = ( select PhotoId from Contact where Name = 'Alexander Wilson' ) As a result , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" 2. Upload the file of new contact photo to the database ​ Upload the file of contact photo to the Data column of the SysImage database table: Execute the request to the SysImage database table using the odata service. Request // Update the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" PUT CreatioURL / 0 / odata / SysImage ( E07885D2 - 90AB - 42AC - 59B5 - EF80EB6B8F09 ) / Data Accept : application / json ; text / plain ; /*/ Content-Type: application/octet-stream; IEEE754Compatible=true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF: SomeBPMCSRFToken Clear the browser cache . As a result : Creatio will return the following response. Response Status : 200 OK The odata service will change the photo of \"Alexander Wilson\" contact in Creatio. View the result >>> Delete content of the Stream type ​ To implement the example: Retrieve the ID of the contact photo. Read more >>> Delete the contact photo. Read more >>> Example Delete the photo of the existing contact using the odata service. 1. Retrieve the ID of the contact photo ​ For this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact. To do this, execute the SQL query to the SysImage database table whose Data column stores the contact photos. SQL query select Id from SysImage where Id = ( select PhotoId from Contact where Name = 'Alexander Wilson' ) As a result , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" 2. Delete the contact photo ​ Delete the file of contact photo from the Data column of the SysImage database table: Execute the following request to the SysImage database table using the odata service. Request // Delete the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\" DELETE CreatioURL / 0 / odata / SysImage ( E07885D2 - 90AB - 42AC - 59B5 - EF80EB6B8F09 ) / Data Accept : application / json ; text / plain ; /*/ Content-Type: application/octet-stream; IEEE754Compatible=true // Specify \"BPMCSRF\" header when using cookie-based authentication. BPMCSRF: SomeBPMCSRFToken Clear the browser cache . As a result : Creatio will return the following response. Response Status : 204 No Content The odata service will delete the photo of \"Alexander Wilson\" contact in Creatio. View the result >>> Resources ​ Creatio API documentation Retrieve content of the Stream type 1. Retrieve the ID of the contact photo 2. Retrieve the contact photo Add content of the Stream type 1. Add a contact 2. Add a record to the database 3. Upload the file of contact photo to the database 4. Bind the photo to the contact Modify content of the Stream type 1. Retrieve the ID of the contact photo 2. Upload the file of new contact photo to the database Delete content of the Stream type 1. Retrieve the ID of the contact photo 2. Delete the contact photo Resources",
  "markdown": "This is documentation for Creatio **8.0**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/getting-started/development-recommendations)** (8.3).\n\nVersion: 8.0\n\nOn this page\n\nLevel: advanced\n\n`odata` service lets you work with the following `Stream` content types:\n\n  * **Images**\n  * **Files**\n  * **Binaries**\n\n\n\n## Retrieve content of the Stream type​\n\nTo implement the example:\n\n  1. Retrieve the ID of the contact photo. Read more >>>\n  2. Retrieve the contact photo. Read more >>>\n\n\n\nExample\n\nRetrieve the photo of a specified Creatio contact using the `odata` service.\n\n  * Response\n\n\n    \n    \n    Status: 200 OK  \n    \n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_Alexander_Wilson_photo.png)\n\n### 1\\. Retrieve the ID of the contact photo​\n\nFor this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_Alexander_Wilson_in_Creatio.png)\n\nTo do this, execute the SQL query to the `SysImage` database table whose `Data` column stores the contact photos.\n\nSQL query\n    \n    \n    select Id from SysImage where Id = (select PhotoId from Contact where Name = 'Alexander Wilson')  \n    \n\n**As a result** , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"\n\n### 2\\. Retrieve the contact photo​\n\nFor this example, retrieve the photo of \"Alexander Wilson\" contact. To do this, execute the request using the `odata` service.\n\nRequest\n    \n    \n    // Retrieve the \"Data\" column value of the \"SysImage\" database table for the contact whose ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"  \n    GET CreatioURL/0/odata/SysImage(E07885D2-90AB-42AC-59B5-EF80EB6B8F09)/Data  \n    \n\n**As a result** , Creatio will return the photo of \"Alexander Wilson\" contact. [View the result >>>](https://academy.creatio.com/documents?ver=8.0&id=15433&anchor=view-result)\n\n## Add content of the Stream type​\n\nTo implement the example:\n\n  1. Add a contact. Read more >>>\n  2. Add a record to the database. Read more >>>\n  3. Upload the file of contact photo to the database. Read more >>>\n  4. Bind the photo to the contact. Read more >>>\n\n\n\nExample\n\nAdd a new contact using the `odata` service. The contact must contain the photo.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_John_Best_in_Creatio_with_photo.png)\n\n### 1\\. Add a contact​\n\nFor this example, add the \"John Best\" contact using the `odata` service. To do this, execute the request to the `Contact` database table that stores contacts.\n\nRequest\n    \n    \n    // Add the contact to the \"Contact\" database table.  \n    POST CreatioURL/0/odata/Contact  \n      \n    Accept: application/json; odata=verbose  \n    Content-Type: application/json; odata=verbose; IEEE754Compatible=true  \n    // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n    BPMCSRF: SomeBPMCSRFToken  \n      \n    {  \n        // Set the \"John Best\" contact name to the \"Name\" field.  \n        \"Name\": \"John Best\"  \n    }  \n    \n\n**As a result** :\n\n  * Creatio will return the following response.\n\nResponse\n        \n        Status: 201 Created  \n          \n        {  \n            \"@odata.context\": \"CreatioURL/0/odata/$metadata#Contact/$entity\",  \n            \"Id\": \"509c189d-37a0-49d5-80f4-7de9ab389f3a\",  \n            \"Name\": \"John Best\",  \n            \"OwnerId\": \"76929f8c-7e15-4c64-bdb0-adc62d383727\",  \n            \"CreatedOn\": \"2024-09-16T07:46:44.5045174Z\",  \n            \"CreatedById\": \"76929f8c-7e15-4c64-bdb0-adc62d383727\",  \n            \"ModifiedOn\": \"2024-09-16T07:46:44.5045174Z\",  \n            \"ModifiedById\": \"76929f8c-7e15-4c64-bdb0-adc62d383727\",  \n            \"ProcessListeners\": 0,  \n            \"Dear\": \"\",  \n            \"SalutationTypeId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"GenderId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"AccountId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"DecisionRoleId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"TypeId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"JobId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"JobTitle\": \"\",  \n            \"DepartmentId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"BirthDate\": \"0001-01-01T00:00:00Z\",  \n            \"Phone\": \"\",  \n            \"MobilePhone\": \"\",  \n            \"HomePhone\": \"\",  \n            \"Skype\": \"\",  \n            \"Email\": \"\",  \n            \"AddressTypeId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"Address\": \"\",  \n            \"CityId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"RegionId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"Zip\": \"\",  \n            \"CountryId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"DoNotUseEmail\": false,  \n            \"DoNotUseCall\": false,  \n            \"DoNotUseFax\": false,  \n            \"DoNotUseSms\": false,  \n            \"DoNotUseMail\": false,  \n            \"Notes\": \"\",  \n            \"Facebook\": \"\",  \n            \"LinkedIn\": \"\",  \n            \"Twitter\": \"\",  \n            \"FacebookId\": \"\",  \n            \"LinkedInId\": \"\",  \n            \"TwitterId\": \"\",  \n            \"TwitterAFDAId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"FacebookAFDAId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"LinkedInAFDAId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"PhotoId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"GPSN\": \"\",  \n            \"GPSE\": \"\",  \n            \"Surname\": \"Best\",  \n            \"GivenName\": \"John\",  \n            \"MiddleName\": \"\",  \n            \"Confirmed\": true,  \n            \"Completeness\": 0,  \n            \"LanguageId\": \"6ebc31fa-ee6c-48e9-81bf-8003ac03b019\",  \n            \"Age\": 0,  \n            \"IsEmailConfirmed\": false,  \n            \"AdCampaignId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"CustomerNeedId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"ChannelId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"SourceId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"RegisterMethodId\": \"00000000-0000-0000-0000-000000000000\",  \n            \"LeadConversionScore\": 0,  \n            \"IsNonActualEmail\": false,  \n            \"ContactPhoto@odata.mediaEditLink\": \"Contact(509c189d-37a0-49d5-80f4-7de9ab389f3a)/ContactPhoto\",  \n            \"ContactPhoto@odata.mediaReadLink\": \"Contact(509c189d-37a0-49d5-80f4-7de9ab389f3a)/ContactPhoto\",  \n            \"ContactPhoto@odata.mediaContentType\": \"application/octet-stream\"  \n        }  \n        \n\nThe \"John Best\" ID is \"509c189d-37a0-49d5-80f4-7de9ab389f3a.\"\n\n  * The `odata` service will add the \"John Best\" contact to Creatio.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_John_Best_in_Creatio.png)\n\n\n\n\n### 2\\. Add a record to the database​\n\nTo do this, execute the request to the `SysImage` database table using the `odata` service. The `SysImage` database table stores the contact photos.\n\nRequest\n    \n    \n    // Add the record to the \"SysImage\" database table.  \n    POST CreatioURL/0/odata/SysImage  \n      \n    Accept: application/json; odata=verbose  \n    Content-Type: application/json; odata=verbose; IEEE754Compatible=true  \n    // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n    BPMCSRF: SomeBPMCSRFToken  \n      \n    {  \n        // Set the file name of the contact photo to the \"Name\" column.  \n        \"Name\": \"src_John_Best_photo.png\",  \n        // Set an arbitrary record ID to the \"Id\" column.  \n        \"Id\": \"410006E1-CA4E-4502-A9EC-E54D922D2C02\",  \n        // Set the file type of the contact photo to the \"MimeType\" column.  \n        \"MimeType\": \"image/png\"  \n    }  \n    \n\n**As a result** :\n\n  * Creatio will return the following response.\n\nResponse\n        \n        Status: 201 Created  \n          \n        {  \n            \"@odata.context\": \"CreatioURL/0/odata/$metadata#SysImage/$entity\",  \n            \"Id\": \"410006e1-ca4e-4502-a9ec-e54d922d2c02\",  \n            \"CreatedOn\": \"2024-09-17T06:27:20.1826947Z\",  \n            \"CreatedById\": \"410006e1-ca4e-4502-a9ec-e54d922d2c00\",  \n            \"ModifiedOn\": \"2024-09-17T06:27:20.1826947Z\",  \n            \"ModifiedById\": \"410006e1-ca4e-4502-a9ec-e54d922d2c00\",  \n            \"ProcessListeners\": 0,  \n            \"UploadedOn\": \"0001-01-01T00:00:00Z\",  \n            \"Name\": \"src_John_Best_photo.png\",  \n            \"MimeType\": \"image/png\",  \n            \"HasRef\": false,  \n            \"Hash\": \"\",  \n            \"Data@odata.mediaEditLink\": \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/Data\",  \n            \"Data@odata.mediaReadLink\": \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/Data\",  \n            \"Data@odata.mediaContentType\": \"application/octet-stream\",  \n            \"PreviewData@odata.mediaEditLink\": \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/PreviewData\",  \n            \"PreviewData@odata.mediaReadLink\": \"SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/PreviewData\",  \n            \"PreviewData@odata.mediaContentType\": \"application/octet-stream\"  \n        }  \n        \n\n  * The `SysImage` database table will include the record, however the value of the `Data` column will be \"0x.\"\n\n\n\n\n### 3\\. Upload the file of contact photo to the database​\n\nUpload the file of contact photo to the `Data` column of the `SysImage` database table:\n\n  1. **Check the file name**. To do this, ensure the file name of contact photo matches the value specified in the `Name` property of the request body on the previous step.\n\n  2. **Execute the request to the** `SysImage` **database table** using the `odata` service.\n\n     * Request\n    \n    // Update the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"410006e1-ca4e-4502-a9ec-e54d922d2c02.\"  \n    PUT CreatioURL/0/odata/SysImage(410006e1-ca4e-4502-a9ec-e54d922d2c02)/Data  \n      \n    Accept: application/json; text/plain; /*/  \n    Content-Type: application/octet-stream; IEEE754Compatible=true  \n    // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n    BPMCSRF: SomeBPMCSRFToken  \n    \n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_John_Best_photo.png)\n\n\n\n\n**As a result** , Creatio will return the following response.\n\nResponse\n    \n    \n    Status: 200 OK  \n    \n\n### 4\\. Bind the photo to the contact​\n\nFor this example, bind the photo to the \"John Best\" contact.\n\nBind the `Data` column value of the `SysImage` database table to the `PhotoId` column value of the `Contact` database table:\n\n  1. **Execute the request to the** `Contact` **database table** using the `odata` service.\n\nRequest\n         \n         // Update the value of the \"PhotoId\" column in the \"Contact\" database table whose \"Id\" column value is \"509c189d-37a0-49d5-80f4-7de9ab389f3a.\"  \n         PATCH CreatioURL/0/odata/Contact(509c189d-37a0-49d5-80f4-7de9ab389f3a)  \n           \n         Accept: application/json;odata=verbose  \n         Content-Type: application/json; odata=verbose; IEEE754Compatible=true  \n         // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n         BPMCSRF: SomeBPMCSRFToken  \n           \n         {  \n             // Set the ID of the contact photo specified in the \"SysImage\" database table to the \"PhotoId\" column.  \n             \"PhotoId\": \"410006e1-ca4e-4502-a9ec-e54d922d2c02\"  \n         }  \n         \n\n  2. **Clear the browser cache**.\n\n\n\n\n**As a result** :\n\n  * Creatio will return the following response.\n\nResponse\n        \n        Status: 204 No Content  \n        \n\n  * The `odata` service will add the photo of the \"John Best\" contact to Creatio. [View the result >>>](https://academy.creatio.com/documents?ver=8.0&id=15433&anchor=view-result-1)\n\n\n\n\n## Modify content of the Stream type​\n\nTo implement the example:\n\n  1. Retrieve the ID of the contact photo. Read more >>>\n  2. Upload the file of new contact photo to the database. Read more >>>\n\n\n\nExample\n\nChange the photo of the existing contact using the `odata` service.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_new_photo_of_Alexander_Wilson_in_Creatio.png)\n\n### 1\\. Retrieve the ID of the contact photo​\n\nFor this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_Alexander_Wilson_in_Creatio.png)\n\nTo do this, execute the SQL query to the `SysImage` database table whose `Data` column stores the contact photos.\n\nSQL query\n    \n    \n    select Id from SysImage where Id = (select PhotoId from Contact where Name = 'Alexander Wilson')  \n    \n\n**As a result** , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"\n\n### 2\\. Upload the file of new contact photo to the database​\n\nUpload the file of contact photo to the `Data` column of the `SysImage` database table:\n\n  1. **Execute the request to the** `SysImage` **database table** using the `odata` service.\n\n     * Request\n    \n    // Update the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"  \n    PUT CreatioURL/0/odata/SysImage(E07885D2-90AB-42AC-59B5-EF80EB6B8F09)/Data  \n      \n    Accept: application/json; text/plain; /*/  \n    Content-Type: application/octet-stream; IEEE754Compatible=true  \n    // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n    BPMCSRF: SomeBPMCSRFToken  \n    \n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_John_Best_photo.png)\n\n  2. **Clear the browser cache**.\n\n\n\n\n**As a result** :\n\n  * Creatio will return the following response.\n\nResponse\n        \n        Status: 200 OK  \n        \n\n  * The `odata` service will change the photo of \"Alexander Wilson\" contact in Creatio. [View the result >>>](https://academy.creatio.com/documents?ver=8.0&id=15433&anchor=view-result-2)\n\n\n\n\n## Delete content of the Stream type​\n\nTo implement the example:\n\n  1. Retrieve the ID of the contact photo. Read more >>>\n  2. Delete the contact photo. Read more >>>\n\n\n\nExample\n\nDelete the photo of the existing contact using the `odata` service.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_Alexander_Wilson_in_Creatio_without_photo.png)\n\n### 1\\. Retrieve the ID of the contact photo​\n\nFor this example, retrieve the ID of the following photo for \"Alexander Wilson\" contact.\n\n![](https://d3a7ykdi65m4cy.cloudfront.net/ac-en/s3fs-public/documentation/sdk/en/BPMonlineWebSDK/Screenshots/StreamData/8.1/src_Alexander_Wilson_in_Creatio.png)\n\nTo do this, execute the SQL query to the `SysImage` database table whose `Data` column stores the contact photos.\n\nSQL query\n    \n    \n    select Id from SysImage where Id = (select PhotoId from Contact where Name = 'Alexander Wilson')  \n    \n\n**As a result** , the database will return the ID of the contact photo. For this example, the ID is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"\n\n### 2\\. Delete the contact photo​\n\nDelete the file of contact photo from the `Data` column of the `SysImage` database table:\n\n  1. **Execute the following request to the** `SysImage` **database table** using the `odata` service.\n\nRequest\n         \n         // Delete the value of the \"Data\" column in the \"SysImage\" database table whose \"Id\" column value is \"E07885D2-90AB-42AC-59B5-EF80EB6B8F09.\"  \n         DELETE CreatioURL/0/odata/SysImage(E07885D2-90AB-42AC-59B5-EF80EB6B8F09)/Data  \n           \n         Accept: application/json; text/plain; /*/  \n         Content-Type: application/octet-stream; IEEE754Compatible=true  \n         // Specify \"BPMCSRF\" header when using cookie-based authentication.  \n         BPMCSRF: SomeBPMCSRFToken  \n         \n\n  2. **Clear the browser cache**.\n\n\n\n\n**As a result** :\n\n  * Creatio will return the following response.\n\nResponse\n        \n        Status: 204 No Content  \n        \n\n  * The `odata` service will delete the photo of \"Alexander Wilson\" contact in Creatio. [View the result >>>](https://academy.creatio.com/documents?ver=8.0&id=15433&anchor=view-result-3)\n\n\n\n\n* * *\n\n## Resources​\n\n[Creatio API documentation](https://documenter.getpostman.com/view/10204500/SztHX5Qb?version=latest#a3eb86a2-c11d-4c55-ad19-4481a8bf4876)\n\n  * Retrieve content of the Stream type\n    * 1\\. Retrieve the ID of the contact photo\n    * 2\\. Retrieve the contact photo\n  * Add content of the Stream type\n    * 1\\. Add a contact\n    * 2\\. Add a record to the database\n    * 3\\. Upload the file of contact photo to the database\n    * 4\\. Bind the photo to the contact\n  * Modify content of the Stream type\n    * 1\\. Retrieve the ID of the contact photo\n    * 2\\. Upload the file of new contact photo to the database\n  * Delete content of the Stream type\n    * 1\\. Retrieve the ID of the contact photo\n    * 2\\. Delete the contact photo\n  * Resources\n\n\n",
  "analysis": {
    "word_count": 1919,
    "key_concepts": ["odata", "sql", "database", "role", "campaign", "lead", "contact", "account"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "advanced",
    "ai_tags": ["creatio", "sql", "campaign", "documentation", "odata", "role", "advanced", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:23:50.114367"
}
