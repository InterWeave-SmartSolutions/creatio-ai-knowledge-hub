{
  "id": 158,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.1/development-tools/packages/package-conversion",
  "title": "Convert a package | Creatio Academy",
  "category": "development",
  "description": "Creatio supports the following conversion types:",
  "content": "This is documentation for Creatio 8.1 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.1 On this page Level: intermediate Creatio supports the following conversion types : Simple package to assembly package Assembly package to simple package Project package to assembly package Assembly package to project package Since the package conversion requires database access, it is available for Creatio on-site . Creatio in the cloud lets you move individual configuration elements to an assembly package. Convert a simple package to an assembly package ​ Select Properties in the package menu. Select the Compile into a separate assembly checkbox. Click Apply . Actions that saving the package runs: Change the package type in the database ( [Type] column value). If the Compile into a separate assembly checkbox is selected, the value changes from \"0\" (simple package) to \"1\" (assembly package). If the Compile into a separate assembly checkbox is clear, the value changes from \"1\" (simple package) to \"0\" (assembly package). Change the path to the assembly package project in the database ( [ProjectPath] column value). By default, Files/PackageName.csproj , where PackageName is the name of the assembly package. For simple packages, the column contains an empty value. If the [ProjectPath] column contains an empty value for the assembly package (i. e., the [Type] column is set to \"1\"), this causes application failure. Delete assembly package files if the Compile into a separate assembly checkbox is clear. Generate all required schemas. Compile the configuration if needed. The notification about a required compilation will be available in the information window. Important Without the compilation of a configuration when needed, a conversion of a simple package to an assembly package is considered incomplete. Make sure the converted package meets the requirements listed in a separate article: Assembly package . As a result, Creatio will convert the simple package to an assembly package. Convert an assembly package to simple package ​ Open the menu of the assembly package to convert to a simple package → Properties → clear the Compile into a separate assembly checkbox. Click Apply . Rebuild the project libraries for an assembly package that was previously converted from a project package. The libraries are removed as a byproduct of the conversion. As a result, Creatio will convert the assembly package to a simple package. Convert a project package to an assembly package ​ Creatio lets you convert a project package to an assembly package. To convert a project package to an assembly package : Delete all files in the Files\\Bin and Files\\Bin\\netstandard directories. Add the <AssemblyName> property to the C# project of the project package or change the property value. The name of the project package must not match the name of the assembly package. Property template <AssemblyName> < AssemblyName > PackageProjectAssemblyName </ AssemblyName > PackageProjectAssemblyName is the name of the project package assembly. Compile the C# project of the project package. Create a bootstrapAssemblies.json file in the Files directory. Use the file structure below. bootstrapAssemblies.json file structure template { \"assemblies\" : [ \"PackageProjectAssemblyName.dll\" ] } PackageProjectAssemblyName is the name of the project package assembly. Open the menu of the project package to convert to an assembly package → Properties → select the Compile into a separate assembly checkbox. Click Apply . Compile the assembly package. This step depends on the status of development mode in the file system . With development mode enabled in the file system . Export the assembly package to the file system. To do this, click Download packages to the file system in the File system development mode group of the Actions drop-down list on the Configuration section toolbar. Exempt the project package from compilation in the PackageName.csproj file of the assembly package. Template for adding the exemption < Compile Remove = \" $(RelativeCurrentPkgFolderPath)Files/PackageProjectFolder/** \" /> PackageProjectFolder is the directory name of the project package. Compile the assembly package. To do this, click Compile in the assembly package menu. With development mode disabled in the file system . Compile the assembly package. To do this, click Compile in the assembly package menu. Compilation fails. Exempt the project package from compilation in the PackageName.csproj file of the assembly package. Template for adding the exemption < Compile Remove = \" $(RelativeCurrentPkgFolderPath)Files/PackageProjectFolder/** \" /> PackageProjectFolder is the directory name of the project package. Recompile the assembly package. To do this, click Compile in the assembly package menu. Make sure the converted package meets the requirements listed in a separate article: Assembly package . As a result, Creatio will convert the project package to an assembly package. Convert an assembly package to a project package ​ Creatio lets you convert an assembly package to a project package. note Creatio lets you convert an assembly package previously converted from a project package. A previously unconverted assembly package cannot be converted. To convert an assembly package to a project package : Open the menu of the assembly package to convert to a project package, select Properties and clear the Compile into a separate assembly checkbox. Click Apply . Compile the project package. Compile the configuration. Learn more about compilation in a separate article: Operations in Creatio IDE . As a result, Creatio will convert the assembly package to a project package. See also ​ Creatio IDE External IDEs Operations in Creatio IDE Assembly package Convert a simple package to an assembly package Convert an assembly package to simple package Convert a project package to an assembly package Convert an assembly package to a project package See also",
  "markdown": "This is documentation for Creatio **8.1**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/development-tools/packages/package-conversion)** (8.3).\n\nVersion: 8.1\n\nOn this page\n\nLevel: intermediate\n\nCreatio supports the following **conversion types** :\n\n  * Simple package to assembly package\n  * Assembly package to simple package\n  * Project package to assembly package\n  * Assembly package to project package\n\n\n\nSince the package conversion requires database access, it is available for **Creatio on-site**. **Creatio in the cloud** lets you move individual configuration elements to an assembly package.\n\n## Convert a simple package to an assembly package​\n\n  1. Select **Properties** in the package menu.\n\n  2. Select the **Compile into a separate assembly** checkbox.\n\n  3. Click **Apply**.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/PackageAssembly/8.0/convert_simple_package.gif)\n\n**Actions** that saving the package runs:\n\n     * Change the package type in the database (`[Type]` column value). If the **Compile into a separate assembly** checkbox is selected, the value changes from \"0\" (simple package) to \"1\" (assembly package). If the **Compile into a separate assembly** checkbox is clear, the value changes from \"1\" (simple package) to \"0\" (assembly package).\n     * Change the path to the assembly package project in the database (`[ProjectPath]` column value). By default, `Files/PackageName.csproj`, where `PackageName` is the name of the assembly package. For simple packages, the column contains an empty value. If the `[ProjectPath]` column contains an empty value for the assembly package (i. e., the `[Type]` column is set to \"1\"), this causes application failure.\n     * Delete assembly package files if the **Compile into a separate assembly** checkbox is clear.\n     * Generate all required schemas.\n  4. Compile the configuration if needed. The notification about a required compilation will be available in the information window.\n\nImportant\n\nWithout the compilation of a configuration when needed, a conversion of a simple package to an assembly package is considered incomplete.\n\n  5. Make sure the converted package meets the requirements listed in a separate article: [Assembly package](https://academy.creatio.com/documents?ver=8.1&id=15125&anchor=title-3554-2).\n\n\n\n\nAs a result, Creatio will convert the simple package to an assembly package.\n\n## Convert an assembly package to simple package​\n\n  1. Open the menu of the assembly package to convert to a simple package → **Properties** → clear the **Compile into a separate assembly** checkbox.\n\nClick **Apply**.\n\n  2. Rebuild the project libraries for an assembly package that was previously converted from a project package. The libraries are removed as a byproduct of the conversion.\n\n\n\n\nAs a result, Creatio will convert the assembly package to a simple package.\n\n## Convert a project package to an assembly package​\n\nCreatio lets you convert a project package to an assembly package.\n\nTo **convert a project package to an assembly package** :\n\n  1. Delete all files in the `Files\\Bin` and `Files\\Bin\\netstandard` directories.\n\n  2. Add the `<AssemblyName>` property to the C# project of the project package or change the property value. The name of the project package must not match the name of the assembly package.\n\nProperty template <AssemblyName>\n         \n         <AssemblyName>PackageProjectAssemblyName</AssemblyName>  \n           \n         \n\n`PackageProjectAssemblyName` is the name of the project package assembly.\n\n  3. Compile the C# project of the project package.\n\n  4. Create a `bootstrapAssemblies.json` file in the `Files` directory. Use the file structure below.\n\nbootstrapAssemblies.json file structure template\n         \n         {  \n             \"assemblies\": [  \n                 \"PackageProjectAssemblyName.dll\"  \n             ]  \n         }  \n           \n         \n\n`PackageProjectAssemblyName` is the name of the project package assembly.\n\n  5. Open the menu of the project package to convert to an assembly package → **Properties** → select the **Compile into a separate assembly** checkbox.\n\nClick **Apply**.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/PackageAssembly/8.0/convert_simple_package.gif)\n\n  6. Compile the assembly package. This step depends on the status of [development mode in the file system](https://academy.creatio.com/documents?ver=8.1&id=15111&anchor=title-1193-1).\n\nWith **development mode enabled in the file system**.\n\n     1. Export the assembly package to the file system. To do this, click **Download packages to the file system** in the **File system development mode** group of the **Actions** drop-down list on the **Configuration** section toolbar.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/ConvertPackages/8.0/scr_Download_packages_to_file_system.png)\n\n     2. Exempt the project package from compilation in the `PackageName.csproj` file of the assembly package.\n\nTemplate for adding the exemption\n            \n            <Compile Remove=\"$(RelativeCurrentPkgFolderPath)Files/PackageProjectFolder/**\" />  \n            \n\n`PackageProjectFolder` is the directory name of the project package.\n\n     3. Compile the assembly package. To do this, click **Compile** in the assembly package menu.\n\n![](https://academy.creatio.com/sites/default/files/documentation/sdk/ru/BPMonlineWebSDK/Screenshots/ConvertPackages/8.0/scr_Compile.png)\n\nWith **development mode disabled in the file system**.\n\n     1. Compile the assembly package. To do this, click **Compile** in the assembly package menu.\n\nCompilation fails.\n\n     2. Exempt the project package from compilation in the `PackageName.csproj` file of the assembly package.\n\nTemplate for adding the exemption\n            \n            <Compile Remove=\"$(RelativeCurrentPkgFolderPath)Files/PackageProjectFolder/**\" />  \n            \n\n`PackageProjectFolder` is the directory name of the project package.\n\n     3. Recompile the assembly package. To do this, click **Compile** in the assembly package menu.\n\n  7. Make sure the converted package meets the requirements listed in a separate article: [Assembly package](https://academy.creatio.com/documents?ver=8.1&id=15125&anchor=title-3554-2).\n\n\n\n\nAs a result, Creatio will convert the project package to an assembly package.\n\n## Convert an assembly package to a project package​\n\nCreatio lets you convert an assembly package to a project package.\n\nnote\n\nCreatio lets you convert an assembly package previously converted from a project package. A previously unconverted assembly package cannot be converted.\n\nTo **convert an assembly package to a project package** :\n\n  1. Open the menu of the assembly package to convert to a project package, select **Properties** and clear the **Compile into a separate assembly** checkbox.\n\nClick **Apply**.\n\n  2. Compile the project package.\n\n  3. Compile the configuration. Learn more about compilation in a separate article: [Operations in Creatio IDE](https://academy.creatio.com/documents?ver=8.1&id=15101&anchor=title-2093-8).\n\n\n\n\nAs a result, Creatio will convert the assembly package to a project package.\n\n* * *\n\n## See also​\n\n[Creatio IDE](https://academy.creatio.com/documents?ver=8.1&id=15101)\n\n[External IDEs](https://academy.creatio.com/documents?ver=8.1&id=15111)\n\n[Operations in Creatio IDE](https://academy.creatio.com/documents?ver=8.1&id=15101)\n\n[Assembly package](https://academy.creatio.com/documents?ver=8.1&id=15125)\n\n  * Convert a simple package to an assembly package\n  * Convert an assembly package to simple package\n  * Convert a project package to an assembly package\n  * Convert an assembly package to a project package\n  * See also\n\n\n",
  "analysis": {
    "word_count": 919,
    "key_concepts": ["configuration", "section", "database", "operation", "package", "notification"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "beginner",
    "ai_tags": ["beginner", "creatio", "package", "operation", "documentation", "section", "configuration", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:17:30.629830"
}
