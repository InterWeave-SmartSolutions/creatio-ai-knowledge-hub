{
  "id": 954,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.1/development-tools/logging/logging-of-http-requests-net-core",
  "title": "Set up logging of incoming HTTP requests for .NET 6 | Creatio Academy",
  "category": "development",
  "description": "You can set up logging of incoming HTTP requests in Creatio .NET 6.",
  "content": "This is documentation for Creatio 8.1 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.1 On this page Level: beginner Important You can set up logging of incoming HTTP requests in Creatio .NET 6 . Creatio lets you use the following logging types of incoming HTTP requests: standard logging extended logging Standard logging of incoming HTTP requests ​ Standard logging lets you log incoming HTTP requests. The Request.log file in the Logs directory of the Creatio root directory stores standard logs. To set up standard logging : Open the appsettings.json configuration file in the Creatio root directory. Move to the Standard block. Standard logging is enabled by default (the Enabled flag is set to true ). Add HTTP response codes into the StatusCodes flag. Creatio will log the requests that receive the specified response codes. If you turn on the Enabled flag and leave the StatusCodes flag empty, Creatio logs all incoming HTTP requests. Example that configures standard logging (appsettings.json file) \"RequestLogging\" : { \"Standard\" : { \"Enabled\" : true , \"StatusCodes\" : [ 200 , 300 , 302 ] } , ... } You can analyze the logs using the Log Parser Studio utility because the log format is similar to the IIS log format. Extended logging for incoming HTTP requests ​ Extended logging lets you retrieve detailed information about logs for incoming HTTP requests. The ExtendedRequest.log file in the Logs directory of the Creatio root directory stores extended logs. Creatio saves data about the response body of an incoming HTTP request automatically when extended logging is turned on. To set up extended logging : Open the appsettings.json configuration file in the Creatio root directory. Move to the Extended block. Extended logging is turned off by default (the Enabled flag is set to false ). Set the Enabled flag to true to turn on logging. If you want to retrieve information about the HTTP request body in the log, set the LogRequestBody flag to true ( false by default). Set the size of the displayed request/response body (the first N bytes) in the MaxBodySizeBytes flag. Important Extended logging affects performance if Creatio receives a large number of requests or you set a large value of the MaxBodySizeBytes flag. Add HTTP response codes into the StatusCodes flag. Creatio will log the requests that receive the specified response codes. If you turn on the Enabled flag and leave the StatusCodes flag empty, Creatio logs all incoming HTTP requests. Example that configures extended logging (appsettings.json file) \"RequestLogging\" : { ... , \"Extended\" : { \"Enabled\" : true , \"LogRequestBody\" : false , \"MaxBodySizeBytes\" : 500 , \"StatusCodes\" : [ 400 , 401 , 403 ] } } You can use standard and extended logging simultaneously with different values of the StatusCodes flag. If the StatusCodes flag values for standard and extended logging match, Creatio duplicates the logs for incoming HTTP requests in the Request.log and ExtendedRequest.log files with different details. Standard logging of incoming HTTP requests Extended logging for incoming HTTP requests",
  "markdown": "This is documentation for Creatio **8.1**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/development-tools/logging/logging-of-http-requests-net-core)** (8.3).\n\nVersion: 8.1\n\nOn this page\n\nLevel: beginner\n\nImportant\n\nYou can set up logging of incoming HTTP requests in Creatio **.NET 6**.\n\nCreatio lets you use the following logging **types** of incoming HTTP requests:\n\n  * standard logging\n  * extended logging\n\n\n\n## Standard logging of incoming HTTP requests​\n\nStandard logging lets you log incoming HTTP requests. The `Request.log` file in the `Logs` directory of the Creatio root directory stores standard logs.\n\nTo **set up standard logging** :\n\n  1. Open the `appsettings.json` configuration file in the Creatio root directory.\n  2. Move to the `Standard` block. Standard logging is enabled by default (the `Enabled` flag is set to `true`).\n  3. Add HTTP response codes into the `StatusCodes` flag. Creatio will log the requests that receive the specified response codes. If you turn on the `Enabled` flag and leave the `StatusCodes` flag empty, Creatio logs all incoming HTTP requests.\n\n\n\nExample that configures standard logging (appsettings.json file)\n    \n    \n    \"RequestLogging\": {  \n        \"Standard\": {  \n            \"Enabled\": true,  \n            \"StatusCodes\": [ 200, 300, 302 ]  \n        },  \n        ...  \n    }  \n      \n    \n\nYou can analyze the logs using the Log Parser Studio utility because the log format is similar to the IIS log format.\n\n## Extended logging for incoming HTTP requests​\n\nExtended logging lets you retrieve detailed information about logs for incoming HTTP requests. The `ExtendedRequest.log` file in the `Logs` directory of the Creatio root directory stores extended logs. Creatio saves data about the response body of an incoming HTTP request automatically when extended logging is turned on.\n\nTo **set up extended logging** :\n\n  1. Open the `appsettings.json` configuration file in the Creatio root directory.\n\n  2. Move to the `Extended` block. Extended logging is turned off by default (the `Enabled` flag is set to `false`).\n\n  3. Set the `Enabled` flag to `true` to turn on logging.\n\n  4. If you want to retrieve information about the HTTP request body in the log, set the `LogRequestBody` flag to `true` (`false` by default).\n\n  5. Set the size of the displayed request/response body (the first N bytes) in the `MaxBodySizeBytes` flag.\n\nImportant\n\nExtended logging affects performance if Creatio receives a large number of requests or you set a large value of the `MaxBodySizeBytes` flag.\n\n  6. Add HTTP response codes into the `StatusCodes` flag. Creatio will log the requests that receive the specified response codes. If you turn on the `Enabled` flag and leave the `StatusCodes` flag empty, Creatio logs all incoming HTTP requests.\n\n\n\n\nExample that configures extended logging (appsettings.json file)\n    \n    \n    \"RequestLogging\": {  \n        ...,  \n        \"Extended\": {  \n            \"Enabled\": true,  \n            \"LogRequestBody\": false,  \n            \"MaxBodySizeBytes\": 500,  \n            \"StatusCodes\": [ 400, 401, 403 ]  \n        }  \n    }  \n    \n\nYou can use standard and extended logging simultaneously with different values of the `StatusCodes` flag. If the `StatusCodes` flag values for standard and extended logging match, Creatio duplicates the logs for incoming HTTP requests in the `Request.log` and `ExtendedRequest.log` files with different details.\n\n  * Standard logging of incoming HTTP requests\n  * Extended logging for incoming HTTP requests\n\n\n",
  "analysis": {
    "word_count": 504,
    "key_concepts": ["configuration", "detail"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "beginner",
    "ai_tags": ["beginner", "creatio", "documentation", "detail", "configuration"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:33:42.947888"
}
