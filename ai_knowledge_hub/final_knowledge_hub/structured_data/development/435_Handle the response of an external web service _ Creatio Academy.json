{
  "id": 435,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.0/platform-customization/freedom-ui/web-service",
  "title": "Handle the response of an external web service | Creatio Academy",
  "category": "development",
  "description": "@creatio-devkit/common includes the sdk.HttpClientService service that sends HTTP requests.",
  "content": "This is documentation for Creatio 8.0 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.0 On this page Level: beginner @creatio-devkit/common includes the sdk.HttpClientService service that sends HTTP requests. To handle the response of an external web service: Add the dependencies . Instructions: Display the value of a system variable (similarly to step 2). Instead of the sdk.SysValuesService service, use the sdk.HttpClientService service that sends HTTP requests. Add an attribute . Instructions: Set up the field display condition (step 2). Bind an attribute to the label . Instructions: Set up the field display condition (similarly to step 3). Instead of the visible property, use the caption property that handles the text displayed in the element. Implement the base request handler . Go to the handlers schema section. Add a custom implementation of the crt.HandlerViewModelInitRequest base request handler. Create an instance of the HTTP client from @creatio-devkit/common . Specify the URL to retrieve required data. If a web service request is sent using a non-absolute path (without https:// or http:// prefixes), this is a request to an internal Creatio web service. In this case, Creatio automatically adds the address of the current app to the link. Send a GET request. Retrieve required data from the response and specify data in the corresponding attribute. View an example of a crt.HandleViewModelInitRequest request handler that sends a request to the https://SomeUrl web service, receives the someValue parameter from the response body, and specifies the parameter in the SomeAttribute attribute, below. handlers schema section handlers : /**SCHEMA_HANDLERS*/ [ { request : \"crt.HandleViewModelInitRequest\" , /* Custom implementation of a system request handler. */ handler : async ( request , next ) => { /* Create an instance of the HTTP client from \"@creatio-devkit/common.\" */ const httpClientService = new sdk . HttpClientService ( ) ; /* Specify the URL to retrieve required data. */ const endpoint = \"https://SomeUrl\" ; /* Send a GET request. The HTTP client converts the response body from JSON to a JS object automatically. */ const response = await httpClientService . get ( endpoint ) ; /* Retrieve the \"someValue\" parameter from the response body and specify it in the \"SomeAttribute\" attribute. */ request . $context . SomeAttribute = response . body . someValue ; /* Call the next handler if it exists and return its result. */ return next ?. handle ( request ) ; } } ] /**SCHEMA_HANDLERS*/ , See also ​ Freedom UI page customization basics Customize fields (Freedom UI) See also",
  "markdown": "This is documentation for Creatio **8.0**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/getting-started/development-recommendations)** (8.3).\n\nVersion: 8.0\n\nOn this page\n\nLevel: beginner\n\n`@creatio-devkit/common` includes the `sdk.HttpClientService` service that sends HTTP requests.\n\nTo handle the response of an external web service:\n\n  1. **Add the dependencies**. Instructions: [Display the value of a system variable](https://academy.creatio.com/documents?ver=8.0&id=15380&anchor=amd-dependencies) (similarly to step 2). Instead of the `sdk.SysValuesService` service, use the `sdk.HttpClientService` service that sends HTTP requests.\n\n  2. **Add an attribute**. Instructions: [Set up the field display condition](https://academy.creatio.com/documents?ver=8.0&id=15379&anchor=viewModelConfig) (step 2).\n\n  3. **Bind an attribute to the label**. Instructions: [Set up the field display condition](https://academy.creatio.com/documents?ver=8.0&id=15379&anchor=viewConfigDiff) (similarly to step 3). Instead of the `visible` property, use the `caption` property that handles the text displayed in the element.\n\n  4. **Implement the base request handler**.\n\n     1. Go to the `handlers` schema section.\n\n     2. Add a custom implementation of the `crt.HandlerViewModelInitRequest` base request handler.\n\n        1. Create an instance of the HTTP client from `@creatio-devkit/common`.\n        2. Specify the URL to retrieve required data. If a web service request is sent using a non-absolute path (without `https://` or `http://` prefixes), this is a request to an internal Creatio web service. In this case, Creatio automatically adds the address of the current app to the link.\n        3. Send a `GET` request.\n        4. Retrieve required data from the response and specify data in the corresponding attribute.\n\nView an example of a `crt.HandleViewModelInitRequest` request handler that sends a request to the `https://SomeUrl` web service, receives the `someValue` parameter from the response body, and specifies the parameter in the `SomeAttribute` attribute, below.\n\nhandlers schema section\n    \n    handlers: /**SCHEMA_HANDLERS*/[  \n        {  \n            request: \"crt.HandleViewModelInitRequest\",  \n            /* Custom implementation of a system request handler. */  \n            handler: async (request, next) => {  \n                /* Create an instance of the HTTP client from \"@creatio-devkit/common.\" */  \n                const httpClientService = new sdk.HttpClientService();  \n                /* Specify the URL to retrieve required data. */  \n                const endpoint = \"https://SomeUrl\";  \n                /* Send a GET request. The HTTP client converts the response body from JSON to a JS object automatically. */  \n                const response = await httpClientService.get(endpoint);  \n                /* Retrieve the \"someValue\" parameter from the response body and specify it in the \"SomeAttribute\" attribute. */  \n                request.$context.SomeAttribute = response.body.someValue;  \n                /* Call the next handler if it exists and return its result. */  \n                return next?.handle(request);  \n            }  \n        }  \n    ]/**SCHEMA_HANDLERS*/,  \n    \n\n\n\n\n* * *\n\n## See also​\n\n[Freedom UI page customization basics](https://academy.creatio.com/documents?ver=8.0&id=15370)\n\n[Customize fields (Freedom UI)](https://academy.creatio.com/documents?ver=8.0&id=15379)\n\n  * See also\n\n\n",
  "analysis": {
    "word_count": 416,
    "key_concepts": ["freedom ui", "section", "web service", "case", "customization"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": ["customization", "layout", "ui design", "page schema"],
    "difficulty": "beginner",
    "ai_tags": ["beginner", "case", "creatio", "freedom ui", "documentation", "section", "customization", "web service"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:23:12.131936"
}
