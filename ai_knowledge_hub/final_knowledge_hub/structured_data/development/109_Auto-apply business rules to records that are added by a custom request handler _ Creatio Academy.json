{
  "id": 109,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.2/platform-customization/freedom-ui/business-rules-of-collection-records",
  "title": "Auto-apply business rules to records that are added by a custom request handler | Creatio Academy",
  "category": "development",
  "description": "Creatio lets you execute business rules whenever custom request handler adds a record to a collection. For example, use the functionality if you need to populate a collection of records, apply business rules for each record and output the result in a section list.",
  "content": "This is documentation for Creatio 8.2 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.2 On this page Level: beginner Creatio lets you execute business rules whenever custom request handler adds a record to a collection. For example, use the functionality if you need to populate a collection of records, apply business rules for each record and output the result in a section list. To auto-apply business rules to collection records that a custom request handler adds: Go to the handlers schema section . Implement a custom request handler if needed. Add a createItem() method that creates a new record, for example, when you click the Add button. Set the businessRulesActive property to true . The property auto-applies business rules to a new collection record. View the example that implements a custom usr.AddRecordRequest request handler of the Freedom UI page schema below. The handler is bound to the clicked button event and adds the \"John Smith\" record to the section list. If the businessRulesActive property is set to true , Creatio automatically applies business rules to a new collection record. Otherwise, Creatio does not apply business rules to a new collection record until the record is selected in the section list. Auto-applying of business rules is disabled out of the box Auto-applying of business rules is enabled handlers : /**SCHEMA_HANDLERS*/ [ { /* The custom implementation of the custom request handler. */ request : \"usr.AddRecordRequest\" , handler : async ( request , next ) => { /* The section list collection that the Freedom UI section page displays. */ const collection = await request . $context . Items ; /* Add a new record of the section list collection. */ await collection . createItem ( { /* Set the \"Name\" field to \"John Smith.\" */ initialModelValues : { Name : 'John Smith' } } ) ; return next ?. handle ( request ) ; } } ] /**SCHEMA_HANDLERS*/ , handlers : /**SCHEMA_HANDLERS*/ [ { /* The custom implementation of the custom request handler. */ request : \"usr.AddRecordRequest\" , handler : async ( request , next ) => { /* The section list collection that the Freedom UI section page displays. */ const collection = await request . $context . Items ; /* Add a new record of the section list collection. */ await collection . createItem ( { /* Set the \"Name\" field to \"John Smith.\" */ initialModelValues : { Name : 'John Smith' } , /* Auto-apply business rules to collection records that a custom request handler adds. */ businessRulesActive : true } ) ; return next ?. handle ( request ) ; } } ] /**SCHEMA_HANDLERS*/ , See also ​ Set up List components (user documentation) See also",
  "markdown": "This is documentation for Creatio **8.2**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/platform-customization/freedom-ui/business-rules-of-collection-records)** (8.3).\n\nVersion: 8.2\n\nOn this page\n\nLevel: beginner\n\nCreatio lets you execute business rules whenever custom request handler adds a record to a collection. For example, use the functionality if you need to populate a collection of records, apply business rules for each record and output the result in a section list.\n\nTo auto-apply business rules to collection records that a custom request handler adds:\n\n  1. **Go to the** `handlers` **schema section**.\n  2. **Implement a custom request handler** if needed.\n  3. **Add a** `createItem()` **method** that creates a new record, for example, when you click the **Add** button.\n  4. **Set the** `businessRulesActive` **property to** `true`. The property auto-applies business rules to a new collection record.\n\n\n\nView the example that implements a custom `usr.AddRecordRequest` request handler of the Freedom UI page schema below. The handler is bound to the `clicked` button event and adds the \"John Smith\" record to the section list. If the `businessRulesActive` property is set to `true`, Creatio automatically applies business rules to a new collection record. Otherwise, Creatio does not apply business rules to a new collection record until the record is selected in the section list.\n\n  * Auto-applying of business rules is disabled out of the box\n  * Auto-applying of business rules is enabled\n\n\n    \n    \n    handlers: /**SCHEMA_HANDLERS*/[{  \n        /* The custom implementation of the custom request handler. */  \n        request: \"usr.AddRecordRequest\",  \n        handler: async (request, next) => {  \n            /* The section list collection that the Freedom UI section page displays. */  \n            const collection = await request.$context.Items;  \n            /* Add a new record of the section list collection. */  \n            await collection.createItem({  \n                /* Set the \"Name\" field to \"John Smith.\" */  \n                initialModelValues: { Name: 'John Smith'}  \n            });  \n            return next?.handle(request);  \n        }  \n    }]/**SCHEMA_HANDLERS*/,  \n    \n    \n    \n    handlers: /**SCHEMA_HANDLERS*/[{  \n        /* The custom implementation of the custom request handler. */  \n        request: \"usr.AddRecordRequest\",  \n        handler: async (request, next) => {  \n            /* The section list collection that the Freedom UI section page displays. */  \n            const collection = await request.$context.Items;  \n            /* Add a new record of the section list collection. */  \n            await collection.createItem({  \n                /* Set the \"Name\" field to \"John Smith.\" */  \n                initialModelValues: { Name: 'John Smith'},  \n                /* Auto-apply business rules to collection records that a custom request handler adds. */  \n                businessRulesActive: true  \n            });  \n            return next?.handle(request);  \n        }  \n    }]/**SCHEMA_HANDLERS*/,  \n    \n\n* * *\n\n## See also​\n\n[Set up List components](https://academy.creatio.com/documents?ver=8.2&id=2457) (user documentation)\n\n  * See also\n\n\n",
  "analysis": {
    "word_count": 454,
    "key_concepts": ["page schema", "freedom ui", "section"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": ["customization", "layout", "ui design", "page schema"],
    "difficulty": "intermediate",
    "ai_tags": ["creatio", "intermediate", "freedom ui", "documentation", "section", "page schema"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:16:28.928248"
}
