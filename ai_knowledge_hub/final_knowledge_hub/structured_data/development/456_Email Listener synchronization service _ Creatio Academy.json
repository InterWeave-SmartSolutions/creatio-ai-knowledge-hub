{
  "id": 456,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.2/architecture/microservices/email-listener",
  "title": "Email Listener synchronization service | Creatio Academy",
  "category": "development",
  "description": "The purpose of the Email Listener synchronization service is to synchronize Creatio with MS Exchange and IMAP/SMTP mail services using a subscription mechanism. This is the only method of working with mail services. Working with mail services without the microservice is not supported.",
  "content": "This is documentation for Creatio 8.2 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.2 On this page Level: beginner The purpose of the Email Listener synchronization service is to synchronize Creatio with MS Exchange and IMAP/SMTP mail services using a subscription mechanism. This is the only method of working with mail services. Working with mail services without the microservice is not supported. Workflow ​ The components of the Email Listener synchronization service are as follows: Email Listener primary module. NoSQL Redis DBMS. Email Listener secondary module. RabbitMQ. The workflow of the Email Listener synchronization service is available in the figure below. Email Listener module ​ The purpose of the Email Listener module is to use the mailbox credentials and create a subscription to \"new message\" events. The open subscription remains in the component memory to ensure fast response time when new emails arrive. When a corresponding event is received, the email instance loads. NoSQL Redis DBMS ​ The purpose of Redis NoSQL DBMS is to enable creating a scalable and fault-tolerant system of processing nodes. The Redis repository holds information about the served mailboxes. This enables any container to process Creatio queries for adding a new subscription or check the status of a specific subscription regardless of the subscription node. Requirements to Redis: Authorized access of the Email Listener service to Redis. A separate database available for the Email Listener service operation. Email Listener module ​ The purpose of the Email Listener module is maintain scalability and fault-tolerance of the Email Listener primary module. The secondary module downloads emails from the mail server and delivers them in the Creatio application. This smooths out processing peak mail flows for high-load services due to the API components not participating in downloading. They are less busy and thus available for subscription and sending emails instead. The original service component. Replaced with the primary module when unavailable. RabbitMQ ​ The purpose of RabbitMQ is to maintain scalability and fault-tolerance of the service. The message broker distributes tasks between the components in high-load environments. The original service component. Scalability ​ By default, separate nodes of the StatefulSet type process requests based on 1 handler instance per 50 active mailboxes. The number of replicas depends on the replicaCount parameter. You can increase the number of processors by specifying the needed value. You can configure automatic scaling depending on the number of active subscriptions. Compatibility with Creatio products ​ The Email Listener synchronization service version 1.0 (MS Exchange support) is compatible with all Creatio products of version 7.15.2 and later. The Email Listener synchronization service version 2.0 (IMAP/SMTP support) is compatible with all Creatio products of version 7.16 and later. Installation options ​ We recommend using the Kubernetes orchestrator and Helm package manager to deploy the service and ensure the operation of the application in the production environment . Learn more about deploying the synchronization service via Kubernetes: Deploy the synchronization service via Kubernetes (user documentation). You can also use Docker to speed up the deployment in the development environment. Learn more about deploying the synchronization service via Docker: Deploy the synchronization service via Kubernetes (user documentation). An in-memory repository is sufficient to deploy the service. See also ​ Email Listener synchronization service (user documentation) E-learning courses ​ Tech Hour - Docker for Creatio Workflow Email Listener module NoSQL Redis DBMS Email Listener module RabbitMQ Scalability Compatibility with Creatio products Installation options See also E-learning courses",
  "markdown": "This is documentation for Creatio **8.2**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/architecture/microservices/email-listener)** (8.3).\n\nVersion: 8.2\n\nOn this page\n\nLevel: beginner\n\nThe **purpose** of the Email Listener synchronization service is to synchronize Creatio with MS Exchange and IMAP/SMTP mail services using a subscription mechanism. This is the only method of working with mail services. Working with mail services without the microservice is not supported.\n\n## Workflow​\n\nThe **components** of the Email Listener synchronization service are as follows:\n\n  * Email Listener primary module.\n  * NoSQL Redis DBMS.\n  * Email Listener secondary module.\n  * RabbitMQ.\n\n\n\nThe workflow of the Email Listener synchronization service is available in the figure below.\n\n![](https://academy.creatio.com/sites/default/files/pictures/SchemyBezOU_EN/8.0/BezOU+EL.png)\n\n### Email Listener module​\n\nThe **purpose** of the Email Listener module is to use the mailbox credentials and create a subscription to \"new message\" events. The open subscription remains in the component memory to ensure fast response time when new emails arrive. When a corresponding event is received, the email instance loads.\n\n### NoSQL Redis DBMS​\n\nThe **purpose** of Redis NoSQL DBMS is to enable creating a scalable and fault-tolerant system of processing nodes. The Redis repository holds information about the served mailboxes. This enables any container to process Creatio queries for adding a new subscription or check the status of a specific subscription regardless of the subscription node.\n\n**Requirements** to Redis:\n\n  * Authorized access of the Email Listener service to Redis.\n  * A separate database available for the Email Listener service operation.\n\n\n\n### Email Listener module​\n\nThe **purpose** of the Email Listener module is maintain scalability and fault-tolerance of the Email Listener primary module. The secondary module downloads emails from the mail server and delivers them in the Creatio application. This smooths out processing peak mail flows for high-load services due to the API components not participating in downloading. They are less busy and thus available for subscription and sending emails instead. The original service component. Replaced with the primary module when unavailable.\n\n### RabbitMQ​\n\nThe **purpose** of RabbitMQ is to maintain scalability and fault-tolerance of the service. The message broker distributes tasks between the components in high-load environments. The original service component.\n\n## Scalability​\n\nBy default, separate nodes of the `StatefulSet` type process requests based on 1 handler instance per 50 active mailboxes. The number of replicas depends on the `replicaCount` parameter. You can increase the number of processors by specifying the needed value. You can configure automatic scaling depending on the number of active subscriptions.\n\n## Compatibility with Creatio products​\n\nThe Email Listener synchronization service version 1.0 (MS Exchange support) is compatible with all Creatio products of version 7.15.2 and later.\n\nThe Email Listener synchronization service version 2.0 (IMAP/SMTP support) is compatible with all Creatio products of version 7.16 and later.\n\n## Installation options​\n\nWe recommend using the Kubernetes orchestrator and Helm package manager to deploy the service and ensure the operation of the application in the **production environment**. Learn more about deploying the synchronization service via Kubernetes: [Deploy the synchronization service via Kubernetes](https://academy.creatio.com/documents?ver=8.2&id=2093&anchor=title-2111-2) (user documentation).\n\nYou can also use Docker to speed up the deployment in the development environment. Learn more about deploying the synchronization service via Docker: [Deploy the synchronization service via Kubernetes](https://academy.creatio.com/documents?ver=8.2&id=2094&anchor=title-2111-4) (user documentation).\n\nAn in-memory repository is sufficient to deploy the service.\n\n* * *\n\n## See also​\n\n[Email Listener synchronization service](https://academy.creatio.com/documents?ver=8.2&id=2074) (user documentation)\n\n* * *\n\n## E-learning courses​\n\n[Tech Hour - Docker for Creatio](https://www.youtube.com/watch?v=cwTI8pIa_5g)\n\n  * Workflow\n    * Email Listener module\n    * NoSQL Redis DBMS\n    * Email Listener module\n    * RabbitMQ\n  * Scalability\n  * Compatibility with Creatio products\n  * Installation options\n  * See also\n  * E-learning courses\n\n\n",
  "analysis": {
    "word_count": 574,
    "key_concepts": ["workflow", "sql", "database", "operation", "package", "synchronization"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "advanced",
    "ai_tags": ["workflow", "creatio", "package", "operation", "sql", "documentation", "advanced", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:23:39.791903"
}
