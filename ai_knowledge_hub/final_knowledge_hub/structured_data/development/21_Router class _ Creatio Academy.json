{
  "id": 21,
  "url": "https://academy.creatio.com/docs/8.x/mobile/mobile-development/mobile-basics/architecture-mobile/references/router",
  "title": "Router class | Creatio Academy",
  "category": "development",
  "description": "Routing is used for managing visual components",
  "content": "On this page Level: advanced Routing is used for managing visual components: pages, pickers, etc. The route has 3 states: Load – opens a current route. Unload – closes current route on return. Reload – restores the previous route on return. The Terrasoft.Router class is used for routing and it’s main methods are add() , route() , back() . Methods ​ add ( name , config ) Adds a route. Parameters name unique name of the route. In case of re-adding, the latest route will override the previous one config describes names of the functions that handle route states. Handlers of the route states are set in the handlers property Example of method use Terrasoft . Router . add ( \"record\" , { handlers : { load : \"loadPage\" , reload : \"reloadPage\" , unload : \"unloadLastPage\" } } ) ; route ( name , scope , args , config ) Starts the route. Parameters name name of the route scope context of the function of the state handlers args parameters of the functions of the state handlers config additional route parameters Example of method use var mainPageController = Terrasoft . util . getMainController ( ) ; Terrasoft . Router . route ( \"record\" , mainPageController , [ { pageSchemaName : \"MobileActivityGridPage\" } ] ) ; back ( ) Closes current route and restores previous. Methods",
  "markdown": "On this page\n\nLevel: advanced\n\nRouting is used for managing visual components: pages, pickers, etc. The route has 3 states:\n\n  1. `Load` – opens a current route.\n  2. `Unload` – closes current route on return.\n  3. `Reload` – restores the previous route on return.\n\n\n\nThe `Terrasoft.Router` class is used for routing and it’s main methods are `add()`, `route()`, `back()`.\n\n## Methods​\n    \n    \n    add(name, config)  \n    \n\nAdds a route.\n\nParameters\n\nname| unique name of the route. In case of re-adding, the latest route will override the previous one| config| describes names of the functions that handle route states. Handlers of the route states are set in the `handlers` property  \n---|---  \n  \nExample of method use\n    \n    \n    Terrasoft.Router.add(\"record\", {  \n      handlers: {  \n         load: \"loadPage\",  \n         reload: \"reloadPage\",  \n         unload: \"unloadLastPage\"  \n      }  \n    });  \n    \n    \n    \n    route(name, scope, args, config)  \n    \n\nStarts the route.\n\nParameters\n\nname| name of the route| scope| context of the function of the state handlers| args| parameters of the functions of the state handlers| config| additional route parameters  \n---|---  \n  \nExample of method use\n    \n    \n    var mainPageController = Terrasoft.util.getMainController();  \n    Terrasoft.Router.route(\"record\", mainPageController, [{pageSchemaName: \"MobileActivityGridPage\"}]);  \n    \n    \n    \n    back()  \n    \n\nCloses current route and restores previous.\n\n  * Methods\n\n\n",
  "analysis": {
    "word_count": 226,
    "key_concepts": ["case"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": [],
    "difficulty": "advanced",
    "ai_tags": ["case", "creatio", "advanced", "documentation"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:14:43.297019"
}
