{
  "id": 328,
  "url": "https://academy.creatio.com/docs/8.x/dev/development-on-creatio-platform/8.0/integrations-and-api/data-services/odata/references/entitydataservice-svc-odata-3",
  "title": "EntityDataService.svc web service (OData 3) | Creatio Academy",
  "category": "development",
  "description": "The $count and $value OData 3 parameters will be retired in Creatio version 8.0.10.",
  "content": "This is documentation for Creatio 8.0 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.0 On this page Level: advanced Important The $count and $value OData 3 parameters will be retired in Creatio version 8.0.10. Depending on the request type, OData 3 protocol can return different data. Learn more about the request and response structure below. Request structure Response structure // Request string. method Creatio_application_address / 0 / ServiceModel / EntityDataService . svc / objects_collectionCollection ( guid 'object_id' ) / object_field ? $parameters // Request headers. Accept : application / atom + xml ; type = entry Content - Type : application / json ; odata = verbose ForceUseSession : true BPMCSRF : authentication_cookie_value // Request body (for POST and PATCH requests). { \"field1\" : \"value1\" , \"field2\" : \"value2\" , ... } // The status code. Status : code // Response body (available in GET and POST requests). < ? xml version = \"1.0\" encoding = \"utf-8\" ? > < feed xml : base = \"https://mycreatio.com/0/ServiceModel/EntityDataService.svc/\" xmlns = \"https://www.w3.org/2005/Atom\" xmlns : d = \"https://schemas.microsoft.com/ado/2007/08/dataservices\" xmlns : m = \"https://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" > < id > https : / / mycreatio . com / 0 / ServiceModel / EntityDataService . svc / data_resource < / id > < title type = \"text\" > data_resource < / title > < updated > date and time of request < / updated > < link rel = \"self\" title = \"data_resource\" href = \"data_resource\" / > < entry > metadata_data < content type = \"application/xml\" > < m : properties > < d : object1 field1 > object1 field_value1 < / d : object1 field1 > < d : object1 field2 > object1 field_value2 < / d : object1 field2 > ... < / m : properties > < / content > < / entry > < entry > metadata_data < content type = \"application/xml\" > < m : properties > < d : object2 field1 > object2 field_value1 < / d : object2 field1 > < d : object2 field2 > object2 field_value2 < / d : object2 field2 > ... < / m : properties > < / content > < / entry > ... < / feed > Request string ​ method required Creatio supports the following request methods: GET – retrieve data POST – add data PATCH – modify data DELETE – delete data Creatio_application_address required Creatio application URL. ServiceModel required OData 3 protocol’s web service URL. Unmodifiable part of the request. EntityDataService . svc required OData 3 protocol’s web service URL. Unmodifiable part of the request. objects_collectionCollection required Name of the database table (name of the object collection). When using the OData 3 protocol, add Collection to the first name of the object collection in the request string (e.g., ContactCollection ). Run a query to receive the list of database tables. MSSQL Oracle PostgreSQL SELECT * FROM INFORMATION_SCHEMA . TABLES SELECT * FROM ALL_TABLES SELECT table_name FROM information_schema . tables guid 'object_id' optional The identifier of the database table record string (identifier of the collection object instance). For example, guid'00000000-0000-0000-0000-000000000000' ). object_field optional The database table record field (field of the collection object instance). parameters optional Optional OData 3 parameters you can use in the GET Creatio request string. Use the ? operator to specify the parameters. Add the parameter name after the $ operator. Use the & operator to use two or more parameters. Available values $value The field value. $count $count=true The number of elements in the selection. $skip $skip=n The first n elements that must be excluded from the selection. $top $top=n The first n elements that must be included in the selection. $select $select=field1,field2,... The set of fields that must be included in the selection. $orderby $orderby=field asc or $orderby=field desc How to sort the field values in the selection. $expand $expand=field1,field2,... Extension of the connected fields. $filter $filter=field template 'field_value' How to filter the fields in the selection. Request headers ​ Accept application / atom + xml ; type = entry required Data type to expect in the server response. The server returns the response in XML. Optional for GET requests. Content - Type application / json ; odata = verbose required Ecoding and type of the resource passed in the request body. Optional for GET requests. ForceUseSession true required The ForceUseSession header forces the use of an existing session. You do not need to use AuthService.svc in your request to the authentication service. BPMCSRF authentication_cookie_value required Authentication cookie. Request body ​ field1 , field2 , ... required The names of the fields passed in the request body. value1 , value2 , ... required The values of the field1, field2, ... fields passed in the request body. HTTP status code ​ code Response status code. Status codes 200 OK GET , PUT , MERGE , or PATCH request was completed successfully. The response body should contain the value of the object or properly specified in the request URL. 201 Created POST request created an object or a link successfully. The response body should contain the updated object. 202 Accepted Processing of the data update request has started but has not finished yet. The response body should contain the Location header and the Retry-After header . The response body should be empty. The server should return the 303 response code with the Location header that contains the final URL that can be used to retrieve the result. The body and the header of the final URL should be formatted similar to the initial data update request. 204 No content Data update request. The value of the requested resource is 0. The response body should be empty. 3xx Redirection Data update request. The redirection means the client must take further actions to execute the request. The response should contain the Location header with the URL that can be used to retrieve the result. 4xx Client Error Incorrect requests. The server returns this code in response to client errors and requests to non-existent resources, such as entities, entity collections, or properties. If the response body is defined for the error code, the error body will be as defined for the corresponding format . 404 Not Found The object or collection specified in the URL does not exist. The response body should be empty. Response body ​ entry The instance of the collection object. metadata_data The properties of the collection object instance. object1 field1 , object1 field2 , ... , object2 field1 , object2 field2 , ... The names of the field1, field2, ... fields in the object1, object2, ... collection object instances. object1 field_value1 , object1 field_value2 , ... , object2 field_value1 , object2 field_value2 , ... The values of the field1, field2, ... fields in the object1, object2, ... collection object instances. Resources ​ Creatio API documentation OData 3 documentation (description of request headers) OData 3 documentation (description of request parameters) Request string Request headers Request body HTTP status code Response body Resources",
  "markdown": "This is documentation for Creatio **8.0**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/dev/development-on-creatio-platform/getting-started/development-recommendations)** (8.3).\n\nVersion: 8.0\n\nOn this page\n\nLevel: advanced\n\nImportant\n\nThe `$count` and `$value` OData 3 parameters will be retired in Creatio version 8.0.10.\n\nDepending on the request type, OData 3 protocol can return different data. Learn more about the request and response structure below.\n\n  * Request structure\n  * Response structure\n\n\n    \n    \n    // Request string.  \n    method Creatio_application_address/0/ServiceModel/EntityDataService.svc/objects_collectionCollection(guid'object_id')/object_field?$parameters  \n      \n    // Request headers.  \n    Accept: application/atom+xml; type=entry  \n    Content-Type: application/json; odata=verbose  \n    ForceUseSession: true  \n    BPMCSRF: authentication_cookie_value  \n      \n    // Request body (for POST and PATCH requests).  \n    {  \n        \"field1\": \"value1\",  \n        \"field2\": \"value2\",  \n        ...  \n    }  \n    \n    \n    \n    // The status code.  \n    Status: code  \n      \n    // Response body (available in GET and POST requests).  \n    <?xml version=\"1.0\" encoding=\"utf-8\"?>  \n    <feed xml:base=\"https://mycreatio.com/0/ServiceModel/EntityDataService.svc/\" xmlns=\"https://www.w3.org/2005/Atom\" xmlns:d=\"https://schemas.microsoft.com/ado/2007/08/dataservices\" xmlns:m=\"https://schemas.microsoft.com/ado/2007/08/dataservices/metadata\">  \n        <id>https://mycreatio.com/0/ServiceModel/EntityDataService.svc/data_resource</id>  \n        <title type=\"text\">data_resource</title>  \n        <updated>date and time of request</updated>  \n        <link rel=\"self\" title=\"data_resource\" href=\"data_resource\" />  \n        <entry>  \n            metadata_data  \n            <content type=\"application/xml\">  \n                <m:properties>  \n                    <d:object1 field1>object1 field_value1</d:object1 field1>  \n                    <d:object1 field2>object1 field_value2</d:object1 field2>  \n                    ...  \n                </m:properties>  \n            </content>  \n        </entry>  \n        <entry>  \n            metadata_data  \n            <content type=\"application/xml\">  \n                <m:properties>  \n                    <d:object2 field1>object2 field_value1</d:object2 field1>  \n                    <d:object2 field2>object2 field_value2</d:object2 field2>  \n                    ...  \n                </m:properties>  \n            </content>  \n        </entry>  \n        ...  \n    </feed>  \n    \n\n## Request string​\n    \n    \n    method required  \n    \n\nCreatio supports the following request methods:\n\n  * `GET` – retrieve data\n  * `POST` – add data\n  * `PATCH` – modify data\n  * `DELETE` – delete data\n\n\n    \n    \n    Creatio_application_address required  \n    \n\nCreatio application URL.\n    \n    \n    ServiceModel required  \n    \n\nOData 3 protocol’s web service URL. Unmodifiable part of the request.\n    \n    \n    EntityDataService.svc required  \n    \n\nOData 3 protocol’s web service URL. Unmodifiable part of the request.\n    \n    \n    objects_collectionCollection required  \n    \n\nName of the database table (name of the object collection). When using the OData 3 protocol, add `Collection` to the first name of the object collection in the request string (e.g., `ContactCollection`). Run a query to receive the list of database tables.\n\n  * MSSQL\n  * Oracle\n  * PostgreSQL\n\n\n    \n    \n    SELECT * FROM INFORMATION_SCHEMA.TABLES  \n    \n    \n    \n    SELECT * FROM ALL_TABLES  \n    \n    \n    \n    SELECT table_name FROM information_schema.tables  \n    \n    \n    \n    guid'object_id' optional  \n    \n\nThe identifier of the database table record string (identifier of the collection object instance). For example, `guid'00000000-0000-0000-0000-000000000000'`).\n    \n    \n    object_field optional  \n    \n\nThe database table record field (field of the collection object instance).\n    \n    \n    parameters optional  \n    \n\nOptional OData 3 parameters you can use in the `GET` Creatio request string. Use the `?` operator to specify the parameters. Add the parameter name after the `$` operator. Use the `&` operator to use two or more parameters.\n\nAvailable values\n\n[$value](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#requestingapropertysrawvalueusingvalue)| | The field value.| [$count](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#requestingthecountofanentitycollection)| `$count=true`| The number of elements in the selection.| [$skip](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#theskipsystemqueryoption)| `$skip=n`| The first n elements that must be excluded from the selection.| [$top](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#thetopsystemqueryoption)| `$top=n`| The first n elements that must be included in the selection.| [$select](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#theselectsystemqueryoption)| `$select=field1,field2,...`| The set of fields that must be included in the selection.| [$orderby](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#theorderbysystemqueryoption)| `$orderby=field asc` or `$orderby=field desc`| How to sort the field values in the selection.| [$expand](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#theexpandsystemqueryoption)| `$expand=field1,field2,...`| Extension of the connected fields.| [$filter](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#thefiltersystemqueryoption)| `$filter=field template 'field_value'`| How to filter the fields in the selection.  \n---|---|---  \n  \n## Request headers​\n    \n    \n    Accept application/atom+xml; type=entry required  \n    \n\nData type to expect in the server response. The server returns the response in XML. Optional for `GET` requests.\n    \n    \n    Content-Type application/json; odata=verbose required  \n    \n\nEcoding and type of the resource passed in the request body. Optional for `GET` requests.\n    \n    \n    ForceUseSession true required  \n    \n\nThe `ForceUseSession` header forces the use of an existing session. You do not need to use `AuthService.svc` in your request to the authentication service.\n    \n    \n    BPMCSRF authentication_cookie_value required  \n    \n\nAuthentication cookie.\n\n## Request body​\n    \n    \n    field1, field2, ... required  \n    \n\nThe names of the fields passed in the request body.\n    \n    \n    value1, value2, ... required  \n    \n\nThe values of the `field1, field2, ...` fields passed in the request body.\n\n## HTTP status code​\n    \n    \n    code  \n    \n\nResponse status code.\n\nStatus codes\n\n200 OK| `GET`, `PUT`, `MERGE`, or `PATCH` request was completed successfully. The response body should contain the value of the object or properly specified in the request URL.| 201 Created| `POST` request created an object or a link successfully. The response body should contain the updated object.| 202 Accepted| Processing of the data update request has started but has not finished yet. The response body should contain the [`Location` header](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#thelocationheader) and the [`Retry-After` header](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#theretry-afterheader). The response body should be empty. The server should return the 303 response code with the [`Location` header](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#thelocationheader) that contains the final URL that can be used to retrieve the result. The body and the header of the final URL should be formatted similar to the initial data update request.| 204 No content| Data update request. The value of the requested resource is 0. The response body should be empty.| 3xx Redirection| Data update request. The redirection means the client must take further actions to execute the request. The response should contain the [`Location` header](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#thelocationheader) with the URL that can be used to retrieve the result.| 4xx Client Error| Incorrect requests. The server returns this code in response to client errors and requests to non-existent resources, such as entities, entity collections, or properties. If the response body is defined for the error code, the error body will be as defined for the corresponding [format](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#formats).| 404 Not Found| The object or collection specified in the URL does not exist. The response body should be empty.  \n---|---  \n  \n## Response body​\n    \n    \n    entry  \n    \n\nThe instance of the collection object.\n    \n    \n    metadata_data  \n    \n\nThe properties of the collection object instance.\n    \n    \n    object1 field1, object1 field2, ..., object2 field1, object2 field2, ...  \n    \n\nThe names of the `field1, field2, ...` fields in the `object1, object2, ...` collection object instances.\n    \n    \n    object1 field_value1, object1 field_value2, ..., object2 field_value1, object2 field_value2, ...  \n    \n\nThe values of the `field1, field2, ...` fields in the `object1, object2, ...` collection object instances.\n\n* * *\n\n## Resources​\n\n[Creatio API documentation](https://documenter.getpostman.com/view/10204500/SztHX5Qb?version=latest)\n\n[OData 3 documentation (description of request headers)](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#headerfields)\n\n[OData 3 documentation (description of request parameters)](https://www.odata.org/documentation/odata-version-3-0/odata-version-3-0-core-protocol/#requestingdata)\n\n  * Request string\n  * Request headers\n  * Request body\n  * HTTP status code\n  * Response body\n  * Resources\n\n\n",
  "analysis": {
    "word_count": 1160,
    "key_concepts": ["web service", "odata", "sql", "database", "contact"],
    "use_cases": [],
    "related_topics": [],
    "difficulty": "beginner",
    "ai_tags": ["beginner", "creatio", "contact", "sql", "documentation", "odata", "web service", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:20:56.579501"
}
