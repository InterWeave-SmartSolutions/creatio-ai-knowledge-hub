{
  "id": 745,
  "url": "https://academy.creatio.com/docs/8.x/setup-and-administration/8.1/on-site-deployment/general-creatio-deployment-procedure",
  "title": "General Creatio deployment procedure | Creatio Academy",
  "category": "administration",
  "description": "This guide covers all steps needed to deploy and set up Creatio on-site on Windows or Linux, as well as links to detailed descriptions of each step.",
  "content": "This is documentation for Creatio 8.1 . For up-to-date documentation, see the latest version ( 8.3 ). Version: 8.1 All Creatio products On this page This guide covers all steps needed to deploy and set up Creatio on-site on Windows or Linux, as well as links to detailed descriptions of each step. Deploy the Creatio application on Windows ​ The general procedure to deploy Creatio on-site is as follows: Deploy the Creatio caching server (Redis). Read more >>> Deploy the database. Note that this step is DBMS-dependent. Read more >>> Enable and install the required Windows components. Read more >>> Install the latest Windows updates. Create and set up the application website using IIS. Read more >>> Modify the ConnectionStrings.config file. Note that this step is DBMS-dependent. Read more >>> Modify the Web.config file. Read more >>> After installing Creatio, perform additional setup to ensure correct operation of all its components. Set up websockets. Read more >>> Switch Creatio from HTTP to HTTPS. Read more >>> Deploy and set up global search in Creatio. Read more >>> Set up the machine learning service. Read more >>> Set up integrations and Internet access for additional functions. For example, the data enrichment service, social media integration, or Google synchronization. Read more >>> Set up bulk emails (only for configurations with Marketing Creatio). Read more >>> Deploy the Creatio .NET 6 application on Linux ​ The general procedure to deploy Creatio on-site is as follows: Prepare the Creatio setup files. Read more >>> Deploy the database server. Read more >>> Deploy the Creatio caching server (Redis). Read more >>> Modify the ConnectionStrings.config file. Read more >>> Deploy the Creatio application server. Read more >>> If you are going to run Creatio directly on the local machine : Install .NET 6, a GDI+ compatible API for UNIX-like operating systems, and development libraries and header files for GNU C. Read more >>> Run the Creatio application server. Read more >>> If you are going to run Creatio in a Docker container : Make Redis accessible from the Docker container. Read more >>> Install Docker. Read more >>> Create a Dockerfile. Read more >>> Build and run the Docker image. Read more >>> note The procedure for running a PostgreSQL server in Docker is covered in the Docker documentation . See also ​ Database server Caching server Application server on Windows Additional setup Containerized components Requirements calculator Resources ​ Tech Hour - Installing Local instance of Creatio Deploy the Creatio application on Windows Deploy the Creatio .NET 6 application on Linux See also Resources",
  "markdown": "This is documentation for Creatio **8.1**.\n\nFor up-to-date documentation, see the **[latest version](/docs/8.x/setup-and-administration/on-site-deployment/general-creatio-deployment-procedure)** (8.3).\n\nVersion: 8.1All Creatio products\n\nOn this page\n\nThis guide covers all steps needed to deploy and set up Creatio on-site on Windows or Linux, as well as links to detailed descriptions of each step.\n\n## Deploy the Creatio application on Windows​\n\nThe general procedure to deploy Creatio on-site is as follows:\n\n  1. Deploy the Creatio caching server (Redis). [Read more >>>](https://academy.creatio.com/docs/8.x/setup-and-administration/category/caching-server)\n  2. Deploy the database. Note that this step is DBMS-dependent. [Read more >>>](https://academy.creatio.com/docs/8.x/setup-and-administration/category/database-server)\n  3. Enable and install the required Windows components. [Read more >>>](https://academy.creatio.com/documents?id=2081)\n  4. Install the latest Windows updates.\n  5. Create and set up the application website using IIS. [Read more >>>](https://academy.creatio.com/documents?id=2136)\n  6. Modify the ConnectionStrings.config file. Note that this step is DBMS-dependent. [Read more >>>](https://academy.creatio.com/docs/8.x/setup-and-administration/category/application-server-on-windows)\n  7. Modify the Web.config file. [Read more >>>](https://academy.creatio.com/documents?id=2141)\n\n\n\nAfter installing Creatio, perform **additional setup** to ensure correct operation of all its components.\n\n  * Set up websockets. [Read more >>>](https://academy.creatio.com/documents?id=1631)\n  * Switch Creatio from HTTP to HTTPS. [Read more >>>](https://academy.creatio.com/documents?id=1632)\n  * Deploy and set up global search in Creatio. [Read more >>>](https://academy.creatio.com/documents?id=1712)\n  * Set up the machine learning service. [Read more >>>](https://academy.creatio.com/documents?id=1935)\n  * Set up integrations and Internet access for additional functions. For example, the data enrichment service, social media integration, or Google synchronization. [Read more >>>](https://academy.creatio.com/docs/8.x/setup-and-administration/category/additional-setup)\n  * Set up bulk emails (only for configurations with Marketing Creatio). [Read more >>>](https://academy.creatio.com/documents?id=1777)\n\n\n\n## Deploy the Creatio .NET 6 application on Linux​\n\nThe general procedure to deploy Creatio on-site is as follows:\n\n  1. Prepare the Creatio setup files. [Read more >>>](https://academy.creatio.com/documents?id=2450)\n  2. Deploy the database server. [Read more >>>](https://academy.creatio.com/documents?id=2121)\n  3. Deploy the Creatio caching server (Redis). [Read more >>>](https://academy.creatio.com/documents?id=2108)\n  4. Modify the ConnectionStrings.config file. [Read more >>>](https://academy.creatio.com/documents?id=2450#title-263-2)\n  5. Deploy the Creatio application server. [Read more >>>](https://academy.creatio.com/documents?id=2451)\n\n\n\nIf you are going to run Creatio directly **on the local machine** :\n\n  1. Install .NET 6, a GDI+ compatible API for UNIX-like operating systems, and development libraries and header files for GNU C. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-2)\n  2. Run the Creatio application server. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-3)\n\n\n\nIf you are going to run Creatio **in a Docker container** :\n\n  1. Make Redis accessible from the Docker container. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-5)\n  2. Install Docker. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-6)\n  3. Create a Dockerfile. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-7)\n  4. Build and run the Docker image. [Read more >>>](https://academy.creatio.com/documents?id=2451#title-2649-8)\n\n\n\nnote\n\nThe procedure for running a PostgreSQL server in Docker is covered in the [Docker documentation](https://hub.docker.com/_/postgres).\n\n* * *\n\n## See also​\n\n[Database server](https://academy.creatio.com/docs/8.x/setup-and-administration/category/database-server)\n\n[Caching server](https://academy.creatio.com/docs/8.x/setup-and-administration/category/caching-server)\n\n[Application server on Windows](https://academy.creatio.com/docs/8.x/setup-and-administration/category/application-server-on-windows)\n\n[Additional setup](https://academy.creatio.com/docs/8.x/setup-and-administration/category/additional-setup)\n\n[Containerized components](https://academy.creatio.com/docs/8.x/setup-and-administration/category/%D1%81ontainerized-components)\n\n[Requirements calculator](https://academy.creatio.com/docs/requirements/calculator)\n\n* * *\n\n## Resources​\n\n[Tech Hour - Installing Local instance of Creatio](https://youtu.be/lf-yWsJ4p0Q)\n\n  * Deploy the Creatio application on Windows\n  * Deploy the Creatio .NET 6 application on Linux\n  * See also\n  * Resources\n\n\n",
  "analysis": {
    "word_count": 428,
    "key_concepts": ["configuration", "detail", "integration", "sql", "database", "operation", "synchronization"],
    "use_cases": [
      "building applications",
      "custom development",
      "API integration",
      "system administration",
      "user management"
    ],
    "related_topics": ["webhooks", "data sync", "web service", "api"],
    "difficulty": "intermediate",
    "ai_tags": ["creatio", "intermediate", "sql", "documentation", "detail", "integration", "configuration", "database"]
  },
  "ai_optimized": true,
  "processed_at": "2025-07-28T13:29:28.664846"
}
